(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@145) (= (type $generated@@259) $generated@@145)) (and ($generated@@257 $generated@@258) ($generated@@257 $generated@@259))) (= ($generated@@240 $generated@@258 $generated@@259) true))
 :pattern ( ($generated@@240 $generated@@258 $generated@@259) ($generated@@257 $generated@@258))
 :pattern ( ($generated@@240 $generated@@258 $generated@@259) ($generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@145) (= (type $generated@@262) $generated@@145)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@240 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@240 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@240 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@240 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@240 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@240 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@69) (= (type $generated@@268) $generated@@69)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) $generated@@154)) (= (type $generated@@271) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@271)) (= ($generated@@79 ($generated@@225 $generated@@269 $generated@@270) ($generated@@144 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@269 $generated@@270) ($generated@@144 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@145) (= ($generated@@143 $generated@@272) (= ($generated@@159 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@257 $generated@@273) (= ($generated@@159 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@257 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@260 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@65)))
 :pattern ( ($generated@@260 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@263 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@66)))
 :pattern ( ($generated@@263 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@145) ($generated@@143 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@154) (= (type $generated@@278) $generated@@154)) (= $generated@@276 ($generated@@225 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@143 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@145) ($generated@@257 $generated@@287)) (= $generated@@287 $generated@@160))
 :pattern ( ($generated@@257 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@145) ($generated@@260 $generated@@288)) (= $generated@@288 $generated@@162))
 :pattern ( ($generated@@260 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@263 $generated@@289)) (= $generated@@289 $generated@@163))
 :pattern ( ($generated@@263 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@154)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@69) (= (type $generated@@294) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@79 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@297) $generated@@154)) (= (type $generated@@298) $generated@@69)) ($generated@@137 $generated@@295 $generated@@296)) ($generated@@266 $generated@@297 $generated@@298 $generated@@295)) ($generated@@266 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@137 $generated@@295 $generated@@296) ($generated@@266 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@300) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@302) $generated@@69)) ($generated@@137 $generated@@299 $generated@@300)) ($generated@@79 $generated@@301 $generated@@302 $generated@@299)) ($generated@@79 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@137 $generated@@299 $generated@@300) ($generated@@79 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@81 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@84 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@81 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@86 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@81 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@81 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@86 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@86 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@84 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@81 $generated@@346 $generated@@2)) (= ($generated@@165 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@86 $generated@@345 $generated@@347))) (<= ($generated ($generated@@86 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@86 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@165 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@154) ($generated@@226 $generated@@351 $generated@@233)) (and (= ($generated@@290 ($generated@@348 $generated@@145 $generated@@351)) $generated@@351) ($generated@@141 ($generated@@348 $generated@@145 $generated@@351) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@351 $generated@@233))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@309 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@81 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@313 (type $generated@@359))))
(let (($generated@@361 ($generated@@312 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@311 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@310 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@86 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@331 (type $generated@@363))))
(let (($generated@@365 ($generated@@330 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@329 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@328 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@327 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@81 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@331 (type $generated@@370))))
(let (($generated@@372 ($generated@@330 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@329 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@328 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@86 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@375) $generated@@69)) (= ($generated@@141 $generated@@374 ($generated@@164 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@374 $generated@@376)))) ($generated@@226 $generated@@376 $generated@@375))
 :pattern ( ($generated@@86 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@141 $generated@@374 ($generated@@164 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@378) $generated@@69)) (= (type $generated@@379) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@377 ($generated@@243 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) ($generated@@0 ($generated@@86 $generated@@377 $generated@@380))) ($generated@@266 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@86 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@79 $generated@@377 ($generated@@243 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@382) $generated@@69)) (= (type $generated@@383) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@381 ($generated@@248 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@154) ($generated@@0 ($generated@@86 $generated@@381 $generated@@384))) ($generated@@266 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@86 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@79 $generated@@381 ($generated@@248 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@86 ($generated@@304 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@86 ($generated@@304 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@313 (type $generated@@390))))
(let (($generated@@392 ($generated@@312 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@81 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@394) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@393) ($generated@@152 ($generated@@348 $generated@@145 $generated@@394)))) (= ($generated@@86 ($generated@@388 $generated@@393) ($generated@@152 ($generated@@348 $generated@@145 $generated@@394))) ($generated@@153 ($generated@@348 $generated@@145 $generated@@394))))))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@331 (type $generated@@398))))
(let (($generated@@400 ($generated@@330 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@329 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@86 ($generated@@327 $generated@@401) ($generated@@152 ($generated@@348 $generated@@145 $generated@@402)))) (= ($generated@@86 ($generated@@396 $generated@@401) ($generated@@152 ($generated@@348 $generated@@145 $generated@@402))) ($generated@@153 ($generated@@348 $generated@@145 $generated@@402))))))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@312 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@311 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@86 ($generated@@356 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@86 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@403) $generated@@407))
 :pattern ( ($generated@@86 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@86 ($generated@@356 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@330 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@329 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@86 ($generated@@367 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@86 ($generated@@327 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@86 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@408) $generated@@412))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@86 ($generated@@367 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@69)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) $generated@@69)) (= (type $generated@@419) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@416) $generated@@420))) (and ($generated@@266 ($generated@@86 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@266 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@86 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@79 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@69)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@329 $generated@@154 $generated@@154)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@424) $generated@@428))) (and ($generated@@266 ($generated@@86 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@266 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@429 $generated@@431))) (and ($generated@@137 $generated@@429 $generated@@430) ($generated@@137 $generated@@430 $generated@@431))) ($generated@@137 $generated@@429 $generated@@431))
 :pattern ( ($generated@@137 $generated@@429 $generated@@430) ($generated@@137 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@81 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@331 (type $generated@@434))))
(let (($generated@@436 ($generated@@330 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@329 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@328 $generated@@436 $generated@@435)) (= ($generated@@327 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@327 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@331 (type $generated@@437))))
(let (($generated@@439 ($generated@@330 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@329 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@328 $generated@@439 $generated@@438)) (= ($generated@@367 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@367 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@331 (type $generated@@440))))
(let (($generated@@442 ($generated@@330 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@329 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@328 $generated@@442 $generated@@441)) (= ($generated@@395 $generated@@440) ($generated@@432 $generated@@154))))))
 :pattern ( ($generated@@395 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@313 (type $generated@@443))))
(let (($generated@@445 ($generated@@312 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@311 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@310 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@154) (= (type $generated@@447) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@387 $generated@@443) ($generated@@290 ($generated@@225 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@387 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@331 (type $generated@@448))))
(let (($generated@@450 ($generated@@330 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@329 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@328 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@395 $generated@@448) ($generated@@290 ($generated@@225 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@395 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@154) ($generated@@226 $generated@@453 $generated@@46)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@453)) $generated@@453) ($generated@@141 ($generated@@348 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@154) ($generated@@226 $generated@@454 $generated@@47)) (and (= ($generated@@290 ($generated@@348 $generated@@3 $generated@@454)) $generated@@454) ($generated@@141 ($generated@@348 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@44)) (and (= ($generated@@290 ($generated@@348 $generated@@4 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@348 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@45)) (and (= ($generated@@290 ($generated@@348 $generated@@456 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@348 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@69) (= ($generated@@226 ($generated@@290 $generated@@458) $generated@@459) ($generated@@141 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@226 ($generated@@290 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@84 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@81 $generated@@461 $generated@@2)) (<= 0 ($generated@@303 $generated@@460))))
 :pattern ( ($generated@@303 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@282 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@281 $generated@@463)) (<= 0 ($generated@@280 $generated@@462))))
 :pattern ( ($generated@@280 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@69)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@464 ($generated@@413 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@413 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@413 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@77 ($generated@@413 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@421 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@421 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@77 ($generated@@421 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@154) (= (type $generated@@485) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@486 ($generated@@144 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@144 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@490 ($generated@@144 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@154) (= (type $generated@@495) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@225 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@282 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@281 $generated@@154)) (= (type $generated@@505) $generated@@69)) (= (type $generated@@506) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@280 $generated@@504))) ($generated@@266 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@79 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@80 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@80 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@243 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@243 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@248 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@248 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@518 ($generated@@164 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@164 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
(= ($generated@@348 $generated@@527 ($generated@@290 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@290 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@529) $generated@@69)) (= (type $generated@@530) $generated@@69)) (= ($generated@@141 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@528) $generated@@531))) (and ($generated@@226 ($generated@@86 ($generated@@388 $generated@@528) $generated@@531) $generated@@530) ($generated@@226 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@86 ($generated@@388 $generated@@528) $generated@@531))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@141 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@329 $generated@@154 $generated@@154)) (= (type $generated@@533) $generated@@69)) (= (type $generated@@534) $generated@@69)) (= ($generated@@141 $generated@@532 ($generated@@421 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@532) $generated@@535))) (and ($generated@@226 ($generated@@86 ($generated@@396 $generated@@532) $generated@@535) $generated@@534) ($generated@@226 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@532) $generated@@535))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@141 $generated@@532 ($generated@@421 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@154) (= (type $generated@@539) $generated@@154)) (< ($generated@@536 $generated@@538) ($generated@@537 ($generated@@225 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@154)) (< ($generated@@536 $generated@@541) ($generated@@537 ($generated@@225 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@226 $generated@@542 ($generated@@413 $generated@@543 $generated@@544))) (and (= ($generated@@290 ($generated@@348 ($generated@@311 $generated@@154 $generated@@154) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@348 ($generated@@311 $generated@@154 $generated@@154) $generated@@542) ($generated@@413 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@542 ($generated@@413 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@154) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) ($generated@@226 $generated@@545 ($generated@@421 $generated@@546 $generated@@547))) (and (= ($generated@@290 ($generated@@348 ($generated@@329 $generated@@154 $generated@@154) $generated@@545)) $generated@@545) ($generated@@141 ($generated@@348 ($generated@@329 $generated@@154 $generated@@154) $generated@@545) ($generated@@421 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@421 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@69) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@154)) ($generated@@226 $generated@@550 ($generated@@144 $generated@@548 $generated@@549))) (and (= ($generated@@290 ($generated@@348 $generated@@145 $generated@@550)) $generated@@550) ($generated@@141 ($generated@@348 $generated@@145 $generated@@550) ($generated@@144 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@144 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@86 ($generated@@432 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@86 ($generated@@432 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@74)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@69) (= (type $generated@@556) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@144 $generated@@555 $generated@@556)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) ($generated@@141 $generated@@557 $generated@@233)) (or (or ($generated@@257 $generated@@557) ($generated@@260 $generated@@557)) ($generated@@263 $generated@@557)))
 :pattern ( ($generated@@263 $generated@@557) ($generated@@141 $generated@@557 $generated@@233))
 :pattern ( ($generated@@260 $generated@@557) ($generated@@141 $generated@@557 $generated@@233))
 :pattern ( ($generated@@257 $generated@@557) ($generated@@141 $generated@@557 $generated@@233))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@145) (= ($generated@@536 ($generated@@290 $generated@@558)) ($generated@@537 $generated@@558)))
 :pattern ( ($generated@@536 ($generated@@290 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) ($generated@@226 $generated@@559 ($generated@@80 0))) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@559)) $generated@@559) ($generated@@141 ($generated@@348 ($generated@@81 $generated@@154 $generated@@4) $generated@@559) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@80 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@69)) ($generated@@226 $generated@@560 ($generated@@243 $generated@@561))) (and (= ($generated@@290 ($generated@@348 ($generated@@81 $generated@@154 $generated@@4) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@348 ($generated@@81 $generated@@154 $generated@@4) $generated@@560) ($generated@@243 $generated@@561))))
 :pattern ( ($generated@@226 $generated@@560 ($generated@@243 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@154) (= (type $generated@@563) $generated@@69)) ($generated@@226 $generated@@562 ($generated@@248 $generated@@563))) (and (= ($generated@@290 ($generated@@348 ($generated@@81 $generated@@154 $generated@@4) $generated@@562)) $generated@@562) ($generated@@141 ($generated@@348 ($generated@@81 $generated@@154 $generated@@4) $generated@@562) ($generated@@248 $generated@@563))))
 :pattern ( ($generated@@226 $generated@@562 ($generated@@248 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@164 $generated@@565))) (and (= ($generated@@290 ($generated@@348 ($generated@@81 $generated@@154 $generated@@2) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@348 ($generated@@81 $generated@@154 $generated@@2) $generated@@564) ($generated@@164 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@164 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@498 $generated@@567))) (and (= ($generated@@290 ($generated@@348 ($generated@@281 $generated@@154) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@348 ($generated@@281 $generated@@154) $generated@@566) ($generated@@498 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@498 $generated@@567)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@553 $generated@@233) $generated@@68))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@568 ($generated@@164 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@568 $generated@@571)))) ($generated@@266 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@86 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@164 $generated@@569) $generated@@570))
)))
(assert (= $generated@@160 ($generated@@253 $generated@@160)))
(assert (= $generated@@162 ($generated@@253 $generated@@162)))
(assert (= $generated@@163 ($generated@@253 $generated@@163)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@145) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@574) (and ($generated@@143 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@69) ($generated@@79 $generated@@572 ($generated@@144 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@144 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@266 ($generated@@152 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@266 ($generated@@152 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@266 ($generated@@153 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@266 ($generated@@153 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@154)) (= ($generated@@225 ($generated@@253 $generated@@580) ($generated@@253 $generated@@581)) ($generated@@253 ($generated@@225 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@225 ($generated@@253 $generated@@580) ($generated@@253 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@290 ($generated@@253 $generated@@582)) ($generated@@253 ($generated@@290 $generated@@582)))
 :pattern ( ($generated@@290 ($generated@@253 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@282 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@281 $generated@@584)) (= ($generated@@280 $generated@@583) 0)) (= $generated@@583 ($generated@@279 $generated@@584))))
 :pattern ( ($generated@@280 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@81 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@303 ($generated@@87 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@303 $generated@@585) ($generated ($generated@@86 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@303 ($generated@@87 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@590) $generated@@2)) ($generated@@79 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@79 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@592) $generated@@3)) ($generated@@79 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@79 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@594) $generated@@4)) ($generated@@79 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@79 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@596) $generated@@456)) ($generated@@79 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@79 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@598) $generated@@154)) ($generated@@79 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@79 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@281 $generated@@154)) (= (type $generated@@600) $generated@@69)) (= ($generated@@141 $generated@@599 ($generated@@498 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@280 $generated@@599))) ($generated@@226 ($generated@@499 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@499 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@141 $generated@@599 ($generated@@498 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@281 $generated@@154)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@280 $generated@@603))) (< ($generated@@537 ($generated@@348 $generated@@145 ($generated@@499 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@537 ($generated@@348 $generated@@145 ($generated@@499 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) $generated@@69)) ($generated@@141 $generated@@605 ($generated@@413 $generated@@606 $generated@@607))) (and (and ($generated@@141 ($generated@@309 $generated@@605) ($generated@@243 $generated@@606)) ($generated@@141 ($generated@@356 $generated@@605) ($generated@@243 $generated@@607))) ($generated@@141 ($generated@@387 $generated@@605) ($generated@@243 ($generated@@144 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@141 $generated@@605 ($generated@@413 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@329 $generated@@154 $generated@@154)) (= (type $generated@@609) $generated@@69)) (= (type $generated@@610) $generated@@69)) ($generated@@141 $generated@@608 ($generated@@421 $generated@@609 $generated@@610))) (and (and ($generated@@141 ($generated@@327 $generated@@608) ($generated@@248 $generated@@609)) ($generated@@141 ($generated@@367 $generated@@608) ($generated@@248 $generated@@610))) ($generated@@141 ($generated@@395 $generated@@608) ($generated@@248 ($generated@@144 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@141 $generated@@608 ($generated@@421 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@141 $generated@@611 $generated@@46))
 :pattern ( ($generated@@141 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@141 $generated@@612 $generated@@47))
 :pattern ( ($generated@@141 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@141 $generated@@613 $generated@@44))
 :pattern ( ($generated@@141 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@456) ($generated@@141 $generated@@614 $generated@@45))
 :pattern ( ($generated@@141 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@154) ($generated@@141 $generated@@615 $generated@@48))
 :pattern ( ($generated@@141 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Bool)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (Int Int) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@79 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@83) $generated@@69)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@80) (or ($generated@@81 ($generated@@79 $generated@@88)) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@88 $generated@@83)))) (= ($generated@@78 ($generated@@79 $generated@@88)) (ite ($generated@@84 ($generated@@79 $generated@@88)) 10 (ite ($generated@@85 ($generated@@79 $generated@@88)) 12 14))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@79 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@70)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@44) $generated@@49))
(assert (= ($generated@@89 $generated@@45) $generated@@50))
(assert (= ($generated@@89 $generated@@46) $generated@@51))
(assert (= ($generated@@89 $generated@@47) $generated@@52))
(assert (= ($generated@@89 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 12)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@72 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@82 $generated@@149 ($generated@@92 0)))
 :pattern ( ($generated@@82 $generated@@149 ($generated@@92 0)))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@80) (or ($generated@@81 $generated@@150) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@150 $generated@@83)))) true)
 :pattern ( ($generated@@78 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@80)) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@80) (= (type $generated@@165) $generated@@80)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@80)))
(assert (= ($generated@@166 $generated@@167) $generated@@63))
(assert (= (type $generated@@169) $generated@@80))
(assert (= ($generated@@166 $generated@@169) $generated@@65))
(assert (= (type $generated@@170) $generated@@80))
(assert (= ($generated@@166 $generated@@170) $generated@@66))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@175) $generated@@69)) ($generated@@82 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@94 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@72 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@94) (= (type $generated@@226) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@227) ($generated@@71 $generated@@4))) (= (type $generated@@229) $generated@@94)) (= (type $generated@@230) ($generated@@71 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@80)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@161)) (= (type $generated@@239) $generated@@161)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237)))
)))
(assert ($generated@@82 $generated@@167 $generated@@83))
(assert ($generated@@82 $generated@@169 $generated@@83))
(assert ($generated@@82 $generated@@170 $generated@@83))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@241)) ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
 :pattern ( ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@242)) ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
 :pattern ( ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@243)) ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
 :pattern ( ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@158 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@158 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@80) (= (type $generated@@248) $generated@@80)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@98 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@98 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@98 $generated@@256 $generated@@258))) ($generated@@233 $generated@@258 $generated@@257))
 :pattern ( ($generated@@98 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@79 $generated@@261) $generated@@261)
 :pattern ( ($generated@@79 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@80) (= (type $generated@@263) $generated@@80)) (and ($generated@@84 $generated@@262) ($generated@@84 $generated@@263))) (= ($generated@@246 $generated@@262 $generated@@263) true))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@262))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@80) (= (type $generated@@265) $generated@@80)) (and ($generated@@85 $generated@@264) ($generated@@85 $generated@@265))) (= ($generated@@246 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@264))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) $generated@@80)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@246 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= (type $generated@@274) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@240 $generated@@274)) (= ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@80) (= ($generated@@151 $generated@@275) (= ($generated@@166 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@80) (= ($generated@@84 $generated@@276) (= ($generated@@166 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@80) (= ($generated@@85 $generated@@277) (= ($generated@@166 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@85 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@80) (= ($generated@@266 $generated@@278) (= ($generated@@166 $generated@@278) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@80) ($generated@@151 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@161) (= (type $generated@@281) $generated@@161)) (= $generated@@279 ($generated@@232 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@151 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@84 $generated@@290)) (= $generated@@290 $generated@@167))
 :pattern ( ($generated@@84 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@80) ($generated@@85 $generated@@291)) (= $generated@@291 $generated@@169))
 :pattern ( ($generated@@85 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@266 $generated@@292)) (= $generated@@292 $generated@@170))
 :pattern ( ($generated@@266 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@161)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@91 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@93 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@96 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@93 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@98 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@93 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@93 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (= ($generated@@172 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@98 $generated@@340 $generated@@342))) (<= ($generated ($generated@@98 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@98 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@172 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@161) ($generated@@233 $generated@@346 $generated@@83)) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@346)) $generated@@346) ($generated@@82 ($generated@@343 $generated@@80 $generated@@346) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@346 $generated@@83))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@304 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@308 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@93 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@98 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@326 (type $generated@@358))))
(let (($generated@@360 ($generated@@325 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@324 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@323 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@322 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@93 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@98 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@369 $generated@@371)))) ($generated@@233 $generated@@371 $generated@@370))
 :pattern ( ($generated@@98 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@161) ($generated@@0 ($generated@@98 $generated@@372 $generated@@375))) ($generated@@269 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@98 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@161) ($generated@@0 ($generated@@98 $generated@@376 $generated@@379))) ($generated@@269 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@98 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@98 ($generated@@299 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@98 ($generated@@299 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@308 (type $generated@@385))))
(let (($generated@@387 ($generated@@307 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@93 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389)))) (= ($generated@@98 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@389))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@326 (type $generated@@393))))
(let (($generated@@395 ($generated@@325 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@93 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@397) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397)))) (= ($generated@@98 ($generated@@391 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@307 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@306 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@398) $generated@@402))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@98 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@325 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@324 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@98 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@403) $generated@@407))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@98 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))) (and ($generated@@269 ($generated@@98 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@269 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))) (and ($generated@@269 ($generated@@98 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@269 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@93 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@326 (type $generated@@426))))
(let (($generated@@428 ($generated@@325 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@324 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@323 $generated@@428 $generated@@427)) (= ($generated@@322 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@322 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@326 (type $generated@@429))))
(let (($generated@@431 ($generated@@325 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@324 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@323 $generated@@431 $generated@@430)) (= ($generated@@362 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@362 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@161))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@308 (type $generated@@435))))
(let (($generated@@437 ($generated@@307 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@306 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@305 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@161) (= (type $generated@@439) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@435) ($generated@@293 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@326 (type $generated@@440))))
(let (($generated@@442 ($generated@@325 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@324 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@323 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@390 $generated@@440) ($generated@@293 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@161) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@445)) $generated@@445) ($generated@@82 ($generated@@343 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@293 ($generated@@343 $generated@@3 $generated@@446)) $generated@@446) ($generated@@82 ($generated@@343 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@161) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@293 ($generated@@343 $generated@@4 $generated@@447)) $generated@@447) ($generated@@82 ($generated@@343 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@293 ($generated@@343 $generated@@448 $generated@@449)) $generated@@449) ($generated@@82 ($generated@@343 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@69) (= ($generated@@233 ($generated@@293 $generated@@450) $generated@@451) ($generated@@82 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@96 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@93 $generated@@453 $generated@@2)) (<= 0 ($generated@@298 $generated@@452))))
 :pattern ( ($generated@@298 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@285 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@284 $generated@@455)) (<= 0 ($generated@@283 $generated@@454))))
 :pattern ( ($generated@@283 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@69)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@69) (= (type $generated@@459) $generated@@69)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@89 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@89 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@161) (= (type $generated@@477) $generated@@161)) (= ($generated@@166 ($generated@@232 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@152 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@152 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@161) (= (type $generated@@487) $generated@@161)) (= ($generated@@159 ($generated@@232 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@232 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@161) (= (type $generated@@489) $generated@@161)) (= ($generated@@160 ($generated@@232 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@232 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@285 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@284 $generated@@161)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@283 $generated@@496))) ($generated@@269 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@92 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@92 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@249 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@89 ($generated@@249 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@254 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@254 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@89 ($generated@@254 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@171 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@171 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@89 ($generated@@171 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@89 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@343 $generated@@519 ($generated@@293 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@293 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))) (and ($generated@@233 ($generated@@98 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@233 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@98 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@80) ($generated@@528 $generated@@529)) (or (or ($generated@@84 $generated@@529) ($generated@@85 $generated@@529)) ($generated@@266 $generated@@529)))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@232 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@232 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538))) (and (= ($generated@@293 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@82 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536) ($generated@@408 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@82 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539) ($generated@@416 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@161)) ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543))) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@544)) $generated@@544) ($generated@@82 ($generated@@343 $generated@@80 $generated@@544) ($generated@@152 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@98 ($generated@@424 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@98 ($generated@@424 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Int) ) (! (= ($generated@@547 $generated@@548 $generated@@549) (mod $generated@@548 $generated@@549))
 :pattern ( ($generated@@547 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@74)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (and (= ($generated@@89 ($generated@@152 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@152 $generated@@552 $generated@@553)) $generated@@67)))
 :pattern ( ($generated@@152 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@80) ($generated@@82 $generated@@554 $generated@@83)) (or (or ($generated@@84 $generated@@554) ($generated@@85 $generated@@554)) ($generated@@266 $generated@@554)))
 :pattern ( ($generated@@266 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
 :pattern ( ($generated@@85 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
 :pattern ( ($generated@@84 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@80) (or ($generated@@81 $generated@@555) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@555 $generated@@83)))) (= ($generated@@78 $generated@@555) (ite ($generated@@84 $generated@@555) 10 (ite ($generated@@85 $generated@@555) 12 14))))
 :pattern ( ($generated@@78 $generated@@555))
))))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@80) (= ($generated@@530 ($generated@@293 $generated@@556)) ($generated@@531 $generated@@556)))
 :pattern ( ($generated@@530 ($generated@@293 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@161) ($generated@@233 $generated@@557 ($generated@@92 0))) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@557)) $generated@@557) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557) ($generated@@92 0))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@92 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@69)) ($generated@@233 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@558)) $generated@@558) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@233 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@69)) ($generated@@233 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@233 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@69)) ($generated@@233 $generated@@562 ($generated@@171 $generated@@563))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@562)) $generated@@562) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@562) ($generated@@171 $generated@@563))))
 :pattern ( ($generated@@233 $generated@@562 ($generated@@171 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@69)) ($generated@@233 $generated@@564 ($generated@@490 $generated@@565))) (and (= ($generated@@293 ($generated@@343 ($generated@@284 $generated@@161) $generated@@564)) $generated@@564) ($generated@@82 ($generated@@343 ($generated@@284 $generated@@161) $generated@@564) ($generated@@490 $generated@@565))))
 :pattern ( ($generated@@233 $generated@@564 ($generated@@490 $generated@@565)))
)))
(assert (= ($generated@@89 $generated@@83) $generated@@64))
(assert (= ($generated@@550 $generated@@83) $generated@@68))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@566 ($generated@@171 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@566 $generated@@569)))) ($generated@@269 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@98 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@91 $generated@@566 ($generated@@171 $generated@@567) $generated@@568))
)))
(assert (= $generated@@167 ($generated@@79 $generated@@167)))
(assert (= $generated@@169 ($generated@@79 $generated@@169)))
(assert (= $generated@@170 ($generated@@79 $generated@@170)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@80) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@572) (and ($generated@@151 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@69) ($generated@@91 $generated@@570 ($generated@@152 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@91 $generated@@570 ($generated@@152 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@269 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@269 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@80) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@576) (and ($generated@@151 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@91 $generated@@574 ($generated@@152 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@91 $generated@@574 ($generated@@152 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@269 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@269 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) (= (type $generated@@579) $generated@@161)) (= ($generated@@232 ($generated@@79 $generated@@578) ($generated@@79 $generated@@579)) ($generated@@79 ($generated@@232 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@232 ($generated@@79 $generated@@578) ($generated@@79 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@259 $generated@@580))) ($generated@@79 ($generated@@293 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@259 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@293 ($generated@@79 $generated@@581)) ($generated@@79 ($generated@@293 $generated@@581)))
 :pattern ( ($generated@@293 ($generated@@79 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@285 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@284 $generated@@583)) (= ($generated@@283 $generated@@582) 0)) (= $generated@@582 ($generated@@282 $generated@@583))))
 :pattern ( ($generated@@283 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@93 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@298 ($generated@@99 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@298 $generated@@584) ($generated ($generated@@98 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@298 ($generated@@99 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@589) $generated@@2)) ($generated@@91 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@91 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@591) $generated@@3)) ($generated@@91 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@91 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@593) $generated@@4)) ($generated@@91 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@91 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@595) $generated@@448)) ($generated@@91 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@91 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@597) $generated@@161)) ($generated@@91 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@91 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@284 $generated@@161)) (= (type $generated@@599) $generated@@69)) (= ($generated@@82 $generated@@598 ($generated@@490 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@283 $generated@@598))) ($generated@@233 ($generated@@491 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@491 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@82 $generated@@598 ($generated@@490 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@284 $generated@@161)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@283 $generated@@602))) (< ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@82 $generated@@604 ($generated@@408 $generated@@605 $generated@@606))) (and (and ($generated@@82 ($generated@@304 $generated@@604) ($generated@@249 $generated@@605)) ($generated@@82 ($generated@@351 $generated@@604) ($generated@@249 $generated@@606))) ($generated@@82 ($generated@@382 $generated@@604) ($generated@@249 ($generated@@152 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@82 $generated@@604 ($generated@@408 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@608) $generated@@69)) (= (type $generated@@609) $generated@@69)) ($generated@@82 $generated@@607 ($generated@@416 $generated@@608 $generated@@609))) (and (and ($generated@@82 ($generated@@322 $generated@@607) ($generated@@254 $generated@@608)) ($generated@@82 ($generated@@362 $generated@@607) ($generated@@254 $generated@@609))) ($generated@@82 ($generated@@390 $generated@@607) ($generated@@254 ($generated@@152 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@82 $generated@@607 ($generated@@416 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@82 $generated@@610 $generated@@46))
 :pattern ( ($generated@@82 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@82 $generated@@611 $generated@@47))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@82 $generated@@612 $generated@@44))
 :pattern ( ($generated@@82 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@448) ($generated@@82 $generated@@613 $generated@@45))
 :pattern ( ($generated@@82 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@161) ($generated@@82 $generated@@614 $generated@@48))
 :pattern ( ($generated@@82 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () T@U)
(assert  (and (and (and (and (= (type $generated@@615) ($generated@@178 $generated@@94 $generated@@4)) (= (type $generated@@616) $generated@@94)) (= (type $generated@@617) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@618) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@620) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@621  (=> (= $generated@@615 ($generated@@177 $generated@@616 $generated@@617 $generated@@60 false)) (=> (and ($generated@@240 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (= $generated@@617 $generated@@618) ($generated@@91 $generated@@620 $generated@@83 $generated@@618)) (and ($generated@@81 $generated@@620) (= (ControlFlow 0 2) (- 0 1)))) (not (= ($generated@@259 2) 0)))))))
(let (($generated@@622  (=> (and ($generated@@240 $generated@@617) ($generated@@619 $generated@@617)) (=> (and (and (and ($generated@@82 $generated@@620 $generated@@83) ($generated@@91 $generated@@620 $generated@@83 $generated@@617)) ($generated@@528 $generated@@620)) (and (= 2 $generated@@77) (= (ControlFlow 0 3) 2))) $generated@@621))))
$generated@@622)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Bool)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (Int Int) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@79 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@83) $generated@@69)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@80) (or ($generated@@81 ($generated@@79 $generated@@88)) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@88 $generated@@83)))) (= ($generated@@78 ($generated@@79 $generated@@88)) (ite ($generated@@84 ($generated@@79 $generated@@88)) 10 (ite ($generated@@85 ($generated@@79 $generated@@88)) 12 14))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@79 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@70)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@44) $generated@@49))
(assert (= ($generated@@89 $generated@@45) $generated@@50))
(assert (= ($generated@@89 $generated@@46) $generated@@51))
(assert (= ($generated@@89 $generated@@47) $generated@@52))
(assert (= ($generated@@89 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 12)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@72 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@82 $generated@@149 ($generated@@92 0)))
 :pattern ( ($generated@@82 $generated@@149 ($generated@@92 0)))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@80) (or ($generated@@81 $generated@@150) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@150 $generated@@83)))) true)
 :pattern ( ($generated@@78 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@80)) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@80) (= (type $generated@@165) $generated@@80)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@80)))
(assert (= ($generated@@166 $generated@@167) $generated@@63))
(assert (= (type $generated@@169) $generated@@80))
(assert (= ($generated@@166 $generated@@169) $generated@@65))
(assert (= (type $generated@@170) $generated@@80))
(assert (= ($generated@@166 $generated@@170) $generated@@66))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@175) $generated@@69)) ($generated@@82 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@94 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@72 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@94) (= (type $generated@@226) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@227) ($generated@@71 $generated@@4))) (= (type $generated@@229) $generated@@94)) (= (type $generated@@230) ($generated@@71 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@80)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@161)) (= (type $generated@@239) $generated@@161)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237)))
)))
(assert ($generated@@82 $generated@@167 $generated@@83))
(assert ($generated@@82 $generated@@169 $generated@@83))
(assert ($generated@@82 $generated@@170 $generated@@83))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@241)) ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
 :pattern ( ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@242)) ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
 :pattern ( ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@243)) ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
 :pattern ( ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@158 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@158 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@80) (= (type $generated@@248) $generated@@80)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@98 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@98 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@98 $generated@@256 $generated@@258))) ($generated@@233 $generated@@258 $generated@@257))
 :pattern ( ($generated@@98 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@79 $generated@@261) $generated@@261)
 :pattern ( ($generated@@79 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@80) (= (type $generated@@263) $generated@@80)) (and ($generated@@84 $generated@@262) ($generated@@84 $generated@@263))) (= ($generated@@246 $generated@@262 $generated@@263) true))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@262))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@80) (= (type $generated@@265) $generated@@80)) (and ($generated@@85 $generated@@264) ($generated@@85 $generated@@265))) (= ($generated@@246 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@264))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) $generated@@80)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@246 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= (type $generated@@274) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@240 $generated@@274)) (= ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@80) (= ($generated@@151 $generated@@275) (= ($generated@@166 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@80) (= ($generated@@84 $generated@@276) (= ($generated@@166 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@80) (= ($generated@@85 $generated@@277) (= ($generated@@166 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@85 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@80) (= ($generated@@266 $generated@@278) (= ($generated@@166 $generated@@278) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@80) ($generated@@151 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@161) (= (type $generated@@281) $generated@@161)) (= $generated@@279 ($generated@@232 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@151 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@84 $generated@@290)) (= $generated@@290 $generated@@167))
 :pattern ( ($generated@@84 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@80) ($generated@@85 $generated@@291)) (= $generated@@291 $generated@@169))
 :pattern ( ($generated@@85 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@266 $generated@@292)) (= $generated@@292 $generated@@170))
 :pattern ( ($generated@@266 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@161)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@91 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@93 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@96 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@93 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@98 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@93 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@93 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (= ($generated@@172 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@98 $generated@@340 $generated@@342))) (<= ($generated ($generated@@98 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@98 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@172 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@161) ($generated@@233 $generated@@346 $generated@@83)) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@346)) $generated@@346) ($generated@@82 ($generated@@343 $generated@@80 $generated@@346) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@346 $generated@@83))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@304 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@308 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@93 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@98 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@326 (type $generated@@358))))
(let (($generated@@360 ($generated@@325 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@324 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@323 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@322 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@93 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@98 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@369 $generated@@371)))) ($generated@@233 $generated@@371 $generated@@370))
 :pattern ( ($generated@@98 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@161) ($generated@@0 ($generated@@98 $generated@@372 $generated@@375))) ($generated@@269 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@98 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@161) ($generated@@0 ($generated@@98 $generated@@376 $generated@@379))) ($generated@@269 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@98 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@98 ($generated@@299 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@98 ($generated@@299 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@308 (type $generated@@385))))
(let (($generated@@387 ($generated@@307 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@93 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389)))) (= ($generated@@98 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@389))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@326 (type $generated@@393))))
(let (($generated@@395 ($generated@@325 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@93 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@397) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397)))) (= ($generated@@98 ($generated@@391 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@307 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@306 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@398) $generated@@402))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@98 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@325 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@324 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@98 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@403) $generated@@407))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@98 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))) (and ($generated@@269 ($generated@@98 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@269 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))) (and ($generated@@269 ($generated@@98 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@269 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@93 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@326 (type $generated@@426))))
(let (($generated@@428 ($generated@@325 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@324 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@323 $generated@@428 $generated@@427)) (= ($generated@@322 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@322 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@326 (type $generated@@429))))
(let (($generated@@431 ($generated@@325 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@324 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@323 $generated@@431 $generated@@430)) (= ($generated@@362 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@362 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@161))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@308 (type $generated@@435))))
(let (($generated@@437 ($generated@@307 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@306 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@305 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@161) (= (type $generated@@439) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@435) ($generated@@293 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@326 (type $generated@@440))))
(let (($generated@@442 ($generated@@325 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@324 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@323 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@390 $generated@@440) ($generated@@293 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@161) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@445)) $generated@@445) ($generated@@82 ($generated@@343 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@293 ($generated@@343 $generated@@3 $generated@@446)) $generated@@446) ($generated@@82 ($generated@@343 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@161) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@293 ($generated@@343 $generated@@4 $generated@@447)) $generated@@447) ($generated@@82 ($generated@@343 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@293 ($generated@@343 $generated@@448 $generated@@449)) $generated@@449) ($generated@@82 ($generated@@343 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@69) (= ($generated@@233 ($generated@@293 $generated@@450) $generated@@451) ($generated@@82 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@96 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@93 $generated@@453 $generated@@2)) (<= 0 ($generated@@298 $generated@@452))))
 :pattern ( ($generated@@298 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@285 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@284 $generated@@455)) (<= 0 ($generated@@283 $generated@@454))))
 :pattern ( ($generated@@283 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@69)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@69) (= (type $generated@@459) $generated@@69)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@89 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@89 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@161) (= (type $generated@@477) $generated@@161)) (= ($generated@@166 ($generated@@232 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@152 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@152 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@161) (= (type $generated@@487) $generated@@161)) (= ($generated@@159 ($generated@@232 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@232 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@161) (= (type $generated@@489) $generated@@161)) (= ($generated@@160 ($generated@@232 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@232 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@285 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@284 $generated@@161)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@283 $generated@@496))) ($generated@@269 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@92 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@92 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@249 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@89 ($generated@@249 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@254 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@254 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@89 ($generated@@254 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@171 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@171 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@89 ($generated@@171 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@89 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@343 $generated@@519 ($generated@@293 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@293 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))) (and ($generated@@233 ($generated@@98 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@233 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@98 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@80) ($generated@@528 $generated@@529)) (or (or ($generated@@84 $generated@@529) ($generated@@85 $generated@@529)) ($generated@@266 $generated@@529)))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@232 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@232 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538))) (and (= ($generated@@293 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@82 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536) ($generated@@408 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@82 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539) ($generated@@416 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@161)) ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543))) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@544)) $generated@@544) ($generated@@82 ($generated@@343 $generated@@80 $generated@@544) ($generated@@152 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@98 ($generated@@424 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@98 ($generated@@424 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Int) ) (! (= ($generated@@547 $generated@@548 $generated@@549) (mod $generated@@548 $generated@@549))
 :pattern ( ($generated@@547 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@74)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (and (= ($generated@@89 ($generated@@152 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@152 $generated@@552 $generated@@553)) $generated@@67)))
 :pattern ( ($generated@@152 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@80) ($generated@@82 $generated@@554 $generated@@83)) (or (or ($generated@@84 $generated@@554) ($generated@@85 $generated@@554)) ($generated@@266 $generated@@554)))
 :pattern ( ($generated@@266 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
 :pattern ( ($generated@@85 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
 :pattern ( ($generated@@84 $generated@@554) ($generated@@82 $generated@@554 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@80) (or ($generated@@81 $generated@@555) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@555 $generated@@83)))) (= ($generated@@78 $generated@@555) (ite ($generated@@84 $generated@@555) 10 (ite ($generated@@85 $generated@@555) 12 14))))
 :pattern ( ($generated@@78 $generated@@555))
))))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@80) (= ($generated@@530 ($generated@@293 $generated@@556)) ($generated@@531 $generated@@556)))
 :pattern ( ($generated@@530 ($generated@@293 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@161) ($generated@@233 $generated@@557 ($generated@@92 0))) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@557)) $generated@@557) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557) ($generated@@92 0))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@92 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@69)) ($generated@@233 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@558)) $generated@@558) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@233 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@69)) ($generated@@233 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@233 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@69)) ($generated@@233 $generated@@562 ($generated@@171 $generated@@563))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@562)) $generated@@562) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@562) ($generated@@171 $generated@@563))))
 :pattern ( ($generated@@233 $generated@@562 ($generated@@171 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@69)) ($generated@@233 $generated@@564 ($generated@@490 $generated@@565))) (and (= ($generated@@293 ($generated@@343 ($generated@@284 $generated@@161) $generated@@564)) $generated@@564) ($generated@@82 ($generated@@343 ($generated@@284 $generated@@161) $generated@@564) ($generated@@490 $generated@@565))))
 :pattern ( ($generated@@233 $generated@@564 ($generated@@490 $generated@@565)))
)))
(assert (= ($generated@@89 $generated@@83) $generated@@64))
(assert (= ($generated@@550 $generated@@83) $generated@@68))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@566 ($generated@@171 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@566 $generated@@569)))) ($generated@@269 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@98 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@91 $generated@@566 ($generated@@171 $generated@@567) $generated@@568))
)))
(assert (= $generated@@167 ($generated@@79 $generated@@167)))
(assert (= $generated@@169 ($generated@@79 $generated@@169)))
(assert (= $generated@@170 ($generated@@79 $generated@@170)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@80) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@572) (and ($generated@@151 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@69) ($generated@@91 $generated@@570 ($generated@@152 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@91 $generated@@570 ($generated@@152 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@269 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@269 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@80) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@576) (and ($generated@@151 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@91 $generated@@574 ($generated@@152 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@91 $generated@@574 ($generated@@152 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@269 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@269 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) (= (type $generated@@579) $generated@@161)) (= ($generated@@232 ($generated@@79 $generated@@578) ($generated@@79 $generated@@579)) ($generated@@79 ($generated@@232 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@232 ($generated@@79 $generated@@578) ($generated@@79 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@259 $generated@@580))) ($generated@@79 ($generated@@293 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@259 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@293 ($generated@@79 $generated@@581)) ($generated@@79 ($generated@@293 $generated@@581)))
 :pattern ( ($generated@@293 ($generated@@79 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@285 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@284 $generated@@583)) (= ($generated@@283 $generated@@582) 0)) (= $generated@@582 ($generated@@282 $generated@@583))))
 :pattern ( ($generated@@283 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@93 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@298 ($generated@@99 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@298 $generated@@584) ($generated ($generated@@98 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@298 ($generated@@99 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@589) $generated@@2)) ($generated@@91 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@91 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@591) $generated@@3)) ($generated@@91 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@91 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@593) $generated@@4)) ($generated@@91 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@91 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@595) $generated@@448)) ($generated@@91 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@91 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@597) $generated@@161)) ($generated@@91 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@91 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@284 $generated@@161)) (= (type $generated@@599) $generated@@69)) (= ($generated@@82 $generated@@598 ($generated@@490 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@283 $generated@@598))) ($generated@@233 ($generated@@491 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@491 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@82 $generated@@598 ($generated@@490 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@284 $generated@@161)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@283 $generated@@602))) (< ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@82 $generated@@604 ($generated@@408 $generated@@605 $generated@@606))) (and (and ($generated@@82 ($generated@@304 $generated@@604) ($generated@@249 $generated@@605)) ($generated@@82 ($generated@@351 $generated@@604) ($generated@@249 $generated@@606))) ($generated@@82 ($generated@@382 $generated@@604) ($generated@@249 ($generated@@152 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@82 $generated@@604 ($generated@@408 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@608) $generated@@69)) (= (type $generated@@609) $generated@@69)) ($generated@@82 $generated@@607 ($generated@@416 $generated@@608 $generated@@609))) (and (and ($generated@@82 ($generated@@322 $generated@@607) ($generated@@254 $generated@@608)) ($generated@@82 ($generated@@362 $generated@@607) ($generated@@254 $generated@@609))) ($generated@@82 ($generated@@390 $generated@@607) ($generated@@254 ($generated@@152 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@82 $generated@@607 ($generated@@416 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@82 $generated@@610 $generated@@46))
 :pattern ( ($generated@@82 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@82 $generated@@611 $generated@@47))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@82 $generated@@612 $generated@@44))
 :pattern ( ($generated@@82 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@448) ($generated@@82 $generated@@613 $generated@@45))
 :pattern ( ($generated@@82 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@161) ($generated@@82 $generated@@614 $generated@@48))
 :pattern ( ($generated@@82 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@615) $generated@@80) (= (type $generated@@616) ($generated@@178 $generated@@94 $generated@@4))) (= (type $generated@@617) $generated@@94)) (= (type $generated@@618) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@620  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@547 ($generated@@78 $generated@@615) ($generated@@259 2)) ($generated@@259 0)))))
(let (($generated@@621  (=> (and (= $generated@@615 $generated@@170) (= (ControlFlow 0 10) 3)) $generated@@620)))
(let (($generated@@622  (=> (= $generated@@615 $generated@@169) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= ($generated@@259 2) 0))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@259 ($generated@@547 12 ($generated@@259 2))) ($generated@@259 0))) (=> (= ($generated@@259 ($generated@@547 12 ($generated@@259 2))) ($generated@@259 0)) (=> (= (ControlFlow 0 7) 3) $generated@@620)))))))
(let (($generated@@623  (=> (= $generated@@615 $generated@@167) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= ($generated@@259 2) 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@259 ($generated@@547 10 ($generated@@259 2))) ($generated@@259 0))) (=> (= ($generated@@259 ($generated@@547 10 ($generated@@259 2))) ($generated@@259 0)) (=> (= (ControlFlow 0 4) 3) $generated@@620)))))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (not (= $generated@@615 $generated@@169)) (and (=> (= (ControlFlow 0 11) 10) $generated@@621) (=> (= (ControlFlow 0 11) 1) $generated@@624)))))
(let (($generated@@626  (=> (not (= $generated@@615 $generated@@167)) (and (=> (= (ControlFlow 0 12) 7) $generated@@622) (=> (= (ControlFlow 0 12) 11) $generated@@625)))))
(let (($generated@@627  (=> (= $generated@@616 ($generated@@177 $generated@@617 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 4) $generated@@623) (=> (= (ControlFlow 0 13) 12) $generated@@626)))))
(let (($generated@@628  (=> (and ($generated@@240 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (and ($generated@@82 $generated@@615 $generated@@83) ($generated@@91 $generated@@615 $generated@@83 $generated@@618)) ($generated@@528 $generated@@615)) (and (= 2 $generated@@77) (= (ControlFlow 0 14) 13))) $generated@@627))))
$generated@@628))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Bool)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@79 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@83) $generated@@69)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@80) (or ($generated@@81 ($generated@@79 $generated@@88)) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@88 $generated@@83)))) (= ($generated@@78 ($generated@@79 $generated@@88)) (ite ($generated@@84 ($generated@@79 $generated@@88)) 10 (ite ($generated@@85 ($generated@@79 $generated@@88)) 12 14))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@79 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@70)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@44) $generated@@49))
(assert (= ($generated@@89 $generated@@45) $generated@@50))
(assert (= ($generated@@89 $generated@@46) $generated@@51))
(assert (= ($generated@@89 $generated@@47) $generated@@52))
(assert (= ($generated@@89 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 12)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@72 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@82 $generated@@149 ($generated@@92 0)))
 :pattern ( ($generated@@82 $generated@@149 ($generated@@92 0)))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@80) (or ($generated@@81 $generated@@150) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@150 $generated@@83)))) true)
 :pattern ( ($generated@@78 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@80)) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@80) (= (type $generated@@165) $generated@@80)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@80)))
(assert (= ($generated@@166 $generated@@167) $generated@@63))
(assert (= (type $generated@@169) $generated@@80))
(assert (= ($generated@@166 $generated@@169) $generated@@65))
(assert (= (type $generated@@170) $generated@@80))
(assert (= ($generated@@166 $generated@@170) $generated@@66))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@175) $generated@@69)) ($generated@@82 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@94 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@72 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@94) (= (type $generated@@226) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@227) ($generated@@71 $generated@@4))) (= (type $generated@@229) $generated@@94)) (= (type $generated@@230) ($generated@@71 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@80)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@161)) (= (type $generated@@239) $generated@@161)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237)))
)))
(assert ($generated@@82 $generated@@167 $generated@@83))
(assert ($generated@@82 $generated@@169 $generated@@83))
(assert ($generated@@82 $generated@@170 $generated@@83))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@241)) ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
 :pattern ( ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@242)) ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
 :pattern ( ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@243)) ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
 :pattern ( ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@158 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@158 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@80) (= (type $generated@@248) $generated@@80)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@98 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@98 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@98 $generated@@256 $generated@@258))) ($generated@@233 $generated@@258 $generated@@257))
 :pattern ( ($generated@@98 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@79 $generated@@261) $generated@@261)
 :pattern ( ($generated@@79 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@80) (= (type $generated@@263) $generated@@80)) (and ($generated@@84 $generated@@262) ($generated@@84 $generated@@263))) (= ($generated@@246 $generated@@262 $generated@@263) true))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@262))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@80) (= (type $generated@@265) $generated@@80)) (and ($generated@@85 $generated@@264) ($generated@@85 $generated@@265))) (= ($generated@@246 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@264))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) $generated@@80)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@246 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= (type $generated@@274) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@240 $generated@@274)) (= ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@80) (= ($generated@@151 $generated@@275) (= ($generated@@166 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@80) (= ($generated@@84 $generated@@276) (= ($generated@@166 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@80) (= ($generated@@85 $generated@@277) (= ($generated@@166 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@85 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@80) (= ($generated@@266 $generated@@278) (= ($generated@@166 $generated@@278) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@80) ($generated@@151 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@161) (= (type $generated@@281) $generated@@161)) (= $generated@@279 ($generated@@232 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@151 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@84 $generated@@290)) (= $generated@@290 $generated@@167))
 :pattern ( ($generated@@84 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@80) ($generated@@85 $generated@@291)) (= $generated@@291 $generated@@169))
 :pattern ( ($generated@@85 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@266 $generated@@292)) (= $generated@@292 $generated@@170))
 :pattern ( ($generated@@266 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@161)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@91 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@93 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@96 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@93 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@98 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@93 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@93 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (= ($generated@@172 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@98 $generated@@340 $generated@@342))) (<= ($generated ($generated@@98 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@98 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@172 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@161) ($generated@@233 $generated@@346 $generated@@83)) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@346)) $generated@@346) ($generated@@82 ($generated@@343 $generated@@80 $generated@@346) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@346 $generated@@83))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@304 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@308 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@93 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@98 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@326 (type $generated@@358))))
(let (($generated@@360 ($generated@@325 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@324 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@323 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@322 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@93 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@98 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@369 $generated@@371)))) ($generated@@233 $generated@@371 $generated@@370))
 :pattern ( ($generated@@98 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@161) ($generated@@0 ($generated@@98 $generated@@372 $generated@@375))) ($generated@@269 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@98 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@161) ($generated@@0 ($generated@@98 $generated@@376 $generated@@379))) ($generated@@269 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@98 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@98 ($generated@@299 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@98 ($generated@@299 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@308 (type $generated@@385))))
(let (($generated@@387 ($generated@@307 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@93 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389)))) (= ($generated@@98 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@389))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@326 (type $generated@@393))))
(let (($generated@@395 ($generated@@325 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@93 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@397) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397)))) (= ($generated@@98 ($generated@@391 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@307 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@306 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@398) $generated@@402))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@98 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@325 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@324 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@98 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@403) $generated@@407))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@98 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))) (and ($generated@@269 ($generated@@98 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@269 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))) (and ($generated@@269 ($generated@@98 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@269 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@93 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@326 (type $generated@@426))))
(let (($generated@@428 ($generated@@325 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@324 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@323 $generated@@428 $generated@@427)) (= ($generated@@322 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@322 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@326 (type $generated@@429))))
(let (($generated@@431 ($generated@@325 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@324 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@323 $generated@@431 $generated@@430)) (= ($generated@@362 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@362 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@161))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@308 (type $generated@@435))))
(let (($generated@@437 ($generated@@307 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@306 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@305 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@161) (= (type $generated@@439) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@435) ($generated@@293 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@326 (type $generated@@440))))
(let (($generated@@442 ($generated@@325 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@324 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@323 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@390 $generated@@440) ($generated@@293 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@161) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@445)) $generated@@445) ($generated@@82 ($generated@@343 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@293 ($generated@@343 $generated@@3 $generated@@446)) $generated@@446) ($generated@@82 ($generated@@343 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@161) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@293 ($generated@@343 $generated@@4 $generated@@447)) $generated@@447) ($generated@@82 ($generated@@343 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@293 ($generated@@343 $generated@@448 $generated@@449)) $generated@@449) ($generated@@82 ($generated@@343 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@69) (= ($generated@@233 ($generated@@293 $generated@@450) $generated@@451) ($generated@@82 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@96 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@93 $generated@@453 $generated@@2)) (<= 0 ($generated@@298 $generated@@452))))
 :pattern ( ($generated@@298 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@285 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@284 $generated@@455)) (<= 0 ($generated@@283 $generated@@454))))
 :pattern ( ($generated@@283 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@69)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@69) (= (type $generated@@459) $generated@@69)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@89 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@89 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@161) (= (type $generated@@477) $generated@@161)) (= ($generated@@166 ($generated@@232 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@152 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@152 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@161) (= (type $generated@@487) $generated@@161)) (= ($generated@@159 ($generated@@232 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@232 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@161) (= (type $generated@@489) $generated@@161)) (= ($generated@@160 ($generated@@232 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@232 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@285 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@284 $generated@@161)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@283 $generated@@496))) ($generated@@269 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@92 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@92 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@249 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@89 ($generated@@249 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@254 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@254 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@89 ($generated@@254 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@171 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@171 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@89 ($generated@@171 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@89 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@343 $generated@@519 ($generated@@293 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@293 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))) (and ($generated@@233 ($generated@@98 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@233 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@98 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@80) ($generated@@528 $generated@@529)) (or (or ($generated@@84 $generated@@529) ($generated@@85 $generated@@529)) ($generated@@266 $generated@@529)))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@232 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@232 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538))) (and (= ($generated@@293 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@82 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536) ($generated@@408 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@82 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539) ($generated@@416 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@161)) ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543))) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@544)) $generated@@544) ($generated@@82 ($generated@@343 $generated@@80 $generated@@544) ($generated@@152 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@98 ($generated@@424 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@98 ($generated@@424 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@74)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@69) (= (type $generated@@550) $generated@@69)) (and (= ($generated@@89 ($generated@@152 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@152 $generated@@549 $generated@@550)) $generated@@67)))
 :pattern ( ($generated@@152 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@80) ($generated@@82 $generated@@551 $generated@@83)) (or (or ($generated@@84 $generated@@551) ($generated@@85 $generated@@551)) ($generated@@266 $generated@@551)))
 :pattern ( ($generated@@266 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
 :pattern ( ($generated@@85 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
 :pattern ( ($generated@@84 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@80) (or ($generated@@81 $generated@@552) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@552 $generated@@83)))) (= ($generated@@78 $generated@@552) (ite ($generated@@84 $generated@@552) 10 (ite ($generated@@85 $generated@@552) 12 14))))
 :pattern ( ($generated@@78 $generated@@552))
))))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@80) (= ($generated@@530 ($generated@@293 $generated@@553)) ($generated@@531 $generated@@553)))
 :pattern ( ($generated@@530 ($generated@@293 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@161) ($generated@@233 $generated@@554 ($generated@@92 0))) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@554)) $generated@@554) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@554) ($generated@@92 0))))
 :pattern ( ($generated@@233 $generated@@554 ($generated@@92 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@161) (= (type $generated@@556) $generated@@69)) ($generated@@233 $generated@@555 ($generated@@249 $generated@@556))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@555)) $generated@@555) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@555) ($generated@@249 $generated@@556))))
 :pattern ( ($generated@@233 $generated@@555 ($generated@@249 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@161) (= (type $generated@@558) $generated@@69)) ($generated@@233 $generated@@557 ($generated@@254 $generated@@558))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557)) $generated@@557) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557) ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@254 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@161) (= (type $generated@@560) $generated@@69)) ($generated@@233 $generated@@559 ($generated@@171 $generated@@560))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@559)) $generated@@559) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@559) ($generated@@171 $generated@@560))))
 :pattern ( ($generated@@233 $generated@@559 ($generated@@171 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@69)) ($generated@@233 $generated@@561 ($generated@@490 $generated@@562))) (and (= ($generated@@293 ($generated@@343 ($generated@@284 $generated@@161) $generated@@561)) $generated@@561) ($generated@@82 ($generated@@343 ($generated@@284 $generated@@161) $generated@@561) ($generated@@490 $generated@@562))))
 :pattern ( ($generated@@233 $generated@@561 ($generated@@490 $generated@@562)))
)))
(assert (= ($generated@@89 $generated@@83) $generated@@64))
(assert (= ($generated@@547 $generated@@83) $generated@@68))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@563 ($generated@@171 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@563 $generated@@566)))) ($generated@@269 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@98 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@91 $generated@@563 ($generated@@171 $generated@@564) $generated@@565))
)))
(assert (= $generated@@167 ($generated@@79 $generated@@167)))
(assert (= $generated@@169 ($generated@@79 $generated@@169)))
(assert (= $generated@@170 ($generated@@79 $generated@@170)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@80) (= (type $generated@@568) $generated@@69)) (= (type $generated@@569) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@569) (and ($generated@@151 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@69) ($generated@@91 $generated@@567 ($generated@@152 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@91 $generated@@567 ($generated@@152 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@269 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@269 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@80) (= (type $generated@@572) $generated@@69)) (= (type $generated@@573) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@573) (and ($generated@@151 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@69) ($generated@@91 $generated@@571 ($generated@@152 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@91 $generated@@571 ($generated@@152 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@269 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@269 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@161) (= (type $generated@@576) $generated@@161)) (= ($generated@@232 ($generated@@79 $generated@@575) ($generated@@79 $generated@@576)) ($generated@@79 ($generated@@232 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@232 ($generated@@79 $generated@@575) ($generated@@79 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@259 $generated@@577))) ($generated@@79 ($generated@@293 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@259 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@293 ($generated@@79 $generated@@578)) ($generated@@79 ($generated@@293 $generated@@578)))
 :pattern ( ($generated@@293 ($generated@@79 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@285 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@284 $generated@@580)) (= ($generated@@283 $generated@@579) 0)) (= $generated@@579 ($generated@@282 $generated@@580))))
 :pattern ( ($generated@@283 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@93 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@298 ($generated@@99 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@298 $generated@@581) ($generated ($generated@@98 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@298 ($generated@@99 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@586) $generated@@2)) ($generated@@91 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@91 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@588) $generated@@3)) ($generated@@91 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@91 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@590) $generated@@4)) ($generated@@91 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@91 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@592) $generated@@448)) ($generated@@91 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@91 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@594) $generated@@161)) ($generated@@91 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@91 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@284 $generated@@161)) (= (type $generated@@596) $generated@@69)) (= ($generated@@82 $generated@@595 ($generated@@490 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@283 $generated@@595))) ($generated@@233 ($generated@@491 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@491 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@82 $generated@@595 ($generated@@490 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@284 $generated@@161)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@283 $generated@@599))) (< ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) $generated@@69)) ($generated@@82 $generated@@601 ($generated@@408 $generated@@602 $generated@@603))) (and (and ($generated@@82 ($generated@@304 $generated@@601) ($generated@@249 $generated@@602)) ($generated@@82 ($generated@@351 $generated@@601) ($generated@@249 $generated@@603))) ($generated@@82 ($generated@@382 $generated@@601) ($generated@@249 ($generated@@152 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@82 $generated@@601 ($generated@@408 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@82 $generated@@604 ($generated@@416 $generated@@605 $generated@@606))) (and (and ($generated@@82 ($generated@@322 $generated@@604) ($generated@@254 $generated@@605)) ($generated@@82 ($generated@@362 $generated@@604) ($generated@@254 $generated@@606))) ($generated@@82 ($generated@@390 $generated@@604) ($generated@@254 ($generated@@152 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@82 $generated@@604 ($generated@@416 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@82 $generated@@607 $generated@@46))
 :pattern ( ($generated@@82 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@82 $generated@@608 $generated@@47))
 :pattern ( ($generated@@82 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@82 $generated@@609 $generated@@44))
 :pattern ( ($generated@@82 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@448) ($generated@@82 $generated@@610 $generated@@45))
 :pattern ( ($generated@@82 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@161) ($generated@@82 $generated@@611 $generated@@48))
 :pattern ( ($generated@@82 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) $generated@@80) (= (type $generated@@613) ($generated@@178 $generated@@94 $generated@@4))) (= (type $generated@@614) $generated@@94)) (= (type $generated@@615) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@612 $generated@@167) (= (ControlFlow 0 19) (- 0 18))) false)))
(let (($generated@@619  (=> (not (= $generated@@612 $generated@@169)) (and (=> (= (ControlFlow 0 21) 19) $generated@@618) (=> (= (ControlFlow 0 21) 20) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@612 $generated@@169) (= (ControlFlow 0 17) (- 0 16))) false)))
(let (($generated@@621  (=> (not (= $generated@@612 $generated@@170)) (and (=> (= (ControlFlow 0 22) 17) $generated@@620) (=> (= (ControlFlow 0 22) 21) $generated@@619)))))
(let (($generated@@622  (=> (and (= $generated@@612 $generated@@170) (= (ControlFlow 0 15) (- 0 14))) false)))
(let (($generated@@623  (=> (= $generated@@612 $generated@@169) (and (=> (= (ControlFlow 0 23) 15) $generated@@622) (=> (= (ControlFlow 0 23) 22) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (= $generated@@612 $generated@@167) (= (ControlFlow 0 8) (- 0 7))) false)))
(let (($generated@@626  (=> (not (= $generated@@612 $generated@@169)) (and (=> (= (ControlFlow 0 10) 8) $generated@@625) (=> (= (ControlFlow 0 10) 9) $generated@@624)))))
(let (($generated@@627  (=> (and (= $generated@@612 $generated@@169) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@628  (=> (not (= $generated@@612 $generated@@170)) (and (=> (= (ControlFlow 0 11) 6) $generated@@627) (=> (= (ControlFlow 0 11) 10) $generated@@626)))))
(let (($generated@@629  (=> (and (= $generated@@612 $generated@@170) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@630  (=> (= $generated@@612 $generated@@170) (and (=> (= (ControlFlow 0 12) 4) $generated@@629) (=> (= (ControlFlow 0 12) 11) $generated@@628)))))
(let (($generated@@631 true))
(let (($generated@@632  (=> (not (= $generated@@612 $generated@@169)) (and (=> (= (ControlFlow 0 13) 12) $generated@@630) (=> (= (ControlFlow 0 13) 2) $generated@@631)))))
(let (($generated@@633  (=> (not (= $generated@@612 $generated@@167)) (and (=> (= (ControlFlow 0 24) 23) $generated@@623) (=> (= (ControlFlow 0 24) 13) $generated@@632)))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (= $generated@@613 ($generated@@177 $generated@@614 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 25) 1) $generated@@634) (=> (= (ControlFlow 0 25) 24) $generated@@633)))))
(let (($generated@@636  (=> (and ($generated@@240 $generated@@615) ($generated@@616 $generated@@615)) (=> (and (and (and (and ($generated@@82 $generated@@612 $generated@@83) ($generated@@91 $generated@@612 $generated@@83 $generated@@615)) ($generated@@528 $generated@@612)) (= 2 $generated@@77)) (and (= ($generated@@78 $generated@@612) ($generated@@259 10)) (= (ControlFlow 0 26) 25))) $generated@@635))))
$generated@@636)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Bool)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@79 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@83) $generated@@69)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@80) (or ($generated@@81 ($generated@@79 $generated@@88)) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@88 $generated@@83)))) (= ($generated@@78 ($generated@@79 $generated@@88)) (ite ($generated@@84 ($generated@@79 $generated@@88)) 10 (ite ($generated@@85 ($generated@@79 $generated@@88)) 12 14))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@79 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@70)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@44) $generated@@49))
(assert (= ($generated@@89 $generated@@45) $generated@@50))
(assert (= ($generated@@89 $generated@@46) $generated@@51))
(assert (= ($generated@@89 $generated@@47) $generated@@52))
(assert (= ($generated@@89 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 12)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 13)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@72 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@82 $generated@@149 ($generated@@92 0)))
 :pattern ( ($generated@@82 $generated@@149 ($generated@@92 0)))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@80) (or ($generated@@81 $generated@@150) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@150 $generated@@83)))) true)
 :pattern ( ($generated@@78 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@80)) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@82 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@80) (= (type $generated@@165) $generated@@80)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@80)))
(assert (= ($generated@@166 $generated@@167) $generated@@63))
(assert (= (type $generated@@169) $generated@@80))
(assert (= ($generated@@166 $generated@@169) $generated@@65))
(assert (= (type $generated@@170) $generated@@80))
(assert (= ($generated@@166 $generated@@170) $generated@@66))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@175) $generated@@69)) ($generated@@82 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@94 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@72 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@94) (= (type $generated@@226) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@227) ($generated@@71 $generated@@4))) (= (type $generated@@229) $generated@@94)) (= (type $generated@@230) ($generated@@71 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@80)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@161)) (= (type $generated@@239) $generated@@161)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@152 $generated@@236 $generated@@237)))
)))
(assert ($generated@@82 $generated@@167 $generated@@83))
(assert ($generated@@82 $generated@@169 $generated@@83))
(assert ($generated@@82 $generated@@170 $generated@@83))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@241)) ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
 :pattern ( ($generated@@91 $generated@@167 $generated@@83 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@242)) ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
 :pattern ( ($generated@@91 $generated@@169 $generated@@83 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@93 $generated@@94 $generated@@95)) ($generated@@240 $generated@@243)) ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
 :pattern ( ($generated@@91 $generated@@170 $generated@@83 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@158 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@158 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@80) (= (type $generated@@248) $generated@@80)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@98 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@98 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@98 $generated@@256 $generated@@258))) ($generated@@233 $generated@@258 $generated@@257))
 :pattern ( ($generated@@98 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@79 $generated@@261) $generated@@261)
 :pattern ( ($generated@@79 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@80) (= (type $generated@@263) $generated@@80)) (and ($generated@@84 $generated@@262) ($generated@@84 $generated@@263))) (= ($generated@@246 $generated@@262 $generated@@263) true))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@262))
 :pattern ( ($generated@@246 $generated@@262 $generated@@263) ($generated@@84 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@80) (= (type $generated@@265) $generated@@80)) (and ($generated@@85 $generated@@264) ($generated@@85 $generated@@265))) (= ($generated@@246 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@264))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@85 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@80) (= (type $generated@@268) $generated@@80)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@246 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= (type $generated@@274) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@240 $generated@@274)) (= ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@91 ($generated@@232 $generated@@272 $generated@@273) ($generated@@152 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@80) (= ($generated@@151 $generated@@275) (= ($generated@@166 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@80) (= ($generated@@84 $generated@@276) (= ($generated@@166 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@80) (= ($generated@@85 $generated@@277) (= ($generated@@166 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@85 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@80) (= ($generated@@266 $generated@@278) (= ($generated@@166 $generated@@278) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@80) ($generated@@151 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@161) (= (type $generated@@281) $generated@@161)) (= $generated@@279 ($generated@@232 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@151 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@84 $generated@@290)) (= $generated@@290 $generated@@167))
 :pattern ( ($generated@@84 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@80) ($generated@@85 $generated@@291)) (= $generated@@291 $generated@@169))
 :pattern ( ($generated@@85 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@266 $generated@@292)) (= $generated@@292 $generated@@170))
 :pattern ( ($generated@@266 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@161)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@91 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@93 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@96 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@93 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@98 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@93 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@98 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@93 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@98 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@96 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@93 $generated@@341 $generated@@2)) (= ($generated@@172 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@98 $generated@@340 $generated@@342))) (<= ($generated ($generated@@98 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@98 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@172 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@161) ($generated@@233 $generated@@346 $generated@@83)) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@346)) $generated@@346) ($generated@@82 ($generated@@343 $generated@@80 $generated@@346) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@346 $generated@@83))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@304 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@308 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@93 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@98 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@326 (type $generated@@358))))
(let (($generated@@360 ($generated@@325 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@324 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@323 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@322 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@93 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@98 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@369 $generated@@371)))) ($generated@@233 $generated@@371 $generated@@370))
 :pattern ( ($generated@@98 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@82 $generated@@369 ($generated@@171 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@161) ($generated@@0 ($generated@@98 $generated@@372 $generated@@375))) ($generated@@269 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@98 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@91 $generated@@372 ($generated@@249 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@93 $generated@@161 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@161) ($generated@@0 ($generated@@98 $generated@@376 $generated@@379))) ($generated@@269 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@98 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@254 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@98 ($generated@@299 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@98 ($generated@@299 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@308 (type $generated@@385))))
(let (($generated@@387 ($generated@@307 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@93 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389)))) (= ($generated@@98 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@343 $generated@@80 $generated@@389))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@389))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@93 $generated@@161 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@326 (type $generated@@393))))
(let (($generated@@395 ($generated@@325 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@93 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@397) $generated@@161)) (= ($generated@@0 ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397)))) (= ($generated@@98 ($generated@@391 $generated@@396) ($generated@@159 ($generated@@343 $generated@@80 $generated@@397))) ($generated@@160 ($generated@@343 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@98 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@307 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@306 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@98 ($generated@@304 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@398) $generated@@402))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@98 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@325 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@324 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@98 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@98 ($generated@@322 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@403) $generated@@407))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@98 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))) (and ($generated@@269 ($generated@@98 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@269 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))) (and ($generated@@269 ($generated@@98 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@269 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@91 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@93 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@326 (type $generated@@426))))
(let (($generated@@428 ($generated@@325 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@324 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@323 $generated@@428 $generated@@427)) (= ($generated@@322 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@322 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@326 (type $generated@@429))))
(let (($generated@@431 ($generated@@325 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@324 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@323 $generated@@431 $generated@@430)) (= ($generated@@362 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@362 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@390 $generated@@432) ($generated@@424 $generated@@161))))))
 :pattern ( ($generated@@390 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@308 (type $generated@@435))))
(let (($generated@@437 ($generated@@307 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@306 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@305 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@161) (= (type $generated@@439) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@435) ($generated@@293 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@326 (type $generated@@440))))
(let (($generated@@442 ($generated@@325 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@324 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@323 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@161) (= (type $generated@@444) $generated@@161)) ($generated@@0 ($generated@@98 ($generated@@390 $generated@@440) ($generated@@293 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@390 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@161) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@445)) $generated@@445) ($generated@@82 ($generated@@343 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@293 ($generated@@343 $generated@@3 $generated@@446)) $generated@@446) ($generated@@82 ($generated@@343 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@161) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@293 ($generated@@343 $generated@@4 $generated@@447)) $generated@@447) ($generated@@82 ($generated@@343 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@293 ($generated@@343 $generated@@448 $generated@@449)) $generated@@449) ($generated@@82 ($generated@@343 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@69) (= ($generated@@233 ($generated@@293 $generated@@450) $generated@@451) ($generated@@82 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@96 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@93 $generated@@453 $generated@@2)) (<= 0 ($generated@@298 $generated@@452))))
 :pattern ( ($generated@@298 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@285 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@284 $generated@@455)) (<= 0 ($generated@@283 $generated@@454))))
 :pattern ( ($generated@@283 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@69)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@69) (= (type $generated@@459) $generated@@69)) (= ($generated@@456 ($generated@@408 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@408 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@89 ($generated@@408 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@89 ($generated@@416 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@161) (= (type $generated@@477) $generated@@161)) (= ($generated@@166 ($generated@@232 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@152 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@152 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@152 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@161) (= (type $generated@@487) $generated@@161)) (= ($generated@@159 ($generated@@232 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@232 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@161) (= (type $generated@@489) $generated@@161)) (= ($generated@@160 ($generated@@232 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@232 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@285 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@284 $generated@@161)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@283 $generated@@496))) ($generated@@269 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@91 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@92 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@92 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@249 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@89 ($generated@@249 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@254 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@254 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@89 ($generated@@254 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@171 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@171 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@89 ($generated@@171 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@89 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@343 $generated@@519 ($generated@@293 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@293 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))) (and ($generated@@233 ($generated@@98 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@233 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@98 ($generated@@304 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@161) ($generated@@0 ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@98 ($generated@@391 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@98 ($generated@@391 $generated@@524) $generated@@527))
 :pattern ( ($generated@@98 ($generated@@322 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@416 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@80) ($generated@@528 $generated@@529)) (or (or ($generated@@84 $generated@@529) ($generated@@85 $generated@@529)) ($generated@@266 $generated@@529)))
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@232 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@232 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538))) (and (= ($generated@@293 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@82 ($generated@@343 ($generated@@306 $generated@@161 $generated@@161) $generated@@536) ($generated@@408 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@233 $generated@@536 ($generated@@408 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@82 ($generated@@343 ($generated@@324 $generated@@161 $generated@@161) $generated@@539) ($generated@@416 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@161)) ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543))) (and (= ($generated@@293 ($generated@@343 $generated@@80 $generated@@544)) $generated@@544) ($generated@@82 ($generated@@343 $generated@@80 $generated@@544) ($generated@@152 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@544 ($generated@@152 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@98 ($generated@@424 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@98 ($generated@@424 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@74)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@69) (= (type $generated@@550) $generated@@69)) (and (= ($generated@@89 ($generated@@152 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@152 $generated@@549 $generated@@550)) $generated@@67)))
 :pattern ( ($generated@@152 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@80) ($generated@@82 $generated@@551 $generated@@83)) (or (or ($generated@@84 $generated@@551) ($generated@@85 $generated@@551)) ($generated@@266 $generated@@551)))
 :pattern ( ($generated@@266 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
 :pattern ( ($generated@@85 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
 :pattern ( ($generated@@84 $generated@@551) ($generated@@82 $generated@@551 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@77) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@80) (or ($generated@@81 $generated@@552) (and (not (= 1 $generated@@77)) ($generated@@82 $generated@@552 $generated@@83)))) (= ($generated@@78 $generated@@552) (ite ($generated@@84 $generated@@552) 10 (ite ($generated@@85 $generated@@552) 12 14))))
 :pattern ( ($generated@@78 $generated@@552))
))))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@80) (= ($generated@@530 ($generated@@293 $generated@@553)) ($generated@@531 $generated@@553)))
 :pattern ( ($generated@@530 ($generated@@293 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@161) ($generated@@233 $generated@@554 ($generated@@92 0))) (and (= ($generated@@293 ($generated@@343 $generated@@2 $generated@@554)) $generated@@554) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@554) ($generated@@92 0))))
 :pattern ( ($generated@@233 $generated@@554 ($generated@@92 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@161) (= (type $generated@@556) $generated@@69)) ($generated@@233 $generated@@555 ($generated@@249 $generated@@556))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@555)) $generated@@555) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@555) ($generated@@249 $generated@@556))))
 :pattern ( ($generated@@233 $generated@@555 ($generated@@249 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@161) (= (type $generated@@558) $generated@@69)) ($generated@@233 $generated@@557 ($generated@@254 $generated@@558))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557)) $generated@@557) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@4) $generated@@557) ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@254 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@161) (= (type $generated@@560) $generated@@69)) ($generated@@233 $generated@@559 ($generated@@171 $generated@@560))) (and (= ($generated@@293 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@559)) $generated@@559) ($generated@@82 ($generated@@343 ($generated@@93 $generated@@161 $generated@@2) $generated@@559) ($generated@@171 $generated@@560))))
 :pattern ( ($generated@@233 $generated@@559 ($generated@@171 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@69)) ($generated@@233 $generated@@561 ($generated@@490 $generated@@562))) (and (= ($generated@@293 ($generated@@343 ($generated@@284 $generated@@161) $generated@@561)) $generated@@561) ($generated@@82 ($generated@@343 ($generated@@284 $generated@@161) $generated@@561) ($generated@@490 $generated@@562))))
 :pattern ( ($generated@@233 $generated@@561 ($generated@@490 $generated@@562)))
)))
(assert (= ($generated@@89 $generated@@83) $generated@@64))
(assert (= ($generated@@547 $generated@@83) $generated@@68))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@93 $generated@@161 $generated@@2)) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@563 ($generated@@171 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@161) (< 0 ($generated ($generated@@98 $generated@@563 $generated@@566)))) ($generated@@269 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@98 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@91 $generated@@563 ($generated@@171 $generated@@564) $generated@@565))
)))
(assert (= $generated@@167 ($generated@@79 $generated@@167)))
(assert (= $generated@@169 ($generated@@79 $generated@@169)))
(assert (= $generated@@170 ($generated@@79 $generated@@170)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@80) (= (type $generated@@568) $generated@@69)) (= (type $generated@@569) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@569) (and ($generated@@151 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@69) ($generated@@91 $generated@@567 ($generated@@152 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@91 $generated@@567 ($generated@@152 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@269 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@269 ($generated@@159 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@80) (= (type $generated@@572) $generated@@69)) (= (type $generated@@573) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@240 $generated@@573) (and ($generated@@151 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@69) ($generated@@91 $generated@@571 ($generated@@152 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@91 $generated@@571 ($generated@@152 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@269 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@269 ($generated@@160 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@161) (= (type $generated@@576) $generated@@161)) (= ($generated@@232 ($generated@@79 $generated@@575) ($generated@@79 $generated@@576)) ($generated@@79 ($generated@@232 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@232 ($generated@@79 $generated@@575) ($generated@@79 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@259 $generated@@577))) ($generated@@79 ($generated@@293 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@259 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@293 ($generated@@79 $generated@@578)) ($generated@@79 ($generated@@293 $generated@@578)))
 :pattern ( ($generated@@293 ($generated@@79 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@285 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@284 $generated@@580)) (= ($generated@@283 $generated@@579) 0)) (= $generated@@579 ($generated@@282 $generated@@580))))
 :pattern ( ($generated@@283 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@93 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@298 ($generated@@99 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@298 $generated@@581) ($generated ($generated@@98 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@298 ($generated@@99 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@586) $generated@@2)) ($generated@@91 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@91 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@588) $generated@@3)) ($generated@@91 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@91 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@590) $generated@@4)) ($generated@@91 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@91 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@592) $generated@@448)) ($generated@@91 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@91 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@594) $generated@@161)) ($generated@@91 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@91 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@284 $generated@@161)) (= (type $generated@@596) $generated@@69)) (= ($generated@@82 $generated@@595 ($generated@@490 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@283 $generated@@595))) ($generated@@233 ($generated@@491 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@491 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@82 $generated@@595 ($generated@@490 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@284 $generated@@161)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@283 $generated@@599))) (< ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@531 ($generated@@343 $generated@@80 ($generated@@491 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@306 $generated@@161 $generated@@161)) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) $generated@@69)) ($generated@@82 $generated@@601 ($generated@@408 $generated@@602 $generated@@603))) (and (and ($generated@@82 ($generated@@304 $generated@@601) ($generated@@249 $generated@@602)) ($generated@@82 ($generated@@351 $generated@@601) ($generated@@249 $generated@@603))) ($generated@@82 ($generated@@382 $generated@@601) ($generated@@249 ($generated@@152 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@82 $generated@@601 ($generated@@408 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@324 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@82 $generated@@604 ($generated@@416 $generated@@605 $generated@@606))) (and (and ($generated@@82 ($generated@@322 $generated@@604) ($generated@@254 $generated@@605)) ($generated@@82 ($generated@@362 $generated@@604) ($generated@@254 $generated@@606))) ($generated@@82 ($generated@@390 $generated@@604) ($generated@@254 ($generated@@152 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@82 $generated@@604 ($generated@@416 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@82 $generated@@607 $generated@@46))
 :pattern ( ($generated@@82 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@82 $generated@@608 $generated@@47))
 :pattern ( ($generated@@82 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@82 $generated@@609 $generated@@44))
 :pattern ( ($generated@@82 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@448) ($generated@@82 $generated@@610 $generated@@45))
 :pattern ( ($generated@@82 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@161) ($generated@@82 $generated@@611 $generated@@48))
 :pattern ( ($generated@@82 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) $generated@@80) (= (type $generated@@613) ($generated@@178 $generated@@94 $generated@@4))) (= (type $generated@@614) $generated@@94)) (= (type $generated@@615) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@612 $generated@@167) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@619  (=> (not (= $generated@@612 $generated@@169)) (and (=> (= (ControlFlow 0 9) 7) $generated@@618) (=> (= (ControlFlow 0 9) 8) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@612 $generated@@169) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@621  (=> (not (= $generated@@612 $generated@@170)) (and (=> (= (ControlFlow 0 10) 5) $generated@@620) (=> (= (ControlFlow 0 10) 9) $generated@@619)))))
(let (($generated@@622  (=> (and (= $generated@@612 $generated@@170) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@623  (=> ($generated@@246 $generated@@612 $generated@@169) (and (=> (= (ControlFlow 0 11) 3) $generated@@622) (=> (= (ControlFlow 0 11) 10) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (= $generated@@613 ($generated@@177 $generated@@614 $generated@@615 $generated@@60 false)) ($generated@@528 $generated@@612)) (and (=> (= (ControlFlow 0 12) 11) $generated@@623) (=> (= (ControlFlow 0 12) 1) $generated@@624)))))
(let (($generated@@626  (=> (and ($generated@@240 $generated@@615) ($generated@@616 $generated@@615)) (=> (and (and (and (and ($generated@@82 $generated@@612 $generated@@83) ($generated@@91 $generated@@612 $generated@@83 $generated@@615)) ($generated@@528 $generated@@612)) (= 2 $generated@@77)) (and (= ($generated@@78 $generated@@612) ($generated@@259 10)) (= (ControlFlow 0 13) 12))) $generated@@625))))
$generated@@626)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
