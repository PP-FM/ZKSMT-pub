(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 () Int)
(assert  (and (and (and (= (type $generated@@161) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@162) $generated@@47)) (= (type $generated@@163) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@164) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@168  (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@157 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@158 $generated@@159)) (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@159 $generated@@160))))))
(let (($generated@@169  (=> (and (not (and (= $generated@@157 $generated@@158) (<= $generated@@158 $generated@@159))) (= (ControlFlow 0 6) 2)) $generated@@168)))
(let (($generated@@170  (=> (and (and (= $generated@@157 $generated@@158) (<= $generated@@158 $generated@@159)) (= (ControlFlow 0 5) 2)) $generated@@168)))
(let (($generated@@171  (=> (not (= $generated@@157 $generated@@158)) (and (=> (= (ControlFlow 0 8) 5) $generated@@170) (=> (= (ControlFlow 0 8) 6) $generated@@169)))))
(let (($generated@@172  (=> (= $generated@@157 $generated@@158) (and (=> (= (ControlFlow 0 7) 5) $generated@@170) (=> (= (ControlFlow 0 7) 6) $generated@@169)))))
(let (($generated@@173  (=> (= $generated@@161 ($generated@@45 $generated@@162 $generated@@163 $generated@@164 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@172) (=> (= (ControlFlow 0 9) 8) $generated@@171)))))
(let (($generated@@174  (=> (and (and ($generated@@165 $generated@@163) ($generated@@166 $generated@@163)) (and (= 0 $generated@@167) (= (ControlFlow 0 10) 9))) $generated@@173)))
$generated@@174))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 (Int) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) Bool)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@80) ($generated@@156 $generated@@158)) ($generated@@157 $generated@@158))
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@147 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@147 0)))
)))
(assert  (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@164 $generated@@165)) $generated@@152)
 :pattern ( ($generated@@161 $generated@@164 $generated@@165))
)) (forall (($generated@@166 Int) ) (! (= (type ($generated@@162 $generated@@166)) $generated@@152)
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (= (type $generated@@167) $generated@@152) (=> (and (and (<= 0 $generated@@168) (<= 0 $generated@@169)) (<= (+ $generated@@168 $generated@@169) ($generated@@163 $generated@@167))) (= ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)) ($generated@@161 $generated@@167 ($generated@@162 (+ $generated@@168 $generated@@169))))))
 :pattern ( ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@172 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@67)) (= (type $generated@@176) $generated@@80)) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175))) ($generated@@170 $generated@@176))
 :pattern ( ($generated@@170 $generated@@176) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@152)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@152)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@80) (= (type $generated@@183) $generated@@80)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@159 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@159 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@82 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@70 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@240) ($generated@@69 $generated@@4))) (= (type $generated@@242) $generated@@82)) (= (type $generated@@243) ($generated@@69 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) $generated@@80)) (forall (($generated@@249 Int) ) (!  (=> (<= 0 $generated@@249) ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
))) ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@80) ($generated@@159 $generated@@250 $generated@@79)) ($generated@@157 $generated@@250))
 :pattern ( ($generated@@157 $generated@@250) ($generated@@159 $generated@@250 $generated@@79))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@80)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@152)) (= (type $generated@@258) $generated@@152)) (= ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@80) (= (type $generated@@260) $generated@@80)) (= ($generated@@177 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@177 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@142)) (= (type $generated@@263) $generated@@80)) (= (type $generated@@264) $generated@@80)) (= (type $generated@@265) $generated@@152)) (and ($generated@@151 $generated@@261 $generated@@265) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))) ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
 :pattern ( ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@152) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@67)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@274) $generated@@67)) (= ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@252 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@67) (= (type $generated@@284) $generated@@67)) (= (type $generated@@285) $generated@@152)) (= (type $generated@@286) $generated@@152)) (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@287)) (= ($generated@@77 ($generated@@251 $generated@@285 $generated@@286) ($generated@@171 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@77 ($generated@@251 $generated@@285 $generated@@286) ($generated@@171 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@71)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@80) (= ($generated@@170 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@170 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@80) (= ($generated@@157 $generated@@291) (= ($generated@@288 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@170 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@152) (= (type $generated@@294) $generated@@152)) (= $generated@@292 ($generated@@251 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@170 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@80) ($generated@@157 $generated@@295)) (exists (($generated@@296 Int) ($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@80) (= $generated@@295 ($generated@@78 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@157 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 18)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@152) (= (type $generated@@307) $generated@@142)) (= (type $generated@@308) $generated@@80)) (= (type $generated@@309) $generated@@80)) (not (= $generated@@306 ($generated@@162 0)))) (= ($generated@@245 $generated@@306 ($generated@@141 $generated@@307) $generated@@308 $generated@@309) ($generated@@245 $generated@@306 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@245 $generated@@306 ($generated@@141 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@142) (= (type $generated@@311) $generated@@80)) (= (type $generated@@312) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@310) $generated@@311 $generated@@312) ($generated@@140 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@152)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@282 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@77 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@282 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@81 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@85 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@81 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@87 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 20)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@81 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@152) (= (type $generated@@362) $generated@@152)) (and ($generated@@360 $generated@@362) (<= ($generated@@163 $generated@@362) ($generated@@163 $generated@@361)))) (and (= ($generated@@360 ($generated@@161 $generated@@361 $generated@@362)) ($generated@@360 $generated@@361)) (= ($generated@@163 ($generated@@161 $generated@@361 $generated@@362)) (- ($generated@@163 $generated@@361) ($generated@@163 $generated@@362)))))
 :pattern ( ($generated@@161 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 Int) ) (!  (=> (<= 0 $generated@@363) (and ($generated@@360 ($generated@@162 $generated@@363)) (= ($generated@@163 ($generated@@162 $generated@@363)) $generated@@363)))
 :pattern ( ($generated@@162 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@85 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@81 $generated@@365 $generated@@2)) (= ($generated@@185 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@87 $generated@@364 $generated@@366))) (<= ($generated ($generated@@87 $generated@@364 $generated@@366)) ($generated@@318 $generated@@364))))
 :pattern ( ($generated@@87 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@185 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@152) ($generated@@252 $generated@@370 $generated@@79)) (and (= ($generated@@313 ($generated@@367 $generated@@80 $generated@@370)) $generated@@370) ($generated@@159 ($generated@@367 $generated@@80 $generated@@370) $generated@@79)))
 :pattern ( ($generated@@252 $generated@@370 $generated@@79))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) $generated@@142) (= (type $generated@@372) $generated@@80)) (= (type $generated@@373) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@371) $generated@@372 $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@152) ($generated@@245 $generated@@374 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
 :pattern ( ($generated@@245 $generated@@374 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@328 (type $generated@@375))))
(let (($generated@@377 ($generated@@327 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@326 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@325 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@324 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@328 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@81 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@328 (type $generated@@382))))
(let (($generated@@384 ($generated@@327 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@326 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@325 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@87 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@346 (type $generated@@386))))
(let (($generated@@388 ($generated@@345 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@344 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@343 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@342 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@346 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@81 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@346 (type $generated@@393))))
(let (($generated@@395 ($generated@@345 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@344 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@343 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@87 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@398) $generated@@67)) (= ($generated@@159 $generated@@397 ($generated@@184 $generated@@398)) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@397 $generated@@399)))) ($generated@@252 $generated@@399 $generated@@398))
 :pattern ( ($generated@@87 $generated@@397 $generated@@399))
))))
 :pattern ( ($generated@@159 $generated@@397 ($generated@@184 $generated@@398)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) (= (type $generated@@401) $generated@@152)) (or (or ($generated@@151 $generated@@400 $generated@@401) (= $generated@@400 $generated@@401)) ($generated@@151 $generated@@401 $generated@@400)))
 :pattern ( ($generated@@151 $generated@@400 $generated@@401) ($generated@@151 $generated@@401 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@152) ($generated@@0 ($generated@@87 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@87 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@152) ($generated@@0 ($generated@@87 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@87 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@87 ($generated@@319 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@87 ($generated@@319 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@328 (type $generated@@415))))
(let (($generated@@417 ($generated@@327 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@81 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@418) ($generated@@178 ($generated@@367 $generated@@80 $generated@@419)))) (= ($generated@@87 ($generated@@413 $generated@@418) ($generated@@178 ($generated@@367 $generated@@80 $generated@@419))) ($generated@@179 ($generated@@367 $generated@@80 $generated@@419))))))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@346 (type $generated@@423))))
(let (($generated@@425 ($generated@@345 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@81 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@427) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@426) ($generated@@178 ($generated@@367 $generated@@80 $generated@@427)))) (= ($generated@@87 ($generated@@421 $generated@@426) ($generated@@178 ($generated@@367 $generated@@80 $generated@@427))) ($generated@@179 ($generated@@367 $generated@@80 $generated@@427))))))
 :pattern ( ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@327 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@326 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@87 ($generated@@379 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@428) $generated@@432))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@345 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@344 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@87 ($generated@@390 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@433) $generated@@437))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@442) $generated@@67)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@441) $generated@@445))) (and ($generated@@282 ($generated@@87 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@282 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@77 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@450) $generated@@67)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@449) $generated@@453))) (and ($generated@@282 ($generated@@87 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@282 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@77 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@81 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@346 (type $generated@@456))))
(let (($generated@@458 ($generated@@345 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@344 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@343 $generated@@458 $generated@@457)) (= ($generated@@342 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@342 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@346 (type $generated@@459))))
(let (($generated@@461 ($generated@@345 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@344 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@343 $generated@@461 $generated@@460)) (= ($generated@@390 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@390 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@346 (type $generated@@462))))
(let (($generated@@464 ($generated@@345 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@344 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@343 $generated@@464 $generated@@463)) (= ($generated@@420 $generated@@462) ($generated@@454 $generated@@152))))))
 :pattern ( ($generated@@420 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@328 (type $generated@@465))))
(let (($generated@@467 ($generated@@327 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@326 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@325 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@412 $generated@@465) ($generated@@313 ($generated@@251 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@412 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@346 (type $generated@@470))))
(let (($generated@@472 ($generated@@345 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@344 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@343 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@152) (= (type $generated@@474) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@420 $generated@@470) ($generated@@313 ($generated@@251 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@420 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) ($generated@@252 $generated@@475 $generated@@46)) (and (= ($generated@@313 ($generated@@367 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@367 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@152) ($generated@@252 $generated@@476 $generated@@47)) (and (= ($generated@@313 ($generated@@367 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@367 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@152) ($generated@@252 $generated@@477 $generated@@44)) (and (= ($generated@@313 ($generated@@367 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@367 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 21))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) ($generated@@252 $generated@@479 $generated@@45)) (and (= ($generated@@313 ($generated@@367 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@367 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@252 ($generated@@313 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@252 ($generated@@313 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@152) (<= 0 ($generated@@163 $generated@@482)))
 :pattern ( ($generated@@163 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@85 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@81 $generated@@484 $generated@@2)) (<= 0 ($generated@@318 $generated@@483))))
 :pattern ( ($generated@@318 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@301 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@300 $generated@@486)) (<= 0 ($generated@@299 $generated@@485))))
 :pattern ( ($generated@@299 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@438 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@438 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@438 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@438 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@75 ($generated@@438 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@446 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@446 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@446 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@446 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@67) (= (type $generated@@506) $generated@@67)) (= ($generated@@75 ($generated@@446 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (= ($generated@@288 ($generated@@251 $generated@@507 $generated@@508)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@67) (= (type $generated@@512) $generated@@67)) (= ($generated@@509 ($generated@@171 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@171 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@171 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@171 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@152)) (= ($generated@@178 ($generated@@251 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@152)) (= ($generated@@179 ($generated@@251 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@251 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@80) (= ($generated@@288 ($generated@@78 $generated@@521 $generated@@522)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 Int) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@80) (= ($generated@@523 ($generated@@78 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@78 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@80)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@80) (= ($generated@@526 ($generated@@78 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@78 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@301 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@300 $generated@@152)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@299 $generated@@536))) ($generated@@282 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@77 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@540 ($generated@@147 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@147 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@266 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@266 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@75 ($generated@@266 $generated@@545)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@67) (= ($generated@@546 ($generated@@271 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@271 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@67) (= ($generated@@75 ($generated@@271 $generated@@549)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@550 ($generated@@184 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@184 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@75 ($generated@@184 $generated@@553)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@530 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@530 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@75 ($generated@@530 $generated@@557)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@367 $generated@@559 ($generated@@313 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@313 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) (= ($generated@@159 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@560) $generated@@563))) (and ($generated@@252 ($generated@@87 ($generated@@413 $generated@@560) $generated@@563) $generated@@562) ($generated@@252 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@560) $generated@@563))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@159 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) (= ($generated@@159 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@564) $generated@@567))) (and ($generated@@252 ($generated@@87 ($generated@@421 $generated@@564) $generated@@567) $generated@@566) ($generated@@252 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@564) $generated@@567))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@159 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@152) (= (type $generated@@569) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@568 $generated@@569) (not (= $generated@@568 $generated@@569))) (=> (and ($generated@@360 $generated@@568) (not ($generated@@360 $generated@@569))) ($generated@@151 $generated@@568 $generated@@569))) (=> (and ($generated@@360 $generated@@568) ($generated@@360 $generated@@569)) (= ($generated@@151 $generated@@568 $generated@@569) (< ($generated@@163 $generated@@568) ($generated@@163 $generated@@569))))) (=> (and ($generated@@151 $generated@@568 $generated@@569) ($generated@@360 $generated@@569)) ($generated@@360 $generated@@568))))
 :pattern ( ($generated@@151 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@152) (= (type $generated@@573) $generated@@152)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@251 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@251 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@152)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@251 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@251 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@576) $generated@@152) (= (type $generated@@577) $generated@@142)) (= (type $generated@@578) $generated@@80)) (= (type $generated@@579) $generated@@80)) (and ($generated@@159 $generated@@578 $generated@@79) ($generated@@159 $generated@@579 $generated@@79))) (= ($generated@@245 $generated@@576 ($generated@@141 $generated@@577) $generated@@578 $generated@@579)  (and (=> (< 0 ($generated@@163 $generated@@576)) (and (and ($generated@@157 $generated@@578) ($generated@@157 $generated@@579)) (=> (and ($generated@@157 $generated@@578) ($generated@@157 $generated@@579)) (and (= ($generated@@523 $generated@@578) ($generated@@523 $generated@@579)) ($generated@@245 ($generated@@161 $generated@@576 ($generated@@162 1)) $generated@@577 ($generated@@526 $generated@@578) ($generated@@526 $generated@@579)))))) (=> (and (not (= $generated@@576 ($generated@@162 0))) (= ($generated@@163 $generated@@576) 0)) ($generated@@140 $generated@@577 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@245 $generated@@576 ($generated@@141 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@152) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@252 $generated@@580 ($generated@@438 $generated@@581 $generated@@582))) (and (= ($generated@@313 ($generated@@367 ($generated@@326 $generated@@152 $generated@@152) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@367 ($generated@@326 $generated@@152 $generated@@152) $generated@@580) ($generated@@438 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@252 $generated@@580 ($generated@@438 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@152) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@252 $generated@@583 ($generated@@446 $generated@@584 $generated@@585))) (and (= ($generated@@313 ($generated@@367 ($generated@@344 $generated@@152 $generated@@152) $generated@@583)) $generated@@583) ($generated@@159 ($generated@@367 ($generated@@344 $generated@@152 $generated@@152) $generated@@583) ($generated@@446 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@252 $generated@@583 ($generated@@446 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@152)) ($generated@@252 $generated@@588 ($generated@@171 $generated@@586 $generated@@587))) (and (= ($generated@@313 ($generated@@367 $generated@@80 $generated@@588)) $generated@@588) ($generated@@159 ($generated@@367 $generated@@80 $generated@@588) ($generated@@171 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@252 $generated@@588 ($generated@@171 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
 (not ($generated@@0 ($generated@@87 ($generated@@454 $generated@@590) $generated@@589))))
 :pattern ( (let (($generated@@590 (type $generated@@589)))
($generated@@87 ($generated@@454 $generated@@590) $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@72)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (and (= ($generated@@75 ($generated@@171 $generated@@593 $generated@@594)) $generated@@62) (= ($generated@@591 ($generated@@171 $generated@@593 $generated@@594)) $generated@@65)))
 :pattern ( ($generated@@171 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@80) (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@596) (and ($generated@@157 $generated@@595) ($generated@@77 $generated@@595 $generated@@79 $generated@@596)))) ($generated@@77 ($generated@@8 ($generated@@523 $generated@@595)) $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@523 $generated@@595)) $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@80) (= ($generated@@570 ($generated@@313 $generated@@597)) ($generated@@571 $generated@@597)))
 :pattern ( ($generated@@570 ($generated@@313 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@152) ($generated@@252 $generated@@598 ($generated@@147 0))) (and (= ($generated@@313 ($generated@@367 $generated@@2 $generated@@598)) $generated@@598) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@598) ($generated@@147 0))))
 :pattern ( ($generated@@252 $generated@@598 ($generated@@147 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@152) (= (type $generated@@600) $generated@@67)) ($generated@@252 $generated@@599 ($generated@@266 $generated@@600))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@599)) $generated@@599) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@599) ($generated@@266 $generated@@600))))
 :pattern ( ($generated@@252 $generated@@599 ($generated@@266 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@152) (= (type $generated@@602) $generated@@67)) ($generated@@252 $generated@@601 ($generated@@271 $generated@@602))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@601)) $generated@@601) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@601) ($generated@@271 $generated@@602))))
 :pattern ( ($generated@@252 $generated@@601 ($generated@@271 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@152) (= (type $generated@@604) $generated@@67)) ($generated@@252 $generated@@603 ($generated@@184 $generated@@604))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@2) $generated@@603)) $generated@@603) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@2) $generated@@603) ($generated@@184 $generated@@604))))
 :pattern ( ($generated@@252 $generated@@603 ($generated@@184 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@152) (= (type $generated@@606) $generated@@67)) ($generated@@252 $generated@@605 ($generated@@530 $generated@@606))) (and (= ($generated@@313 ($generated@@367 ($generated@@300 $generated@@152) $generated@@605)) $generated@@605) ($generated@@159 ($generated@@367 ($generated@@300 $generated@@152) $generated@@605) ($generated@@530 $generated@@606))))
 :pattern ( ($generated@@252 $generated@@605 ($generated@@530 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@152) ($generated@@360 $generated@@607)) (= $generated@@607 ($generated@@162 ($generated@@163 $generated@@607))))
 :pattern ( ($generated@@163 $generated@@607))
 :pattern ( ($generated@@360 $generated@@607))
)))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@591 $generated@@79) $generated@@66))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@608 ($generated@@184 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@608 $generated@@611)))) ($generated@@282 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@87 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@77 $generated@@608 ($generated@@184 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@152) (= (type $generated@@613) $generated@@152)) (and ($generated@@360 $generated@@613) (<= ($generated@@163 $generated@@613) ($generated@@163 $generated@@612)))) (or (and (= $generated@@613 ($generated@@162 0)) (= ($generated@@161 $generated@@612 $generated@@613) $generated@@612)) (and (not (= $generated@@613 ($generated@@162 0))) ($generated@@151 ($generated@@161 $generated@@612 $generated@@613) $generated@@612))))
 :pattern ( ($generated@@161 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@80) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@616) (and ($generated@@170 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@67) ($generated@@77 $generated@@614 ($generated@@171 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@77 $generated@@614 ($generated@@171 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@282 ($generated@@178 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@282 ($generated@@178 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@80) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@620) (and ($generated@@170 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@77 $generated@@618 ($generated@@171 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@77 $generated@@618 ($generated@@171 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@282 ($generated@@179 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@282 ($generated@@179 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@80) (= (type $generated@@623) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@623) (and ($generated@@157 $generated@@622) ($generated@@77 $generated@@622 $generated@@79 $generated@@623)))) ($generated@@77 ($generated@@526 $generated@@622) $generated@@79 $generated@@623))
 :pattern ( ($generated@@77 ($generated@@526 $generated@@622) $generated@@79 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@152) (= (type $generated@@625) $generated@@152)) (= ($generated@@251 ($generated@@278 $generated@@624) ($generated@@278 $generated@@625)) ($generated@@278 ($generated@@251 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@251 ($generated@@278 $generated@@624) ($generated@@278 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@276 $generated@@626))) ($generated@@278 ($generated@@313 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@276 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@313 ($generated@@278 $generated@@627)) ($generated@@278 ($generated@@313 $generated@@627)))
 :pattern ( ($generated@@313 ($generated@@278 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@80) (= ($generated@@159 ($generated@@78 $generated@@628 $generated@@629) $generated@@79)  (and ($generated@@159 ($generated@@8 $generated@@628) $generated@@46) ($generated@@159 $generated@@629 $generated@@79))))
 :pattern ( ($generated@@159 ($generated@@78 $generated@@628 $generated@@629) $generated@@79))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@301 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@300 $generated@@631)) (= ($generated@@299 $generated@@630) 0)) (= $generated@@630 ($generated@@298 $generated@@631))))
 :pattern ( ($generated@@299 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@81 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@318 ($generated@@88 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@318 $generated@@632) ($generated ($generated@@87 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@318 ($generated@@88 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@637) $generated@@2)) ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@639) $generated@@3)) ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@641) $generated@@4)) ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@643) $generated@@478)) ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@645) $generated@@152)) ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@300 $generated@@152)) (= (type $generated@@647) $generated@@67)) (= ($generated@@159 $generated@@646 ($generated@@530 $generated@@647)) (forall (($generated@@648 Int) ) (!  (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@299 $generated@@646))) ($generated@@252 ($generated@@531 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@531 $generated@@646 $generated@@648))
))))
 :pattern ( ($generated@@159 $generated@@646 ($generated@@530 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@142) (= (type $generated@@650) $generated@@80)) (= (type $generated@@651) $generated@@80)) (and ($generated@@159 $generated@@650 $generated@@79) ($generated@@159 $generated@@651 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@649) $generated@@650 $generated@@651)  (and (and ($generated@@157 $generated@@650) ($generated@@157 $generated@@651)) (=> (and ($generated@@157 $generated@@650) ($generated@@157 $generated@@651)) (and (= ($generated@@523 $generated@@650) ($generated@@523 $generated@@651)) ($generated@@140 $generated@@649 ($generated@@526 $generated@@650) ($generated@@526 $generated@@651)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@300 $generated@@152)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@299 $generated@@653))) (< ($generated@@571 ($generated@@367 $generated@@80 ($generated@@531 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@571 ($generated@@367 $generated@@80 ($generated@@531 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) $generated@@152) (= (type $generated@@656) $generated@@142)) (= (type $generated@@657) $generated@@80)) (= (type $generated@@658) $generated@@80)) (= $generated@@657 $generated@@658)) ($generated@@245 $generated@@655 ($generated@@141 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@245 $generated@@655 ($generated@@141 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) $generated@@67)) ($generated@@159 $generated@@659 ($generated@@438 $generated@@660 $generated@@661))) (and (and ($generated@@159 ($generated@@324 $generated@@659) ($generated@@266 $generated@@660)) ($generated@@159 ($generated@@379 $generated@@659) ($generated@@266 $generated@@661))) ($generated@@159 ($generated@@412 $generated@@659) ($generated@@266 ($generated@@171 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@159 $generated@@659 ($generated@@438 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@663) $generated@@67)) (= (type $generated@@664) $generated@@67)) ($generated@@159 $generated@@662 ($generated@@446 $generated@@663 $generated@@664))) (and (and ($generated@@159 ($generated@@342 $generated@@662) ($generated@@271 $generated@@663)) ($generated@@159 ($generated@@390 $generated@@662) ($generated@@271 $generated@@664))) ($generated@@159 ($generated@@420 $generated@@662) ($generated@@271 ($generated@@171 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@159 $generated@@662 ($generated@@446 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@2) ($generated@@159 $generated@@665 $generated@@46))
 :pattern ( ($generated@@159 $generated@@665 $generated@@46))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@3) ($generated@@159 $generated@@666 $generated@@47))
 :pattern ( ($generated@@159 $generated@@666 $generated@@47))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@4) ($generated@@159 $generated@@667 $generated@@44))
 :pattern ( ($generated@@159 $generated@@667 $generated@@44))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@478) ($generated@@159 $generated@@668 $generated@@45))
 :pattern ( ($generated@@159 $generated@@668 $generated@@45))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@152) ($generated@@159 $generated@@669 $generated@@48))
 :pattern ( ($generated@@159 $generated@@669 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 (T@U) Bool)
(declare-fun $generated@@680 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@671) $generated@@142) (= (type $generated@@672) $generated@@80)) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) ($generated@@191 $generated@@82 $generated@@4))) (= (type $generated@@675) $generated@@82)) (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@677) $generated@@80)) (= (type $generated@@678) ($generated@@81 $generated@@82 $generated@@83))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@681 true))
(let (($generated@@682  (=> (and (not ($generated@@245 ($generated@@162 $generated@@670) ($generated@@141 ($generated@@141 $generated@@671)) $generated@@672 $generated@@673)) (= (ControlFlow 0 4) 1)) $generated@@681)))
(let (($generated@@683  (=> ($generated@@245 ($generated@@162 $generated@@670) ($generated@@141 ($generated@@141 $generated@@671)) $generated@@672 $generated@@673) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 $generated@@670)) (=> (<= 0 $generated@@670) (=> (= (ControlFlow 0 2) 1) $generated@@681))))))
(let (($generated@@684  (=> (= $generated@@674 ($generated@@190 $generated@@675 $generated@@676 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= 0 $generated@@670)) (=> (<= 0 $generated@@670) (=> ($generated@@245 ($generated@@162 $generated@@670) ($generated@@141 ($generated@@141 $generated@@671)) $generated@@673 $generated@@677) (=> (and (and ($generated@@84 $generated@@678) ($generated@@679 $generated@@678)) (= $generated@@676 $generated@@678)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= 0 $generated@@670)) (=> (<= 0 $generated@@670) (and (=> (= (ControlFlow 0 5) 2) $generated@@683) (=> (= (ControlFlow 0 5) 4) $generated@@682)))))))))))
(let (($generated@@685  (=> (and ($generated@@84 $generated@@676) ($generated@@679 $generated@@676)) (=> (and (and (and ($generated@@159 $generated@@673 $generated@@79) ($generated@@77 $generated@@673 $generated@@79 $generated@@676)) ($generated@@156 $generated@@673)) (and (and ($generated@@159 $generated@@677 $generated@@79) ($generated@@77 $generated@@677 $generated@@79 $generated@@676)) ($generated@@156 $generated@@677))) (=> (and (and (and (and ($generated@@159 $generated@@672 $generated@@79) ($generated@@77 $generated@@672 $generated@@79 $generated@@676)) ($generated@@156 $generated@@672)) (<= ($generated@@276 0) $generated@@670)) (and (= 1 $generated@@680) (= (ControlFlow 0 8) 5))) $generated@@684)))))
$generated@@685))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 (Int) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) Bool)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@80) ($generated@@156 $generated@@158)) ($generated@@157 $generated@@158))
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@147 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@147 0)))
)))
(assert  (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@164 $generated@@165)) $generated@@152)
 :pattern ( ($generated@@161 $generated@@164 $generated@@165))
)) (forall (($generated@@166 Int) ) (! (= (type ($generated@@162 $generated@@166)) $generated@@152)
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (= (type $generated@@167) $generated@@152) (=> (and (and (<= 0 $generated@@168) (<= 0 $generated@@169)) (<= (+ $generated@@168 $generated@@169) ($generated@@163 $generated@@167))) (= ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)) ($generated@@161 $generated@@167 ($generated@@162 (+ $generated@@168 $generated@@169))))))
 :pattern ( ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@172 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@67)) (= (type $generated@@176) $generated@@80)) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175))) ($generated@@170 $generated@@176))
 :pattern ( ($generated@@170 $generated@@176) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@152)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@152)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@80) (= (type $generated@@183) $generated@@80)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@159 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@159 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@82 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@70 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@240) ($generated@@69 $generated@@4))) (= (type $generated@@242) $generated@@82)) (= (type $generated@@243) ($generated@@69 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) $generated@@80)) (forall (($generated@@249 Int) ) (!  (=> (<= 0 $generated@@249) ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
))) ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@80) ($generated@@159 $generated@@250 $generated@@79)) ($generated@@157 $generated@@250))
 :pattern ( ($generated@@157 $generated@@250) ($generated@@159 $generated@@250 $generated@@79))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@80)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@152)) (= (type $generated@@258) $generated@@152)) (= ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@80) (= (type $generated@@260) $generated@@80)) (= ($generated@@177 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@177 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@142)) (= (type $generated@@263) $generated@@80)) (= (type $generated@@264) $generated@@80)) (= (type $generated@@265) $generated@@152)) (and ($generated@@151 $generated@@261 $generated@@265) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))) ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
 :pattern ( ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@152) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@67)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@274) $generated@@67)) (= ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@252 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@67) (= (type $generated@@284) $generated@@67)) (= (type $generated@@285) $generated@@152)) (= (type $generated@@286) $generated@@152)) (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@287)) (= ($generated@@77 ($generated@@251 $generated@@285 $generated@@286) ($generated@@171 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@77 ($generated@@251 $generated@@285 $generated@@286) ($generated@@171 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@71)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@80) (= ($generated@@170 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@170 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@80) (= ($generated@@157 $generated@@291) (= ($generated@@288 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@80) ($generated@@170 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@152) (= (type $generated@@294) $generated@@152)) (= $generated@@292 ($generated@@251 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@170 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@80) ($generated@@157 $generated@@295)) (exists (($generated@@296 Int) ($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@80) (= $generated@@295 ($generated@@78 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@157 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 18)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@152) (= (type $generated@@307) $generated@@142)) (= (type $generated@@308) $generated@@80)) (= (type $generated@@309) $generated@@80)) (not (= $generated@@306 ($generated@@162 0)))) (= ($generated@@245 $generated@@306 ($generated@@141 $generated@@307) $generated@@308 $generated@@309) ($generated@@245 $generated@@306 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@245 $generated@@306 ($generated@@141 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@142) (= (type $generated@@311) $generated@@80)) (= (type $generated@@312) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@310) $generated@@311 $generated@@312) ($generated@@140 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@152)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@282 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@77 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@282 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@81 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@85 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@81 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@87 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 20)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@81 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@152) (= (type $generated@@362) $generated@@152)) (and ($generated@@360 $generated@@362) (<= ($generated@@163 $generated@@362) ($generated@@163 $generated@@361)))) (and (= ($generated@@360 ($generated@@161 $generated@@361 $generated@@362)) ($generated@@360 $generated@@361)) (= ($generated@@163 ($generated@@161 $generated@@361 $generated@@362)) (- ($generated@@163 $generated@@361) ($generated@@163 $generated@@362)))))
 :pattern ( ($generated@@161 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 Int) ) (!  (=> (<= 0 $generated@@363) (and ($generated@@360 ($generated@@162 $generated@@363)) (= ($generated@@163 ($generated@@162 $generated@@363)) $generated@@363)))
 :pattern ( ($generated@@162 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@85 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@81 $generated@@365 $generated@@2)) (= ($generated@@185 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@87 $generated@@364 $generated@@366))) (<= ($generated ($generated@@87 $generated@@364 $generated@@366)) ($generated@@318 $generated@@364))))
 :pattern ( ($generated@@87 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@185 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@152) ($generated@@252 $generated@@370 $generated@@79)) (and (= ($generated@@313 ($generated@@367 $generated@@80 $generated@@370)) $generated@@370) ($generated@@159 ($generated@@367 $generated@@80 $generated@@370) $generated@@79)))
 :pattern ( ($generated@@252 $generated@@370 $generated@@79))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) $generated@@142) (= (type $generated@@372) $generated@@80)) (= (type $generated@@373) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@371) $generated@@372 $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@152) ($generated@@245 $generated@@374 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
 :pattern ( ($generated@@245 $generated@@374 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@328 (type $generated@@375))))
(let (($generated@@377 ($generated@@327 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@326 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@325 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@324 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@328 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@81 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@328 (type $generated@@382))))
(let (($generated@@384 ($generated@@327 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@326 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@325 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@87 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@346 (type $generated@@386))))
(let (($generated@@388 ($generated@@345 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@344 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@343 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@342 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@346 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@81 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@346 (type $generated@@393))))
(let (($generated@@395 ($generated@@345 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@344 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@343 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@87 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@398) $generated@@67)) (= ($generated@@159 $generated@@397 ($generated@@184 $generated@@398)) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@397 $generated@@399)))) ($generated@@252 $generated@@399 $generated@@398))
 :pattern ( ($generated@@87 $generated@@397 $generated@@399))
))))
 :pattern ( ($generated@@159 $generated@@397 ($generated@@184 $generated@@398)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) (= (type $generated@@401) $generated@@152)) (or (or ($generated@@151 $generated@@400 $generated@@401) (= $generated@@400 $generated@@401)) ($generated@@151 $generated@@401 $generated@@400)))
 :pattern ( ($generated@@151 $generated@@400 $generated@@401) ($generated@@151 $generated@@401 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@152) ($generated@@0 ($generated@@87 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@87 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@152) ($generated@@0 ($generated@@87 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@87 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@87 ($generated@@319 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@87 ($generated@@319 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@328 (type $generated@@415))))
(let (($generated@@417 ($generated@@327 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@81 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@418) ($generated@@178 ($generated@@367 $generated@@80 $generated@@419)))) (= ($generated@@87 ($generated@@413 $generated@@418) ($generated@@178 ($generated@@367 $generated@@80 $generated@@419))) ($generated@@179 ($generated@@367 $generated@@80 $generated@@419))))))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@346 (type $generated@@423))))
(let (($generated@@425 ($generated@@345 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@81 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@427) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@426) ($generated@@178 ($generated@@367 $generated@@80 $generated@@427)))) (= ($generated@@87 ($generated@@421 $generated@@426) ($generated@@178 ($generated@@367 $generated@@80 $generated@@427))) ($generated@@179 ($generated@@367 $generated@@80 $generated@@427))))))
 :pattern ( ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@327 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@326 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@87 ($generated@@379 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@428) $generated@@432))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@345 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@344 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@87 ($generated@@390 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@433) $generated@@437))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@442) $generated@@67)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@441) $generated@@445))) (and ($generated@@282 ($generated@@87 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@282 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@77 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@450) $generated@@67)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@449) $generated@@453))) (and ($generated@@282 ($generated@@87 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@282 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@77 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@81 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@346 (type $generated@@456))))
(let (($generated@@458 ($generated@@345 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@344 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@343 $generated@@458 $generated@@457)) (= ($generated@@342 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@342 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@346 (type $generated@@459))))
(let (($generated@@461 ($generated@@345 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@344 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@343 $generated@@461 $generated@@460)) (= ($generated@@390 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@390 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@346 (type $generated@@462))))
(let (($generated@@464 ($generated@@345 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@344 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@343 $generated@@464 $generated@@463)) (= ($generated@@420 $generated@@462) ($generated@@454 $generated@@152))))))
 :pattern ( ($generated@@420 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@328 (type $generated@@465))))
(let (($generated@@467 ($generated@@327 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@326 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@325 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@412 $generated@@465) ($generated@@313 ($generated@@251 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@412 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@346 (type $generated@@470))))
(let (($generated@@472 ($generated@@345 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@344 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@343 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@152) (= (type $generated@@474) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@420 $generated@@470) ($generated@@313 ($generated@@251 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@420 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) ($generated@@252 $generated@@475 $generated@@46)) (and (= ($generated@@313 ($generated@@367 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@367 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@152) ($generated@@252 $generated@@476 $generated@@47)) (and (= ($generated@@313 ($generated@@367 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@367 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@152) ($generated@@252 $generated@@477 $generated@@44)) (and (= ($generated@@313 ($generated@@367 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@367 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 21))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) ($generated@@252 $generated@@479 $generated@@45)) (and (= ($generated@@313 ($generated@@367 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@367 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@252 ($generated@@313 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@252 ($generated@@313 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@152) (<= 0 ($generated@@163 $generated@@482)))
 :pattern ( ($generated@@163 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@85 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@81 $generated@@484 $generated@@2)) (<= 0 ($generated@@318 $generated@@483))))
 :pattern ( ($generated@@318 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@301 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@300 $generated@@486)) (<= 0 ($generated@@299 $generated@@485))))
 :pattern ( ($generated@@299 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@438 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@438 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@438 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@438 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@75 ($generated@@438 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@446 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@446 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@446 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@446 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@67) (= (type $generated@@506) $generated@@67)) (= ($generated@@75 ($generated@@446 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (= ($generated@@288 ($generated@@251 $generated@@507 $generated@@508)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@67) (= (type $generated@@512) $generated@@67)) (= ($generated@@509 ($generated@@171 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@171 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@171 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@171 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@152)) (= ($generated@@178 ($generated@@251 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@152)) (= ($generated@@179 ($generated@@251 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@251 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 Int) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@80) (= ($generated@@288 ($generated@@78 $generated@@521 $generated@@522)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 Int) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@80) (= ($generated@@523 ($generated@@78 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@78 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@80)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@80) (= ($generated@@526 ($generated@@78 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@78 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@301 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@300 $generated@@152)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@299 $generated@@536))) ($generated@@282 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@77 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@540 ($generated@@147 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@147 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@266 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@266 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@75 ($generated@@266 $generated@@545)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@67) (= ($generated@@546 ($generated@@271 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@271 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@67) (= ($generated@@75 ($generated@@271 $generated@@549)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@550 ($generated@@184 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@184 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@75 ($generated@@184 $generated@@553)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@530 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@530 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@75 ($generated@@530 $generated@@557)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@367 $generated@@559 ($generated@@313 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@313 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) (= ($generated@@159 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@560) $generated@@563))) (and ($generated@@252 ($generated@@87 ($generated@@413 $generated@@560) $generated@@563) $generated@@562) ($generated@@252 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@560) $generated@@563))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@159 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) (= ($generated@@159 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@564) $generated@@567))) (and ($generated@@252 ($generated@@87 ($generated@@421 $generated@@564) $generated@@567) $generated@@566) ($generated@@252 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@564) $generated@@567))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@159 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@152) (= (type $generated@@569) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@568 $generated@@569) (not (= $generated@@568 $generated@@569))) (=> (and ($generated@@360 $generated@@568) (not ($generated@@360 $generated@@569))) ($generated@@151 $generated@@568 $generated@@569))) (=> (and ($generated@@360 $generated@@568) ($generated@@360 $generated@@569)) (= ($generated@@151 $generated@@568 $generated@@569) (< ($generated@@163 $generated@@568) ($generated@@163 $generated@@569))))) (=> (and ($generated@@151 $generated@@568 $generated@@569) ($generated@@360 $generated@@569)) ($generated@@360 $generated@@568))))
 :pattern ( ($generated@@151 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@152) (= (type $generated@@573) $generated@@152)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@251 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@251 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@152)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@251 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@251 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@576) $generated@@152) (= (type $generated@@577) $generated@@142)) (= (type $generated@@578) $generated@@80)) (= (type $generated@@579) $generated@@80)) (and ($generated@@159 $generated@@578 $generated@@79) ($generated@@159 $generated@@579 $generated@@79))) (= ($generated@@245 $generated@@576 ($generated@@141 $generated@@577) $generated@@578 $generated@@579)  (and (=> (< 0 ($generated@@163 $generated@@576)) (and (and ($generated@@157 $generated@@578) ($generated@@157 $generated@@579)) (=> (and ($generated@@157 $generated@@578) ($generated@@157 $generated@@579)) (and (= ($generated@@523 $generated@@578) ($generated@@523 $generated@@579)) ($generated@@245 ($generated@@161 $generated@@576 ($generated@@162 1)) $generated@@577 ($generated@@526 $generated@@578) ($generated@@526 $generated@@579)))))) (=> (and (not (= $generated@@576 ($generated@@162 0))) (= ($generated@@163 $generated@@576) 0)) ($generated@@140 $generated@@577 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@245 $generated@@576 ($generated@@141 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@152) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@252 $generated@@580 ($generated@@438 $generated@@581 $generated@@582))) (and (= ($generated@@313 ($generated@@367 ($generated@@326 $generated@@152 $generated@@152) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@367 ($generated@@326 $generated@@152 $generated@@152) $generated@@580) ($generated@@438 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@252 $generated@@580 ($generated@@438 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@152) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@252 $generated@@583 ($generated@@446 $generated@@584 $generated@@585))) (and (= ($generated@@313 ($generated@@367 ($generated@@344 $generated@@152 $generated@@152) $generated@@583)) $generated@@583) ($generated@@159 ($generated@@367 ($generated@@344 $generated@@152 $generated@@152) $generated@@583) ($generated@@446 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@252 $generated@@583 ($generated@@446 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@67) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@152)) ($generated@@252 $generated@@588 ($generated@@171 $generated@@586 $generated@@587))) (and (= ($generated@@313 ($generated@@367 $generated@@80 $generated@@588)) $generated@@588) ($generated@@159 ($generated@@367 $generated@@80 $generated@@588) ($generated@@171 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@252 $generated@@588 ($generated@@171 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
 (not ($generated@@0 ($generated@@87 ($generated@@454 $generated@@590) $generated@@589))))
 :pattern ( (let (($generated@@590 (type $generated@@589)))
($generated@@87 ($generated@@454 $generated@@590) $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@72)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (and (= ($generated@@75 ($generated@@171 $generated@@593 $generated@@594)) $generated@@62) (= ($generated@@591 ($generated@@171 $generated@@593 $generated@@594)) $generated@@65)))
 :pattern ( ($generated@@171 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@80) (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@596) (and ($generated@@157 $generated@@595) ($generated@@77 $generated@@595 $generated@@79 $generated@@596)))) ($generated@@77 ($generated@@8 ($generated@@523 $generated@@595)) $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@523 $generated@@595)) $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@80) (= ($generated@@570 ($generated@@313 $generated@@597)) ($generated@@571 $generated@@597)))
 :pattern ( ($generated@@570 ($generated@@313 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@152) ($generated@@252 $generated@@598 ($generated@@147 0))) (and (= ($generated@@313 ($generated@@367 $generated@@2 $generated@@598)) $generated@@598) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@598) ($generated@@147 0))))
 :pattern ( ($generated@@252 $generated@@598 ($generated@@147 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@152) (= (type $generated@@600) $generated@@67)) ($generated@@252 $generated@@599 ($generated@@266 $generated@@600))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@599)) $generated@@599) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@599) ($generated@@266 $generated@@600))))
 :pattern ( ($generated@@252 $generated@@599 ($generated@@266 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@152) (= (type $generated@@602) $generated@@67)) ($generated@@252 $generated@@601 ($generated@@271 $generated@@602))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@601)) $generated@@601) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@4) $generated@@601) ($generated@@271 $generated@@602))))
 :pattern ( ($generated@@252 $generated@@601 ($generated@@271 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@152) (= (type $generated@@604) $generated@@67)) ($generated@@252 $generated@@603 ($generated@@184 $generated@@604))) (and (= ($generated@@313 ($generated@@367 ($generated@@81 $generated@@152 $generated@@2) $generated@@603)) $generated@@603) ($generated@@159 ($generated@@367 ($generated@@81 $generated@@152 $generated@@2) $generated@@603) ($generated@@184 $generated@@604))))
 :pattern ( ($generated@@252 $generated@@603 ($generated@@184 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@152) (= (type $generated@@606) $generated@@67)) ($generated@@252 $generated@@605 ($generated@@530 $generated@@606))) (and (= ($generated@@313 ($generated@@367 ($generated@@300 $generated@@152) $generated@@605)) $generated@@605) ($generated@@159 ($generated@@367 ($generated@@300 $generated@@152) $generated@@605) ($generated@@530 $generated@@606))))
 :pattern ( ($generated@@252 $generated@@605 ($generated@@530 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@152) ($generated@@360 $generated@@607)) (= $generated@@607 ($generated@@162 ($generated@@163 $generated@@607))))
 :pattern ( ($generated@@163 $generated@@607))
 :pattern ( ($generated@@360 $generated@@607))
)))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@591 $generated@@79) $generated@@66))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@608 ($generated@@184 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@608 $generated@@611)))) ($generated@@282 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@87 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@77 $generated@@608 ($generated@@184 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@152) (= (type $generated@@613) $generated@@152)) (and ($generated@@360 $generated@@613) (<= ($generated@@163 $generated@@613) ($generated@@163 $generated@@612)))) (or (and (= $generated@@613 ($generated@@162 0)) (= ($generated@@161 $generated@@612 $generated@@613) $generated@@612)) (and (not (= $generated@@613 ($generated@@162 0))) ($generated@@151 ($generated@@161 $generated@@612 $generated@@613) $generated@@612))))
 :pattern ( ($generated@@161 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@80) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@616) (and ($generated@@170 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@67) ($generated@@77 $generated@@614 ($generated@@171 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@77 $generated@@614 ($generated@@171 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@282 ($generated@@178 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@282 ($generated@@178 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@80) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@620) (and ($generated@@170 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@77 $generated@@618 ($generated@@171 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@77 $generated@@618 ($generated@@171 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@282 ($generated@@179 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@282 ($generated@@179 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@80) (= (type $generated@@623) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@623) (and ($generated@@157 $generated@@622) ($generated@@77 $generated@@622 $generated@@79 $generated@@623)))) ($generated@@77 ($generated@@526 $generated@@622) $generated@@79 $generated@@623))
 :pattern ( ($generated@@77 ($generated@@526 $generated@@622) $generated@@79 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@152) (= (type $generated@@625) $generated@@152)) (= ($generated@@251 ($generated@@278 $generated@@624) ($generated@@278 $generated@@625)) ($generated@@278 ($generated@@251 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@251 ($generated@@278 $generated@@624) ($generated@@278 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@276 $generated@@626))) ($generated@@278 ($generated@@313 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@276 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@313 ($generated@@278 $generated@@627)) ($generated@@278 ($generated@@313 $generated@@627)))
 :pattern ( ($generated@@313 ($generated@@278 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@80) (= ($generated@@159 ($generated@@78 $generated@@628 $generated@@629) $generated@@79)  (and ($generated@@159 ($generated@@8 $generated@@628) $generated@@46) ($generated@@159 $generated@@629 $generated@@79))))
 :pattern ( ($generated@@159 ($generated@@78 $generated@@628 $generated@@629) $generated@@79))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@301 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@300 $generated@@631)) (= ($generated@@299 $generated@@630) 0)) (= $generated@@630 ($generated@@298 $generated@@631))))
 :pattern ( ($generated@@299 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@81 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@318 ($generated@@88 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@318 $generated@@632) ($generated ($generated@@87 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@318 ($generated@@88 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@637) $generated@@2)) ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@77 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@639) $generated@@3)) ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@641) $generated@@4)) ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@643) $generated@@478)) ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@645) $generated@@152)) ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@300 $generated@@152)) (= (type $generated@@647) $generated@@67)) (= ($generated@@159 $generated@@646 ($generated@@530 $generated@@647)) (forall (($generated@@648 Int) ) (!  (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@299 $generated@@646))) ($generated@@252 ($generated@@531 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@531 $generated@@646 $generated@@648))
))))
 :pattern ( ($generated@@159 $generated@@646 ($generated@@530 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@142) (= (type $generated@@650) $generated@@80)) (= (type $generated@@651) $generated@@80)) (and ($generated@@159 $generated@@650 $generated@@79) ($generated@@159 $generated@@651 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@649) $generated@@650 $generated@@651)  (and (and ($generated@@157 $generated@@650) ($generated@@157 $generated@@651)) (=> (and ($generated@@157 $generated@@650) ($generated@@157 $generated@@651)) (and (= ($generated@@523 $generated@@650) ($generated@@523 $generated@@651)) ($generated@@140 $generated@@649 ($generated@@526 $generated@@650) ($generated@@526 $generated@@651)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@300 $generated@@152)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@299 $generated@@653))) (< ($generated@@571 ($generated@@367 $generated@@80 ($generated@@531 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@571 ($generated@@367 $generated@@80 ($generated@@531 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) $generated@@152) (= (type $generated@@656) $generated@@142)) (= (type $generated@@657) $generated@@80)) (= (type $generated@@658) $generated@@80)) (= $generated@@657 $generated@@658)) ($generated@@245 $generated@@655 ($generated@@141 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@245 $generated@@655 ($generated@@141 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@326 $generated@@152 $generated@@152)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) $generated@@67)) ($generated@@159 $generated@@659 ($generated@@438 $generated@@660 $generated@@661))) (and (and ($generated@@159 ($generated@@324 $generated@@659) ($generated@@266 $generated@@660)) ($generated@@159 ($generated@@379 $generated@@659) ($generated@@266 $generated@@661))) ($generated@@159 ($generated@@412 $generated@@659) ($generated@@266 ($generated@@171 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@159 $generated@@659 ($generated@@438 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@344 $generated@@152 $generated@@152)) (= (type $generated@@663) $generated@@67)) (= (type $generated@@664) $generated@@67)) ($generated@@159 $generated@@662 ($generated@@446 $generated@@663 $generated@@664))) (and (and ($generated@@159 ($generated@@342 $generated@@662) ($generated@@271 $generated@@663)) ($generated@@159 ($generated@@390 $generated@@662) ($generated@@271 $generated@@664))) ($generated@@159 ($generated@@420 $generated@@662) ($generated@@271 ($generated@@171 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@159 $generated@@662 ($generated@@446 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@2) ($generated@@159 $generated@@665 $generated@@46))
 :pattern ( ($generated@@159 $generated@@665 $generated@@46))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@3) ($generated@@159 $generated@@666 $generated@@47))
 :pattern ( ($generated@@159 $generated@@666 $generated@@47))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@4) ($generated@@159 $generated@@667 $generated@@44))
 :pattern ( ($generated@@159 $generated@@667 $generated@@44))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@478) ($generated@@159 $generated@@668 $generated@@45))
 :pattern ( ($generated@@159 $generated@@668 $generated@@45))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@152) ($generated@@159 $generated@@669 $generated@@48))
 :pattern ( ($generated@@159 $generated@@669 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@670) ($generated@@191 $generated@@82 $generated@@4)) (= (type $generated@@671) $generated@@82)) (= (type $generated@@672) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) $generated@@80)) (= (type $generated@@675) $generated@@80)) (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@678) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@681  (=> (and (and (and (= $generated@@670 ($generated@@190 $generated@@671 $generated@@672 $generated@@60 false)) ($generated@@156 $generated@@673)) (and ($generated@@156 $generated@@674) ($generated@@156 $generated@@675))) (and (and ($generated@@84 $generated@@676) ($generated@@677 $generated@@676)) (and (= $generated@@672 $generated@@676) (forall (($generated@@682 Int) )  (=> (and (and (<= ($generated@@276 0) $generated@@682) ($generated@@245 ($generated@@162 $generated@@682) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@673 $generated@@674)) (and (<= 0 $generated@@682) (< $generated@@682 $generated@@679))) (and ($generated@@245 ($generated@@162 $generated@@682) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@675 $generated@@673) ($generated@@245 ($generated@@162 $generated@@682) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@673 $generated@@674))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@245 ($generated@@162 $generated@@679) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@675 $generated@@673) (=> (< 0 $generated@@679) (=> ($generated@@157 $generated@@675) (and ($generated@@157 $generated@@673) (and (= ($generated@@523 $generated@@675) ($generated@@523 $generated@@673)) ($generated@@245 ($generated@@162 (- $generated@@679 1)) ($generated@@141 ($generated@@141 $generated@@678)) ($generated@@526 $generated@@675) ($generated@@526 $generated@@673)))))))) (=> (or ($generated@@245 ($generated@@162 $generated@@679) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@675 $generated@@673) (=> (< 0 $generated@@679) (=> ($generated@@157 $generated@@675) (and ($generated@@157 $generated@@673) (and (= ($generated@@523 $generated@@675) ($generated@@523 $generated@@673)) ($generated@@245 ($generated@@162 (- $generated@@679 1)) ($generated@@141 ($generated@@141 $generated@@678)) ($generated@@526 $generated@@675) ($generated@@526 $generated@@673))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@245 ($generated@@162 $generated@@679) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@673 $generated@@674) (=> (< 0 $generated@@679) (=> ($generated@@157 $generated@@673) (and ($generated@@157 $generated@@674) (and (= ($generated@@523 $generated@@673) ($generated@@523 $generated@@674)) ($generated@@245 ($generated@@162 (- $generated@@679 1)) ($generated@@141 ($generated@@141 $generated@@678)) ($generated@@526 $generated@@673) ($generated@@526 $generated@@674)))))))))))))
(let (($generated@@683  (=> (and ($generated@@84 $generated@@672) ($generated@@677 $generated@@672)) (=> (and (and (and (and ($generated@@159 $generated@@673 $generated@@79) ($generated@@77 $generated@@673 $generated@@79 $generated@@672)) ($generated@@156 $generated@@673)) (and (and ($generated@@159 $generated@@674 $generated@@79) ($generated@@77 $generated@@674 $generated@@79 $generated@@672)) ($generated@@156 $generated@@674))) (and (and (and ($generated@@159 $generated@@675 $generated@@79) ($generated@@77 $generated@@675 $generated@@79 $generated@@672)) ($generated@@156 $generated@@675)) (and (and (<= ($generated@@276 0) $generated@@679) (= 1 $generated@@680)) (and ($generated@@245 ($generated@@162 $generated@@679) ($generated@@141 ($generated@@141 $generated@@678)) $generated@@673 $generated@@674) (= (ControlFlow 0 4) 2))))) $generated@@681))))
$generated@@683)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@353 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@571 (T@T) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@79 (type $generated@@216))))
(= (type ($generated@@215 $generated@@216 $generated@@217)) ($generated@@76 $generated@@218 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@76 $generated@@221 $generated@@4)) (= (type $generated@@220) ($generated@@76 $generated@@221 $generated@@4))) (= ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220) ($generated@@215 $generated@@219 $generated@@220))))
 :pattern ( ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@140)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@64) (= (type $generated@@227) $generated@@64)) (= (type $generated@@228) $generated@@149)) (= (type $generated@@229) $generated@@149)) (= ($generated@@136 ($generated@@222 $generated@@228 $generated@@229) ($generated@@139 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@136 ($generated@@222 $generated@@228 $generated@@229) ($generated@@139 $generated@@226 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@140) (= (type $generated@@231) $generated@@140)) (= ($generated@@146 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@146 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@136 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) ($generated@@0 ($generated@@81 $generated@@234 $generated@@236))) ($generated@@223 $generated@@236 $generated@@235))
 :pattern ( ($generated@@81 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@136 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@136 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@149) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@223 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@136 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@64) (= (type $generated@@251) $generated@@64)) (= (type $generated@@252) $generated@@149)) (= (type $generated@@253) $generated@@149)) (= (type $generated@@254) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@248 $generated@@254)) (= ($generated@@74 ($generated@@222 $generated@@252 $generated@@253) ($generated@@139 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@74 ($generated@@222 $generated@@252 $generated@@253) ($generated@@139 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@140) (= ($generated@@138 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@140) ($generated@@138 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@149) (= (type $generated@@260) $generated@@149)) (= $generated@@258 ($generated@@222 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@138 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@149)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@74 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@276) $generated@@149)) (= (type $generated@@277) $generated@@64)) ($generated@@132 $generated@@274 $generated@@275)) ($generated@@249 $generated@@276 $generated@@277 $generated@@274)) ($generated@@249 $generated@@276 $generated@@277 $generated@@275))
 :pattern ( ($generated@@132 $generated@@274 $generated@@275) ($generated@@249 $generated@@276 $generated@@277 $generated@@274))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@281) $generated@@64)) ($generated@@132 $generated@@278 $generated@@279)) ($generated@@74 $generated@@280 $generated@@281 $generated@@278)) ($generated@@74 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@132 $generated@@278 $generated@@279) ($generated@@74 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@155 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@155 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@292 (type $generated@@327))))
(let (($generated@@329 ($generated@@291 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@290 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@289 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@288 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@292 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@292 (type $generated@@334))))
(let (($generated@@336 ($generated@@291 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@290 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@289 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@310 (type $generated@@338))))
(let (($generated@@340 ($generated@@309 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@308 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@307 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@306 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@310 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@223 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@79 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@79 (type $generated@@357))))
 (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@359 $generated@@4)) (= (type $generated@@358) ($generated@@76 $generated@@359 $generated@@4))) ($generated@@352 $generated@@357 $generated@@358)) (and (= ($generated@@353 ($generated@@215 $generated@@357 $generated@@358) $generated@@357) $generated@@358) (= ($generated@@353 ($generated@@215 $generated@@357 $generated@@358) $generated@@358) $generated@@357))))
 :pattern ( ($generated@@215 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (=> (and (= (type $generated@@360) ($generated@@76 $generated@@363 $generated@@4)) (= (type $generated@@361) ($generated@@76 $generated@@363 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@360 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@81 $generated@@360 $generated@@362)) (not ($generated@@0 ($generated@@81 $generated@@361 $generated@@362)))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@232 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@149) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@249 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@232 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@237 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@149) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@249 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@237 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@384) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@147 ($generated@@375 $generated@@140 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@147 ($generated@@375 $generated@@140 $generated@@384))) ($generated@@148 ($generated@@375 $generated@@140 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@392) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@147 ($generated@@375 $generated@@140 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@147 ($generated@@375 $generated@@140 $generated@@392))) ($generated@@148 ($generated@@375 $generated@@140 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@249 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@249 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@249 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@249 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= (type ($generated@@419 $generated@@420 $generated@@421)) ($generated@@76 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@424)))
 (=> (and (and (= (type $generated@@423) ($generated@@76 $generated@@426 $generated@@4)) (= (type $generated@@425) $generated@@426)) ($generated@@0 ($generated@@81 $generated@@423 $generated@@425))) ($generated@@0 ($generated@@81 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))))
 :pattern ( ($generated@@419 $generated@@423 $generated@@424) ($generated@@81 $generated@@423 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
 (=> (and (and (= (type $generated@@427) ($generated@@76 $generated@@430 $generated@@4)) (= (type $generated@@428) ($generated@@76 $generated@@430 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@427 $generated@@429))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@427 $generated@@428) $generated@@429))))
 :pattern ( ($generated@@215 $generated@@427 $generated@@428) ($generated@@81 $generated@@427 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
 (=> (and (and (= (type $generated@@431) ($generated@@76 $generated@@434 $generated@@4)) (= (type $generated@@432) ($generated@@76 $generated@@434 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@432 $generated@@433))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@431 $generated@@432) $generated@@433))))
 :pattern ( ($generated@@215 $generated@@431 $generated@@432) ($generated@@81 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@436)))
 (=> (and (= (type $generated@@435) ($generated@@76 $generated@@438 $generated@@4)) (= (type $generated@@437) $generated@@438)) (= ($generated@@0 ($generated@@81 ($generated@@419 $generated@@435 $generated@@436) $generated@@437))  (or (= $generated@@437 $generated@@436) ($generated@@0 ($generated@@81 $generated@@435 $generated@@437))))))
 :pattern ( ($generated@@81 ($generated@@419 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@440) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@439 $generated@@441))) (and ($generated@@132 $generated@@439 $generated@@440) ($generated@@132 $generated@@440 $generated@@441))) ($generated@@132 $generated@@439 $generated@@441))
 :pattern ( ($generated@@132 $generated@@439 $generated@@440) ($generated@@132 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
 (=> (and (and (= (type $generated@@442) ($generated@@76 $generated@@445 $generated@@4)) (= (type $generated@@443) ($generated@@76 $generated@@445 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@443 $generated@@444))) (not ($generated@@0 ($generated@@81 ($generated@@353 $generated@@442 $generated@@443) $generated@@444)))))
 :pattern ( ($generated@@353 $generated@@442 $generated@@443) ($generated@@81 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@76 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@310 (type $generated@@448))))
(let (($generated@@450 ($generated@@309 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@308 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@307 $generated@@450 $generated@@449)) (= ($generated@@306 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@306 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@310 (type $generated@@451))))
(let (($generated@@453 ($generated@@309 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@308 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@307 $generated@@453 $generated@@452)) (= ($generated@@342 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@342 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@310 (type $generated@@454))))
(let (($generated@@456 ($generated@@309 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@308 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@307 $generated@@456 $generated@@455)) (= ($generated@@385 $generated@@454) ($generated@@446 $generated@@149))))))
 :pattern ( ($generated@@385 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@292 (type $generated@@457))))
(let (($generated@@459 ($generated@@291 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@290 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@289 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@149) (= (type $generated@@461) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@457) ($generated@@269 ($generated@@222 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@374 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@310 (type $generated@@462))))
(let (($generated@@464 ($generated@@309 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@308 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@307 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@462) ($generated@@269 ($generated@@222 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@385 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) ($generated@@223 $generated@@467 $generated@@46)) (and (= ($generated@@269 ($generated@@375 $generated@@2 $generated@@467)) $generated@@467) ($generated@@136 ($generated@@375 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@149) ($generated@@223 $generated@@468 $generated@@47)) (and (= ($generated@@269 ($generated@@375 $generated@@3 $generated@@468)) $generated@@468) ($generated@@136 ($generated@@375 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@149) ($generated@@223 $generated@@469 $generated@@44)) (and (= ($generated@@269 ($generated@@375 $generated@@4 $generated@@469)) $generated@@469) ($generated@@136 ($generated@@375 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@149) ($generated@@223 $generated@@471 $generated@@45)) (and (= ($generated@@269 ($generated@@375 $generated@@470 $generated@@471)) $generated@@471) ($generated@@136 ($generated@@375 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@223 ($generated@@269 $generated@@472) $generated@@473) ($generated@@136 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@223 ($generated@@269 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@79 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@76 $generated@@475 $generated@@2)) (<= 0 ($generated@@282 $generated@@474))))
 :pattern ( ($generated@@282 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@264 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@263 $generated@@477)) (<= 0 ($generated@@262 $generated@@476))))
 :pattern ( ($generated@@262 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@403 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@403 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@403 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@403 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@411 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@411 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@411 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@411 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) (= (type $generated@@499) $generated@@149)) (= ($generated@@255 ($generated@@222 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@139 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@139 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@139 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@139 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@149) (= (type $generated@@509) $generated@@149)) (= ($generated@@147 ($generated@@222 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@222 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@149) (= (type $generated@@511) $generated@@149)) (= ($generated@@148 ($generated@@222 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@222 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@264 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@263 $generated@@149)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@262 $generated@@518))) ($generated@@249 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@74 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (=> (= (type $generated@@522) ($generated@@76 $generated@@524 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@419 $generated@@522 $generated@@523) $generated@@523))))
 :pattern ( ($generated@@419 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@75 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@75 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@232 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@232 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@232 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@237 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@237 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@154 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@154 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@512 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@512 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@512 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@375 $generated@@544 ($generated@@269 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@269 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) (= ($generated@@136 $generated@@545 ($generated@@403 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@545) $generated@@548))) (and ($generated@@223 ($generated@@81 ($generated@@376 $generated@@545) $generated@@548) $generated@@547) ($generated@@223 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@545) $generated@@548))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@136 $generated@@545 ($generated@@403 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@136 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@549) $generated@@552))) (and ($generated@@223 ($generated@@81 ($generated@@386 $generated@@549) $generated@@552) $generated@@551) ($generated@@223 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@549) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@136 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@149)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@222 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@222 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@149) (= (type $generated@@558) $generated@@149)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@222 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@222 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@79 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@76 $generated@@561 $generated@@4)) (= (type $generated@@560) ($generated@@76 $generated@@561 $generated@@4))) (= ($generated@@215 $generated@@559 ($generated@@215 $generated@@559 $generated@@560)) ($generated@@215 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@215 $generated@@559 ($generated@@215 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@149) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) ($generated@@223 $generated@@562 ($generated@@403 $generated@@563 $generated@@564))) (and (= ($generated@@269 ($generated@@375 ($generated@@290 $generated@@149 $generated@@149) $generated@@562)) $generated@@562) ($generated@@136 ($generated@@375 ($generated@@290 $generated@@149 $generated@@149) $generated@@562) ($generated@@403 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@223 $generated@@562 ($generated@@403 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) $generated@@64)) ($generated@@223 $generated@@565 ($generated@@411 $generated@@566 $generated@@567))) (and (= ($generated@@269 ($generated@@375 ($generated@@308 $generated@@149 $generated@@149) $generated@@565)) $generated@@565) ($generated@@136 ($generated@@375 ($generated@@308 $generated@@149 $generated@@149) $generated@@565) ($generated@@411 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@223 $generated@@565 ($generated@@411 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@64) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@149)) ($generated@@223 $generated@@570 ($generated@@139 $generated@@568 $generated@@569))) (and (= ($generated@@269 ($generated@@375 $generated@@140 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@375 $generated@@140 $generated@@570) ($generated@@139 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 $generated@@570 ($generated@@139 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@572 T@T) ) (! (= (type ($generated@@571 $generated@@572)) ($generated@@76 $generated@@572 $generated@@4))
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@81 ($generated@@571 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@81 ($generated@@571 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@81 ($generated@@446 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@81 ($generated@@446 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@69)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@64) (= (type $generated@@580) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@579 $generated@@580)) $generated@@62) (= ($generated@@577 ($generated@@139 $generated@@579 $generated@@580)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@140) (= ($generated@@553 ($generated@@269 $generated@@581)) ($generated@@554 $generated@@581)))
 :pattern ( ($generated@@553 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@149) ($generated@@223 $generated@@582 ($generated@@75 0))) (and (= ($generated@@269 ($generated@@375 $generated@@2 $generated@@582)) $generated@@582) ($generated@@136 ($generated@@375 ($generated@@76 $generated@@149 $generated@@4) $generated@@582) ($generated@@75 0))))
 :pattern ( ($generated@@223 $generated@@582 ($generated@@75 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@149) (= (type $generated@@584) $generated@@64)) ($generated@@223 $generated@@583 ($generated@@232 $generated@@584))) (and (= ($generated@@269 ($generated@@375 ($generated@@76 $generated@@149 $generated@@4) $generated@@583)) $generated@@583) ($generated@@136 ($generated@@375 ($generated@@76 $generated@@149 $generated@@4) $generated@@583) ($generated@@232 $generated@@584))))
 :pattern ( ($generated@@223 $generated@@583 ($generated@@232 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@149) (= (type $generated@@586) $generated@@64)) ($generated@@223 $generated@@585 ($generated@@237 $generated@@586))) (and (= ($generated@@269 ($generated@@375 ($generated@@76 $generated@@149 $generated@@4) $generated@@585)) $generated@@585) ($generated@@136 ($generated@@375 ($generated@@76 $generated@@149 $generated@@4) $generated@@585) ($generated@@237 $generated@@586))))
 :pattern ( ($generated@@223 $generated@@585 ($generated@@237 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@149) (= (type $generated@@588) $generated@@64)) ($generated@@223 $generated@@587 ($generated@@154 $generated@@588))) (and (= ($generated@@269 ($generated@@375 ($generated@@76 $generated@@149 $generated@@2) $generated@@587)) $generated@@587) ($generated@@136 ($generated@@375 ($generated@@76 $generated@@149 $generated@@2) $generated@@587) ($generated@@154 $generated@@588))))
 :pattern ( ($generated@@223 $generated@@587 ($generated@@154 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@149) (= (type $generated@@590) $generated@@64)) ($generated@@223 $generated@@589 ($generated@@512 $generated@@590))) (and (= ($generated@@269 ($generated@@375 ($generated@@263 $generated@@149) $generated@@589)) $generated@@589) ($generated@@136 ($generated@@375 ($generated@@263 $generated@@149) $generated@@589) ($generated@@512 $generated@@590))))
 :pattern ( ($generated@@223 $generated@@589 ($generated@@512 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@591 ($generated@@154 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@591 $generated@@594)))) ($generated@@249 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@81 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@74 $generated@@591 ($generated@@154 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@79 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@76 $generated@@597 $generated@@4)) (= (type $generated@@596) ($generated@@76 $generated@@597 $generated@@4))) (= ($generated@@352 $generated@@595 $generated@@596) (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@597) (or (not ($generated@@0 ($generated@@81 $generated@@595 $generated@@598))) (not ($generated@@0 ($generated@@81 $generated@@596 $generated@@598)))))
 :pattern ( ($generated@@81 $generated@@595 $generated@@598))
 :pattern ( ($generated@@81 $generated@@596 $generated@@598))
)))))
 :pattern ( ($generated@@352 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@248 $generated@@601) (and ($generated@@138 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@64) ($generated@@74 $generated@@599 ($generated@@139 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@74 $generated@@599 ($generated@@139 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@249 ($generated@@147 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@249 ($generated@@147 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@140) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@248 $generated@@605) (and ($generated@@138 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@64) ($generated@@74 $generated@@603 ($generated@@139 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@74 $generated@@603 ($generated@@139 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@249 ($generated@@148 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@249 ($generated@@148 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@149) (= (type $generated@@608) $generated@@149)) (= ($generated@@222 ($generated@@244 $generated@@607) ($generated@@244 $generated@@608)) ($generated@@244 ($generated@@222 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@222 ($generated@@244 $generated@@607) ($generated@@244 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@242 $generated@@609))) ($generated@@244 ($generated@@269 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@242 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@610)) ($generated@@244 ($generated@@269 $generated@@610)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@264 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@263 $generated@@612)) (= ($generated@@262 $generated@@611) 0)) (= $generated@@611 ($generated@@261 $generated@@612))))
 :pattern ( ($generated@@262 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@76 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@282 ($generated@@82 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@282 $generated@@613) ($generated ($generated@@81 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
 (=> (and (= (type $generated@@617) ($generated@@76 $generated@@620 $generated@@4)) (= (type $generated@@618) ($generated@@76 $generated@@620 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@215 $generated@@617 $generated@@618) $generated@@619))  (or ($generated@@0 ($generated@@81 $generated@@617 $generated@@619)) ($generated@@0 ($generated@@81 $generated@@618 $generated@@619))))))
 :pattern ( ($generated@@81 ($generated@@215 $generated@@617 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@2)) ($generated@@74 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@3)) ($generated@@74 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@4)) ($generated@@74 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@628) $generated@@470)) ($generated@@74 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@74 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@630) $generated@@149)) ($generated@@74 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@74 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@263 $generated@@149)) (= (type $generated@@632) $generated@@64)) (= ($generated@@136 $generated@@631 ($generated@@512 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@262 $generated@@631))) ($generated@@223 ($generated@@513 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@513 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@136 $generated@@631 ($generated@@512 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@263 $generated@@149)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@262 $generated@@635))) (< ($generated@@554 ($generated@@375 $generated@@140 ($generated@@513 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@554 ($generated@@375 $generated@@140 ($generated@@513 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) $generated@@64)) ($generated@@136 $generated@@637 ($generated@@403 $generated@@638 $generated@@639))) (and (and ($generated@@136 ($generated@@288 $generated@@637) ($generated@@232 $generated@@638)) ($generated@@136 ($generated@@331 $generated@@637) ($generated@@232 $generated@@639))) ($generated@@136 ($generated@@374 $generated@@637) ($generated@@232 ($generated@@139 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@136 $generated@@637 ($generated@@403 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@641) $generated@@64)) (= (type $generated@@642) $generated@@64)) ($generated@@136 $generated@@640 ($generated@@411 $generated@@641 $generated@@642))) (and (and ($generated@@136 ($generated@@306 $generated@@640) ($generated@@237 $generated@@641)) ($generated@@136 ($generated@@342 $generated@@640) ($generated@@237 $generated@@642))) ($generated@@136 ($generated@@385 $generated@@640) ($generated@@237 ($generated@@139 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@136 $generated@@640 ($generated@@411 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@136 $generated@@643 $generated@@46))
 :pattern ( ($generated@@136 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@136 $generated@@644 $generated@@47))
 :pattern ( ($generated@@136 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@136 $generated@@645 $generated@@44))
 :pattern ( ($generated@@136 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@470) ($generated@@136 $generated@@646 $generated@@45))
 :pattern ( ($generated@@136 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@149) ($generated@@136 $generated@@647 $generated@@48))
 :pattern ( ($generated@@136 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@648) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@649) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@650) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@653) $generated@@77)) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@655) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@656) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@657) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@658) ($generated@@76 $generated@@149 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 51) (let (($generated@@660  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))))) (=> (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))))))))
(let (($generated@@661  (=> (and (not (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))))) (= (ControlFlow 0 5) 2)) $generated@@660)))
(let (($generated@@662  (=> (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) (= (ControlFlow 0 4) 2)) $generated@@660)))
(let (($generated@@663  (=> (not (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))))) (and (=> (= (ControlFlow 0 7) 4) $generated@@662) (=> (= (ControlFlow 0 7) 5) $generated@@661)))))
(let (($generated@@664  (=> (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) (and (=> (= (ControlFlow 0 6) 4) $generated@@662) (=> (= (ControlFlow 0 6) 5) $generated@@661)))))
(let (($generated@@665  (=> (not ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) (and (=> (= (ControlFlow 0 9) 6) $generated@@664) (=> (= (ControlFlow 0 9) 7) $generated@@663)))))
(let (($generated@@666  (=> ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) (and (=> (= (ControlFlow 0 8) 6) $generated@@664) (=> (= (ControlFlow 0 8) 7) $generated@@663)))))
(let (($generated@@667  (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))))) (=> (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (and (=> (= (ControlFlow 0 10) 8) $generated@@666) (=> (= (ControlFlow 0 10) 9) $generated@@665))))))
(let (($generated@@668  (=> (and (not (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))))) (= (ControlFlow 0 13) 10)) $generated@@667)))
(let (($generated@@669  (=> (and (and (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) (= (ControlFlow 0 12) 10)) $generated@@667)))
(let (($generated@@670  (=> (not (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) (and (=> (= (ControlFlow 0 15) 12) $generated@@669) (=> (= (ControlFlow 0 15) 13) $generated@@668)))))
(let (($generated@@671  (=> (and ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) (and (=> (= (ControlFlow 0 14) 12) $generated@@669) (=> (= (ControlFlow 0 14) 13) $generated@@668)))))
(let (($generated@@672  (=> (not ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@671) (=> (= (ControlFlow 0 17) 15) $generated@@670)))))
(let (($generated@@673  (=> ($generated@@352 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))) (and (=> (= (ControlFlow 0 16) 14) $generated@@671) (=> (= (ControlFlow 0 16) 15) $generated@@670)))))
(let (($generated@@674  (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))))) (=> (not (and (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) ($generated@@352 ($generated@@215 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (and (=> (= (ControlFlow 0 18) 16) $generated@@673) (=> (= (ControlFlow 0 18) 17) $generated@@672))))))
(let (($generated@@675  (=> (and (not (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8))))))) (= (ControlFlow 0 21) 18)) $generated@@674)))
(let (($generated@@676  (=> (and (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 8)))))) (= (ControlFlow 0 20) 18)) $generated@@674)))
(let (($generated@@677  (=> (not (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))))) (and (=> (= (ControlFlow 0 23) 20) $generated@@676) (=> (= (ControlFlow 0 23) 21) $generated@@675)))))
(let (($generated@@678  (=> (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (and (=> (= (ControlFlow 0 22) 20) $generated@@676) (=> (= (ControlFlow 0 22) 21) $generated@@675)))))
(let (($generated@@679  (=> (not ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (and (=> (= (ControlFlow 0 25) 22) $generated@@678) (=> (= (ControlFlow 0 25) 23) $generated@@677)))))
(let (($generated@@680  (=> ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) (and (=> (= (ControlFlow 0 24) 22) $generated@@678) (=> (= (ControlFlow 0 24) 23) $generated@@677)))))
(let (($generated@@681  (and (=> (= (ControlFlow 0 26) (- 0 27)) (not (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))))) (=> (not (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (and (=> (= (ControlFlow 0 26) 24) $generated@@680) (=> (= (ControlFlow 0 26) 25) $generated@@679))))))
(let (($generated@@682  (=> (and (not (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))))) (= (ControlFlow 0 29) 26)) $generated@@681)))
(let (($generated@@683  (=> (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (= (ControlFlow 0 28) 26)) $generated@@681)))
(let (($generated@@684  (=> (not ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (and (=> (= (ControlFlow 0 31) 28) $generated@@683) (=> (= (ControlFlow 0 31) 29) $generated@@682)))))
(let (($generated@@685  (=> ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) (and (=> (= (ControlFlow 0 30) 28) $generated@@683) (=> (= (ControlFlow 0 30) 29) $generated@@682)))))
(let (($generated@@686  (and (=> (= (ControlFlow 0 32) (- 0 33)) (not (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))))) (=> (not (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) ($generated@@352 ($generated@@215 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (and (=> (= (ControlFlow 0 32) 30) $generated@@685) (=> (= (ControlFlow 0 32) 31) $generated@@684))))))
(let (($generated@@687  (=> (and (not (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))))) (= (ControlFlow 0 35) 32)) $generated@@686)))
(let (($generated@@688  (=> (and (and ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (= (ControlFlow 0 34) 32)) $generated@@686)))
(let (($generated@@689  (=> (not ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9)))))) (and (=> (= (ControlFlow 0 37) 34) $generated@@688) (=> (= (ControlFlow 0 37) 35) $generated@@687)))))
(let (($generated@@690  (=> ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 9))))) (and (=> (= (ControlFlow 0 36) 34) $generated@@688) (=> (= (ControlFlow 0 36) 35) $generated@@687)))))
(let (($generated@@691  (and (=> (= (ControlFlow 0 38) (- 0 45)) ($generated@@352 $generated@@648 $generated@@649)) (and (=> (= (ControlFlow 0 38) (- 0 44)) ($generated@@352 $generated@@648 $generated@@649)) (and (=> (= (ControlFlow 0 38) (- 0 43)) ($generated@@352 ($generated@@215 $generated@@648 $generated@@649) $generated@@650)) (=> (and (and ($generated@@352 $generated@@648 $generated@@649) ($generated@@352 $generated@@648 $generated@@649)) ($generated@@352 ($generated@@215 $generated@@648 $generated@@649) $generated@@650)) (and (=> (= (ControlFlow 0 38) (- 0 42)) ($generated@@352 $generated@@648 $generated@@649)) (=> ($generated@@352 $generated@@648 $generated@@649) (and (=> (= (ControlFlow 0 38) (- 0 41)) ($generated@@352 $generated@@648 $generated@@649)) (=> ($generated@@352 $generated@@648 $generated@@649) (and (=> (= (ControlFlow 0 38) (- 0 40)) ($generated@@352 ($generated@@215 $generated@@648 $generated@@649) $generated@@650)) (=> ($generated@@352 ($generated@@215 $generated@@648 $generated@@649) $generated@@650) (=> (and (and ($generated@@248 $generated@@651) ($generated@@652 $generated@@651)) (and (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@77) (=> (and (not (= $generated@@692 $generated@@653)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@654 $generated@@692) $generated@@60))) (= ($generated@@81 $generated@@651 $generated@@692) ($generated@@81 $generated@@654 $generated@@692))))
 :pattern ( ($generated@@81 $generated@@651 $generated@@692))
)) ($generated@@132 $generated@@654 $generated@@651))) (and (=> (= (ControlFlow 0 38) (- 0 39)) (not ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3))))))) (=> (not ($generated@@352 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 2)))) ($generated@@269 ($generated@@8 ($generated@@242 3)))))) (and (=> (= (ControlFlow 0 38) 36) $generated@@690) (=> (= (ControlFlow 0 38) 37) $generated@@689)))))))))))))))))
(let (($generated@@693  (=> (and (not (and ($generated@@352 $generated@@648 $generated@@649) ($generated@@352 $generated@@648 $generated@@649))) (= (ControlFlow 0 47) 38)) $generated@@691)))
(let (($generated@@694  (=> (and (and ($generated@@352 $generated@@648 $generated@@649) ($generated@@352 $generated@@648 $generated@@649)) (= (ControlFlow 0 46) 38)) $generated@@691)))
(let (($generated@@695  (=> (not ($generated@@352 $generated@@648 $generated@@649)) (and (=> (= (ControlFlow 0 49) 46) $generated@@694) (=> (= (ControlFlow 0 49) 47) $generated@@693)))))
(let (($generated@@696  (=> ($generated@@352 $generated@@648 $generated@@649) (and (=> (= (ControlFlow 0 48) 46) $generated@@694) (=> (= (ControlFlow 0 48) 47) $generated@@693)))))
(let (($generated@@697  (=> (and (and (= $generated@@655 ($generated@@160 $generated@@653 $generated@@654 $generated@@60 false)) (= $generated@@648 ($generated@@244 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 1)))) ($generated@@269 ($generated@@8 ($generated@@242 2))))))) (and (= $generated@@649 ($generated@@244 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 3)))) ($generated@@269 ($generated@@8 ($generated@@242 4)))))) (= $generated@@650 ($generated@@244 ($generated@@419 ($generated@@419 ($generated@@571 $generated@@149) ($generated@@269 ($generated@@8 ($generated@@242 5)))) ($generated@@269 ($generated@@8 ($generated@@242 6)))))))) (and (=> (= (ControlFlow 0 50) 48) $generated@@696) (=> (= (ControlFlow 0 50) 49) $generated@@695)))))
(let (($generated@@698  (=> (and ($generated@@248 $generated@@654) ($generated@@652 $generated@@654)) (=> (and (and (and (and ($generated@@136 $generated@@656 ($generated@@232 $generated@@46)) ($generated@@74 $generated@@656 ($generated@@232 $generated@@46) $generated@@654)) true) (and (and ($generated@@136 $generated@@657 ($generated@@232 $generated@@46)) ($generated@@74 $generated@@657 ($generated@@232 $generated@@46) $generated@@654)) true)) (and (and (and ($generated@@136 $generated@@658 ($generated@@232 $generated@@46)) ($generated@@74 $generated@@658 ($generated@@232 $generated@@46) $generated@@654)) true) (and (= 1 $generated@@659) (= (ControlFlow 0 51) 50)))) $generated@@697))))
$generated@@698)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@339 (T@U T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@136)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@218 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@136) (= ($generated@@134 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) ($generated@@134 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@145) (= (type $generated@@254) $generated@@145)) (= $generated@@252 ($generated@@218 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@134 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@145)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@74 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@76 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@79 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@76 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@81 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@76 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@278 (type $generated@@313))))
(let (($generated@@315 ($generated@@277 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@276 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@275 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@274 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@278 (type $generated@@320))))
(let (($generated@@322 ($generated@@277 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@276 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@275 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@296 (type $generated@@324))))
(let (($generated@@326 ($generated@@295 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@294 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@293 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@292 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@296 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@219 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@79 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@343))))
 (=> (and (and (= (type $generated@@343) ($generated@@76 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@4))) ($generated@@338 $generated@@343 $generated@@344)) (and (= ($generated@@339 ($generated@@211 $generated@@343 $generated@@344) $generated@@343) $generated@@344) (= ($generated@@339 ($generated@@211 $generated@@343 $generated@@344) $generated@@344) $generated@@343))))
 :pattern ( ($generated@@211 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (and (= (type $generated@@346) ($generated@@76 $generated@@349 $generated@@4)) (= (type $generated@@347) ($generated@@76 $generated@@349 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@346 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@81 $generated@@346 $generated@@348)) (not ($generated@@0 ($generated@@81 $generated@@347 $generated@@348)))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@228 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@243 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@228 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@243 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@269 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@269 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@278 (type $generated@@366))))
(let (($generated@@368 ($generated@@277 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@296 (type $generated@@374))))
(let (($generated@@376 ($generated@@295 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@277 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@276 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@295 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@294 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@81 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@81 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
 (=> (and (and (= (type $generated@@405) ($generated@@76 $generated@@408 $generated@@4)) (= (type $generated@@406) ($generated@@76 $generated@@408 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@405 $generated@@407))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@405 $generated@@406) $generated@@407))))
 :pattern ( ($generated@@211 $generated@@405 $generated@@406) ($generated@@81 $generated@@405 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
 (=> (and (and (= (type $generated@@409) ($generated@@76 $generated@@412 $generated@@4)) (= (type $generated@@410) ($generated@@76 $generated@@412 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@410 $generated@@411))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@409 $generated@@410) $generated@@411))))
 :pattern ( ($generated@@211 $generated@@409 $generated@@410) ($generated@@81 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (=> (and (and (= (type $generated@@413) ($generated@@76 $generated@@416 $generated@@4)) (= (type $generated@@414) ($generated@@76 $generated@@416 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@414 $generated@@415))) (not ($generated@@0 ($generated@@81 ($generated@@339 $generated@@413 $generated@@414) $generated@@415)))))
 :pattern ( ($generated@@339 $generated@@413 $generated@@414) ($generated@@81 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@76 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@296 (type $generated@@419))))
(let (($generated@@421 ($generated@@295 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@294 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@293 $generated@@421 $generated@@420)) (= ($generated@@292 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@292 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@296 (type $generated@@422))))
(let (($generated@@424 ($generated@@295 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@294 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@293 $generated@@424 $generated@@423)) (= ($generated@@328 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@328 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@296 (type $generated@@425))))
(let (($generated@@427 ($generated@@295 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@294 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@293 $generated@@427 $generated@@426)) (= ($generated@@371 $generated@@425) ($generated@@417 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@278 (type $generated@@428))))
(let (($generated@@430 ($generated@@277 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@276 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@275 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@145) (= (type $generated@@432) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@428) ($generated@@263 ($generated@@218 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@360 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@296 (type $generated@@433))))
(let (($generated@@435 ($generated@@295 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@294 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@293 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@145) (= (type $generated@@437) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@433) ($generated@@263 ($generated@@218 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@371 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@219 $generated@@438 $generated@@46)) (and (= ($generated@@263 ($generated@@361 $generated@@2 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@361 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@219 $generated@@439 $generated@@47)) (and (= ($generated@@263 ($generated@@361 $generated@@3 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@361 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@219 $generated@@440 $generated@@44)) (and (= ($generated@@263 ($generated@@361 $generated@@4 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@361 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@219 $generated@@442 $generated@@45)) (and (= ($generated@@263 ($generated@@361 $generated@@441 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@361 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@219 ($generated@@263 $generated@@443) $generated@@444) ($generated@@132 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@219 ($generated@@263 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@2)) (<= 0 ($generated@@268 $generated@@445))))
 :pattern ( ($generated@@268 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@258 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@257 $generated@@448)) (<= 0 ($generated@@256 $generated@@447))))
 :pattern ( ($generated@@256 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@389 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@389 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@389 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@389 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@397 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@397 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@397 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@397 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@249 ($generated@@218 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@135 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@135 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@135 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@135 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@143 ($generated@@218 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@218 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@144 ($generated@@218 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@218 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@258 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@257 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@256 $generated@@489))) ($generated@@243 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@228 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@228 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@233 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@233 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@150 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@361 $generated@@512 ($generated@@263 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@263 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@132 $generated@@513 ($generated@@389 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@513) $generated@@516))) (and ($generated@@219 ($generated@@81 ($generated@@362 $generated@@513) $generated@@516) $generated@@515) ($generated@@219 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@132 $generated@@513 ($generated@@389 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))) (and ($generated@@219 ($generated@@81 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@219 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@218 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@218 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@218 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@79 (type $generated@@527))))
 (=> (and (= (type $generated@@527) ($generated@@76 $generated@@529 $generated@@4)) (= (type $generated@@528) ($generated@@76 $generated@@529 $generated@@4))) (= ($generated@@211 $generated@@527 ($generated@@211 $generated@@527 $generated@@528)) ($generated@@211 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@211 $generated@@527 ($generated@@211 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@219 $generated@@530 ($generated@@389 $generated@@531 $generated@@532))) (and (= ($generated@@263 ($generated@@361 ($generated@@276 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@361 ($generated@@276 $generated@@145 $generated@@145) $generated@@530) ($generated@@389 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@219 $generated@@530 ($generated@@389 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@219 $generated@@533 ($generated@@397 $generated@@534 $generated@@535))) (and (= ($generated@@263 ($generated@@361 ($generated@@294 $generated@@145 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@361 ($generated@@294 $generated@@145 $generated@@145) $generated@@533) ($generated@@397 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@219 $generated@@533 ($generated@@397 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@145)) ($generated@@219 $generated@@538 ($generated@@135 $generated@@536 $generated@@537))) (and (= ($generated@@263 ($generated@@361 $generated@@136 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@361 $generated@@136 $generated@@538) ($generated@@135 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@219 $generated@@538 ($generated@@135 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@417 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@417 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@135 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@136) (= ($generated@@521 ($generated@@263 $generated@@545)) ($generated@@522 $generated@@545)))
 :pattern ( ($generated@@521 ($generated@@263 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) ($generated@@219 $generated@@546 ($generated@@75 0))) (and (= ($generated@@263 ($generated@@361 $generated@@2 $generated@@546)) $generated@@546) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@219 $generated@@547 ($generated@@228 $generated@@548))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@228 $generated@@548))))
 :pattern ( ($generated@@219 $generated@@547 ($generated@@228 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@219 $generated@@549 ($generated@@233 $generated@@550))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@233 $generated@@550))))
 :pattern ( ($generated@@219 $generated@@549 ($generated@@233 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@219 $generated@@551 ($generated@@150 $generated@@552))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@551) ($generated@@150 $generated@@552))))
 :pattern ( ($generated@@219 $generated@@551 ($generated@@150 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@219 $generated@@553 ($generated@@483 $generated@@554))) (and (= ($generated@@263 ($generated@@361 ($generated@@257 $generated@@145) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@361 ($generated@@257 $generated@@145) $generated@@553) ($generated@@483 $generated@@554))))
 :pattern ( ($generated@@219 $generated@@553 ($generated@@483 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@243 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@79 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@76 $generated@@561 $generated@@4)) (= (type $generated@@560) ($generated@@76 $generated@@561 $generated@@4))) (= ($generated@@338 $generated@@559 $generated@@560) (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@561) (or (not ($generated@@0 ($generated@@81 $generated@@559 $generated@@562))) (not ($generated@@0 ($generated@@81 $generated@@560 $generated@@562)))))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
 :pattern ( ($generated@@81 $generated@@560 $generated@@562))
)))))
 :pattern ( ($generated@@338 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@243 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@243 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@569) (and ($generated@@134 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@243 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@243 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@145)) (= ($generated@@218 ($generated@@238 $generated@@571) ($generated@@238 $generated@@572)) ($generated@@238 ($generated@@218 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@218 ($generated@@238 $generated@@571) ($generated@@238 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@573)) ($generated@@238 ($generated@@263 $generated@@573)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@258 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@257 $generated@@575)) (= ($generated@@256 $generated@@574) 0)) (= $generated@@574 ($generated@@255 $generated@@575))))
 :pattern ( ($generated@@256 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@76 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@268 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@268 $generated@@576) ($generated ($generated@@81 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@268 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (=> (and (= (type $generated@@580) ($generated@@76 $generated@@583 $generated@@4)) (= (type $generated@@581) ($generated@@76 $generated@@583 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@580 $generated@@581) $generated@@582))  (or ($generated@@0 ($generated@@81 $generated@@580 $generated@@582)) ($generated@@0 ($generated@@81 $generated@@581 $generated@@582))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@580 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@2)) ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@3)) ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@4)) ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@441)) ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@145)) ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@257 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= ($generated@@132 $generated@@594 ($generated@@483 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@256 $generated@@594))) ($generated@@219 ($generated@@484 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@484 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@483 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@257 $generated@@145)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@256 $generated@@598))) (< ($generated@@522 ($generated@@361 $generated@@136 ($generated@@484 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@522 ($generated@@361 $generated@@136 ($generated@@484 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@132 $generated@@600 ($generated@@389 $generated@@601 $generated@@602))) (and (and ($generated@@132 ($generated@@274 $generated@@600) ($generated@@228 $generated@@601)) ($generated@@132 ($generated@@317 $generated@@600) ($generated@@228 $generated@@602))) ($generated@@132 ($generated@@360 $generated@@600) ($generated@@228 ($generated@@135 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@132 $generated@@600 ($generated@@389 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@132 $generated@@603 ($generated@@397 $generated@@604 $generated@@605))) (and (and ($generated@@132 ($generated@@292 $generated@@603) ($generated@@233 $generated@@604)) ($generated@@132 ($generated@@328 $generated@@603) ($generated@@233 $generated@@605))) ($generated@@132 ($generated@@371 $generated@@603) ($generated@@233 ($generated@@135 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@132 $generated@@603 ($generated@@397 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@132 $generated@@606 $generated@@46))
 :pattern ( ($generated@@132 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@132 $generated@@607 $generated@@47))
 :pattern ( ($generated@@132 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@132 $generated@@608 $generated@@44))
 :pattern ( ($generated@@132 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@441) ($generated@@132 $generated@@609 $generated@@45))
 :pattern ( ($generated@@132 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@145) ($generated@@132 $generated@@610 $generated@@48))
 :pattern ( ($generated@@132 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () Int)
(assert  (and (and (and (and (and (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@612) $generated@@77)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@614) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@615) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@616) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@619  (=> (= $generated@@611 ($generated@@156 $generated@@612 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@338 $generated@@614 $generated@@615)) (=> ($generated@@338 $generated@@614 $generated@@615) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@338 $generated@@614 $generated@@616)) (=> ($generated@@338 $generated@@614 $generated@@616) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@338 $generated@@615 $generated@@616)))))))))
(let (($generated@@620  (=> (and ($generated@@242 $generated@@613) ($generated@@617 $generated@@613)) (=> (and (and ($generated@@132 $generated@@614 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@228 $generated@@46) $generated@@613)) (and ($generated@@132 $generated@@615 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@615 ($generated@@228 $generated@@46) $generated@@613))) (=> (and (and (and ($generated@@132 $generated@@616 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@616 ($generated@@228 $generated@@46) $generated@@613)) (= 0 $generated@@618)) (and (and ($generated@@338 $generated@@614 $generated@@615) ($generated@@338 $generated@@614 $generated@@615)) (and ($generated@@338 ($generated@@211 $generated@@614 $generated@@615) $generated@@616) (= (ControlFlow 0 5) 2)))) $generated@@619)))))
$generated@@620)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@339 (T@U T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@136)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@218 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@218 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@136) (= ($generated@@134 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) ($generated@@134 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@145) (= (type $generated@@254) $generated@@145)) (= $generated@@252 ($generated@@218 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@134 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@145)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@74 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@76 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@79 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@76 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@81 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@76 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@278 (type $generated@@313))))
(let (($generated@@315 ($generated@@277 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@276 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@275 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@274 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@278 (type $generated@@320))))
(let (($generated@@322 ($generated@@277 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@276 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@275 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@296 (type $generated@@324))))
(let (($generated@@326 ($generated@@295 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@294 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@293 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@292 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@296 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@219 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@79 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@343))))
 (=> (and (and (= (type $generated@@343) ($generated@@76 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@4))) ($generated@@338 $generated@@343 $generated@@344)) (and (= ($generated@@339 ($generated@@211 $generated@@343 $generated@@344) $generated@@343) $generated@@344) (= ($generated@@339 ($generated@@211 $generated@@343 $generated@@344) $generated@@344) $generated@@343))))
 :pattern ( ($generated@@211 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (and (= (type $generated@@346) ($generated@@76 $generated@@349 $generated@@4)) (= (type $generated@@347) ($generated@@76 $generated@@349 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@346 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@81 $generated@@346 $generated@@348)) (not ($generated@@0 ($generated@@81 $generated@@347 $generated@@348)))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@346 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@228 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@243 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@228 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@243 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@233 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@269 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@269 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@278 (type $generated@@366))))
(let (($generated@@368 ($generated@@277 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@296 (type $generated@@374))))
(let (($generated@@376 ($generated@@295 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@277 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@276 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@295 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@294 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@81 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@81 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
 (=> (and (and (= (type $generated@@405) ($generated@@76 $generated@@408 $generated@@4)) (= (type $generated@@406) ($generated@@76 $generated@@408 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@405 $generated@@407))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@405 $generated@@406) $generated@@407))))
 :pattern ( ($generated@@211 $generated@@405 $generated@@406) ($generated@@81 $generated@@405 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
 (=> (and (and (= (type $generated@@409) ($generated@@76 $generated@@412 $generated@@4)) (= (type $generated@@410) ($generated@@76 $generated@@412 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@410 $generated@@411))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@409 $generated@@410) $generated@@411))))
 :pattern ( ($generated@@211 $generated@@409 $generated@@410) ($generated@@81 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (=> (and (and (= (type $generated@@413) ($generated@@76 $generated@@416 $generated@@4)) (= (type $generated@@414) ($generated@@76 $generated@@416 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@414 $generated@@415))) (not ($generated@@0 ($generated@@81 ($generated@@339 $generated@@413 $generated@@414) $generated@@415)))))
 :pattern ( ($generated@@339 $generated@@413 $generated@@414) ($generated@@81 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@76 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@296 (type $generated@@419))))
(let (($generated@@421 ($generated@@295 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@294 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@293 $generated@@421 $generated@@420)) (= ($generated@@292 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@292 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@296 (type $generated@@422))))
(let (($generated@@424 ($generated@@295 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@294 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@293 $generated@@424 $generated@@423)) (= ($generated@@328 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@328 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@296 (type $generated@@425))))
(let (($generated@@427 ($generated@@295 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@294 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@293 $generated@@427 $generated@@426)) (= ($generated@@371 $generated@@425) ($generated@@417 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@278 (type $generated@@428))))
(let (($generated@@430 ($generated@@277 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@276 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@275 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@145) (= (type $generated@@432) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@428) ($generated@@263 ($generated@@218 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@360 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@296 (type $generated@@433))))
(let (($generated@@435 ($generated@@295 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@294 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@293 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@145) (= (type $generated@@437) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@433) ($generated@@263 ($generated@@218 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@371 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@219 $generated@@438 $generated@@46)) (and (= ($generated@@263 ($generated@@361 $generated@@2 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@361 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@219 $generated@@439 $generated@@47)) (and (= ($generated@@263 ($generated@@361 $generated@@3 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@361 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@219 $generated@@440 $generated@@44)) (and (= ($generated@@263 ($generated@@361 $generated@@4 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@361 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@219 $generated@@442 $generated@@45)) (and (= ($generated@@263 ($generated@@361 $generated@@441 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@361 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@219 ($generated@@263 $generated@@443) $generated@@444) ($generated@@132 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@219 ($generated@@263 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@2)) (<= 0 ($generated@@268 $generated@@445))))
 :pattern ( ($generated@@268 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@258 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@257 $generated@@448)) (<= 0 ($generated@@256 $generated@@447))))
 :pattern ( ($generated@@256 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@389 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@389 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@389 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@389 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@397 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@397 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@397 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@397 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@249 ($generated@@218 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@135 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@135 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@135 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@135 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@143 ($generated@@218 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@218 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@144 ($generated@@218 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@218 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@258 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@257 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@256 $generated@@489))) ($generated@@243 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@228 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@228 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@233 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@233 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@150 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@361 $generated@@512 ($generated@@263 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@263 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@132 $generated@@513 ($generated@@389 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@513) $generated@@516))) (and ($generated@@219 ($generated@@81 ($generated@@362 $generated@@513) $generated@@516) $generated@@515) ($generated@@219 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@132 $generated@@513 ($generated@@389 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))) (and ($generated@@219 ($generated@@81 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@219 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@397 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@218 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@218 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@218 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@79 (type $generated@@527))))
 (=> (and (= (type $generated@@527) ($generated@@76 $generated@@529 $generated@@4)) (= (type $generated@@528) ($generated@@76 $generated@@529 $generated@@4))) (= ($generated@@211 $generated@@527 ($generated@@211 $generated@@527 $generated@@528)) ($generated@@211 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@211 $generated@@527 ($generated@@211 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@219 $generated@@530 ($generated@@389 $generated@@531 $generated@@532))) (and (= ($generated@@263 ($generated@@361 ($generated@@276 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@361 ($generated@@276 $generated@@145 $generated@@145) $generated@@530) ($generated@@389 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@219 $generated@@530 ($generated@@389 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@219 $generated@@533 ($generated@@397 $generated@@534 $generated@@535))) (and (= ($generated@@263 ($generated@@361 ($generated@@294 $generated@@145 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@361 ($generated@@294 $generated@@145 $generated@@145) $generated@@533) ($generated@@397 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@219 $generated@@533 ($generated@@397 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@145)) ($generated@@219 $generated@@538 ($generated@@135 $generated@@536 $generated@@537))) (and (= ($generated@@263 ($generated@@361 $generated@@136 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@361 $generated@@136 $generated@@538) ($generated@@135 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@219 $generated@@538 ($generated@@135 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@81 ($generated@@417 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@81 ($generated@@417 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@135 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@136) (= ($generated@@521 ($generated@@263 $generated@@545)) ($generated@@522 $generated@@545)))
 :pattern ( ($generated@@521 ($generated@@263 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) ($generated@@219 $generated@@546 ($generated@@75 0))) (and (= ($generated@@263 ($generated@@361 $generated@@2 $generated@@546)) $generated@@546) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@219 $generated@@547 ($generated@@228 $generated@@548))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@228 $generated@@548))))
 :pattern ( ($generated@@219 $generated@@547 ($generated@@228 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@219 $generated@@549 ($generated@@233 $generated@@550))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@233 $generated@@550))))
 :pattern ( ($generated@@219 $generated@@549 ($generated@@233 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@219 $generated@@551 ($generated@@150 $generated@@552))) (and (= ($generated@@263 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@551) ($generated@@150 $generated@@552))))
 :pattern ( ($generated@@219 $generated@@551 ($generated@@150 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@219 $generated@@553 ($generated@@483 $generated@@554))) (and (= ($generated@@263 ($generated@@361 ($generated@@257 $generated@@145) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@361 ($generated@@257 $generated@@145) $generated@@553) ($generated@@483 $generated@@554))))
 :pattern ( ($generated@@219 $generated@@553 ($generated@@483 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@243 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@150 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@79 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@76 $generated@@561 $generated@@4)) (= (type $generated@@560) ($generated@@76 $generated@@561 $generated@@4))) (= ($generated@@338 $generated@@559 $generated@@560) (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@561) (or (not ($generated@@0 ($generated@@81 $generated@@559 $generated@@562))) (not ($generated@@0 ($generated@@81 $generated@@560 $generated@@562)))))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
 :pattern ( ($generated@@81 $generated@@560 $generated@@562))
)))))
 :pattern ( ($generated@@338 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@243 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@243 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@569) (and ($generated@@134 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@243 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@243 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@145)) (= ($generated@@218 ($generated@@238 $generated@@571) ($generated@@238 $generated@@572)) ($generated@@238 ($generated@@218 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@218 ($generated@@238 $generated@@571) ($generated@@238 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@573)) ($generated@@238 ($generated@@263 $generated@@573)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@258 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@257 $generated@@575)) (= ($generated@@256 $generated@@574) 0)) (= $generated@@574 ($generated@@255 $generated@@575))))
 :pattern ( ($generated@@256 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@76 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@268 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@268 $generated@@576) ($generated ($generated@@81 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@268 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (=> (and (= (type $generated@@580) ($generated@@76 $generated@@583 $generated@@4)) (= (type $generated@@581) ($generated@@76 $generated@@583 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@580 $generated@@581) $generated@@582))  (or ($generated@@0 ($generated@@81 $generated@@580 $generated@@582)) ($generated@@0 ($generated@@81 $generated@@581 $generated@@582))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@580 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@2)) ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@3)) ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@4)) ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@441)) ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@145)) ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@257 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= ($generated@@132 $generated@@594 ($generated@@483 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@256 $generated@@594))) ($generated@@219 ($generated@@484 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@484 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@483 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@257 $generated@@145)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@256 $generated@@598))) (< ($generated@@522 ($generated@@361 $generated@@136 ($generated@@484 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@522 ($generated@@361 $generated@@136 ($generated@@484 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@132 $generated@@600 ($generated@@389 $generated@@601 $generated@@602))) (and (and ($generated@@132 ($generated@@274 $generated@@600) ($generated@@228 $generated@@601)) ($generated@@132 ($generated@@317 $generated@@600) ($generated@@228 $generated@@602))) ($generated@@132 ($generated@@360 $generated@@600) ($generated@@228 ($generated@@135 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@132 $generated@@600 ($generated@@389 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@132 $generated@@603 ($generated@@397 $generated@@604 $generated@@605))) (and (and ($generated@@132 ($generated@@292 $generated@@603) ($generated@@233 $generated@@604)) ($generated@@132 ($generated@@328 $generated@@603) ($generated@@233 $generated@@605))) ($generated@@132 ($generated@@371 $generated@@603) ($generated@@233 ($generated@@135 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@132 $generated@@603 ($generated@@397 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@132 $generated@@606 $generated@@46))
 :pattern ( ($generated@@132 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@132 $generated@@607 $generated@@47))
 :pattern ( ($generated@@132 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@132 $generated@@608 $generated@@44))
 :pattern ( ($generated@@132 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@441) ($generated@@132 $generated@@609 $generated@@45))
 :pattern ( ($generated@@132 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@145) ($generated@@132 $generated@@610 $generated@@48))
 :pattern ( ($generated@@132 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@612) $generated@@77)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@614) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@615) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@616) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@617) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@620  (=> (= $generated@@611 ($generated@@156 $generated@@612 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@338 $generated@@614 $generated@@615)) (=> ($generated@@338 $generated@@614 $generated@@615) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@338 $generated@@614 $generated@@616)) (=> ($generated@@338 $generated@@614 $generated@@616) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@338 $generated@@615 $generated@@616)) (=> ($generated@@338 $generated@@615 $generated@@616) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@338 $generated@@614 $generated@@617)) (=> ($generated@@338 $generated@@614 $generated@@617) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@338 $generated@@615 $generated@@617)) (=> ($generated@@338 $generated@@615 $generated@@617) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@338 $generated@@616 $generated@@617)))))))))))))))
(let (($generated@@621  (=> (and (and (and (and ($generated@@242 $generated@@613) ($generated@@618 $generated@@613)) (and ($generated@@132 $generated@@614 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@228 $generated@@46) $generated@@613))) (and (and ($generated@@132 $generated@@615 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@615 ($generated@@228 $generated@@46) $generated@@613)) (and ($generated@@132 $generated@@616 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@616 ($generated@@228 $generated@@46) $generated@@613)))) (and (and (and ($generated@@132 $generated@@617 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@617 ($generated@@228 $generated@@46) $generated@@613)) (and (= 0 $generated@@619) ($generated@@338 $generated@@614 $generated@@615))) (and (and ($generated@@338 $generated@@614 $generated@@615) ($generated@@338 ($generated@@211 $generated@@614 $generated@@615) $generated@@616)) (and ($generated@@338 ($generated@@211 ($generated@@211 $generated@@614 $generated@@615) $generated@@616) $generated@@617) (= (ControlFlow 0 8) 2))))) $generated@@620)))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
