(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@69)
 :pattern ( ($generated@@138 $generated@@142))
)) (= (type $generated@@139) $generated@@82)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)) (and (not (= $generated@@145 $generated@@139)) (= ($generated@@140 $generated@@145) ($generated@@138 $generated@@144)))) ($generated@@141 ($generated@@8 ($generated@@137 $generated@@145)) $generated@@46))
 :pattern ( ($generated@@137 $generated@@145) ($generated@@138 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@148) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@69) (= (type $generated@@151) $generated@@82)) (= (type $generated@@152) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@139) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@69))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
 :pattern ( ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@69) (= (type $generated@@158) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@159) $generated@@82)) (and (and ($generated@@156 $generated@@158) (and (not (= $generated@@159 $generated@@139)) (= ($generated@@140 $generated@@159) ($generated@@138 $generated@@157)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60)))) ($generated@@79 ($generated@@8 ($generated@@137 $generated@@159)) $generated@@46 $generated@@158))
 :pattern ( ($generated@@137 $generated@@159) ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60) ($generated@@138 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@141 $generated@@160 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@80 0)))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@69)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@69) (= (type $generated@@164) $generated@@82)) (= (type $generated@@165) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@164 ($generated@@161 $generated@@163) $generated@@165) ($generated@@79 $generated@@164 ($generated@@138 $generated@@163) $generated@@165)))
 :pattern ( ($generated@@79 $generated@@164 ($generated@@161 $generated@@163) $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@168) 14) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@69) (= (type $generated@@172) $generated@@69)) (= (type $generated@@173) $generated@@168)) ($generated@@141 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@141 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@69)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@69)) ($generated@@141 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@141 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@82 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@72 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@82) (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@238) ($generated@@71 $generated@@4))) (= (type $generated@@240) $generated@@82)) (= (type $generated@@241) ($generated@@71 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@168)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@69) (= (type $generated@@248) $generated@@69)) (= (type $generated@@249) $generated@@177)) (= (type $generated@@250) $generated@@177)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@168) (= (type $generated@@252) $generated@@168)) (= ($generated@@174 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@174 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@177) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@177) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@177)) (= (type $generated@@273) $generated@@177)) (= (type $generated@@274) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@156 $generated@@274)) (= ($generated@@79 ($generated@@243 $generated@@272 $generated@@273) ($generated@@167 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@79 ($generated@@243 $generated@@272 $generated@@273) ($generated@@167 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@73)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@168) (= ($generated@@166 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@168) ($generated@@166 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@177) (= (type $generated@@280) $generated@@177)) (= $generated@@278 ($generated@@243 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@166 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@2) (= ($generated@@141 $generated@@289 $generated@@153) (<= ($generated@@263 0) ($generated $generated@@289))))
 :pattern ( ($generated@@141 $generated@@289 $generated@@153))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) $generated@@82)) (= ($generated@@141 $generated@@291 ($generated@@161 $generated@@290))  (and ($generated@@141 $generated@@291 ($generated@@138 $generated@@290)) (not (= $generated@@291 $generated@@139)))))
 :pattern ( ($generated@@141 $generated@@291 ($generated@@161 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@177)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@269 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@269 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@177)) (= (type $generated@@300) $generated@@69)) ($generated@@146 $generated@@297 $generated@@298)) ($generated@@269 $generated@@299 $generated@@300 $generated@@297)) ($generated@@269 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@146 $generated@@297 $generated@@298) ($generated@@269 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@146 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@146 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@74)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@69) (and (= ($generated@@77 ($generated@@138 $generated@@313)) $generated@@62) (= ($generated@@311 ($generated@@138 $generated@@313)) $generated@@67)))
 :pattern ( ($generated@@138 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@69) (and (= ($generated@@77 ($generated@@161 $generated@@314)) $generated@@63) (= ($generated@@311 ($generated@@161 $generated@@314)) $generated@@67)))
 :pattern ( ($generated@@161 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@81 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@81 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@86 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@86 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@84 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@81 $generated@@352 $generated@@2)) (= ($generated@@183 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@86 $generated@@351 $generated@@353))) (<= ($generated ($generated@@86 $generated@@351 $generated@@353)) ($generated@@305 $generated@@351))))
 :pattern ( ($generated@@86 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@183 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@177) ($generated@@244 $generated@@357 $generated@@153)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@357)) $generated@@357) ($generated@@141 ($generated@@354 $generated@@2 $generated@@357) $generated@@153)))
 :pattern ( ($generated@@244 $generated@@357 $generated@@153))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@69) (= (type $generated@@359) $generated@@82)) (= ($generated@@141 $generated@@359 ($generated@@138 $generated@@358))  (or (= $generated@@359 $generated@@139) (= ($generated@@140 $generated@@359) ($generated@@138 $generated@@358)))))
 :pattern ( ($generated@@141 $generated@@359 ($generated@@138 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@319 (type $generated@@360))))
(let (($generated@@362 ($generated@@318 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@317 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@316 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@315 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@81 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@319 (type $generated@@367))))
(let (($generated@@369 ($generated@@318 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@317 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@316 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@86 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@337 (type $generated@@371))))
(let (($generated@@373 ($generated@@336 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@335 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@334 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@333 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@337 (type $generated@@378))))
(let (($generated@@380 ($generated@@336 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@335 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@334 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@86 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@141 $generated@@382 ($generated@@182 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) (< 0 ($generated ($generated@@86 $generated@@382 $generated@@384)))) ($generated@@244 $generated@@384 $generated@@383))
 :pattern ( ($generated@@86 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@141 $generated@@382 ($generated@@182 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@386) $generated@@69)) (= (type $generated@@387) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@385 ($generated@@253 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@177) ($generated@@0 ($generated@@86 $generated@@385 $generated@@388))) ($generated@@269 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@86 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@79 $generated@@385 ($generated@@253 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@389 ($generated@@258 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) ($generated@@0 ($generated@@86 $generated@@389 $generated@@392))) ($generated@@269 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@86 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@79 $generated@@389 ($generated@@258 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@86 ($generated@@306 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@81 $generated@@177 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@319 (type $generated@@398))))
(let (($generated@@400 ($generated@@318 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@402) $generated@@177)) (= ($generated@@0 ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@401) ($generated@@175 ($generated@@354 $generated@@168 $generated@@402)))) (= ($generated@@86 ($generated@@396 $generated@@401) ($generated@@175 ($generated@@354 $generated@@168 $generated@@402))) ($generated@@176 ($generated@@354 $generated@@168 $generated@@402))))))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@81 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@337 (type $generated@@406))))
(let (($generated@@408 ($generated@@336 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@81 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@86 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@86 ($generated@@333 $generated@@409) ($generated@@175 ($generated@@354 $generated@@168 $generated@@410)))) (= ($generated@@86 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@354 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@354 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@86 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@318 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@317 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@86 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@86 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@86 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@336 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@335 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@86 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@86 ($generated@@333 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@86 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@416) $generated@@420))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@86 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@69)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@424) $generated@@428))) (and ($generated@@269 ($generated@@86 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@269 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@69)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@69)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@432) $generated@@436))) (and ($generated@@269 ($generated@@86 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@269 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@79 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@438) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@439) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@437 $generated@@439))) (and ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))) ($generated@@146 $generated@@437 $generated@@439))
 :pattern ( ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@81 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@337 (type $generated@@442))))
(let (($generated@@444 ($generated@@336 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@335 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@334 $generated@@444 $generated@@443)) (= ($generated@@333 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@333 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@337 (type $generated@@445))))
(let (($generated@@447 ($generated@@336 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@335 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@334 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@403 $generated@@448) ($generated@@440 $generated@@177))))))
 :pattern ( ($generated@@403 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@319 (type $generated@@451))))
(let (($generated@@453 ($generated@@318 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@317 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@316 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@177) (= (type $generated@@455) $generated@@177)) ($generated@@0 ($generated@@86 ($generated@@395 $generated@@451) ($generated@@292 ($generated@@243 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@337 (type $generated@@456))))
(let (($generated@@458 ($generated@@336 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@335 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@334 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@177) (= (type $generated@@460) $generated@@177)) ($generated@@0 ($generated@@86 ($generated@@403 $generated@@456) ($generated@@292 ($generated@@243 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@177) ($generated@@244 $generated@@461 $generated@@46)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@461)) $generated@@461) ($generated@@141 ($generated@@354 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@177) ($generated@@244 $generated@@462 $generated@@47)) (and (= ($generated@@292 ($generated@@354 $generated@@3 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@354 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@177) ($generated@@244 $generated@@463 $generated@@44)) (and (= ($generated@@292 ($generated@@354 $generated@@4 $generated@@463)) $generated@@463) ($generated@@141 ($generated@@354 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@177) ($generated@@244 $generated@@465 $generated@@45)) (and (= ($generated@@292 ($generated@@354 $generated@@464 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@354 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@69) (= ($generated@@244 ($generated@@292 $generated@@466) $generated@@467) ($generated@@141 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@244 ($generated@@292 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@82) (<= 0 ($generated@@137 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@84 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@81 $generated@@470 $generated@@2)) (<= 0 ($generated@@305 $generated@@469))))
 :pattern ( ($generated@@305 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@284 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@283 $generated@@472)) (<= 0 ($generated@@282 $generated@@471))))
 :pattern ( ($generated@@282 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@77 ($generated@@421 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@429 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@77 ($generated@@429 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@177) (= (type $generated@@494) $generated@@177)) (= ($generated@@275 ($generated@@243 $generated@@493 $generated@@494)) $generated@@64))
 :pattern ( ($generated@@243 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@167 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@167 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@69) (= (type $generated@@502) $generated@@69)) (= ($generated@@499 ($generated@@167 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@167 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@177) (= (type $generated@@504) $generated@@177)) (= ($generated@@175 ($generated@@243 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@177) (= (type $generated@@506) $generated@@177)) (= ($generated@@176 ($generated@@243 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@284 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@283 $generated@@177)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@282 $generated@@513))) ($generated@@269 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@79 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@80 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@80 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@253 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@253 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@258 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@258 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@527 ($generated@@182 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@182 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@77 ($generated@@182 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@77 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@535 ($generated@@138 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@138 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@538 ($generated@@161 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@161 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@354 $generated@@542 ($generated@@292 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@292 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@544) $generated@@69)) (= (type $generated@@545) $generated@@69)) (= ($generated@@141 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@543) $generated@@546))) (and ($generated@@244 ($generated@@86 ($generated@@396 $generated@@543) $generated@@546) $generated@@545) ($generated@@244 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@543) $generated@@546))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@141 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@548) $generated@@69)) (= (type $generated@@549) $generated@@69)) (= ($generated@@141 $generated@@547 ($generated@@429 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@547) $generated@@550))) (and ($generated@@244 ($generated@@86 ($generated@@404 $generated@@547) $generated@@550) $generated@@549) ($generated@@244 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@547) $generated@@550))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@141 $generated@@547 ($generated@@429 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@177) (= (type $generated@@554) $generated@@177)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@243 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@177) (= (type $generated@@556) $generated@@177)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@243 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@177) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@69)) ($generated@@244 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@292 ($generated@@354 ($generated@@317 $generated@@177 $generated@@177) $generated@@557)) $generated@@557) ($generated@@141 ($generated@@354 ($generated@@317 $generated@@177 $generated@@177) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@244 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@177) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) $generated@@69)) ($generated@@244 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@292 ($generated@@354 ($generated@@335 $generated@@177 $generated@@177) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@354 ($generated@@335 $generated@@177 $generated@@177) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@244 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@69) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) $generated@@177)) ($generated@@244 $generated@@565 ($generated@@167 $generated@@563 $generated@@564))) (and (= ($generated@@292 ($generated@@354 $generated@@168 $generated@@565)) $generated@@565) ($generated@@141 ($generated@@354 $generated@@168 $generated@@565) ($generated@@167 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@167 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@86 ($generated@@440 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@86 ($generated@@440 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@69) (= (type $generated@@569) $generated@@69)) (and (= ($generated@@77 ($generated@@167 $generated@@568 $generated@@569)) $generated@@65) (= ($generated@@311 ($generated@@167 $generated@@568 $generated@@569)) $generated@@68)))
 :pattern ( ($generated@@167 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@168) (= ($generated@@551 ($generated@@292 $generated@@570)) ($generated@@552 $generated@@570)))
 :pattern ( ($generated@@551 ($generated@@292 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@177) ($generated@@244 $generated@@571 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@571)) $generated@@571) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@571) ($generated@@80 0))))
 :pattern ( ($generated@@244 $generated@@571 ($generated@@80 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@177) (= (type $generated@@573) $generated@@69)) ($generated@@244 $generated@@572 ($generated@@253 $generated@@573))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@572)) $generated@@572) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@572) ($generated@@253 $generated@@573))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@253 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@177) (= (type $generated@@575) $generated@@69)) ($generated@@244 $generated@@574 ($generated@@258 $generated@@575))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@574)) $generated@@574) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@574) ($generated@@258 $generated@@575))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@258 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@177) (= (type $generated@@577) $generated@@69)) ($generated@@244 $generated@@576 ($generated@@182 $generated@@577))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@2) $generated@@576)) $generated@@576) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@2) $generated@@576) ($generated@@182 $generated@@577))))
 :pattern ( ($generated@@244 $generated@@576 ($generated@@182 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@177) (= (type $generated@@579) $generated@@69)) ($generated@@244 $generated@@578 ($generated@@507 $generated@@579))) (and (= ($generated@@292 ($generated@@354 ($generated@@283 $generated@@177) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@354 ($generated@@283 $generated@@177) $generated@@578) ($generated@@507 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@578 ($generated@@507 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@69) (= (type $generated@@581) $generated@@177)) ($generated@@244 $generated@@581 ($generated@@138 $generated@@580))) (and (= ($generated@@292 ($generated@@354 $generated@@82 $generated@@581)) $generated@@581) ($generated@@141 ($generated@@354 $generated@@82 $generated@@581) ($generated@@138 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@581 ($generated@@138 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@69) (= (type $generated@@583) $generated@@177)) ($generated@@244 $generated@@583 ($generated@@161 $generated@@582))) (and (= ($generated@@292 ($generated@@354 $generated@@82 $generated@@583)) $generated@@583) ($generated@@141 ($generated@@354 $generated@@82 $generated@@583) ($generated@@161 $generated@@582))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@161 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (=> (and (and (and (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@585) $generated@@82)) (= (type $generated@@586) ($generated@@71 $generated@@588))) ($generated@@156 ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))) ($generated@@146 $generated@@584 ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))
)))
(assert (= ($generated@@77 $generated@@153) $generated@@61))
(assert (= ($generated@@311 $generated@@153) $generated@@66))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@589 ($generated@@182 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@177) (< 0 ($generated ($generated@@86 $generated@@589 $generated@@592)))) ($generated@@269 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@86 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@182 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@595) (and ($generated@@166 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@69) ($generated@@79 $generated@@593 ($generated@@167 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@79 $generated@@593 ($generated@@167 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@269 ($generated@@175 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@269 ($generated@@175 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@599) (and ($generated@@166 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@69) ($generated@@79 $generated@@597 ($generated@@167 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@167 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@269 ($generated@@176 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@269 ($generated@@176 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@177) (= (type $generated@@602) $generated@@177)) (= ($generated@@243 ($generated@@265 $generated@@601) ($generated@@265 $generated@@602)) ($generated@@265 ($generated@@243 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@601) ($generated@@265 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@263 $generated@@603))) ($generated@@265 ($generated@@292 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@263 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@292 ($generated@@265 $generated@@604)) ($generated@@265 ($generated@@292 $generated@@604)))
 :pattern ( ($generated@@292 ($generated@@265 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@284 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@283 $generated@@606)) (= ($generated@@282 $generated@@605) 0)) (= $generated@@605 ($generated@@281 $generated@@606))))
 :pattern ( ($generated@@282 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@81 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@305 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@305 $generated@@607) ($generated ($generated@@86 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@2)) ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@3)) ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@616) $generated@@4)) ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@618) $generated@@464)) ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@620) $generated@@177)) ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@283 $generated@@177)) (= (type $generated@@622) $generated@@69)) (= ($generated@@141 $generated@@621 ($generated@@507 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@282 $generated@@621))) ($generated@@244 ($generated@@508 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@508 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@141 $generated@@621 ($generated@@507 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@283 $generated@@177)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@282 $generated@@625))) (< ($generated@@552 ($generated@@354 $generated@@168 ($generated@@508 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@552 ($generated@@354 $generated@@168 ($generated@@508 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@628) $generated@@69)) (= (type $generated@@629) $generated@@69)) ($generated@@141 $generated@@627 ($generated@@421 $generated@@628 $generated@@629))) (and (and ($generated@@141 ($generated@@315 $generated@@627) ($generated@@253 $generated@@628)) ($generated@@141 ($generated@@364 $generated@@627) ($generated@@253 $generated@@629))) ($generated@@141 ($generated@@395 $generated@@627) ($generated@@253 ($generated@@167 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@141 $generated@@627 ($generated@@421 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@631) $generated@@69)) (= (type $generated@@632) $generated@@69)) ($generated@@141 $generated@@630 ($generated@@429 $generated@@631 $generated@@632))) (and (and ($generated@@141 ($generated@@333 $generated@@630) ($generated@@258 $generated@@631)) ($generated@@141 ($generated@@375 $generated@@630) ($generated@@258 $generated@@632))) ($generated@@141 ($generated@@403 $generated@@630) ($generated@@258 ($generated@@167 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@141 $generated@@630 ($generated@@429 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@141 $generated@@633 $generated@@46))
 :pattern ( ($generated@@141 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@141 $generated@@634 $generated@@47))
 :pattern ( ($generated@@141 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@141 $generated@@635 $generated@@44))
 :pattern ( ($generated@@141 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@464) ($generated@@141 $generated@@636 $generated@@45))
 :pattern ( ($generated@@141 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@177) ($generated@@141 $generated@@637 $generated@@48))
 :pattern ( ($generated@@141 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@638) ($generated@@189 $generated@@82 $generated@@4)) (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@640) $generated@@82)) (= (type $generated@@641) $generated@@82)) (= (type $generated@@642) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@644) $generated@@82)) (= (type $generated@@645) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@647  (=> (= $generated@@638 ($generated@@188 $generated@@139 $generated@@639 $generated@@60 false)) (=> (and ($generated@@141 $generated@@640 ($generated@@161 $generated@@46)) ($generated@@79 $generated@@640 ($generated@@161 $generated@@46) $generated@@639)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 ($generated@@263 100))) (=> (<= 0 ($generated@@263 100)) (=> (and (and (and (not (= $generated@@641 $generated@@139)) (= ($generated@@140 $generated@@641) ($generated@@138 $generated@@153))) (and (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@639 $generated@@641) $generated@@60))) (= ($generated@@137 $generated@@641) ($generated@@263 100)))) (and (and (= $generated@@642 ($generated@@87 $generated@@639 $generated@@641 ($generated@@89 ($generated@@86 $generated@@639 $generated@@641) $generated@@60 ($generated@@11 true)))) ($generated@@156 $generated@@642)) (and ($generated@@643 $generated@@642) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@141 $generated@@641 ($generated@@161 $generated@@46)))))))))
(let (($generated@@648  (=> (and ($generated@@156 $generated@@639) ($generated@@643 $generated@@639)) (=> (and (and ($generated@@141 $generated@@644 ($generated@@161 $generated@@46)) ($generated@@79 $generated@@644 ($generated@@161 $generated@@46) $generated@@639)) true) (=> (and (and (and ($generated@@141 $generated@@645 ($generated@@161 $generated@@153)) ($generated@@79 $generated@@645 ($generated@@161 $generated@@153) $generated@@639)) true) (and (= 1 $generated@@646) (= (ControlFlow 0 4) 2))) $generated@@647)))))
$generated@@648)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@69)
 :pattern ( ($generated@@138 $generated@@142))
)) (= (type $generated@@139) $generated@@82)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)) (and (not (= $generated@@145 $generated@@139)) (= ($generated@@140 $generated@@145) ($generated@@138 $generated@@144)))) ($generated@@141 ($generated@@8 ($generated@@137 $generated@@145)) $generated@@46))
 :pattern ( ($generated@@137 $generated@@145) ($generated@@138 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@148) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@69) (= (type $generated@@151) $generated@@82)) (= (type $generated@@152) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@139) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@69))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
 :pattern ( ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@69) (= (type $generated@@158) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@159) $generated@@82)) (and (and ($generated@@156 $generated@@158) (and (not (= $generated@@159 $generated@@139)) (= ($generated@@140 $generated@@159) ($generated@@138 $generated@@157)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60)))) ($generated@@79 ($generated@@8 ($generated@@137 $generated@@159)) $generated@@46 $generated@@158))
 :pattern ( ($generated@@137 $generated@@159) ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60) ($generated@@138 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@141 $generated@@160 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@80 0)))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@69)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@69) (= (type $generated@@164) $generated@@82)) (= (type $generated@@165) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@164 ($generated@@161 $generated@@163) $generated@@165) ($generated@@79 $generated@@164 ($generated@@138 $generated@@163) $generated@@165)))
 :pattern ( ($generated@@79 $generated@@164 ($generated@@161 $generated@@163) $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@168) 14) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@69) (= (type $generated@@172) $generated@@69)) (= (type $generated@@173) $generated@@168)) ($generated@@141 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@141 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@69)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@69)) ($generated@@141 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@141 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@82 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@72 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@82) (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@238) ($generated@@71 $generated@@4))) (= (type $generated@@240) $generated@@82)) (= (type $generated@@241) ($generated@@71 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@168)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@69) (= (type $generated@@248) $generated@@69)) (= (type $generated@@249) $generated@@177)) (= (type $generated@@250) $generated@@177)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@168) (= (type $generated@@252) $generated@@168)) (= ($generated@@174 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@174 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@177) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@177) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@69) (= (type $generated@@271) $generated@@69)) (= (type $generated@@272) $generated@@177)) (= (type $generated@@273) $generated@@177)) (= (type $generated@@274) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@156 $generated@@274)) (= ($generated@@79 ($generated@@243 $generated@@272 $generated@@273) ($generated@@167 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@79 ($generated@@243 $generated@@272 $generated@@273) ($generated@@167 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@73)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@168) (= ($generated@@166 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@168) ($generated@@166 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@177) (= (type $generated@@280) $generated@@177)) (= $generated@@278 ($generated@@243 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@166 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@2) (= ($generated@@141 $generated@@289 $generated@@153) (<= ($generated@@263 0) ($generated $generated@@289))))
 :pattern ( ($generated@@141 $generated@@289 $generated@@153))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) $generated@@82)) (= ($generated@@141 $generated@@291 ($generated@@161 $generated@@290))  (and ($generated@@141 $generated@@291 ($generated@@138 $generated@@290)) (not (= $generated@@291 $generated@@139)))))
 :pattern ( ($generated@@141 $generated@@291 ($generated@@161 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@177)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@269 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@269 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@177)) (= (type $generated@@300) $generated@@69)) ($generated@@146 $generated@@297 $generated@@298)) ($generated@@269 $generated@@299 $generated@@300 $generated@@297)) ($generated@@269 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@146 $generated@@297 $generated@@298) ($generated@@269 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@146 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@146 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@74)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@69) (and (= ($generated@@77 ($generated@@138 $generated@@313)) $generated@@62) (= ($generated@@311 ($generated@@138 $generated@@313)) $generated@@67)))
 :pattern ( ($generated@@138 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@69) (and (= ($generated@@77 ($generated@@161 $generated@@314)) $generated@@63) (= ($generated@@311 ($generated@@161 $generated@@314)) $generated@@67)))
 :pattern ( ($generated@@161 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@81 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@86 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@81 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@86 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@86 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@84 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@81 $generated@@352 $generated@@2)) (= ($generated@@183 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@86 $generated@@351 $generated@@353))) (<= ($generated ($generated@@86 $generated@@351 $generated@@353)) ($generated@@305 $generated@@351))))
 :pattern ( ($generated@@86 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@183 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@177) ($generated@@244 $generated@@357 $generated@@153)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@357)) $generated@@357) ($generated@@141 ($generated@@354 $generated@@2 $generated@@357) $generated@@153)))
 :pattern ( ($generated@@244 $generated@@357 $generated@@153))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@69) (= (type $generated@@359) $generated@@82)) (= ($generated@@141 $generated@@359 ($generated@@138 $generated@@358))  (or (= $generated@@359 $generated@@139) (= ($generated@@140 $generated@@359) ($generated@@138 $generated@@358)))))
 :pattern ( ($generated@@141 $generated@@359 ($generated@@138 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@319 (type $generated@@360))))
(let (($generated@@362 ($generated@@318 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@317 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@316 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@315 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@81 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@319 (type $generated@@367))))
(let (($generated@@369 ($generated@@318 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@317 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@316 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@86 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@337 (type $generated@@371))))
(let (($generated@@373 ($generated@@336 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@335 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@334 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@333 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@337 (type $generated@@378))))
(let (($generated@@380 ($generated@@336 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@335 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@334 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@86 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@141 $generated@@382 ($generated@@182 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) (< 0 ($generated ($generated@@86 $generated@@382 $generated@@384)))) ($generated@@244 $generated@@384 $generated@@383))
 :pattern ( ($generated@@86 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@141 $generated@@382 ($generated@@182 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@386) $generated@@69)) (= (type $generated@@387) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@385 ($generated@@253 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@177) ($generated@@0 ($generated@@86 $generated@@385 $generated@@388))) ($generated@@269 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@86 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@79 $generated@@385 ($generated@@253 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@81 $generated@@177 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@389 ($generated@@258 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) ($generated@@0 ($generated@@86 $generated@@389 $generated@@392))) ($generated@@269 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@86 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@79 $generated@@389 ($generated@@258 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@86 ($generated@@306 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@81 $generated@@177 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@319 (type $generated@@398))))
(let (($generated@@400 ($generated@@318 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@402) $generated@@177)) (= ($generated@@0 ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@401) ($generated@@175 ($generated@@354 $generated@@168 $generated@@402)))) (= ($generated@@86 ($generated@@396 $generated@@401) ($generated@@175 ($generated@@354 $generated@@168 $generated@@402))) ($generated@@176 ($generated@@354 $generated@@168 $generated@@402))))))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@81 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@337 (type $generated@@406))))
(let (($generated@@408 ($generated@@336 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@81 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@86 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@86 ($generated@@333 $generated@@409) ($generated@@175 ($generated@@354 $generated@@168 $generated@@410)))) (= ($generated@@86 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@354 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@354 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@86 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@318 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@317 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@86 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@86 ($generated@@315 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@86 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@86 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@336 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@335 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@86 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@86 ($generated@@333 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@86 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@416) $generated@@420))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@86 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@69)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@424) $generated@@428))) (and ($generated@@269 ($generated@@86 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@269 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@79 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@69)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@69)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@432) $generated@@436))) (and ($generated@@269 ($generated@@86 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@269 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@79 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@438) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@439) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@437 $generated@@439))) (and ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))) ($generated@@146 $generated@@437 $generated@@439))
 :pattern ( ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@81 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@337 (type $generated@@442))))
(let (($generated@@444 ($generated@@336 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@335 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@334 $generated@@444 $generated@@443)) (= ($generated@@333 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@333 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@337 (type $generated@@445))))
(let (($generated@@447 ($generated@@336 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@335 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@334 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@403 $generated@@448) ($generated@@440 $generated@@177))))))
 :pattern ( ($generated@@403 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@319 (type $generated@@451))))
(let (($generated@@453 ($generated@@318 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@317 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@316 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@177) (= (type $generated@@455) $generated@@177)) ($generated@@0 ($generated@@86 ($generated@@395 $generated@@451) ($generated@@292 ($generated@@243 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@337 (type $generated@@456))))
(let (($generated@@458 ($generated@@336 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@335 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@334 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@177) (= (type $generated@@460) $generated@@177)) ($generated@@0 ($generated@@86 ($generated@@403 $generated@@456) ($generated@@292 ($generated@@243 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@177) ($generated@@244 $generated@@461 $generated@@46)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@461)) $generated@@461) ($generated@@141 ($generated@@354 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@177) ($generated@@244 $generated@@462 $generated@@47)) (and (= ($generated@@292 ($generated@@354 $generated@@3 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@354 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@177) ($generated@@244 $generated@@463 $generated@@44)) (and (= ($generated@@292 ($generated@@354 $generated@@4 $generated@@463)) $generated@@463) ($generated@@141 ($generated@@354 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@177) ($generated@@244 $generated@@465 $generated@@45)) (and (= ($generated@@292 ($generated@@354 $generated@@464 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@354 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@69) (= ($generated@@244 ($generated@@292 $generated@@466) $generated@@467) ($generated@@141 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@244 ($generated@@292 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@82) (<= 0 ($generated@@137 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@84 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@81 $generated@@470 $generated@@2)) (<= 0 ($generated@@305 $generated@@469))))
 :pattern ( ($generated@@305 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@284 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@283 $generated@@472)) (<= 0 ($generated@@282 $generated@@471))))
 :pattern ( ($generated@@282 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@77 ($generated@@421 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@429 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@77 ($generated@@429 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@177) (= (type $generated@@494) $generated@@177)) (= ($generated@@275 ($generated@@243 $generated@@493 $generated@@494)) $generated@@64))
 :pattern ( ($generated@@243 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@167 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@167 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@69) (= (type $generated@@502) $generated@@69)) (= ($generated@@499 ($generated@@167 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@167 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@177) (= (type $generated@@504) $generated@@177)) (= ($generated@@175 ($generated@@243 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@177) (= (type $generated@@506) $generated@@177)) (= ($generated@@176 ($generated@@243 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@284 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@283 $generated@@177)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@282 $generated@@513))) ($generated@@269 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@79 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@80 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@80 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@253 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@253 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@258 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@258 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@527 ($generated@@182 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@182 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@77 ($generated@@182 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@77 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@535 ($generated@@138 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@138 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@538 ($generated@@161 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@161 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@354 $generated@@542 ($generated@@292 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@292 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@544) $generated@@69)) (= (type $generated@@545) $generated@@69)) (= ($generated@@141 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@315 $generated@@543) $generated@@546))) (and ($generated@@244 ($generated@@86 ($generated@@396 $generated@@543) $generated@@546) $generated@@545) ($generated@@244 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@543) $generated@@546))
 :pattern ( ($generated@@86 ($generated@@315 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@141 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@548) $generated@@69)) (= (type $generated@@549) $generated@@69)) (= ($generated@@141 $generated@@547 ($generated@@429 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@177) ($generated@@0 ($generated@@86 ($generated@@333 $generated@@547) $generated@@550))) (and ($generated@@244 ($generated@@86 ($generated@@404 $generated@@547) $generated@@550) $generated@@549) ($generated@@244 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@547) $generated@@550))
 :pattern ( ($generated@@86 ($generated@@333 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@141 $generated@@547 ($generated@@429 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@177) (= (type $generated@@554) $generated@@177)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@243 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@177) (= (type $generated@@556) $generated@@177)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@243 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@243 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@177) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@69)) ($generated@@244 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@292 ($generated@@354 ($generated@@317 $generated@@177 $generated@@177) $generated@@557)) $generated@@557) ($generated@@141 ($generated@@354 ($generated@@317 $generated@@177 $generated@@177) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@244 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@177) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) $generated@@69)) ($generated@@244 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@292 ($generated@@354 ($generated@@335 $generated@@177 $generated@@177) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@354 ($generated@@335 $generated@@177 $generated@@177) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@244 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@69) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) $generated@@177)) ($generated@@244 $generated@@565 ($generated@@167 $generated@@563 $generated@@564))) (and (= ($generated@@292 ($generated@@354 $generated@@168 $generated@@565)) $generated@@565) ($generated@@141 ($generated@@354 $generated@@168 $generated@@565) ($generated@@167 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@167 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@86 ($generated@@440 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@86 ($generated@@440 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@69) (= (type $generated@@569) $generated@@69)) (and (= ($generated@@77 ($generated@@167 $generated@@568 $generated@@569)) $generated@@65) (= ($generated@@311 ($generated@@167 $generated@@568 $generated@@569)) $generated@@68)))
 :pattern ( ($generated@@167 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@168) (= ($generated@@551 ($generated@@292 $generated@@570)) ($generated@@552 $generated@@570)))
 :pattern ( ($generated@@551 ($generated@@292 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@177) ($generated@@244 $generated@@571 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@571)) $generated@@571) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@571) ($generated@@80 0))))
 :pattern ( ($generated@@244 $generated@@571 ($generated@@80 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@177) (= (type $generated@@573) $generated@@69)) ($generated@@244 $generated@@572 ($generated@@253 $generated@@573))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@572)) $generated@@572) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@572) ($generated@@253 $generated@@573))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@253 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@177) (= (type $generated@@575) $generated@@69)) ($generated@@244 $generated@@574 ($generated@@258 $generated@@575))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@574)) $generated@@574) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@4) $generated@@574) ($generated@@258 $generated@@575))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@258 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@177) (= (type $generated@@577) $generated@@69)) ($generated@@244 $generated@@576 ($generated@@182 $generated@@577))) (and (= ($generated@@292 ($generated@@354 ($generated@@81 $generated@@177 $generated@@2) $generated@@576)) $generated@@576) ($generated@@141 ($generated@@354 ($generated@@81 $generated@@177 $generated@@2) $generated@@576) ($generated@@182 $generated@@577))))
 :pattern ( ($generated@@244 $generated@@576 ($generated@@182 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@177) (= (type $generated@@579) $generated@@69)) ($generated@@244 $generated@@578 ($generated@@507 $generated@@579))) (and (= ($generated@@292 ($generated@@354 ($generated@@283 $generated@@177) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@354 ($generated@@283 $generated@@177) $generated@@578) ($generated@@507 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@578 ($generated@@507 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@69) (= (type $generated@@581) $generated@@177)) ($generated@@244 $generated@@581 ($generated@@138 $generated@@580))) (and (= ($generated@@292 ($generated@@354 $generated@@82 $generated@@581)) $generated@@581) ($generated@@141 ($generated@@354 $generated@@82 $generated@@581) ($generated@@138 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@581 ($generated@@138 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@69) (= (type $generated@@583) $generated@@177)) ($generated@@244 $generated@@583 ($generated@@161 $generated@@582))) (and (= ($generated@@292 ($generated@@354 $generated@@82 $generated@@583)) $generated@@583) ($generated@@141 ($generated@@354 $generated@@82 $generated@@583) ($generated@@161 $generated@@582))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@161 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (=> (and (and (and (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@585) $generated@@82)) (= (type $generated@@586) ($generated@@71 $generated@@588))) ($generated@@156 ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))) ($generated@@146 $generated@@584 ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@87 $generated@@584 $generated@@585 ($generated@@89 ($generated@@86 $generated@@584 $generated@@585) $generated@@586 $generated@@587)))
)))
(assert (= ($generated@@77 $generated@@153) $generated@@61))
(assert (= ($generated@@311 $generated@@153) $generated@@66))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@81 $generated@@177 $generated@@2)) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@589 ($generated@@182 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@177) (< 0 ($generated ($generated@@86 $generated@@589 $generated@@592)))) ($generated@@269 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@86 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@182 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@168) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@595) (and ($generated@@166 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@69) ($generated@@79 $generated@@593 ($generated@@167 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@79 $generated@@593 ($generated@@167 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@269 ($generated@@175 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@269 ($generated@@175 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@168) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@599) (and ($generated@@166 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@69) ($generated@@79 $generated@@597 ($generated@@167 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@167 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@269 ($generated@@176 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@269 ($generated@@176 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@177) (= (type $generated@@602) $generated@@177)) (= ($generated@@243 ($generated@@265 $generated@@601) ($generated@@265 $generated@@602)) ($generated@@265 ($generated@@243 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@601) ($generated@@265 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@263 $generated@@603))) ($generated@@265 ($generated@@292 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@263 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@292 ($generated@@265 $generated@@604)) ($generated@@265 ($generated@@292 $generated@@604)))
 :pattern ( ($generated@@292 ($generated@@265 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@284 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@283 $generated@@606)) (= ($generated@@282 $generated@@605) 0)) (= $generated@@605 ($generated@@281 $generated@@606))))
 :pattern ( ($generated@@282 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@81 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@305 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@305 $generated@@607) ($generated ($generated@@86 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@2)) ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@3)) ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@616) $generated@@4)) ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@618) $generated@@464)) ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@620) $generated@@177)) ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@283 $generated@@177)) (= (type $generated@@622) $generated@@69)) (= ($generated@@141 $generated@@621 ($generated@@507 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@282 $generated@@621))) ($generated@@244 ($generated@@508 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@508 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@141 $generated@@621 ($generated@@507 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@283 $generated@@177)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@282 $generated@@625))) (< ($generated@@552 ($generated@@354 $generated@@168 ($generated@@508 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@552 ($generated@@354 $generated@@168 ($generated@@508 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@317 $generated@@177 $generated@@177)) (= (type $generated@@628) $generated@@69)) (= (type $generated@@629) $generated@@69)) ($generated@@141 $generated@@627 ($generated@@421 $generated@@628 $generated@@629))) (and (and ($generated@@141 ($generated@@315 $generated@@627) ($generated@@253 $generated@@628)) ($generated@@141 ($generated@@364 $generated@@627) ($generated@@253 $generated@@629))) ($generated@@141 ($generated@@395 $generated@@627) ($generated@@253 ($generated@@167 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@141 $generated@@627 ($generated@@421 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@335 $generated@@177 $generated@@177)) (= (type $generated@@631) $generated@@69)) (= (type $generated@@632) $generated@@69)) ($generated@@141 $generated@@630 ($generated@@429 $generated@@631 $generated@@632))) (and (and ($generated@@141 ($generated@@333 $generated@@630) ($generated@@258 $generated@@631)) ($generated@@141 ($generated@@375 $generated@@630) ($generated@@258 $generated@@632))) ($generated@@141 ($generated@@403 $generated@@630) ($generated@@258 ($generated@@167 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@141 $generated@@630 ($generated@@429 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@141 $generated@@633 $generated@@46))
 :pattern ( ($generated@@141 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@141 $generated@@634 $generated@@47))
 :pattern ( ($generated@@141 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@141 $generated@@635 $generated@@44))
 :pattern ( ($generated@@141 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@464) ($generated@@141 $generated@@636 $generated@@45))
 :pattern ( ($generated@@141 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@177) ($generated@@141 $generated@@637 $generated@@48))
 :pattern ( ($generated@@141 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@638) $generated@@82) (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@640) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@642) ($generated@@189 $generated@@82 $generated@@4))) (= (type $generated@@643) $generated@@82)) (= (type $generated@@644) $generated@@82)) (= (type $generated@@645) $generated@@82)) (= (type $generated@@646) $generated@@82)) (= (type $generated@@647) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@649  (=> (= (ControlFlow 0 7) (- 0 6)) ($generated@@141 $generated@@638 ($generated@@161 $generated@@46)))))
(let (($generated@@650 true))
(let (($generated@@651  (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= 0 ($generated@@263 100))) (=> (<= 0 ($generated@@263 100)) (=> (and (and (and (not (= $generated@@638 $generated@@139)) (= ($generated@@140 $generated@@638) ($generated@@138 $generated@@153))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@639 $generated@@638) $generated@@60)))) (and (and (= ($generated@@137 $generated@@638) ($generated@@263 100)) (= $generated@@640 ($generated@@87 $generated@@639 $generated@@638 ($generated@@89 ($generated@@86 $generated@@639 $generated@@638) $generated@@60 ($generated@@11 true))))) (and ($generated@@156 $generated@@640) ($generated@@641 $generated@@640)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@650) (=> (= (ControlFlow 0 8) 7) $generated@@649)))))))
(let (($generated@@652  (=> (= (ControlFlow 0 4) (- 0 3)) (<= 0 ($generated@@263 100)))))
(let (($generated@@653  (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 ($generated@@263 100)))))
(let (($generated@@654  (=> (= $generated@@642 ($generated@@188 $generated@@139 $generated@@639 $generated@@60 false)) (=> (and (and ($generated@@141 $generated@@643 ($generated@@161 $generated@@153)) ($generated@@79 $generated@@643 ($generated@@161 $generated@@153) $generated@@639)) (and ($generated@@141 $generated@@644 ($generated@@161 $generated@@46)) ($generated@@79 $generated@@644 ($generated@@161 $generated@@46) $generated@@639))) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@653) (=> (= (ControlFlow 0 10) 4) $generated@@652)) (=> (= (ControlFlow 0 10) 8) $generated@@651))))))
(let (($generated@@655  (=> (and ($generated@@156 $generated@@639) ($generated@@641 $generated@@639)) (=> (and (and (and (and ($generated@@141 $generated@@645 ($generated@@161 $generated@@153)) ($generated@@79 $generated@@645 ($generated@@161 $generated@@153) $generated@@639)) true) (and (and ($generated@@141 $generated@@646 ($generated@@161 $generated@@46)) ($generated@@79 $generated@@646 ($generated@@161 $generated@@46) $generated@@639)) true)) (and (and (and ($generated@@141 $generated@@647 ($generated@@161 $generated@@153)) ($generated@@79 $generated@@647 ($generated@@161 $generated@@153) $generated@@639)) true) (and (= 1 $generated@@648) (= (ControlFlow 0 11) 10)))) $generated@@654))))
$generated@@655))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
