(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@T) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U Int) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) Bool)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@T T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@456 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@502 (T@T) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 () T@T)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@615 (T@U) Int)
(declare-fun $generated@@632 (T@T) T@U)
(declare-fun $generated@@638 (T@U T@U T@U) T@U)
(declare-fun $generated@@639 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@640 (T@T T@T) T@T)
(declare-fun $generated@@641 (T@T) T@T)
(declare-fun $generated@@642 (T@T) T@T)
(declare-fun $generated@@643 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@696 (T@U) T@U)
(declare-fun $generated@@697 (T@U) T@U)
(declare-fun $generated@@770 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (forall (($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@150)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@150))
)) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@71) (= (type $generated@@152) $generated@@89)) (= (type $generated@@153) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@152 ($generated@@148 $generated@@151) $generated@@153)  (or (= $generated@@152 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@152 ($generated@@148 $generated@@151) $generated@@153))
)))
(assert  (and (and (forall (($generated@@158 T@T) ) (= ($generated@@1 ($generated@@156 $generated@@158)) 16)) (forall (($generated@@159 T@T) ) (! (= ($generated@@157 ($generated@@156 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@155 $generated@@160 $generated@@161)) ($generated@@156 $generated@@162)))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (and (= (type $generated@@163) ($generated@@156 $generated@@166)) (= (type $generated@@165) $generated@@166)) (= ($generated@@154 ($generated@@155 $generated@@163 $generated@@164) $generated@@165)  (or (= $generated@@164 $generated@@165) ($generated@@154 $generated@@163 $generated@@165)))))
 :pattern ( ($generated@@154 ($generated@@155 $generated@@163 $generated@@164) $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@168) 17) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) ($generated@@88 $generated@@168 $generated@@4))
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@71) (= (type $generated@@173) ($generated@@156 $generated@@168))) (= (type $generated@@174) $generated@@168)) (= ($generated@@0 ($generated@@93 ($generated@@167 $generated@@172 $generated@@173) $generated@@174))  (and ($generated@@169 $generated@@174 $generated@@172) ($generated@@154 $generated@@173 $generated@@174))))
 :pattern ( ($generated@@93 ($generated@@167 $generated@@172 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@175 $generated@@176 ($generated@@87 0)))
 :pattern ( ($generated@@175 $generated@@176 ($generated@@87 0)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@89)) (= (type $generated@@181) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@180 ($generated@@177 $generated@@179) $generated@@181) ($generated@@86 $generated@@180 ($generated@@148 $generated@@179) $generated@@181)))
 :pattern ( ($generated@@86 $generated@@180 ($generated@@177 $generated@@179) $generated@@181))
)))
(assert  (and (= ($generated@@1 $generated@@184) 18) (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@71)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@71) (= (type $generated@@188) $generated@@71)) (= (type $generated@@189) $generated@@184)) ($generated@@175 $generated@@189 ($generated@@183 $generated@@187 $generated@@188))) ($generated@@182 $generated@@189))
 :pattern ( ($generated@@182 $generated@@189) ($generated@@175 $generated@@189 ($generated@@183 $generated@@187 $generated@@188)))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@168)
 :pattern ( ($generated@@191 $generated@@193))
)) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@168)
 :pattern ( ($generated@@192 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@184) (= (type $generated@@196) $generated@@184)) true) (= ($generated@@190 $generated@@195 $generated@@196)  (and (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)) (= ($generated@@192 $generated@@195) ($generated@@192 $generated@@196)))))
 :pattern ( ($generated@@190 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@T) ) (! (= (type ($generated@@197 $generated@@198)) ($generated@@156 $generated@@198))
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
 (not ($generated@@154 ($generated@@197 $generated@@200) $generated@@199)))
 :pattern ( (let (($generated@@200 (type $generated@@199)))
($generated@@154 ($generated@@197 $generated@@200) $generated@@199)))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@71)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@88 $generated@@168 $generated@@2)) (= (type $generated@@205) $generated@@71)) ($generated@@175 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@175 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@91 (type $generated@@207))))
(= (type ($generated@@206 $generated@@207 $generated@@208)) ($generated@@88 $generated@@209 $generated@@4)))
 :pattern ( ($generated@@206 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@91 (type $generated@@210))))
 (=> (and (= (type $generated@@210) ($generated@@88 $generated@@212 $generated@@4)) (= (type $generated@@211) ($generated@@88 $generated@@212 $generated@@4))) (= ($generated@@206 ($generated@@206 $generated@@210 $generated@@211) $generated@@211) ($generated@@206 $generated@@210 $generated@@211))))
 :pattern ( ($generated@@206 ($generated@@206 $generated@@210 $generated@@211) $generated@@211))
)))
(assert  (and (and (= (type $generated@@213) ($generated@@73 ($generated@@88 $generated@@168 $generated@@4))) (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@217))
))) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@71)
 :pattern ( ($generated@@216 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@71) (= (type $generated@@220) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@221) $generated@@89)) (and ($generated@@214 $generated@@220) (and (not (= $generated@@221 $generated@@149)) (= ($generated@@215 $generated@@221) ($generated@@148 $generated@@219))))) ($generated@@175 ($generated@@95 ($generated@@93 $generated@@220 $generated@@221) $generated@@213) ($generated@@216 $generated@@219)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@220 $generated@@221) $generated@@213) ($generated@@148 $generated@@219))
)))
(assert  (and (= (type $generated@@222) ($generated@@73 ($generated@@156 $generated@@168))) (forall (($generated@@224 T@U) ) (! (= (type ($generated@@223 $generated@@224)) $generated@@71)
 :pattern ( ($generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@71) (= (type $generated@@226) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@227) $generated@@89)) (and ($generated@@214 $generated@@226) (and (not (= $generated@@227 $generated@@149)) (= ($generated@@215 $generated@@227) ($generated@@148 $generated@@225))))) ($generated@@175 ($generated@@95 ($generated@@93 $generated@@226 $generated@@227) $generated@@222) ($generated@@223 $generated@@225)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@226 $generated@@227) $generated@@222) ($generated@@148 $generated@@225))
)))
(assert (= ($generated@@81 $generated@@213) 0))
(assert (forall (($generated@@229 T@T) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@73 $generated@@229))
 :pattern ( ($generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (= ($generated@@228 ($generated@@88 $generated@@168 $generated@@4) $generated@@64 $generated@@69) $generated@@213))
(assert ($generated@@232 $generated@@213))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235)) $generated@@184)
 :pattern ( ($generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@71) (= (type $generated@@237) $generated@@71)) (= (type $generated@@238) $generated@@168)) (= (type $generated@@239) $generated@@168)) (= ($generated@@175 ($generated@@233 $generated@@238 $generated@@239) ($generated@@183 $generated@@236 $generated@@237))  (and ($generated@@169 $generated@@238 $generated@@236) ($generated@@169 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@175 ($generated@@233 $generated@@238 $generated@@239) ($generated@@183 $generated@@236 $generated@@237)))
)))
(assert (= ($generated@@81 $generated@@222) 0))
(assert (= ($generated@@228 ($generated@@156 $generated@@168) $generated@@64 $generated@@70) $generated@@222))
(assert  (not ($generated@@232 $generated@@222)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@184) (= (type $generated@@241) $generated@@184)) (= ($generated@@190 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@190 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@88 $generated@@168 $generated@@4)) (= (type $generated@@243) $generated@@71)) (= ($generated@@175 $generated@@242 ($generated@@216 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@168) ($generated@@0 ($generated@@93 $generated@@242 $generated@@244))) ($generated@@169 $generated@@244 $generated@@243))
 :pattern ( ($generated@@93 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@175 $generated@@242 ($generated@@216 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@71)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@88 $generated@@168 $generated@@4)) (= (type $generated@@248) $generated@@71)) (= ($generated@@175 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@168) ($generated@@0 ($generated@@93 $generated@@247 $generated@@249))) ($generated@@169 $generated@@249 $generated@@248))
 :pattern ( ($generated@@93 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@175 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) ($generated@@156 $generated@@168)) (= (type $generated@@255) $generated@@168)) (= (type $generated@@256) $generated@@71)) (and ($generated@@175 $generated@@254 ($generated@@223 $generated@@256)) ($generated@@169 $generated@@255 $generated@@256))) ($generated@@175 ($generated@@155 $generated@@254 $generated@@255) ($generated@@223 $generated@@256)))
 :pattern ( ($generated@@175 ($generated@@155 $generated@@254 $generated@@255) ($generated@@223 $generated@@256)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@168)) (= (type $generated@@261) $generated@@168)) (= (type $generated@@262) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@214 $generated@@262)) (= ($generated@@86 ($generated@@233 $generated@@260 $generated@@261) ($generated@@183 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@86 ($generated@@233 $generated@@260 $generated@@261) ($generated@@183 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@76)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@184) (= ($generated@@182 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@182 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@184) ($generated@@182 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@168) (= (type $generated@@268) $generated@@168)) (= $generated@@266 ($generated@@233 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@182 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@269 ($generated@@197 $generated@@270)) 0)
 :pattern ( ($generated@@197 $generated@@270))
)))
(assert ($generated@@232 $generated@@60))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
 (=> (= (type $generated@@271) ($generated@@156 $generated@@273)) (= ($generated@@269 ($generated@@155 $generated@@271 $generated@@272)) (+ 1 ($generated@@269 $generated@@271)))))
 :pattern ( ($generated@@155 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@71) (= (type $generated@@275) $generated@@89)) (= ($generated@@175 $generated@@275 ($generated@@177 $generated@@274))  (and ($generated@@175 $generated@@275 ($generated@@148 $generated@@274)) (not (= $generated@@275 $generated@@149)))))
 :pattern ( ($generated@@175 $generated@@275 ($generated@@177 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@168)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@257 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@86 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@257 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@282) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@283) $generated@@168)) (= (type $generated@@284) $generated@@71)) ($generated@@144 $generated@@281 $generated@@282)) ($generated@@257 $generated@@283 $generated@@284 $generated@@281)) ($generated@@257 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@144 $generated@@281 $generated@@282) ($generated@@257 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@286) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@288) $generated@@71)) ($generated@@144 $generated@@285 $generated@@286)) ($generated@@86 $generated@@287 $generated@@288 $generated@@285)) ($generated@@86 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@144 $generated@@285 $generated@@286) ($generated@@86 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@88 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@91 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@88 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@93 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@78)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@71) (and (= ($generated@@82 ($generated@@148 $generated@@297)) $generated@@65) (= ($generated@@295 ($generated@@148 $generated@@297)) $generated@@68)))
 :pattern ( ($generated@@148 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@71) (and (= ($generated@@82 ($generated@@177 $generated@@298)) $generated@@66) (= ($generated@@295 ($generated@@177 $generated@@298)) $generated@@68)))
 :pattern ( ($generated@@177 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@88 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@88 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@337) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@335 $generated@@336 $generated@@337)) (and ($generated@@144 $generated@@336 $generated@@337) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@74 (type $generated@@339))))
 (=> (and (and (= (type $generated@@338) $generated@@89) (= (type $generated@@339) ($generated@@73 $generated@@340))) (not ($generated@@232 $generated@@339))) (= ($generated@@95 ($generated@@93 $generated@@336 $generated@@338) $generated@@339) ($generated@@95 ($generated@@93 $generated@@337 $generated@@338) $generated@@339))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@337 $generated@@338) $generated@@339))
))))
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@91 (type $generated@@342))))
 (=> (and (= (type $generated@@342) ($generated@@88 $generated@@344 $generated@@4)) (= (type $generated@@343) ($generated@@88 $generated@@344 $generated@@4))) (= ($generated@@341 $generated@@342 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (= ($generated@@0 ($generated@@93 $generated@@342 $generated@@345)) ($generated@@0 ($generated@@93 $generated@@343 $generated@@345))))
 :pattern ( ($generated@@93 $generated@@342 $generated@@345))
 :pattern ( ($generated@@93 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@157 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347 $generated@@348)) ($generated@@156 $generated@@349)))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@157 (type $generated@@350))))
 (=> (and (= (type $generated@@350) ($generated@@156 $generated@@352)) (= (type $generated@@351) ($generated@@156 $generated@@352))) (= ($generated@@269 ($generated@@346 $generated@@350 $generated@@351)) (+ ($generated@@269 $generated@@350) ($generated@@269 $generated@@351)))))
 :pattern ( ($generated@@269 ($generated@@346 $generated@@350 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@91 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@88 $generated@@354 $generated@@2)) (= ($generated@@202 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@93 $generated@@353 $generated@@355))) (<= ($generated ($generated@@93 $generated@@353 $generated@@355)) ($generated@@289 $generated@@353))))
 :pattern ( ($generated@@93 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@202 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (= (type $generated@@356) $generated@@71) (= (type $generated@@357) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@358) $generated@@89)) (and (and ($generated@@214 $generated@@357) (and (not (= $generated@@358 $generated@@149)) (= ($generated@@215 $generated@@358) ($generated@@148 $generated@@356)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@357 $generated@@358) $generated@@60)))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@357 $generated@@358) $generated@@213) ($generated@@216 $generated@@356) $generated@@357))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@357 $generated@@358) $generated@@213) ($generated@@148 $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) $generated@@71) (= (type $generated@@360) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@361) $generated@@89)) (and (and ($generated@@214 $generated@@360) (and (not (= $generated@@361 $generated@@149)) (= ($generated@@215 $generated@@361) ($generated@@148 $generated@@359)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@360 $generated@@361) $generated@@60)))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@360 $generated@@361) $generated@@222) ($generated@@223 $generated@@359) $generated@@360))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@360 $generated@@361) $generated@@222) ($generated@@148 $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@71) (= (type $generated@@363) $generated@@89)) (= ($generated@@175 $generated@@363 ($generated@@148 $generated@@362))  (or (= $generated@@363 $generated@@149) (= ($generated@@215 $generated@@363) ($generated@@148 $generated@@362)))))
 :pattern ( ($generated@@175 $generated@@363 ($generated@@148 $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 Int) ) (! (let (($generated@@367 ($generated@@157 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@367))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (=> (= (type $generated@@368) ($generated@@156 $generated@@371)) (and (=> (= $generated@@369 ($generated@@269 $generated@@368)) (= ($generated@@364 ($generated@@155 $generated@@368 $generated@@370) $generated@@369) $generated@@370)) (=> (not (= $generated@@369 ($generated@@269 $generated@@368))) (= ($generated@@364 ($generated@@155 $generated@@368 $generated@@370) $generated@@369) ($generated@@364 $generated@@368 $generated@@369))))))
 :pattern ( ($generated@@364 ($generated@@155 $generated@@368 $generated@@370) $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@303 (type $generated@@372))))
(let (($generated@@374 ($generated@@302 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@301 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@300 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@299 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@88 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@303 (type $generated@@379))))
(let (($generated@@381 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@300 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@93 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@321 (type $generated@@383))))
(let (($generated@@385 ($generated@@320 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@319 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@318 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@317 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@321 (type $generated@@388))))
(= (type ($generated@@387 $generated@@388)) ($generated@@88 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@321 (type $generated@@390))))
(let (($generated@@392 ($generated@@320 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@319 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@318 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@391) ($generated@@0 ($generated@@93 ($generated@@387 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@387 $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@88 $generated@@168 $generated@@2)) (= (type $generated@@395) $generated@@71)) (= ($generated@@175 $generated@@394 ($generated@@201 $generated@@395)) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@168) (< 0 ($generated ($generated@@93 $generated@@394 $generated@@396)))) ($generated@@169 $generated@@396 $generated@@395))
 :pattern ( ($generated@@93 $generated@@394 $generated@@396))
))))
 :pattern ( ($generated@@175 $generated@@394 ($generated@@201 $generated@@395)))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
 (=> (and (= (type $generated@@397) ($generated@@156 $generated@@400)) (= (type $generated@@398) ($generated@@156 $generated@@400))) (= ($generated@@154 ($generated@@346 $generated@@397 $generated@@398) $generated@@399)  (or ($generated@@154 $generated@@397 $generated@@399) ($generated@@154 $generated@@398 $generated@@399)))))
 :pattern ( ($generated@@154 ($generated@@346 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@91 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403 $generated@@404)) ($generated@@88 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@91 (type $generated@@406))))
 (=> (and (and (= (type $generated@@406) ($generated@@88 $generated@@408 $generated@@4)) (= (type $generated@@407) ($generated@@88 $generated@@408 $generated@@4))) ($generated@@401 $generated@@406 $generated@@407)) (and (= ($generated@@402 ($generated@@206 $generated@@406 $generated@@407) $generated@@406) $generated@@407) (= ($generated@@402 ($generated@@206 $generated@@406 $generated@@407) $generated@@407) $generated@@406))))
 :pattern ( ($generated@@206 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
 (=> (= (type $generated@@409) ($generated@@156 $generated@@411)) (= ($generated@@154 $generated@@409 $generated@@410) (exists (($generated@@412 Int) ) (!  (and (and (<= 0 $generated@@412) (< $generated@@412 ($generated@@269 $generated@@409))) (= ($generated@@364 $generated@@409 $generated@@412) $generated@@410))
 :pattern ( ($generated@@364 $generated@@409 $generated@@412))
)))))
 :pattern ( ($generated@@154 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (=> (and (= (type $generated@@413) ($generated@@88 $generated@@416 $generated@@4)) (= (type $generated@@414) ($generated@@88 $generated@@416 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@413 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@93 $generated@@413 $generated@@415)) (not ($generated@@0 ($generated@@93 $generated@@414 $generated@@415)))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@88 $generated@@168 $generated@@4)) (= (type $generated@@418) $generated@@71)) (= (type $generated@@419) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@417 ($generated@@216 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@168) ($generated@@0 ($generated@@93 $generated@@417 $generated@@420))) ($generated@@257 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@93 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@86 $generated@@417 ($generated@@216 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@88 $generated@@168 $generated@@4)) (= (type $generated@@422) $generated@@71)) (= (type $generated@@423) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@421 ($generated@@245 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@168) ($generated@@0 ($generated@@93 $generated@@421 $generated@@424))) ($generated@@257 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@93 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@86 $generated@@421 ($generated@@245 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= ($generated ($generated@@93 ($generated@@290 $generated@@426) $generated@@425)) 0))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@93 ($generated@@290 $generated@@426) $generated@@425)))
)))
(assert  (and (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@427 $generated@@430)) ($generated@@88 $generated@@168 $generated@@4))
 :pattern ( ($generated@@427 $generated@@430))
)) (forall (($generated@@431 T@T) ($generated@@432 T@U) ) (! (= (type ($generated@@428 $generated@@431 $generated@@432)) $generated@@431)
 :pattern ( ($generated@@428 $generated@@431 $generated@@432))
))) (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@303 (type $generated@@433))))
(let (($generated@@435 ($generated@@302 (type $generated@@433))))
(= (type ($generated@@429 $generated@@433)) ($generated@@88 $generated@@435 $generated@@434))))
 :pattern ( ($generated@@429 $generated@@433))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@301 $generated@@168 $generated@@168)) (= (type $generated@@437) $generated@@168)) (= ($generated@@0 ($generated@@93 ($generated@@427 $generated@@436) $generated@@437))  (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@436) ($generated@@191 ($generated@@428 $generated@@184 $generated@@437)))) (= ($generated@@93 ($generated@@429 $generated@@436) ($generated@@191 ($generated@@428 $generated@@184 $generated@@437))) ($generated@@192 ($generated@@428 $generated@@184 $generated@@437))))))
 :pattern ( ($generated@@93 ($generated@@427 $generated@@436) $generated@@437))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@88 $generated@@168 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@321 (type $generated@@441))))
(let (($generated@@443 ($generated@@320 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@88 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@319 $generated@@168 $generated@@168)) (= (type $generated@@445) $generated@@168)) (= ($generated@@0 ($generated@@93 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@444) ($generated@@191 ($generated@@428 $generated@@184 $generated@@445)))) (= ($generated@@93 ($generated@@439 $generated@@444) ($generated@@191 ($generated@@428 $generated@@184 $generated@@445))) ($generated@@192 ($generated@@428 $generated@@184 $generated@@445))))))
 :pattern ( ($generated@@93 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@302 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@301 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@376 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@429 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@376 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@320 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@319 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@93 ($generated@@387 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@93 ($generated@@439 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@451) $generated@@455))
 :pattern ( ($generated@@93 ($generated@@439 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@93 ($generated@@387 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@457 $generated@@458)) $generated@@71)
 :pattern ( ($generated@@456 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@459) ($generated@@301 $generated@@168 $generated@@168)) (= (type $generated@@460) $generated@@71)) (= (type $generated@@461) $generated@@71)) (= (type $generated@@462) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@459 ($generated@@456 $generated@@460 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@168) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@459) $generated@@463))) (and ($generated@@257 ($generated@@93 ($generated@@429 $generated@@459) $generated@@463) $generated@@461 $generated@@462) ($generated@@257 $generated@@463 $generated@@460 $generated@@462)))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@459) $generated@@463))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@459) $generated@@463))
))))
 :pattern ( ($generated@@86 $generated@@459 ($generated@@456 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@71)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@319 $generated@@168 $generated@@168)) (= (type $generated@@468) $generated@@71)) (= (type $generated@@469) $generated@@71)) (= (type $generated@@470) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@168) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@467) $generated@@471))) (and ($generated@@257 ($generated@@93 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@257 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@93 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@86 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@91 (type $generated@@472))))
 (=> (and (and (= (type $generated@@472) ($generated@@88 $generated@@474 $generated@@4)) (= (type $generated@@473) ($generated@@88 $generated@@474 $generated@@4))) ($generated@@341 $generated@@472 $generated@@473)) (= $generated@@472 $generated@@473)))
 :pattern ( ($generated@@341 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
(= (type ($generated@@475 $generated@@476 $generated@@477)) ($generated@@88 $generated@@478 $generated@@4)))
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@480)))
 (=> (and (and (= (type $generated@@479) ($generated@@88 $generated@@482 $generated@@4)) (= (type $generated@@481) $generated@@482)) ($generated@@0 ($generated@@93 $generated@@479 $generated@@481))) ($generated@@0 ($generated@@93 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))))
 :pattern ( ($generated@@475 $generated@@479 $generated@@480) ($generated@@93 $generated@@479 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
 (=> (and (and (= (type $generated@@483) ($generated@@88 $generated@@486 $generated@@4)) (= (type $generated@@484) ($generated@@88 $generated@@486 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@483 $generated@@485))) ($generated@@0 ($generated@@93 ($generated@@206 $generated@@483 $generated@@484) $generated@@485))))
 :pattern ( ($generated@@206 $generated@@483 $generated@@484) ($generated@@93 $generated@@483 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
 (=> (and (and (= (type $generated@@487) ($generated@@88 $generated@@490 $generated@@4)) (= (type $generated@@488) ($generated@@88 $generated@@490 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@488 $generated@@489))) ($generated@@0 ($generated@@93 ($generated@@206 $generated@@487 $generated@@488) $generated@@489))))
 :pattern ( ($generated@@206 $generated@@487 $generated@@488) ($generated@@93 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@492)))
 (=> (and (= (type $generated@@491) ($generated@@88 $generated@@494 $generated@@4)) (= (type $generated@@493) $generated@@494)) (= ($generated@@0 ($generated@@93 ($generated@@475 $generated@@491 $generated@@492) $generated@@493))  (or (= $generated@@493 $generated@@492) ($generated@@0 ($generated@@93 $generated@@491 $generated@@493))))))
 :pattern ( ($generated@@93 ($generated@@475 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@495) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@496) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@497) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@495 $generated@@497))) (and ($generated@@144 $generated@@495 $generated@@496) ($generated@@144 $generated@@496 $generated@@497))) ($generated@@144 $generated@@495 $generated@@497))
 :pattern ( ($generated@@144 $generated@@495 $generated@@496) ($generated@@144 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
 (=> (and (and (= (type $generated@@498) ($generated@@88 $generated@@501 $generated@@4)) (= (type $generated@@499) ($generated@@88 $generated@@501 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@499 $generated@@500))) (not ($generated@@0 ($generated@@93 ($generated@@402 $generated@@498 $generated@@499) $generated@@500)))))
 :pattern ( ($generated@@402 $generated@@498 $generated@@499) ($generated@@93 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@503 T@T) ) (! (= (type ($generated@@502 $generated@@503)) ($generated@@88 $generated@@503 $generated@@4))
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@321 (type $generated@@504))))
(let (($generated@@506 ($generated@@320 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@319 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@318 $generated@@506 $generated@@505)) (= ($generated@@317 $generated@@504) ($generated@@502 $generated@@506))))))
 :pattern ( ($generated@@317 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@321 (type $generated@@507))))
(let (($generated@@509 ($generated@@320 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@319 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@318 $generated@@509 $generated@@508)) (= ($generated@@387 $generated@@507) ($generated@@502 $generated@@508))))))
 :pattern ( ($generated@@387 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@321 (type $generated@@510))))
(let (($generated@@512 ($generated@@320 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@319 $generated@@512 $generated@@511)) (= (= $generated@@510 ($generated@@318 $generated@@512 $generated@@511)) (= ($generated@@438 $generated@@510) ($generated@@502 $generated@@168))))))
 :pattern ( ($generated@@438 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@303 (type $generated@@513))))
(let (($generated@@515 ($generated@@302 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@301 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@300 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (and (and (= (type $generated@@516) $generated@@168) (= (type $generated@@517) $generated@@168)) ($generated@@0 ($generated@@93 ($generated@@427 $generated@@513) ($generated@@276 ($generated@@233 $generated@@516 $generated@@517)))))
 :no-pattern (type $generated@@516)
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@427 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@321 (type $generated@@518))))
(let (($generated@@520 ($generated@@320 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@319 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@318 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (and (and (= (type $generated@@521) $generated@@168) (= (type $generated@@522) $generated@@168)) ($generated@@0 ($generated@@93 ($generated@@438 $generated@@518) ($generated@@276 ($generated@@233 $generated@@521 $generated@@522)))))
 :no-pattern (type $generated@@521)
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
))))))
 :pattern ( ($generated@@438 $generated@@518))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@77)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@T) ) (!  (=> (and (= (type $generated@@525) $generated@@77) (= (type $generated@@526) $generated@@75)) (and (= ($generated@@523 ($generated@@228 $generated@@527 $generated@@525 $generated@@526)) $generated@@525) (= ($generated@@84 ($generated@@228 $generated@@527 $generated@@525 $generated@@526)) $generated@@526)))
 :pattern ( ($generated@@228 $generated@@527 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@168) ($generated@@169 $generated@@528 $generated@@46)) (and (= ($generated@@276 ($generated@@428 $generated@@2 $generated@@528)) $generated@@528) ($generated@@175 ($generated@@428 $generated@@2 $generated@@528) $generated@@46)))
 :pattern ( ($generated@@169 $generated@@528 $generated@@46))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@168) ($generated@@169 $generated@@529 $generated@@47)) (and (= ($generated@@276 ($generated@@428 $generated@@3 $generated@@529)) $generated@@529) ($generated@@175 ($generated@@428 $generated@@3 $generated@@529) $generated@@47)))
 :pattern ( ($generated@@169 $generated@@529 $generated@@47))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@168) ($generated@@169 $generated@@530 $generated@@44)) (and (= ($generated@@276 ($generated@@428 $generated@@4 $generated@@530)) $generated@@530) ($generated@@175 ($generated@@428 $generated@@4 $generated@@530) $generated@@44)))
 :pattern ( ($generated@@169 $generated@@530 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@531) 21))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@168) ($generated@@169 $generated@@532 $generated@@45)) (and (= ($generated@@276 ($generated@@428 $generated@@531 $generated@@532)) $generated@@532) ($generated@@175 ($generated@@428 $generated@@531 $generated@@532) $generated@@45)))
 :pattern ( ($generated@@169 $generated@@532 $generated@@45))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@71) (= ($generated@@169 ($generated@@276 $generated@@533) $generated@@534) ($generated@@175 $generated@@533 $generated@@534)))
 :pattern ( ($generated@@169 ($generated@@276 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@91 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@88 $generated@@536 $generated@@2)) (<= 0 ($generated@@289 $generated@@535))))
 :pattern ( ($generated@@289 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@157 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@156 $generated@@538)) (<= 0 ($generated@@269 $generated@@537))))
 :pattern ( ($generated@@269 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@71)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@71) (= (type $generated@@542) $generated@@71)) (= ($generated@@539 ($generated@@456 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@456 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@71)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@71) (= (type $generated@@546) $generated@@71)) (= ($generated@@543 ($generated@@456 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@456 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@71) (= (type $generated@@548) $generated@@71)) (= ($generated@@82 ($generated@@456 $generated@@547 $generated@@548)) $generated@@58))
 :pattern ( ($generated@@456 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@71) (= (type $generated@@552) $generated@@71)) (= ($generated@@549 ($generated@@464 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@464 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@71) (= (type $generated@@556) $generated@@71)) (= ($generated@@553 ($generated@@464 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@464 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@71) (= (type $generated@@558) $generated@@71)) (= ($generated@@82 ($generated@@464 $generated@@557 $generated@@558)) $generated@@59))
 :pattern ( ($generated@@464 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@168) (= (type $generated@@560) $generated@@168)) (= ($generated@@263 ($generated@@233 $generated@@559 $generated@@560)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@71) (= (type $generated@@564) $generated@@71)) (= ($generated@@561 ($generated@@183 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@183 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@71) (= (type $generated@@568) $generated@@71)) (= ($generated@@565 ($generated@@183 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@183 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@168) (= (type $generated@@570) $generated@@168)) (= ($generated@@191 ($generated@@233 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@233 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@168)) (= ($generated@@192 ($generated@@233 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@233 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@156 $generated@@168)) (= (type $generated@@574) $generated@@71)) (= (type $generated@@575) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@573 ($generated@@223 $generated@@574) $generated@@575) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@269 $generated@@573))) ($generated@@257 ($generated@@364 $generated@@573 $generated@@576) $generated@@574 $generated@@575))
 :pattern ( ($generated@@364 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@86 $generated@@573 ($generated@@223 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (=> (= (type $generated@@577) ($generated@@88 $generated@@579 $generated@@4)) ($generated@@0 ($generated@@93 ($generated@@475 $generated@@577 $generated@@578) $generated@@578))))
 :pattern ( ($generated@@475 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@580 ($generated@@87 $generated@@581)) $generated@@581)
 :pattern ( ($generated@@87 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@71)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@71) (= ($generated@@582 ($generated@@216 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@216 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@71) (= ($generated@@82 ($generated@@216 $generated@@585)) $generated@@54))
 :pattern ( ($generated@@216 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@71)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@71) (= ($generated@@586 ($generated@@245 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@245 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@71) (= ($generated@@82 ($generated@@245 $generated@@589)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@71)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@71) (= ($generated@@590 ($generated@@201 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@201 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@71) (= ($generated@@82 ($generated@@201 $generated@@593)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@71)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@71) (= ($generated@@594 ($generated@@223 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@223 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@71) (= ($generated@@82 ($generated@@223 $generated@@597)) $generated@@57))
 :pattern ( ($generated@@223 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@71)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@71) (= ($generated@@598 ($generated@@148 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@148 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@71)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@71) (= ($generated@@601 ($generated@@177 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@177 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
(= ($generated@@428 $generated@@605 ($generated@@276 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@276 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@301 $generated@@168 $generated@@168)) (= (type $generated@@607) $generated@@71)) (= (type $generated@@608) $generated@@71)) (= ($generated@@175 $generated@@606 ($generated@@456 $generated@@607 $generated@@608)) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@168) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@606) $generated@@609))) (and ($generated@@169 ($generated@@93 ($generated@@429 $generated@@606) $generated@@609) $generated@@608) ($generated@@169 $generated@@609 $generated@@607)))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@606) $generated@@609))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@606) $generated@@609))
))))
 :pattern ( ($generated@@175 $generated@@606 ($generated@@456 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@319 $generated@@168 $generated@@168)) (= (type $generated@@611) $generated@@71)) (= (type $generated@@612) $generated@@71)) (= ($generated@@175 $generated@@610 ($generated@@464 $generated@@611 $generated@@612)) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@168) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@610) $generated@@613))) (and ($generated@@169 ($generated@@93 ($generated@@439 $generated@@610) $generated@@613) $generated@@612) ($generated@@169 $generated@@613 $generated@@611)))
 :pattern ( ($generated@@93 ($generated@@439 $generated@@610) $generated@@613))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@610) $generated@@613))
))))
 :pattern ( ($generated@@175 $generated@@610 ($generated@@464 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@168) (= (type $generated@@617) $generated@@168)) (< ($generated@@614 $generated@@616) ($generated@@615 ($generated@@233 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@233 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@168) (= (type $generated@@619) $generated@@168)) (< ($generated@@614 $generated@@619) ($generated@@615 ($generated@@233 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@233 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@91 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@88 $generated@@622 $generated@@4)) (= (type $generated@@621) ($generated@@88 $generated@@622 $generated@@4))) (= ($generated@@206 $generated@@620 ($generated@@206 $generated@@620 $generated@@621)) ($generated@@206 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@206 $generated@@620 ($generated@@206 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@168) (= (type $generated@@624) $generated@@71)) (= (type $generated@@625) $generated@@71)) ($generated@@169 $generated@@623 ($generated@@456 $generated@@624 $generated@@625))) (and (= ($generated@@276 ($generated@@428 ($generated@@301 $generated@@168 $generated@@168) $generated@@623)) $generated@@623) ($generated@@175 ($generated@@428 ($generated@@301 $generated@@168 $generated@@168) $generated@@623) ($generated@@456 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@169 $generated@@623 ($generated@@456 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@168) (= (type $generated@@627) $generated@@71)) (= (type $generated@@628) $generated@@71)) ($generated@@169 $generated@@626 ($generated@@464 $generated@@627 $generated@@628))) (and (= ($generated@@276 ($generated@@428 ($generated@@319 $generated@@168 $generated@@168) $generated@@626)) $generated@@626) ($generated@@175 ($generated@@428 ($generated@@319 $generated@@168 $generated@@168) $generated@@626) ($generated@@464 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@169 $generated@@626 ($generated@@464 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@71) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) $generated@@168)) ($generated@@169 $generated@@631 ($generated@@183 $generated@@629 $generated@@630))) (and (= ($generated@@276 ($generated@@428 $generated@@184 $generated@@631)) $generated@@631) ($generated@@175 ($generated@@428 $generated@@184 $generated@@631) ($generated@@183 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@169 $generated@@631 ($generated@@183 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@633 T@T) ) (! (= (type ($generated@@632 $generated@@633)) ($generated@@88 $generated@@633 $generated@@4))
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@634)))
 (not ($generated@@0 ($generated@@93 ($generated@@632 $generated@@635) $generated@@634))))
 :pattern ( (let (($generated@@635 (type $generated@@634)))
($generated@@93 ($generated@@632 $generated@@635) $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@636)))
 (not ($generated@@0 ($generated@@93 ($generated@@502 $generated@@637) $generated@@636))))
 :pattern ( (let (($generated@@637 (type $generated@@636)))
($generated@@93 ($generated@@502 $generated@@637) $generated@@636)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@644 T@T) ($generated@@645 T@T) ) (= ($generated@@1 ($generated@@640 $generated@@644 $generated@@645)) 22)) (forall (($generated@@646 T@T) ($generated@@647 T@T) ) (! (= ($generated@@641 ($generated@@640 $generated@@646 $generated@@647)) $generated@@646)
 :pattern ( ($generated@@640 $generated@@646 $generated@@647))
))) (forall (($generated@@648 T@T) ($generated@@649 T@T) ) (! (= ($generated@@642 ($generated@@640 $generated@@648 $generated@@649)) $generated@@649)
 :pattern ( ($generated@@640 $generated@@648 $generated@@649))
))) (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@642 (type $generated@@650))))
(= (type ($generated@@638 $generated@@650 $generated@@651 $generated@@652)) $generated@@653))
 :pattern ( ($generated@@638 $generated@@650 $generated@@651 $generated@@652))
))) (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (! (let (($generated@@658 (type $generated@@657)))
(let (($generated@@659 (type $generated@@655)))
(= (type ($generated@@643 $generated@@654 $generated@@655 $generated@@656 $generated@@657)) ($generated@@640 $generated@@659 $generated@@658))))
 :pattern ( ($generated@@643 $generated@@654 $generated@@655 $generated@@656 $generated@@657))
))) (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@642 (type $generated@@660))))
 (=> (= (type $generated@@663) $generated@@664) (= ($generated@@638 ($generated@@643 $generated@@660 $generated@@661 $generated@@662 $generated@@663) $generated@@661 $generated@@662) $generated@@663)))
 :weight 0
))) (and (and (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (or (= $generated@@667 $generated@@669) (= ($generated@@638 ($generated@@643 $generated@@666 $generated@@667 $generated@@668 $generated@@665) $generated@@669 $generated@@670) ($generated@@638 $generated@@666 $generated@@669 $generated@@670)))
 :weight 0
)) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (or (= $generated@@674 $generated@@676) (= ($generated@@638 ($generated@@643 $generated@@672 $generated@@673 $generated@@674 $generated@@671) $generated@@675 $generated@@676) ($generated@@638 $generated@@672 $generated@@675 $generated@@676)))
 :weight 0
))) (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (or true (= ($generated@@638 ($generated@@643 $generated@@678 $generated@@679 $generated@@680 $generated@@677) $generated@@681 $generated@@682) ($generated@@638 $generated@@678 $generated@@681 $generated@@682)))
 :weight 0
)))) (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (= (type ($generated@@639 $generated@@683 $generated@@684 $generated@@685 $generated@@686)) ($generated@@640 $generated@@89 $generated@@4))
 :pattern ( ($generated@@639 $generated@@683 $generated@@684 $generated@@685 $generated@@686))
))))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@74 (type $generated@@692))))
 (=> (and (and (and (and (and (= (type $generated@@687) $generated@@89) (= (type $generated@@688) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@689) ($generated@@73 $generated@@4))) (= (type $generated@@690) $generated@@89)) (= (type $generated@@691) $generated@@89)) (= (type $generated@@692) ($generated@@73 $generated@@693))) (= ($generated@@0 ($generated@@638 ($generated@@639 $generated@@687 $generated@@688 $generated@@689 $generated@@690) $generated@@691 $generated@@692))  (=> (and (not (= $generated@@691 $generated@@687)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@688 $generated@@691) $generated@@689))) (= $generated@@691 $generated@@690)))))
 :pattern ( ($generated@@638 ($generated@@639 $generated@@687 $generated@@688 $generated@@689 $generated@@690) $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@71) (= (type $generated@@695) $generated@@71)) (and (= ($generated@@82 ($generated@@183 $generated@@694 $generated@@695)) $generated@@63) (= ($generated@@295 ($generated@@183 $generated@@694 $generated@@695)) $generated@@67)))
 :pattern ( ($generated@@183 $generated@@694 $generated@@695))
)))
(assert  (and (forall (($generated@@698 T@U) ) (! (let (($generated@@699 ($generated@@157 (type $generated@@698))))
(= (type ($generated@@696 $generated@@698)) ($generated@@156 $generated@@699)))
 :pattern ( ($generated@@696 $generated@@698))
)) (forall (($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@157 (type $generated@@700))))
(= (type ($generated@@697 $generated@@700)) $generated@@701))
 :pattern ( ($generated@@697 $generated@@700))
))))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@703)))
 (=> (= (type $generated@@702) ($generated@@156 $generated@@704)) (and (= ($generated@@696 ($generated@@155 $generated@@702 $generated@@703)) $generated@@702) (= ($generated@@697 ($generated@@155 $generated@@702 $generated@@703)) $generated@@703))))
 :pattern ( ($generated@@155 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@184) (= ($generated@@614 ($generated@@276 $generated@@705)) ($generated@@615 $generated@@705)))
 :pattern ( ($generated@@614 ($generated@@276 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@168) ($generated@@169 $generated@@706 ($generated@@87 0))) (and (= ($generated@@276 ($generated@@428 $generated@@2 $generated@@706)) $generated@@706) ($generated@@175 ($generated@@428 ($generated@@88 $generated@@168 $generated@@4) $generated@@706) ($generated@@87 0))))
 :pattern ( ($generated@@169 $generated@@706 ($generated@@87 0)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@168) (= (type $generated@@708) $generated@@71)) ($generated@@169 $generated@@707 ($generated@@216 $generated@@708))) (and (= ($generated@@276 ($generated@@428 ($generated@@88 $generated@@168 $generated@@4) $generated@@707)) $generated@@707) ($generated@@175 ($generated@@428 ($generated@@88 $generated@@168 $generated@@4) $generated@@707) ($generated@@216 $generated@@708))))
 :pattern ( ($generated@@169 $generated@@707 ($generated@@216 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@168) (= (type $generated@@710) $generated@@71)) ($generated@@169 $generated@@709 ($generated@@245 $generated@@710))) (and (= ($generated@@276 ($generated@@428 ($generated@@88 $generated@@168 $generated@@4) $generated@@709)) $generated@@709) ($generated@@175 ($generated@@428 ($generated@@88 $generated@@168 $generated@@4) $generated@@709) ($generated@@245 $generated@@710))))
 :pattern ( ($generated@@169 $generated@@709 ($generated@@245 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@168) (= (type $generated@@712) $generated@@71)) ($generated@@169 $generated@@711 ($generated@@201 $generated@@712))) (and (= ($generated@@276 ($generated@@428 ($generated@@88 $generated@@168 $generated@@2) $generated@@711)) $generated@@711) ($generated@@175 ($generated@@428 ($generated@@88 $generated@@168 $generated@@2) $generated@@711) ($generated@@201 $generated@@712))))
 :pattern ( ($generated@@169 $generated@@711 ($generated@@201 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@168) (= (type $generated@@714) $generated@@71)) ($generated@@169 $generated@@713 ($generated@@223 $generated@@714))) (and (= ($generated@@276 ($generated@@428 ($generated@@156 $generated@@168) $generated@@713)) $generated@@713) ($generated@@175 ($generated@@428 ($generated@@156 $generated@@168) $generated@@713) ($generated@@223 $generated@@714))))
 :pattern ( ($generated@@169 $generated@@713 ($generated@@223 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@71) (= (type $generated@@716) $generated@@168)) ($generated@@169 $generated@@716 ($generated@@148 $generated@@715))) (and (= ($generated@@276 ($generated@@428 $generated@@89 $generated@@716)) $generated@@716) ($generated@@175 ($generated@@428 $generated@@89 $generated@@716) ($generated@@148 $generated@@715))))
 :pattern ( ($generated@@169 $generated@@716 ($generated@@148 $generated@@715)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@71) (= (type $generated@@718) $generated@@168)) ($generated@@169 $generated@@718 ($generated@@177 $generated@@717))) (and (= ($generated@@276 ($generated@@428 $generated@@89 $generated@@718)) $generated@@718) ($generated@@175 ($generated@@428 $generated@@89 $generated@@718) ($generated@@177 $generated@@717))))
 :pattern ( ($generated@@169 $generated@@718 ($generated@@177 $generated@@717)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 (type $generated@@722)))
 (=> (and (and (and (= (type $generated@@719) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@720) $generated@@89)) (= (type $generated@@721) ($generated@@73 $generated@@723))) ($generated@@214 ($generated@@94 $generated@@719 $generated@@720 ($generated@@96 ($generated@@93 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))) ($generated@@144 $generated@@719 ($generated@@94 $generated@@719 $generated@@720 ($generated@@96 ($generated@@93 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@94 $generated@@719 $generated@@720 ($generated@@96 ($generated@@93 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@724) ($generated@@88 $generated@@168 $generated@@2)) (= (type $generated@@725) $generated@@71)) (= (type $generated@@726) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@724 ($generated@@201 $generated@@725) $generated@@726) (forall (($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@727) $generated@@168) (< 0 ($generated ($generated@@93 $generated@@724 $generated@@727)))) ($generated@@257 $generated@@727 $generated@@725 $generated@@726))
 :pattern ( ($generated@@93 $generated@@724 $generated@@727))
))))
 :pattern ( ($generated@@86 $generated@@724 ($generated@@201 $generated@@725) $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (! (let (($generated@@730 ($generated@@91 (type $generated@@728))))
 (=> (and (= (type $generated@@728) ($generated@@88 $generated@@730 $generated@@4)) (= (type $generated@@729) ($generated@@88 $generated@@730 $generated@@4))) (= ($generated@@401 $generated@@728 $generated@@729) (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@730) (or (not ($generated@@0 ($generated@@93 $generated@@728 $generated@@731))) (not ($generated@@0 ($generated@@93 $generated@@729 $generated@@731)))))
 :pattern ( ($generated@@93 $generated@@728 $generated@@731))
 :pattern ( ($generated@@93 $generated@@729 $generated@@731))
)))))
 :pattern ( ($generated@@401 $generated@@728 $generated@@729))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) $generated@@184) (= (type $generated@@733) $generated@@71)) (= (type $generated@@734) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@214 $generated@@734) (and ($generated@@182 $generated@@732) (exists (($generated@@735 T@U) ) (!  (and (= (type $generated@@735) $generated@@71) ($generated@@86 $generated@@732 ($generated@@183 $generated@@733 $generated@@735) $generated@@734))
 :pattern ( ($generated@@86 $generated@@732 ($generated@@183 $generated@@733 $generated@@735) $generated@@734))
))))) ($generated@@257 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
 :pattern ( ($generated@@257 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (and (= (type $generated@@736) $generated@@184) (= (type $generated@@737) $generated@@71)) (= (type $generated@@738) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@214 $generated@@738) (and ($generated@@182 $generated@@736) (exists (($generated@@739 T@U) ) (!  (and (= (type $generated@@739) $generated@@71) ($generated@@86 $generated@@736 ($generated@@183 $generated@@739 $generated@@737) $generated@@738))
 :pattern ( ($generated@@86 $generated@@736 ($generated@@183 $generated@@739 $generated@@737) $generated@@738))
))))) ($generated@@257 ($generated@@192 $generated@@736) $generated@@737 $generated@@738))
 :pattern ( ($generated@@257 ($generated@@192 $generated@@736) $generated@@737 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 Int) ) (! (let (($generated@@743 ($generated@@157 (type $generated@@740))))
 (=> (and (= (type $generated@@740) ($generated@@156 $generated@@743)) (= (type $generated@@741) ($generated@@156 $generated@@743))) (and (=> (< $generated@@742 ($generated@@269 $generated@@740)) (= ($generated@@364 ($generated@@346 $generated@@740 $generated@@741) $generated@@742) ($generated@@364 $generated@@740 $generated@@742))) (=> (<= ($generated@@269 $generated@@740) $generated@@742) (= ($generated@@364 ($generated@@346 $generated@@740 $generated@@741) $generated@@742) ($generated@@364 $generated@@741 (- $generated@@742 ($generated@@269 $generated@@740))))))))
 :pattern ( ($generated@@364 ($generated@@346 $generated@@740 $generated@@741) $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@168) (= (type $generated@@745) $generated@@168)) (= ($generated@@233 ($generated@@250 $generated@@744) ($generated@@250 $generated@@745)) ($generated@@250 ($generated@@233 $generated@@744 $generated@@745))))
 :pattern ( ($generated@@233 ($generated@@250 $generated@@744) ($generated@@250 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ) (! (= ($generated@@276 ($generated@@250 $generated@@746)) ($generated@@250 ($generated@@276 $generated@@746)))
 :pattern ( ($generated@@276 ($generated@@250 $generated@@746)))
)))
(assert (forall (($generated@@747 T@U) ) (! (let (($generated@@748 ($generated@@157 (type $generated@@747))))
 (=> (and (= (type $generated@@747) ($generated@@156 $generated@@748)) (= ($generated@@269 $generated@@747) 0)) (= $generated@@747 ($generated@@197 $generated@@748))))
 :pattern ( ($generated@@269 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 (type $generated@@750)))
 (=> (and (and (= (type $generated@@749) ($generated@@88 $generated@@752 $generated@@2)) (= (type $generated@@751) $generated@@2)) (<= 0 ($generated $generated@@751))) (= ($generated@@289 ($generated@@94 $generated@@749 $generated@@750 $generated@@751)) (+ (- ($generated@@289 $generated@@749) ($generated ($generated@@93 $generated@@749 $generated@@750))) ($generated $generated@@751)))))
 :pattern ( ($generated@@289 ($generated@@94 $generated@@749 $generated@@750 $generated@@751)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (! (let (($generated@@756 (type $generated@@755)))
 (=> (and (= (type $generated@@753) ($generated@@88 $generated@@756 $generated@@4)) (= (type $generated@@754) ($generated@@88 $generated@@756 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@206 $generated@@753 $generated@@754) $generated@@755))  (or ($generated@@0 ($generated@@93 $generated@@753 $generated@@755)) ($generated@@0 ($generated@@93 $generated@@754 $generated@@755))))))
 :pattern ( ($generated@@93 ($generated@@206 $generated@@753 $generated@@754) $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@758) $generated@@2)) ($generated@@86 $generated@@758 $generated@@46 $generated@@757))
 :pattern ( ($generated@@86 $generated@@758 $generated@@46 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@760) $generated@@3)) ($generated@@86 $generated@@760 $generated@@47 $generated@@759))
 :pattern ( ($generated@@86 $generated@@760 $generated@@47 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@762) $generated@@4)) ($generated@@86 $generated@@762 $generated@@44 $generated@@761))
 :pattern ( ($generated@@86 $generated@@762 $generated@@44 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@764) $generated@@531)) ($generated@@86 $generated@@764 $generated@@45 $generated@@763))
 :pattern ( ($generated@@86 $generated@@764 $generated@@45 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@766) $generated@@168)) ($generated@@86 $generated@@766 $generated@@48 $generated@@765))
 :pattern ( ($generated@@86 $generated@@766 $generated@@48 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) ($generated@@156 $generated@@168)) (= (type $generated@@768) $generated@@71)) (= ($generated@@175 $generated@@767 ($generated@@223 $generated@@768)) (forall (($generated@@769 Int) ) (!  (=> (and (<= 0 $generated@@769) (< $generated@@769 ($generated@@269 $generated@@767))) ($generated@@169 ($generated@@364 $generated@@767 $generated@@769) $generated@@768))
 :pattern ( ($generated@@364 $generated@@767 $generated@@769))
))))
 :pattern ( ($generated@@175 $generated@@767 ($generated@@223 $generated@@768)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 Int) ) (!  (=> (= (type $generated@@771) ($generated@@156 $generated@@168)) (=> (and (<= 0 $generated@@772) (< $generated@@772 ($generated@@269 $generated@@771))) (< ($generated@@615 ($generated@@428 $generated@@184 ($generated@@364 $generated@@771 $generated@@772))) ($generated@@770 $generated@@771))))
 :pattern ( ($generated@@615 ($generated@@428 $generated@@184 ($generated@@364 $generated@@771 $generated@@772))))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) ($generated@@301 $generated@@168 $generated@@168)) (= (type $generated@@774) $generated@@71)) (= (type $generated@@775) $generated@@71)) ($generated@@175 $generated@@773 ($generated@@456 $generated@@774 $generated@@775))) (and (and ($generated@@175 ($generated@@299 $generated@@773) ($generated@@216 $generated@@774)) ($generated@@175 ($generated@@376 $generated@@773) ($generated@@216 $generated@@775))) ($generated@@175 ($generated@@427 $generated@@773) ($generated@@216 ($generated@@183 $generated@@774 $generated@@775)))))
 :pattern ( ($generated@@175 $generated@@773 ($generated@@456 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) ($generated@@319 $generated@@168 $generated@@168)) (= (type $generated@@777) $generated@@71)) (= (type $generated@@778) $generated@@71)) ($generated@@175 $generated@@776 ($generated@@464 $generated@@777 $generated@@778))) (and (and ($generated@@175 ($generated@@317 $generated@@776) ($generated@@245 $generated@@777)) ($generated@@175 ($generated@@387 $generated@@776) ($generated@@245 $generated@@778))) ($generated@@175 ($generated@@438 $generated@@776) ($generated@@245 ($generated@@183 $generated@@777 $generated@@778)))))
 :pattern ( ($generated@@175 $generated@@776 ($generated@@464 $generated@@777 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@2) ($generated@@175 $generated@@779 $generated@@46))
 :pattern ( ($generated@@175 $generated@@779 $generated@@46))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@3) ($generated@@175 $generated@@780 $generated@@47))
 :pattern ( ($generated@@175 $generated@@780 $generated@@47))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@4) ($generated@@175 $generated@@781 $generated@@44))
 :pattern ( ($generated@@175 $generated@@781 $generated@@44))
)))
(assert (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@531) ($generated@@175 $generated@@782 $generated@@45))
 :pattern ( ($generated@@175 $generated@@782 $generated@@45))
)))
(assert (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@168) ($generated@@175 $generated@@783 $generated@@48))
 :pattern ( ($generated@@175 $generated@@783 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 (T@U) Bool)
(declare-fun $generated@@794 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@784) ($generated@@640 $generated@@89 $generated@@4)) (= (type $generated@@785) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@786) $generated@@89)) (= (type $generated@@787) ($generated@@156 $generated@@168))) (= (type $generated@@788) $generated@@168)) (= (type $generated@@789) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@790) ($generated@@88 $generated@@168 $generated@@4))) (= (type $generated@@791) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@792) $generated@@71)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@795  (=> (= $generated@@784 ($generated@@639 $generated@@149 $generated@@785 $generated@@60 $generated@@786)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@638 $generated@@784 $generated@@786 $generated@@222))) (=> ($generated@@0 ($generated@@638 $generated@@784 $generated@@786 $generated@@222)) (=> (= $generated@@787 ($generated@@346 ($generated@@95 ($generated@@93 $generated@@785 $generated@@786) $generated@@222) ($generated@@155 ($generated@@197 $generated@@168) $generated@@788))) (=> (and (= $generated@@789 ($generated@@94 $generated@@785 $generated@@786 ($generated@@96 ($generated@@93 $generated@@785 $generated@@786) $generated@@222 $generated@@787))) ($generated@@214 $generated@@789)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@638 $generated@@784 $generated@@786 $generated@@213))) (=> ($generated@@0 ($generated@@638 $generated@@784 $generated@@786 $generated@@213)) (=> (and (and (= $generated@@790 ($generated@@206 ($generated@@95 ($generated@@93 $generated@@789 $generated@@786) $generated@@213) ($generated@@475 ($generated@@632 $generated@@168) $generated@@788))) (= $generated@@791 ($generated@@94 $generated@@789 $generated@@786 ($generated@@96 ($generated@@93 $generated@@789 $generated@@786) $generated@@213 $generated@@790)))) (and ($generated@@214 $generated@@791) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@341 ($generated@@95 ($generated@@93 $generated@@791 $generated@@786) $generated@@213) ($generated@@167 $generated@@792 ($generated@@95 ($generated@@93 $generated@@791 $generated@@786) $generated@@222)))))))))))))
(let (($generated@@796  (=> (and (and ($generated@@214 $generated@@785) ($generated@@793 $generated@@785)) (and (not (= $generated@@786 $generated@@149)) (and ($generated@@175 $generated@@786 ($generated@@177 $generated@@792)) ($generated@@86 $generated@@786 ($generated@@177 $generated@@792) $generated@@785)))) (=> (and (and (and ($generated@@169 $generated@@788 $generated@@792) ($generated@@257 $generated@@788 $generated@@792 $generated@@785)) (= 0 $generated@@794)) (and ($generated@@341 ($generated@@95 ($generated@@93 $generated@@785 $generated@@786) $generated@@213) ($generated@@167 $generated@@792 ($generated@@95 ($generated@@93 $generated@@785 $generated@@786) $generated@@222))) (= (ControlFlow 0 5) 2))) $generated@@795))))
$generated@@796)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@T) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@202 (T@U T@U) T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@T T@U T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@330 (T@U T@U) Bool)
(declare-fun $generated@@335 (T@U T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U Int) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 () T@T)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@614 (T@T) T@U)
(declare-fun $generated@@620 (T@U T@U T@U) T@U)
(declare-fun $generated@@621 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@622 (T@T T@T) T@T)
(declare-fun $generated@@623 (T@T) T@T)
(declare-fun $generated@@624 (T@T) T@T)
(declare-fun $generated@@625 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@676 (T@U) T@U)
(declare-fun $generated@@680 (T@U) T@U)
(declare-fun $generated@@681 (T@U) T@U)
(declare-fun $generated@@750 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert  (and (= (type $generated@@148) $generated@@71) (= (type $generated@@149) $generated@@89)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@89) (= (type $generated@@151) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@150 $generated@@148 $generated@@151))
)))
(assert  (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@156)) 16)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@154 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 (type $generated@@159)))
(= (type ($generated@@153 $generated@@158 $generated@@159)) ($generated@@154 $generated@@160)))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@162)))
 (=> (and (= (type $generated@@161) ($generated@@154 $generated@@164)) (= (type $generated@@163) $generated@@164)) (= ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163)  (or (= $generated@@162 $generated@@163) ($generated@@152 $generated@@161 $generated@@163)))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@161 $generated@@162) $generated@@163))
)))
(assert  (and (= ($generated@@1 $generated@@166) 17) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@168 $generated@@169)) ($generated@@88 $generated@@166 $generated@@4))
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@71) (= (type $generated@@171) ($generated@@154 $generated@@166))) (= (type $generated@@172) $generated@@166)) (= ($generated@@0 ($generated@@93 ($generated@@165 $generated@@170 $generated@@171) $generated@@172))  (and ($generated@@167 $generated@@172 $generated@@170) ($generated@@152 $generated@@171 $generated@@172))))
 :pattern ( ($generated@@93 ($generated@@165 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@87 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@177) 18) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@71)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@71) (= (type $generated@@181) $generated@@71)) (= (type $generated@@182) $generated@@177)) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@166)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@166)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@177) (= (type $generated@@189) $generated@@177)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@T) ) (! (= (type ($generated@@190 $generated@@191)) ($generated@@154 $generated@@191))
 :pattern ( ($generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
 (not ($generated@@152 ($generated@@190 $generated@@193) $generated@@192)))
 :pattern ( (let (($generated@@193 (type $generated@@192)))
($generated@@152 ($generated@@190 $generated@@193) $generated@@192)))
)))
(assert (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@71)
 :pattern ( ($generated@@194 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) ($generated@@88 $generated@@166 $generated@@2)) (= (type $generated@@198) $generated@@71)) ($generated@@173 $generated@@197 ($generated@@194 $generated@@198))) ($generated@@195 $generated@@197))
 :pattern ( ($generated@@173 $generated@@197 ($generated@@194 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@71)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= (type $generated@@201) $generated@@89) (= ($generated@@173 $generated@@201 $generated@@148)  (or (= $generated@@201 $generated@@149) (= ($generated@@199 $generated@@201) $generated@@148))))
 :pattern ( ($generated@@173 $generated@@201 $generated@@148))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@91 (type $generated@@203))))
(= (type ($generated@@202 $generated@@203 $generated@@204)) ($generated@@88 $generated@@205 $generated@@4)))
 :pattern ( ($generated@@202 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@91 (type $generated@@206))))
 (=> (and (= (type $generated@@206) ($generated@@88 $generated@@208 $generated@@4)) (= (type $generated@@207) ($generated@@88 $generated@@208 $generated@@4))) (= ($generated@@202 ($generated@@202 $generated@@206 $generated@@207) $generated@@207) ($generated@@202 $generated@@206 $generated@@207))))
 :pattern ( ($generated@@202 ($generated@@202 $generated@@206 $generated@@207) $generated@@207))
)))
(assert (= (type $generated@@209) $generated@@71))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@89) (= (type $generated@@211) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@210 $generated@@209 $generated@@211) ($generated@@86 $generated@@210 $generated@@148 $generated@@211)))
 :pattern ( ($generated@@86 $generated@@210 $generated@@209 $generated@@211))
)))
(assert (= (type $generated@@212) ($generated@@73 ($generated@@88 $generated@@166 $generated@@4))))
(assert (= ($generated@@81 $generated@@212) 0))
(assert (forall (($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@73 $generated@@214))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215 $generated@@216))
)))
(assert (= ($generated@@213 ($generated@@88 $generated@@166 $generated@@4) $generated@@64 $generated@@69) $generated@@212))
(assert ($generated@@217 $generated@@212))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220)) $generated@@177)
 :pattern ( ($generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@71) (= (type $generated@@222) $generated@@71)) (= (type $generated@@223) $generated@@166)) (= (type $generated@@224) $generated@@166)) (= ($generated@@173 ($generated@@218 $generated@@223 $generated@@224) ($generated@@176 $generated@@221 $generated@@222))  (and ($generated@@167 $generated@@223 $generated@@221) ($generated@@167 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@173 ($generated@@218 $generated@@223 $generated@@224) ($generated@@176 $generated@@221 $generated@@222)))
)))
(assert (= (type $generated@@225) ($generated@@73 ($generated@@154 $generated@@166))))
(assert (= ($generated@@81 $generated@@225) 0))
(assert (= ($generated@@213 ($generated@@154 $generated@@166) $generated@@64 $generated@@70) $generated@@225))
(assert  (not ($generated@@217 $generated@@225)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@71)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (= (type $generated@@229) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@230) $generated@@89)) (and ($generated@@226 $generated@@229) (and (not (= $generated@@230 $generated@@149)) (= ($generated@@199 $generated@@230) $generated@@148)))) ($generated@@173 ($generated@@95 ($generated@@93 $generated@@229 $generated@@230) $generated@@212) ($generated@@227 $generated@@46)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@229 $generated@@230) $generated@@212))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@71)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@234) $generated@@89)) (and ($generated@@226 $generated@@233) (and (not (= $generated@@234 $generated@@149)) (= ($generated@@199 $generated@@234) $generated@@148)))) ($generated@@173 ($generated@@95 ($generated@@93 $generated@@233 $generated@@234) $generated@@225) ($generated@@231 $generated@@46)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@233 $generated@@234) $generated@@225))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@177) (= (type $generated@@236) $generated@@177)) (= ($generated@@183 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@183 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@88 $generated@@166 $generated@@4)) (= (type $generated@@238) $generated@@71)) (= ($generated@@173 $generated@@237 ($generated@@227 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@166) ($generated@@0 ($generated@@93 $generated@@237 $generated@@239))) ($generated@@167 $generated@@239 $generated@@238))
 :pattern ( ($generated@@93 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@173 $generated@@237 ($generated@@227 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@71)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@88 $generated@@166 $generated@@4)) (= (type $generated@@243) $generated@@71)) (= ($generated@@173 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@166) ($generated@@0 ($generated@@93 $generated@@242 $generated@@244))) ($generated@@167 $generated@@244 $generated@@243))
 :pattern ( ($generated@@93 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@173 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) ($generated@@154 $generated@@166)) (= (type $generated@@250) $generated@@166)) (= (type $generated@@251) $generated@@71)) (and ($generated@@173 $generated@@249 ($generated@@231 $generated@@251)) ($generated@@167 $generated@@250 $generated@@251))) ($generated@@173 ($generated@@153 $generated@@249 $generated@@250) ($generated@@231 $generated@@251)))
 :pattern ( ($generated@@173 ($generated@@153 $generated@@249 $generated@@250) ($generated@@231 $generated@@251)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@71) (= (type $generated@@254) $generated@@71)) (= (type $generated@@255) $generated@@166)) (= (type $generated@@256) $generated@@166)) (= (type $generated@@257) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@226 $generated@@257)) (= ($generated@@86 ($generated@@218 $generated@@255 $generated@@256) ($generated@@176 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@86 ($generated@@218 $generated@@255 $generated@@256) ($generated@@176 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@76)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@177) (= ($generated@@175 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@62)))
 :pattern ( ($generated@@175 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@177) ($generated@@175 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@166) (= (type $generated@@263) $generated@@166)) (= $generated@@261 ($generated@@218 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@175 $generated@@261))
)))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@264 ($generated@@190 $generated@@265)) 0)
 :pattern ( ($generated@@190 $generated@@265))
)))
(assert ($generated@@217 $generated@@60))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
 (=> (= (type $generated@@266) ($generated@@154 $generated@@268)) (= ($generated@@264 ($generated@@153 $generated@@266 $generated@@267)) (+ 1 ($generated@@264 $generated@@266)))))
 :pattern ( ($generated@@153 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@166)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@71) (= (type $generated@@273) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@252 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@86 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@252 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@275) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@276) $generated@@166)) (= (type $generated@@277) $generated@@71)) ($generated@@144 $generated@@274 $generated@@275)) ($generated@@252 $generated@@276 $generated@@277 $generated@@274)) ($generated@@252 $generated@@276 $generated@@277 $generated@@275))
 :pattern ( ($generated@@144 $generated@@274 $generated@@275) ($generated@@252 $generated@@276 $generated@@277 $generated@@274))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@278) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@279) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@281) $generated@@71)) ($generated@@144 $generated@@278 $generated@@279)) ($generated@@86 $generated@@280 $generated@@281 $generated@@278)) ($generated@@86 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@144 $generated@@278 $generated@@279) ($generated@@86 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@88 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@91 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@88 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@93 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 19)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@88 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@93 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@93 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 20)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@88 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@93 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@93 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@325) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@324 $generated@@325 $generated@@326)) (and ($generated@@144 $generated@@325 $generated@@326) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@74 (type $generated@@328))))
 (=> (and (and (= (type $generated@@327) $generated@@89) (= (type $generated@@328) ($generated@@73 $generated@@329))) (not ($generated@@217 $generated@@328))) (= ($generated@@95 ($generated@@93 $generated@@325 $generated@@327) $generated@@328) ($generated@@95 ($generated@@93 $generated@@326 $generated@@327) $generated@@328))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@326 $generated@@327) $generated@@328))
))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@91 (type $generated@@331))))
 (=> (and (= (type $generated@@331) ($generated@@88 $generated@@333 $generated@@4)) (= (type $generated@@332) ($generated@@88 $generated@@333 $generated@@4))) (= ($generated@@330 $generated@@331 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (= ($generated@@0 ($generated@@93 $generated@@331 $generated@@334)) ($generated@@0 ($generated@@93 $generated@@332 $generated@@334))))
 :pattern ( ($generated@@93 $generated@@331 $generated@@334))
 :pattern ( ($generated@@93 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@155 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336 $generated@@337)) ($generated@@154 $generated@@338)))
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@155 (type $generated@@339))))
 (=> (and (= (type $generated@@339) ($generated@@154 $generated@@341)) (= (type $generated@@340) ($generated@@154 $generated@@341))) (= ($generated@@264 ($generated@@335 $generated@@339 $generated@@340)) (+ ($generated@@264 $generated@@339) ($generated@@264 $generated@@340)))))
 :pattern ( ($generated@@264 ($generated@@335 $generated@@339 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@91 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@88 $generated@@343 $generated@@2)) (= ($generated@@195 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@93 $generated@@342 $generated@@344))) (<= ($generated ($generated@@93 $generated@@342 $generated@@344)) ($generated@@282 $generated@@342))))
 :pattern ( ($generated@@93 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@195 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@166) ($generated@@167 $generated@@348 $generated@@148)) (and (= ($generated@@269 ($generated@@345 $generated@@89 $generated@@348)) $generated@@348) ($generated@@173 ($generated@@345 $generated@@89 $generated@@348) $generated@@148)))
 :pattern ( ($generated@@167 $generated@@348 $generated@@148))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@166) ($generated@@167 $generated@@349 $generated@@209)) (and (= ($generated@@269 ($generated@@345 $generated@@89 $generated@@349)) $generated@@349) ($generated@@173 ($generated@@345 $generated@@89 $generated@@349) $generated@@209)))
 :pattern ( ($generated@@167 $generated@@349 $generated@@209))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@89) (= ($generated@@173 $generated@@350 $generated@@209)  (and ($generated@@173 $generated@@350 $generated@@148) (not (= $generated@@350 $generated@@149)))))
 :pattern ( ($generated@@173 $generated@@350 $generated@@209))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 Int) ) (! (let (($generated@@354 ($generated@@155 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@354))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
 (=> (= (type $generated@@355) ($generated@@154 $generated@@358)) (and (=> (= $generated@@356 ($generated@@264 $generated@@355)) (= ($generated@@351 ($generated@@153 $generated@@355 $generated@@357) $generated@@356) $generated@@357)) (=> (not (= $generated@@356 ($generated@@264 $generated@@355))) (= ($generated@@351 ($generated@@153 $generated@@355 $generated@@357) $generated@@356) ($generated@@351 $generated@@355 $generated@@356))))))
 :pattern ( ($generated@@351 ($generated@@153 $generated@@355 $generated@@357) $generated@@356))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@360) $generated@@89)) (=> (and (and ($generated@@226 $generated@@359) (and (not (= $generated@@360 $generated@@149)) (= ($generated@@199 $generated@@360) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@359 $generated@@360) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@359 $generated@@360) $generated@@212) ($generated@@227 $generated@@46) $generated@@359)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@359 $generated@@360) $generated@@212))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@362) $generated@@89)) (=> (and (and ($generated@@226 $generated@@361) (and (not (= $generated@@362 $generated@@149)) (= ($generated@@199 $generated@@362) $generated@@148))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@361 $generated@@362) $generated@@60))) ($generated@@86 ($generated@@95 ($generated@@93 $generated@@361 $generated@@362) $generated@@225) ($generated@@231 $generated@@46) $generated@@361)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@361 $generated@@362) $generated@@225))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@292 (type $generated@@363))))
(let (($generated@@365 ($generated@@291 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@290 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@289 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@93 ($generated@@288 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@288 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@292 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@88 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@292 (type $generated@@370))))
(let (($generated@@372 ($generated@@291 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@290 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@289 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@93 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@310 (type $generated@@374))))
(let (($generated@@376 ($generated@@309 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@308 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@307 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@93 ($generated@@306 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@306 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@310 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@88 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@310 (type $generated@@381))))
(let (($generated@@383 ($generated@@309 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@308 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@307 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@93 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@88 $generated@@166 $generated@@2)) (= (type $generated@@386) $generated@@71)) (= ($generated@@173 $generated@@385 ($generated@@194 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@166) (< 0 ($generated ($generated@@93 $generated@@385 $generated@@387)))) ($generated@@167 $generated@@387 $generated@@386))
 :pattern ( ($generated@@93 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@173 $generated@@385 ($generated@@194 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
 (=> (and (= (type $generated@@388) ($generated@@154 $generated@@391)) (= (type $generated@@389) ($generated@@154 $generated@@391))) (= ($generated@@152 ($generated@@335 $generated@@388 $generated@@389) $generated@@390)  (or ($generated@@152 $generated@@388 $generated@@390) ($generated@@152 $generated@@389 $generated@@390)))))
 :pattern ( ($generated@@152 ($generated@@335 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@91 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394 $generated@@395)) ($generated@@88 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@91 (type $generated@@397))))
 (=> (and (and (= (type $generated@@397) ($generated@@88 $generated@@399 $generated@@4)) (= (type $generated@@398) ($generated@@88 $generated@@399 $generated@@4))) ($generated@@392 $generated@@397 $generated@@398)) (and (= ($generated@@393 ($generated@@202 $generated@@397 $generated@@398) $generated@@397) $generated@@398) (= ($generated@@393 ($generated@@202 $generated@@397 $generated@@398) $generated@@398) $generated@@397))))
 :pattern ( ($generated@@202 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
 (=> (= (type $generated@@400) ($generated@@154 $generated@@402)) (= ($generated@@152 $generated@@400 $generated@@401) (exists (($generated@@403 Int) ) (!  (and (and (<= 0 $generated@@403) (< $generated@@403 ($generated@@264 $generated@@400))) (= ($generated@@351 $generated@@400 $generated@@403) $generated@@401))
 :pattern ( ($generated@@351 $generated@@400 $generated@@403))
)))))
 :pattern ( ($generated@@152 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
 (=> (and (= (type $generated@@404) ($generated@@88 $generated@@407 $generated@@4)) (= (type $generated@@405) ($generated@@88 $generated@@407 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@393 $generated@@404 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@93 $generated@@404 $generated@@406)) (not ($generated@@0 ($generated@@93 $generated@@405 $generated@@406)))))))
 :pattern ( ($generated@@93 ($generated@@393 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@88 $generated@@166 $generated@@4)) (= (type $generated@@409) $generated@@71)) (= (type $generated@@410) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@408 ($generated@@227 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@166) ($generated@@0 ($generated@@93 $generated@@408 $generated@@411))) ($generated@@252 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@93 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@86 $generated@@408 ($generated@@227 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@166 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@240 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@166) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@252 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@240 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= ($generated ($generated@@93 ($generated@@283 $generated@@417) $generated@@416)) 0))
 :pattern ( (let (($generated@@417 (type $generated@@416)))
($generated@@93 ($generated@@283 $generated@@417) $generated@@416)))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@88 $generated@@166 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@292 (type $generated@@421))))
(let (($generated@@423 ($generated@@291 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@88 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@290 $generated@@166 $generated@@166)) (= (type $generated@@425) $generated@@166)) (= ($generated@@0 ($generated@@93 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@93 ($generated@@288 $generated@@424) ($generated@@184 ($generated@@345 $generated@@177 $generated@@425)))) (= ($generated@@93 ($generated@@419 $generated@@424) ($generated@@184 ($generated@@345 $generated@@177 $generated@@425))) ($generated@@185 ($generated@@345 $generated@@177 $generated@@425))))))
 :pattern ( ($generated@@93 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@88 $generated@@166 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@310 (type $generated@@429))))
(let (($generated@@431 ($generated@@309 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@88 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@308 $generated@@166 $generated@@166)) (= (type $generated@@433) $generated@@166)) (= ($generated@@0 ($generated@@93 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@93 ($generated@@306 $generated@@432) ($generated@@184 ($generated@@345 $generated@@177 $generated@@433)))) (= ($generated@@93 ($generated@@427 $generated@@432) ($generated@@184 ($generated@@345 $generated@@177 $generated@@433))) ($generated@@185 ($generated@@345 $generated@@177 $generated@@433))))))
 :pattern ( ($generated@@93 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@291 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@290 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@93 ($generated@@367 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@93 ($generated@@288 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@93 ($generated@@419 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@93 ($generated@@288 $generated@@434) $generated@@438))
 :pattern ( ($generated@@93 ($generated@@419 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@93 ($generated@@367 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@309 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@308 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@93 ($generated@@378 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@93 ($generated@@306 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@93 ($generated@@427 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@93 ($generated@@306 $generated@@439) $generated@@443))
 :pattern ( ($generated@@93 ($generated@@427 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@93 ($generated@@378 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@71)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@290 $generated@@166 $generated@@166)) (= (type $generated@@448) $generated@@71)) (= (type $generated@@449) $generated@@71)) (= (type $generated@@450) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@166) ($generated@@0 ($generated@@93 ($generated@@288 $generated@@447) $generated@@451))) (and ($generated@@252 ($generated@@93 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@252 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@93 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@93 ($generated@@288 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@86 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@71)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@308 $generated@@166 $generated@@166)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) $generated@@71)) (= (type $generated@@458) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@166) ($generated@@0 ($generated@@93 ($generated@@306 $generated@@455) $generated@@459))) (and ($generated@@252 ($generated@@93 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@252 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@93 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@93 ($generated@@306 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@86 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@91 (type $generated@@460))))
 (=> (and (and (= (type $generated@@460) ($generated@@88 $generated@@462 $generated@@4)) (= (type $generated@@461) ($generated@@88 $generated@@462 $generated@@4))) ($generated@@330 $generated@@460 $generated@@461)) (= $generated@@460 $generated@@461)))
 :pattern ( ($generated@@330 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(= (type ($generated@@463 $generated@@464 $generated@@465)) ($generated@@88 $generated@@466 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@468)))
 (=> (and (and (= (type $generated@@467) ($generated@@88 $generated@@470 $generated@@4)) (= (type $generated@@469) $generated@@470)) ($generated@@0 ($generated@@93 $generated@@467 $generated@@469))) ($generated@@0 ($generated@@93 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))))
 :pattern ( ($generated@@463 $generated@@467 $generated@@468) ($generated@@93 $generated@@467 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
 (=> (and (and (= (type $generated@@471) ($generated@@88 $generated@@474 $generated@@4)) (= (type $generated@@472) ($generated@@88 $generated@@474 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@471 $generated@@473))) ($generated@@0 ($generated@@93 ($generated@@202 $generated@@471 $generated@@472) $generated@@473))))
 :pattern ( ($generated@@202 $generated@@471 $generated@@472) ($generated@@93 $generated@@471 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
 (=> (and (and (= (type $generated@@475) ($generated@@88 $generated@@478 $generated@@4)) (= (type $generated@@476) ($generated@@88 $generated@@478 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@476 $generated@@477))) ($generated@@0 ($generated@@93 ($generated@@202 $generated@@475 $generated@@476) $generated@@477))))
 :pattern ( ($generated@@202 $generated@@475 $generated@@476) ($generated@@93 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@480)))
 (=> (and (= (type $generated@@479) ($generated@@88 $generated@@482 $generated@@4)) (= (type $generated@@481) $generated@@482)) (= ($generated@@0 ($generated@@93 ($generated@@463 $generated@@479 $generated@@480) $generated@@481))  (or (= $generated@@481 $generated@@480) ($generated@@0 ($generated@@93 $generated@@479 $generated@@481))))))
 :pattern ( ($generated@@93 ($generated@@463 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@483) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@484) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@485) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@483 $generated@@485))) (and ($generated@@144 $generated@@483 $generated@@484) ($generated@@144 $generated@@484 $generated@@485))) ($generated@@144 $generated@@483 $generated@@485))
 :pattern ( ($generated@@144 $generated@@483 $generated@@484) ($generated@@144 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
 (=> (and (and (= (type $generated@@486) ($generated@@88 $generated@@489 $generated@@4)) (= (type $generated@@487) ($generated@@88 $generated@@489 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@487 $generated@@488))) (not ($generated@@0 ($generated@@93 ($generated@@393 $generated@@486 $generated@@487) $generated@@488)))))
 :pattern ( ($generated@@393 $generated@@486 $generated@@487) ($generated@@93 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@88 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@310 (type $generated@@492))))
(let (($generated@@494 ($generated@@309 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@308 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@307 $generated@@494 $generated@@493)) (= ($generated@@306 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@306 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@310 (type $generated@@495))))
(let (($generated@@497 ($generated@@309 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@308 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@307 $generated@@497 $generated@@496)) (= ($generated@@378 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@378 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@310 (type $generated@@498))))
(let (($generated@@500 ($generated@@309 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@308 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@307 $generated@@500 $generated@@499)) (= ($generated@@426 $generated@@498) ($generated@@490 $generated@@166))))))
 :pattern ( ($generated@@426 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@292 (type $generated@@501))))
(let (($generated@@503 ($generated@@291 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@290 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@289 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@166) (= (type $generated@@505) $generated@@166)) ($generated@@0 ($generated@@93 ($generated@@418 $generated@@501) ($generated@@269 ($generated@@218 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@418 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@310 (type $generated@@506))))
(let (($generated@@508 ($generated@@309 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@308 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@307 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@166) (= (type $generated@@510) $generated@@166)) ($generated@@0 ($generated@@93 ($generated@@426 $generated@@506) ($generated@@269 ($generated@@218 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@426 $generated@@506))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@77)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@T) ) (!  (=> (and (= (type $generated@@513) $generated@@77) (= (type $generated@@514) $generated@@75)) (and (= ($generated@@511 ($generated@@213 $generated@@515 $generated@@513 $generated@@514)) $generated@@513) (= ($generated@@84 ($generated@@213 $generated@@515 $generated@@513 $generated@@514)) $generated@@514)))
 :pattern ( ($generated@@213 $generated@@515 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@166) ($generated@@167 $generated@@516 $generated@@46)) (and (= ($generated@@269 ($generated@@345 $generated@@2 $generated@@516)) $generated@@516) ($generated@@173 ($generated@@345 $generated@@2 $generated@@516) $generated@@46)))
 :pattern ( ($generated@@167 $generated@@516 $generated@@46))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@166) ($generated@@167 $generated@@517 $generated@@47)) (and (= ($generated@@269 ($generated@@345 $generated@@3 $generated@@517)) $generated@@517) ($generated@@173 ($generated@@345 $generated@@3 $generated@@517) $generated@@47)))
 :pattern ( ($generated@@167 $generated@@517 $generated@@47))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@166) ($generated@@167 $generated@@518 $generated@@44)) (and (= ($generated@@269 ($generated@@345 $generated@@4 $generated@@518)) $generated@@518) ($generated@@173 ($generated@@345 $generated@@4 $generated@@518) $generated@@44)))
 :pattern ( ($generated@@167 $generated@@518 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@519) 21))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@166) ($generated@@167 $generated@@520 $generated@@45)) (and (= ($generated@@269 ($generated@@345 $generated@@519 $generated@@520)) $generated@@520) ($generated@@173 ($generated@@345 $generated@@519 $generated@@520) $generated@@45)))
 :pattern ( ($generated@@167 $generated@@520 $generated@@45))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@71) (= ($generated@@167 ($generated@@269 $generated@@521) $generated@@522) ($generated@@173 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@167 ($generated@@269 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@91 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@88 $generated@@524 $generated@@2)) (<= 0 ($generated@@282 $generated@@523))))
 :pattern ( ($generated@@282 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@155 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@154 $generated@@526)) (<= 0 ($generated@@264 $generated@@525))))
 :pattern ( ($generated@@264 $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@71)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@71) (= (type $generated@@530) $generated@@71)) (= ($generated@@527 ($generated@@444 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@444 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@71) (= (type $generated@@534) $generated@@71)) (= ($generated@@531 ($generated@@444 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@444 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@82 ($generated@@444 $generated@@535 $generated@@536)) $generated@@58))
 :pattern ( ($generated@@444 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@71)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@71) (= (type $generated@@540) $generated@@71)) (= ($generated@@537 ($generated@@452 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@452 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@71) (= (type $generated@@544) $generated@@71)) (= ($generated@@541 ($generated@@452 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@452 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@71) (= (type $generated@@546) $generated@@71)) (= ($generated@@82 ($generated@@452 $generated@@545 $generated@@546)) $generated@@59))
 :pattern ( ($generated@@452 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@166) (= (type $generated@@548) $generated@@166)) (= ($generated@@258 ($generated@@218 $generated@@547 $generated@@548)) $generated@@62))
 :pattern ( ($generated@@218 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@71) (= (type $generated@@552) $generated@@71)) (= ($generated@@549 ($generated@@176 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@176 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@71) (= (type $generated@@556) $generated@@71)) (= ($generated@@553 ($generated@@176 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@176 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@166) (= (type $generated@@558) $generated@@166)) (= ($generated@@184 ($generated@@218 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@218 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@166) (= (type $generated@@560) $generated@@166)) (= ($generated@@185 ($generated@@218 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@218 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@154 $generated@@166)) (= (type $generated@@562) $generated@@71)) (= (type $generated@@563) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@561 ($generated@@231 $generated@@562) $generated@@563) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@264 $generated@@561))) ($generated@@252 ($generated@@351 $generated@@561 $generated@@564) $generated@@562 $generated@@563))
 :pattern ( ($generated@@351 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@86 $generated@@561 ($generated@@231 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (=> (= (type $generated@@565) ($generated@@88 $generated@@567 $generated@@4)) ($generated@@0 ($generated@@93 ($generated@@463 $generated@@565 $generated@@566) $generated@@566))))
 :pattern ( ($generated@@463 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@87 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@87 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@71)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@71) (= ($generated@@570 ($generated@@227 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@227 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@71) (= ($generated@@82 ($generated@@227 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@71)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@71) (= ($generated@@574 ($generated@@240 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@240 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@71) (= ($generated@@82 ($generated@@240 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@71)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@71) (= ($generated@@578 ($generated@@194 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@194 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@71) (= ($generated@@82 ($generated@@194 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@194 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@71)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@71) (= ($generated@@582 ($generated@@231 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@231 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@71) (= ($generated@@82 ($generated@@231 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@231 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@345 $generated@@587 ($generated@@269 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@269 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@290 $generated@@166 $generated@@166)) (= (type $generated@@589) $generated@@71)) (= (type $generated@@590) $generated@@71)) (= ($generated@@173 $generated@@588 ($generated@@444 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@166) ($generated@@0 ($generated@@93 ($generated@@288 $generated@@588) $generated@@591))) (and ($generated@@167 ($generated@@93 ($generated@@419 $generated@@588) $generated@@591) $generated@@590) ($generated@@167 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@93 ($generated@@419 $generated@@588) $generated@@591))
 :pattern ( ($generated@@93 ($generated@@288 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@173 $generated@@588 ($generated@@444 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@308 $generated@@166 $generated@@166)) (= (type $generated@@593) $generated@@71)) (= (type $generated@@594) $generated@@71)) (= ($generated@@173 $generated@@592 ($generated@@452 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@166) ($generated@@0 ($generated@@93 ($generated@@306 $generated@@592) $generated@@595))) (and ($generated@@167 ($generated@@93 ($generated@@427 $generated@@592) $generated@@595) $generated@@594) ($generated@@167 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@93 ($generated@@427 $generated@@592) $generated@@595))
 :pattern ( ($generated@@93 ($generated@@306 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@173 $generated@@592 ($generated@@452 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@166) (= (type $generated@@599) $generated@@166)) (< ($generated@@596 $generated@@598) ($generated@@597 ($generated@@218 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@218 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@166) (= (type $generated@@601) $generated@@166)) (< ($generated@@596 $generated@@601) ($generated@@597 ($generated@@218 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@218 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@91 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@88 $generated@@604 $generated@@4)) (= (type $generated@@603) ($generated@@88 $generated@@604 $generated@@4))) (= ($generated@@202 $generated@@602 ($generated@@202 $generated@@602 $generated@@603)) ($generated@@202 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@202 $generated@@602 ($generated@@202 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@166) (= (type $generated@@606) $generated@@71)) (= (type $generated@@607) $generated@@71)) ($generated@@167 $generated@@605 ($generated@@444 $generated@@606 $generated@@607))) (and (= ($generated@@269 ($generated@@345 ($generated@@290 $generated@@166 $generated@@166) $generated@@605)) $generated@@605) ($generated@@173 ($generated@@345 ($generated@@290 $generated@@166 $generated@@166) $generated@@605) ($generated@@444 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@167 $generated@@605 ($generated@@444 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@166) (= (type $generated@@609) $generated@@71)) (= (type $generated@@610) $generated@@71)) ($generated@@167 $generated@@608 ($generated@@452 $generated@@609 $generated@@610))) (and (= ($generated@@269 ($generated@@345 ($generated@@308 $generated@@166 $generated@@166) $generated@@608)) $generated@@608) ($generated@@173 ($generated@@345 ($generated@@308 $generated@@166 $generated@@166) $generated@@608) ($generated@@452 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@167 $generated@@608 ($generated@@452 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@71) (= (type $generated@@612) $generated@@71)) (= (type $generated@@613) $generated@@166)) ($generated@@167 $generated@@613 ($generated@@176 $generated@@611 $generated@@612))) (and (= ($generated@@269 ($generated@@345 $generated@@177 $generated@@613)) $generated@@613) ($generated@@173 ($generated@@345 $generated@@177 $generated@@613) ($generated@@176 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@167 $generated@@613 ($generated@@176 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@615 T@T) ) (! (= (type ($generated@@614 $generated@@615)) ($generated@@88 $generated@@615 $generated@@4))
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
 (not ($generated@@0 ($generated@@93 ($generated@@614 $generated@@617) $generated@@616))))
 :pattern ( (let (($generated@@617 (type $generated@@616)))
($generated@@93 ($generated@@614 $generated@@617) $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (not ($generated@@0 ($generated@@93 ($generated@@490 $generated@@619) $generated@@618))))
 :pattern ( (let (($generated@@619 (type $generated@@618)))
($generated@@93 ($generated@@490 $generated@@619) $generated@@618)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@626 T@T) ($generated@@627 T@T) ) (= ($generated@@1 ($generated@@622 $generated@@626 $generated@@627)) 22)) (forall (($generated@@628 T@T) ($generated@@629 T@T) ) (! (= ($generated@@623 ($generated@@622 $generated@@628 $generated@@629)) $generated@@628)
 :pattern ( ($generated@@622 $generated@@628 $generated@@629))
))) (forall (($generated@@630 T@T) ($generated@@631 T@T) ) (! (= ($generated@@624 ($generated@@622 $generated@@630 $generated@@631)) $generated@@631)
 :pattern ( ($generated@@622 $generated@@630 $generated@@631))
))) (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@624 (type $generated@@632))))
(= (type ($generated@@620 $generated@@632 $generated@@633 $generated@@634)) $generated@@635))
 :pattern ( ($generated@@620 $generated@@632 $generated@@633 $generated@@634))
))) (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
(let (($generated@@641 (type $generated@@637)))
(= (type ($generated@@625 $generated@@636 $generated@@637 $generated@@638 $generated@@639)) ($generated@@622 $generated@@641 $generated@@640))))
 :pattern ( ($generated@@625 $generated@@636 $generated@@637 $generated@@638 $generated@@639))
))) (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@624 (type $generated@@642))))
 (=> (= (type $generated@@645) $generated@@646) (= ($generated@@620 ($generated@@625 $generated@@642 $generated@@643 $generated@@644 $generated@@645) $generated@@643 $generated@@644) $generated@@645)))
 :weight 0
))) (and (and (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (or (= $generated@@649 $generated@@651) (= ($generated@@620 ($generated@@625 $generated@@648 $generated@@649 $generated@@650 $generated@@647) $generated@@651 $generated@@652) ($generated@@620 $generated@@648 $generated@@651 $generated@@652)))
 :weight 0
)) (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (or (= $generated@@656 $generated@@658) (= ($generated@@620 ($generated@@625 $generated@@654 $generated@@655 $generated@@656 $generated@@653) $generated@@657 $generated@@658) ($generated@@620 $generated@@654 $generated@@657 $generated@@658)))
 :weight 0
))) (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (or true (= ($generated@@620 ($generated@@625 $generated@@660 $generated@@661 $generated@@662 $generated@@659) $generated@@663 $generated@@664) ($generated@@620 $generated@@660 $generated@@663 $generated@@664)))
 :weight 0
)))) (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (= (type ($generated@@621 $generated@@665 $generated@@666 $generated@@667 $generated@@668)) ($generated@@622 $generated@@89 $generated@@4))
 :pattern ( ($generated@@621 $generated@@665 $generated@@666 $generated@@667 $generated@@668))
))))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@74 (type $generated@@674))))
 (=> (and (and (and (and (and (= (type $generated@@669) $generated@@89) (= (type $generated@@670) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@671) ($generated@@73 $generated@@4))) (= (type $generated@@672) $generated@@89)) (= (type $generated@@673) $generated@@89)) (= (type $generated@@674) ($generated@@73 $generated@@675))) (= ($generated@@0 ($generated@@620 ($generated@@621 $generated@@669 $generated@@670 $generated@@671 $generated@@672) $generated@@673 $generated@@674))  (=> (and (not (= $generated@@673 $generated@@669)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@670 $generated@@673) $generated@@671))) (= $generated@@673 $generated@@672)))))
 :pattern ( ($generated@@620 ($generated@@621 $generated@@669 $generated@@670 $generated@@671 $generated@@672) $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@677 T@U) ) (! (= (type ($generated@@676 $generated@@677)) $generated@@78)
 :pattern ( ($generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) $generated@@71) (= (type $generated@@679) $generated@@71)) (and (= ($generated@@82 ($generated@@176 $generated@@678 $generated@@679)) $generated@@63) (= ($generated@@676 ($generated@@176 $generated@@678 $generated@@679)) $generated@@67)))
 :pattern ( ($generated@@176 $generated@@678 $generated@@679))
)))
(assert  (and (forall (($generated@@682 T@U) ) (! (let (($generated@@683 ($generated@@155 (type $generated@@682))))
(= (type ($generated@@680 $generated@@682)) ($generated@@154 $generated@@683)))
 :pattern ( ($generated@@680 $generated@@682))
)) (forall (($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@155 (type $generated@@684))))
(= (type ($generated@@681 $generated@@684)) $generated@@685))
 :pattern ( ($generated@@681 $generated@@684))
))))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 (type $generated@@687)))
 (=> (= (type $generated@@686) ($generated@@154 $generated@@688)) (and (= ($generated@@680 ($generated@@153 $generated@@686 $generated@@687)) $generated@@686) (= ($generated@@681 ($generated@@153 $generated@@686 $generated@@687)) $generated@@687))))
 :pattern ( ($generated@@153 $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@177) (= ($generated@@596 ($generated@@269 $generated@@689)) ($generated@@597 $generated@@689)))
 :pattern ( ($generated@@596 ($generated@@269 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@166) ($generated@@167 $generated@@690 ($generated@@87 0))) (and (= ($generated@@269 ($generated@@345 $generated@@2 $generated@@690)) $generated@@690) ($generated@@173 ($generated@@345 ($generated@@88 $generated@@166 $generated@@4) $generated@@690) ($generated@@87 0))))
 :pattern ( ($generated@@167 $generated@@690 ($generated@@87 0)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@166) (= (type $generated@@692) $generated@@71)) ($generated@@167 $generated@@691 ($generated@@227 $generated@@692))) (and (= ($generated@@269 ($generated@@345 ($generated@@88 $generated@@166 $generated@@4) $generated@@691)) $generated@@691) ($generated@@173 ($generated@@345 ($generated@@88 $generated@@166 $generated@@4) $generated@@691) ($generated@@227 $generated@@692))))
 :pattern ( ($generated@@167 $generated@@691 ($generated@@227 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@166) (= (type $generated@@694) $generated@@71)) ($generated@@167 $generated@@693 ($generated@@240 $generated@@694))) (and (= ($generated@@269 ($generated@@345 ($generated@@88 $generated@@166 $generated@@4) $generated@@693)) $generated@@693) ($generated@@173 ($generated@@345 ($generated@@88 $generated@@166 $generated@@4) $generated@@693) ($generated@@240 $generated@@694))))
 :pattern ( ($generated@@167 $generated@@693 ($generated@@240 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@166) (= (type $generated@@696) $generated@@71)) ($generated@@167 $generated@@695 ($generated@@194 $generated@@696))) (and (= ($generated@@269 ($generated@@345 ($generated@@88 $generated@@166 $generated@@2) $generated@@695)) $generated@@695) ($generated@@173 ($generated@@345 ($generated@@88 $generated@@166 $generated@@2) $generated@@695) ($generated@@194 $generated@@696))))
 :pattern ( ($generated@@167 $generated@@695 ($generated@@194 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@166) (= (type $generated@@698) $generated@@71)) ($generated@@167 $generated@@697 ($generated@@231 $generated@@698))) (and (= ($generated@@269 ($generated@@345 ($generated@@154 $generated@@166) $generated@@697)) $generated@@697) ($generated@@173 ($generated@@345 ($generated@@154 $generated@@166) $generated@@697) ($generated@@231 $generated@@698))))
 :pattern ( ($generated@@167 $generated@@697 ($generated@@231 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (! (let (($generated@@703 (type $generated@@702)))
 (=> (and (and (and (= (type $generated@@699) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@700) $generated@@89)) (= (type $generated@@701) ($generated@@73 $generated@@703))) ($generated@@226 ($generated@@94 $generated@@699 $generated@@700 ($generated@@96 ($generated@@93 $generated@@699 $generated@@700) $generated@@701 $generated@@702)))) ($generated@@144 $generated@@699 ($generated@@94 $generated@@699 $generated@@700 ($generated@@96 ($generated@@93 $generated@@699 $generated@@700) $generated@@701 $generated@@702)))))
 :pattern ( ($generated@@94 $generated@@699 $generated@@700 ($generated@@96 ($generated@@93 $generated@@699 $generated@@700) $generated@@701 $generated@@702)))
)))
(assert (= ($generated@@82 $generated@@148) $generated@@65))
(assert (= ($generated@@676 $generated@@148) $generated@@68))
(assert (= ($generated@@82 $generated@@209) $generated@@66))
(assert (= ($generated@@676 $generated@@209) $generated@@68))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@704) ($generated@@88 $generated@@166 $generated@@2)) (= (type $generated@@705) $generated@@71)) (= (type $generated@@706) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@704 ($generated@@194 $generated@@705) $generated@@706) (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@166) (< 0 ($generated ($generated@@93 $generated@@704 $generated@@707)))) ($generated@@252 $generated@@707 $generated@@705 $generated@@706))
 :pattern ( ($generated@@93 $generated@@704 $generated@@707))
))))
 :pattern ( ($generated@@86 $generated@@704 ($generated@@194 $generated@@705) $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@91 (type $generated@@708))))
 (=> (and (= (type $generated@@708) ($generated@@88 $generated@@710 $generated@@4)) (= (type $generated@@709) ($generated@@88 $generated@@710 $generated@@4))) (= ($generated@@392 $generated@@708 $generated@@709) (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@710) (or (not ($generated@@0 ($generated@@93 $generated@@708 $generated@@711))) (not ($generated@@0 ($generated@@93 $generated@@709 $generated@@711)))))
 :pattern ( ($generated@@93 $generated@@708 $generated@@711))
 :pattern ( ($generated@@93 $generated@@709 $generated@@711))
)))))
 :pattern ( ($generated@@392 $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (= (type $generated@@712) $generated@@177) (= (type $generated@@713) $generated@@71)) (= (type $generated@@714) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@226 $generated@@714) (and ($generated@@175 $generated@@712) (exists (($generated@@715 T@U) ) (!  (and (= (type $generated@@715) $generated@@71) ($generated@@86 $generated@@712 ($generated@@176 $generated@@713 $generated@@715) $generated@@714))
 :pattern ( ($generated@@86 $generated@@712 ($generated@@176 $generated@@713 $generated@@715) $generated@@714))
))))) ($generated@@252 ($generated@@184 $generated@@712) $generated@@713 $generated@@714))
 :pattern ( ($generated@@252 ($generated@@184 $generated@@712) $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (and (= (type $generated@@716) $generated@@177) (= (type $generated@@717) $generated@@71)) (= (type $generated@@718) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@226 $generated@@718) (and ($generated@@175 $generated@@716) (exists (($generated@@719 T@U) ) (!  (and (= (type $generated@@719) $generated@@71) ($generated@@86 $generated@@716 ($generated@@176 $generated@@719 $generated@@717) $generated@@718))
 :pattern ( ($generated@@86 $generated@@716 ($generated@@176 $generated@@719 $generated@@717) $generated@@718))
))))) ($generated@@252 ($generated@@185 $generated@@716) $generated@@717 $generated@@718))
 :pattern ( ($generated@@252 ($generated@@185 $generated@@716) $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 Int) ) (! (let (($generated@@723 ($generated@@155 (type $generated@@720))))
 (=> (and (= (type $generated@@720) ($generated@@154 $generated@@723)) (= (type $generated@@721) ($generated@@154 $generated@@723))) (and (=> (< $generated@@722 ($generated@@264 $generated@@720)) (= ($generated@@351 ($generated@@335 $generated@@720 $generated@@721) $generated@@722) ($generated@@351 $generated@@720 $generated@@722))) (=> (<= ($generated@@264 $generated@@720) $generated@@722) (= ($generated@@351 ($generated@@335 $generated@@720 $generated@@721) $generated@@722) ($generated@@351 $generated@@721 (- $generated@@722 ($generated@@264 $generated@@720))))))))
 :pattern ( ($generated@@351 ($generated@@335 $generated@@720 $generated@@721) $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@166) (= (type $generated@@725) $generated@@166)) (= ($generated@@218 ($generated@@245 $generated@@724) ($generated@@245 $generated@@725)) ($generated@@245 ($generated@@218 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@218 ($generated@@245 $generated@@724) ($generated@@245 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ) (! (= ($generated@@269 ($generated@@245 $generated@@726)) ($generated@@245 ($generated@@269 $generated@@726)))
 :pattern ( ($generated@@269 ($generated@@245 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ) (! (let (($generated@@728 ($generated@@155 (type $generated@@727))))
 (=> (and (= (type $generated@@727) ($generated@@154 $generated@@728)) (= ($generated@@264 $generated@@727) 0)) (= $generated@@727 ($generated@@190 $generated@@728))))
 :pattern ( ($generated@@264 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (! (let (($generated@@732 (type $generated@@730)))
 (=> (and (and (= (type $generated@@729) ($generated@@88 $generated@@732 $generated@@2)) (= (type $generated@@731) $generated@@2)) (<= 0 ($generated $generated@@731))) (= ($generated@@282 ($generated@@94 $generated@@729 $generated@@730 $generated@@731)) (+ (- ($generated@@282 $generated@@729) ($generated ($generated@@93 $generated@@729 $generated@@730))) ($generated $generated@@731)))))
 :pattern ( ($generated@@282 ($generated@@94 $generated@@729 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (! (let (($generated@@736 (type $generated@@735)))
 (=> (and (= (type $generated@@733) ($generated@@88 $generated@@736 $generated@@4)) (= (type $generated@@734) ($generated@@88 $generated@@736 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@202 $generated@@733 $generated@@734) $generated@@735))  (or ($generated@@0 ($generated@@93 $generated@@733 $generated@@735)) ($generated@@0 ($generated@@93 $generated@@734 $generated@@735))))))
 :pattern ( ($generated@@93 ($generated@@202 $generated@@733 $generated@@734) $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@738) $generated@@2)) ($generated@@86 $generated@@738 $generated@@46 $generated@@737))
 :pattern ( ($generated@@86 $generated@@738 $generated@@46 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@740) $generated@@3)) ($generated@@86 $generated@@740 $generated@@47 $generated@@739))
 :pattern ( ($generated@@86 $generated@@740 $generated@@47 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@742) $generated@@4)) ($generated@@86 $generated@@742 $generated@@44 $generated@@741))
 :pattern ( ($generated@@86 $generated@@742 $generated@@44 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@744) $generated@@519)) ($generated@@86 $generated@@744 $generated@@45 $generated@@743))
 :pattern ( ($generated@@86 $generated@@744 $generated@@45 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@746) $generated@@166)) ($generated@@86 $generated@@746 $generated@@48 $generated@@745))
 :pattern ( ($generated@@86 $generated@@746 $generated@@48 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@154 $generated@@166)) (= (type $generated@@748) $generated@@71)) (= ($generated@@173 $generated@@747 ($generated@@231 $generated@@748)) (forall (($generated@@749 Int) ) (!  (=> (and (<= 0 $generated@@749) (< $generated@@749 ($generated@@264 $generated@@747))) ($generated@@167 ($generated@@351 $generated@@747 $generated@@749) $generated@@748))
 :pattern ( ($generated@@351 $generated@@747 $generated@@749))
))))
 :pattern ( ($generated@@173 $generated@@747 ($generated@@231 $generated@@748)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 Int) ) (!  (=> (= (type $generated@@751) ($generated@@154 $generated@@166)) (=> (and (<= 0 $generated@@752) (< $generated@@752 ($generated@@264 $generated@@751))) (< ($generated@@597 ($generated@@345 $generated@@177 ($generated@@351 $generated@@751 $generated@@752))) ($generated@@750 $generated@@751))))
 :pattern ( ($generated@@597 ($generated@@345 $generated@@177 ($generated@@351 $generated@@751 $generated@@752))))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) ($generated@@290 $generated@@166 $generated@@166)) (= (type $generated@@754) $generated@@71)) (= (type $generated@@755) $generated@@71)) ($generated@@173 $generated@@753 ($generated@@444 $generated@@754 $generated@@755))) (and (and ($generated@@173 ($generated@@288 $generated@@753) ($generated@@227 $generated@@754)) ($generated@@173 ($generated@@367 $generated@@753) ($generated@@227 $generated@@755))) ($generated@@173 ($generated@@418 $generated@@753) ($generated@@227 ($generated@@176 $generated@@754 $generated@@755)))))
 :pattern ( ($generated@@173 $generated@@753 ($generated@@444 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) ($generated@@308 $generated@@166 $generated@@166)) (= (type $generated@@757) $generated@@71)) (= (type $generated@@758) $generated@@71)) ($generated@@173 $generated@@756 ($generated@@452 $generated@@757 $generated@@758))) (and (and ($generated@@173 ($generated@@306 $generated@@756) ($generated@@240 $generated@@757)) ($generated@@173 ($generated@@378 $generated@@756) ($generated@@240 $generated@@758))) ($generated@@173 ($generated@@426 $generated@@756) ($generated@@240 ($generated@@176 $generated@@757 $generated@@758)))))
 :pattern ( ($generated@@173 $generated@@756 ($generated@@452 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@2) ($generated@@173 $generated@@759 $generated@@46))
 :pattern ( ($generated@@173 $generated@@759 $generated@@46))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@3) ($generated@@173 $generated@@760 $generated@@47))
 :pattern ( ($generated@@173 $generated@@760 $generated@@47))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@4) ($generated@@173 $generated@@761 $generated@@44))
 :pattern ( ($generated@@173 $generated@@761 $generated@@44))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@519) ($generated@@173 $generated@@762 $generated@@45))
 :pattern ( ($generated@@173 $generated@@762 $generated@@45))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@166) ($generated@@173 $generated@@763 $generated@@48))
 :pattern ( ($generated@@173 $generated@@763 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@764 () T@U)
(declare-fun $generated@@765 () T@U)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () T@U)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 (T@U) Bool)
(declare-fun $generated@@773 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@764) ($generated@@622 $generated@@89 $generated@@4)) (= (type $generated@@765) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@766) $generated@@89)) (= (type $generated@@767) ($generated@@154 $generated@@166))) (= (type $generated@@769) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@770) ($generated@@88 $generated@@166 $generated@@4))) (= (type $generated@@771) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@774  (=> (= $generated@@764 ($generated@@621 $generated@@149 $generated@@765 $generated@@60 $generated@@766)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@620 $generated@@764 $generated@@766 $generated@@225))) (=> ($generated@@0 ($generated@@620 $generated@@764 $generated@@766 $generated@@225)) (=> (= $generated@@767 ($generated@@335 ($generated@@95 ($generated@@93 $generated@@765 $generated@@766) $generated@@225) ($generated@@153 ($generated@@190 $generated@@166) ($generated@@269 ($generated@@8 $generated@@768))))) (=> (and (= $generated@@769 ($generated@@94 $generated@@765 $generated@@766 ($generated@@96 ($generated@@93 $generated@@765 $generated@@766) $generated@@225 $generated@@767))) ($generated@@226 $generated@@769)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@620 $generated@@764 $generated@@766 $generated@@212))) (=> ($generated@@0 ($generated@@620 $generated@@764 $generated@@766 $generated@@212)) (=> (and (and (= $generated@@770 ($generated@@202 ($generated@@95 ($generated@@93 $generated@@769 $generated@@766) $generated@@212) ($generated@@463 ($generated@@614 $generated@@166) ($generated@@269 ($generated@@8 $generated@@768))))) (= $generated@@771 ($generated@@94 $generated@@769 $generated@@766 ($generated@@96 ($generated@@93 $generated@@769 $generated@@766) $generated@@212 $generated@@770)))) (and ($generated@@226 $generated@@771) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@330 ($generated@@95 ($generated@@93 $generated@@771 $generated@@766) $generated@@212) ($generated@@165 $generated@@46 ($generated@@95 ($generated@@93 $generated@@771 $generated@@766) $generated@@225)))))))))))))
(let (($generated@@775  (=> (and ($generated@@226 $generated@@765) ($generated@@772 $generated@@765)) (=> (and (and (and (not (= $generated@@766 $generated@@149)) (and ($generated@@173 $generated@@766 $generated@@209) ($generated@@86 $generated@@766 $generated@@209 $generated@@765))) (= 0 $generated@@773)) (and ($generated@@330 ($generated@@95 ($generated@@93 $generated@@765 $generated@@766) $generated@@212) ($generated@@165 $generated@@46 ($generated@@95 ($generated@@93 $generated@@765 $generated@@766) $generated@@225))) (= (ControlFlow 0 5) 2))) $generated@@774))))
$generated@@775)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () Int)
(assert  (and (and (and (and (and (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@575) ($generated@@252 $generated@@145))) (= (type $generated@@577) $generated@@145)) (= (type $generated@@578) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@580  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (=> (and (<= ($generated@@231 10) ($generated@@251 $generated@@575)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@231 4)) (< ($generated@@231 4) ($generated@@251 $generated@@575)))))))
(let (($generated@@581  (=> (and (and (and ($generated@@237 $generated@@574) ($generated@@576 $generated@@574)) (and ($generated@@212 $generated@@577 $generated@@578) ($generated@@238 $generated@@577 $generated@@578 $generated@@574))) (and (and ($generated@@132 $generated@@575 ($generated@@454 $generated@@578)) ($generated@@74 $generated@@575 ($generated@@454 $generated@@578) $generated@@574)) (and (= 1 $generated@@579) (= (ControlFlow 0 3) 2)))) $generated@@580)))
$generated@@581)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@T) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (Int) Bool)
(declare-fun $generated@@254 (Int) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U Int) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@133 $generated@@137 $generated@@138)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@137 $generated@@138))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@134)) (or ($generated@@135 $generated@@139 $generated@@140) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@140 $generated@@139)))) (= ($generated@@133 $generated@@139 $generated@@140) $generated@@140))
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@134)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert  (and (and (forall (($generated@@162 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@162)) 16)) (forall (($generated@@163 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@T) ) (! (= (type ($generated@@159 $generated@@164)) ($generated@@160 $generated@@164))
 :pattern ( ($generated@@159 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@158 ($generated@@159 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@158 ($generated@@159 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@141 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@141 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@229 $generated@@230)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@64) (= (type $generated@@232) $generated@@64)) (= (type $generated@@233) $generated@@134)) (= (type $generated@@234) $generated@@134)) (= ($generated@@141 ($generated@@228 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232))  (and ($generated@@136 $generated@@233 $generated@@231) ($generated@@136 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@145) (= (type $generated@@236) $generated@@145)) (= ($generated@@151 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@151 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@134) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@136 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@134) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@136 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@255 Int) ) (!  (=> (or ($generated@@254 $generated@@255) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@253 $generated@@255))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@64) (= (type $generated@@259) $generated@@64)) (= (type $generated@@260) $generated@@134)) (= (type $generated@@261) $generated@@134)) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@256 $generated@@262)) (= ($generated@@74 ($generated@@228 $generated@@260 $generated@@261) ($generated@@144 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@260 $generated@@261) ($generated@@144 $generated@@258 $generated@@259) $generated@@262))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@134)) (or ($generated@@135 $generated@@263 ($generated@@249 $generated@@264)) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@264 $generated@@263)))) (= ($generated@@133 $generated@@263 ($generated@@249 $generated@@264)) ($generated@@249 $generated@@264)))
 :weight 3
 :pattern ( ($generated@@133 $generated@@263 ($generated@@249 $generated@@264)))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@145) (= ($generated@@143 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@143 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@134) (= (type $generated@@270) $generated@@134)) (= $generated@@268 ($generated@@228 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@143 $generated@@268))
)))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@271 ($generated@@159 $generated@@272)) 0)
 :pattern ( ($generated@@159 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@134)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@257 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@74 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@257 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@79 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@81 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 18)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@168 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@278 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@168 $generated@@320))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@64) (= (type $generated@@324) $generated@@134)) (or ($generated@@135 $generated@@323 $generated@@324) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@324 $generated@@323)))) ($generated@@136 ($generated@@133 $generated@@323 $generated@@324) $generated@@323))
 :pattern ( ($generated@@133 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@288 (type $generated@@325))))
(let (($generated@@327 ($generated@@287 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@286 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@285 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@284 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@288 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@288 (type $generated@@332))))
(let (($generated@@334 ($generated@@287 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@286 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@285 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@306 (type $generated@@336))))
(let (($generated@@338 ($generated@@305 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@304 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@303 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@302 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@306 (type $generated@@343))))
(let (($generated@@345 ($generated@@305 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@304 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@303 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@141 $generated@@347 ($generated@@167 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@136 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@141 $generated@@347 ($generated@@167 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@161 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (=> (= (type $generated@@354) ($generated@@160 $generated@@356)) (= ($generated@@158 $generated@@354 $generated@@355) (exists (($generated@@357 Int) ) (!  (and (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@271 $generated@@354))) (= ($generated@@350 $generated@@354 $generated@@357) $generated@@355))
 :pattern ( ($generated@@350 $generated@@354 $generated@@357))
)))))
 :pattern ( ($generated@@158 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@237 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@134) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@257 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@237 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@242 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@134) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@257 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@242 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@279 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@279 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@288 (type $generated@@374))))
(let (($generated@@376 ($generated@@287 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@378) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@377) ($generated@@152 ($generated@@369 $generated@@145 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@152 ($generated@@369 $generated@@145 $generated@@378))) ($generated@@153 ($generated@@369 $generated@@145 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@306 (type $generated@@382))))
(let (($generated@@384 ($generated@@305 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@386) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@385) ($generated@@152 ($generated@@369 $generated@@145 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@152 ($generated@@369 $generated@@145 $generated@@386))) ($generated@@153 ($generated@@369 $generated@@145 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@287 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@305 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@304 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@400) $generated@@404))) (and ($generated@@257 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@257 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@408) $generated@@412))) (and ($generated@@257 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@257 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@306 (type $generated@@415))))
(let (($generated@@417 ($generated@@305 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@304 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@303 $generated@@417 $generated@@416)) (= ($generated@@302 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@302 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@306 (type $generated@@418))))
(let (($generated@@420 ($generated@@305 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@304 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@303 $generated@@420 $generated@@419)) (= ($generated@@340 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@340 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@306 (type $generated@@421))))
(let (($generated@@423 ($generated@@305 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@304 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@303 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@134))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@288 (type $generated@@424))))
(let (($generated@@426 ($generated@@287 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@286 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@285 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@134) (= (type $generated@@428) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@424) ($generated@@273 ($generated@@228 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@306 (type $generated@@429))))
(let (($generated@@431 ($generated@@305 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@304 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@303 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@134) (= (type $generated@@433) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@273 ($generated@@228 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@134) ($generated@@136 $generated@@434 $generated@@46)) (and (= ($generated@@273 ($generated@@369 $generated@@2 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@369 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@134) ($generated@@136 $generated@@435 $generated@@47)) (and (= ($generated@@273 ($generated@@369 $generated@@3 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@369 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@134) ($generated@@136 $generated@@436 $generated@@44)) (and (= ($generated@@273 ($generated@@369 $generated@@4 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@369 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@134) ($generated@@136 $generated@@438 $generated@@45)) (and (= ($generated@@273 ($generated@@369 $generated@@437 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@369 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@136 ($generated@@273 $generated@@439) $generated@@440) ($generated@@141 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@136 ($generated@@273 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@278 $generated@@441))))
 :pattern ( ($generated@@278 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@161 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@160 $generated@@444)) (<= 0 ($generated@@271 $generated@@443))))
 :pattern ( ($generated@@271 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@134) (= (type $generated@@466) $generated@@134)) (= ($generated@@265 ($generated@@228 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@144 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@144 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@144 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@144 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@134) (= (type $generated@@476) $generated@@134)) (= ($generated@@152 ($generated@@228 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@228 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@134) (= (type $generated@@478) $generated@@134)) (= ($generated@@153 ($generated@@228 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@228 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@160 $generated@@134)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@479 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@271 $generated@@481))) ($generated@@257 ($generated@@350 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@350 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@237 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@237 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@242 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@242 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@167 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@167 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@479 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@479 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@479 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@369 $generated@@504 ($generated@@273 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@273 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@141 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@505) $generated@@508))) (and ($generated@@136 ($generated@@81 ($generated@@370 $generated@@505) $generated@@508) $generated@@507) ($generated@@136 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@141 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@141 $generated@@509 ($generated@@405 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@509) $generated@@512))) (and ($generated@@136 ($generated@@81 ($generated@@380 $generated@@509) $generated@@512) $generated@@511) ($generated@@136 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@141 $generated@@509 ($generated@@405 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@134) (= (type $generated@@516) $generated@@134)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@228 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@228 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@134) (= (type $generated@@518) $generated@@134)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@228 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@228 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@134) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@136 $generated@@519 ($generated@@397 $generated@@520 $generated@@521))) (and (= ($generated@@273 ($generated@@369 ($generated@@286 $generated@@134 $generated@@134) $generated@@519)) $generated@@519) ($generated@@141 ($generated@@369 ($generated@@286 $generated@@134 $generated@@134) $generated@@519) ($generated@@397 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@136 $generated@@519 ($generated@@397 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@134) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@136 $generated@@522 ($generated@@405 $generated@@523 $generated@@524))) (and (= ($generated@@273 ($generated@@369 ($generated@@304 $generated@@134 $generated@@134) $generated@@522)) $generated@@522) ($generated@@141 ($generated@@369 ($generated@@304 $generated@@134 $generated@@134) $generated@@522) ($generated@@405 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@136 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@134)) ($generated@@136 $generated@@527 ($generated@@144 $generated@@525 $generated@@526))) (and (= ($generated@@273 ($generated@@369 $generated@@145 $generated@@527)) $generated@@527) ($generated@@141 ($generated@@369 $generated@@145 $generated@@527) ($generated@@144 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@136 $generated@@527 ($generated@@144 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@413 $generated@@529) $generated@@528)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@531 Int) ) (!  (=> (or ($generated@@254 $generated@@531) (not (= 0 $generated@@132))) (= ($generated@@253 $generated@@531) (= ($generated@@530 $generated@@531 ($generated@@247 2)) ($generated@@247 0))))
 :pattern ( ($generated@@253 $generated@@531))
))))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@530 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@530 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@513 ($generated@@273 $generated@@538)) ($generated@@514 $generated@@538)))
 :pattern ( ($generated@@513 ($generated@@273 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@134) ($generated@@136 $generated@@539 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@369 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@539) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@75 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@134) (= (type $generated@@541) $generated@@64)) ($generated@@136 $generated@@540 ($generated@@237 $generated@@541))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@540) ($generated@@237 $generated@@541))))
 :pattern ( ($generated@@136 $generated@@540 ($generated@@237 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@134) (= (type $generated@@543) $generated@@64)) ($generated@@136 $generated@@542 ($generated@@242 $generated@@543))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@542) ($generated@@242 $generated@@543))))
 :pattern ( ($generated@@136 $generated@@542 ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@134) (= (type $generated@@545) $generated@@64)) ($generated@@136 $generated@@544 ($generated@@167 $generated@@545))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@2) $generated@@544) ($generated@@167 $generated@@545))))
 :pattern ( ($generated@@136 $generated@@544 ($generated@@167 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@134) (= (type $generated@@547) $generated@@64)) ($generated@@136 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@273 ($generated@@369 ($generated@@160 $generated@@134) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@369 ($generated@@160 $generated@@134) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@136 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@548 ($generated@@167 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@548 $generated@@551)))) ($generated@@257 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@81 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@167 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@257 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@257 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@257 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@257 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@134) (= (type $generated@@561) $generated@@134)) (= ($generated@@228 ($generated@@249 $generated@@560) ($generated@@249 $generated@@561)) ($generated@@249 ($generated@@228 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@228 ($generated@@249 $generated@@560) ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@247 $generated@@562))) ($generated@@249 ($generated@@273 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@247 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@273 ($generated@@249 $generated@@563)) ($generated@@249 ($generated@@273 $generated@@563)))
 :pattern ( ($generated@@273 ($generated@@249 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@161 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@160 $generated@@565)) (= ($generated@@271 $generated@@564) 0)) (= $generated@@564 ($generated@@159 $generated@@565))))
 :pattern ( ($generated@@271 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@278 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@278 $generated@@566) ($generated ($generated@@81 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@278 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@570 Int) ) (!  (=> (or ($generated@@254 ($generated@@247 $generated@@570)) (not (= 0 $generated@@132))) (= ($generated@@253 ($generated@@247 $generated@@570)) (= ($generated@@247 ($generated@@530 $generated@@570 ($generated@@247 2))) ($generated@@247 0))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@247 $generated@@570)))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@2)) ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@3)) ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@4)) ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@437)) ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@134)) ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@160 $generated@@134)) (= (type $generated@@582) $generated@@64)) (= ($generated@@141 $generated@@581 ($generated@@479 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@271 $generated@@581))) ($generated@@136 ($generated@@350 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@350 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@141 $generated@@581 ($generated@@479 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@160 $generated@@134)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@271 $generated@@585))) (< ($generated@@514 ($generated@@369 $generated@@145 ($generated@@350 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@514 ($generated@@369 $generated@@145 ($generated@@350 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@141 $generated@@587 ($generated@@397 $generated@@588 $generated@@589))) (and (and ($generated@@141 ($generated@@284 $generated@@587) ($generated@@237 $generated@@588)) ($generated@@141 ($generated@@329 $generated@@587) ($generated@@237 $generated@@589))) ($generated@@141 ($generated@@368 $generated@@587) ($generated@@237 ($generated@@144 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@141 $generated@@587 ($generated@@397 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@141 $generated@@590 ($generated@@405 $generated@@591 $generated@@592))) (and (and ($generated@@141 ($generated@@302 $generated@@590) ($generated@@242 $generated@@591)) ($generated@@141 ($generated@@340 $generated@@590) ($generated@@242 $generated@@592))) ($generated@@141 ($generated@@379 $generated@@590) ($generated@@242 ($generated@@144 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@141 $generated@@590 ($generated@@405 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@141 $generated@@593 $generated@@46))
 :pattern ( ($generated@@141 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@141 $generated@@594 $generated@@47))
 :pattern ( ($generated@@141 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@141 $generated@@595 $generated@@44))
 :pattern ( ($generated@@141 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@437) ($generated@@141 $generated@@596 $generated@@45))
 :pattern ( ($generated@@141 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@134) ($generated@@141 $generated@@597 $generated@@48))
 :pattern ( ($generated@@141 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () Bool)
(declare-fun $generated@@599 () Bool)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Bool)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Bool)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@608) $generated@@64) (= (type $generated@@609) ($generated@@160 $generated@@134))) (= (type $generated@@607) $generated@@134)) (= (type $generated@@612) $generated@@134)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@610) $generated@@134)) (= (type $generated@@613) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@614) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@616 true))
(let (($generated@@617 true))
(let (($generated@@618  (=> (= (ControlFlow 0 4) (- 0 3)) (not $generated@@598))))
(let (($generated@@619  (=> (= $generated@@599  (and (<= ($generated@@247 0) ($generated@@247 72)) (< 72 10))) (=> (and (= $generated@@598 $generated@@599) (= (ControlFlow 0 34) 4)) $generated@@618))))
(let (($generated@@620  (=> (and (not (and (<= ($generated@@247 0) $generated@@600) (< $generated@@600 10))) (= (ControlFlow 0 36) 34)) $generated@@619)))
(let (($generated@@621  (=> (and (and (<= ($generated@@247 0) $generated@@600) (< $generated@@600 10)) (= (ControlFlow 0 35) 34)) $generated@@619)))
(let (($generated@@622  (=> (< $generated@@600 ($generated@@247 0)) (and (=> (= (ControlFlow 0 38) 35) $generated@@621) (=> (= (ControlFlow 0 38) 36) $generated@@620)))))
(let (($generated@@623  (=> (<= ($generated@@247 0) $generated@@600) (and (=> (= (ControlFlow 0 37) 35) $generated@@621) (=> (= (ControlFlow 0 37) 36) $generated@@620)))))
(let (($generated@@624  (and (=> (= (ControlFlow 0 39) 37) $generated@@623) (=> (= (ControlFlow 0 39) 38) $generated@@622))))
(let (($generated@@625  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 40) 39) $generated@@624) (=> (= (ControlFlow 0 40) 33) $generated@@616)))))
(let (($generated@@626  (=> (= $generated@@601  (and (<= ($generated@@247 0) ($generated@@247 (- 0 8))) ($generated@@0 ($generated@@249 ($generated@@11 (< (- 0 8) 10)))))) (=> (and (= $generated@@598 $generated@@601) (= (ControlFlow 0 27) 4)) $generated@@618))))
(let (($generated@@627  (=> (and (<= 10 $generated@@602) (= (ControlFlow 0 30) 27)) $generated@@626)))
(let (($generated@@628  (=> (and (< $generated@@602 10) (= (ControlFlow 0 29) 27)) $generated@@626)))
(let (($generated@@629  (=> (<= ($generated@@247 0) $generated@@602) (and (=> (= (ControlFlow 0 31) 29) $generated@@628) (=> (= (ControlFlow 0 31) 30) $generated@@627)))))
(let (($generated@@630  (=> (and (< $generated@@602 ($generated@@247 0)) (= (ControlFlow 0 28) 27)) $generated@@626)))
(let (($generated@@631  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 32) 31) $generated@@629) (=> (= (ControlFlow 0 32) 28) $generated@@630)))))
(let (($generated@@632  (=> (and (and (forall (($generated@@633 Int) ) (!  (=> (and (<= ($generated@@247 0) $generated@@633) (< $generated@@633 10)) ($generated@@254 $generated@@633))
 :pattern ( ($generated@@253 $generated@@633))
)) (= $generated@@603 (exists (($generated@@634 Int) ) (!  (and (and (and (<= ($generated@@247 0) $generated@@634) (< $generated@@634 10)) ($generated@@253 $generated@@634)) (= ($generated@@273 ($generated@@8 ($generated@@247 6))) ($generated@@273 ($generated@@8 (+ $generated@@634 1)))))
 :pattern ( ($generated@@253 $generated@@634))
)))) (and (= $generated@@598 $generated@@603) (= (ControlFlow 0 18) 4))) $generated@@618)))
(let (($generated@@635  (=> (and (not (and (and (<= ($generated@@247 0) $generated@@604) (< $generated@@604 10)) ($generated@@253 $generated@@604))) (= (ControlFlow 0 20) 18)) $generated@@632)))
(let (($generated@@636  (=> (and (and (and (<= ($generated@@247 0) $generated@@604) (< $generated@@604 10)) ($generated@@253 $generated@@604)) (= (ControlFlow 0 19) 18)) $generated@@632)))
(let (($generated@@637  (=> (not (and (<= ($generated@@247 0) $generated@@604) (< $generated@@604 10))) (and (=> (= (ControlFlow 0 22) 19) $generated@@636) (=> (= (ControlFlow 0 22) 20) $generated@@635)))))
(let (($generated@@638  (=> (and (and (<= ($generated@@247 0) $generated@@604) (< $generated@@604 10)) (and ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605) ($generated@@254 $generated@@604))) (and (=> (= (ControlFlow 0 21) 19) $generated@@636) (=> (= (ControlFlow 0 21) 20) $generated@@635)))))
(let (($generated@@639  (=> (< $generated@@604 ($generated@@247 0)) (and (=> (= (ControlFlow 0 24) 21) $generated@@638) (=> (= (ControlFlow 0 24) 22) $generated@@637)))))
(let (($generated@@640  (=> (<= ($generated@@247 0) $generated@@604) (and (=> (= (ControlFlow 0 23) 21) $generated@@638) (=> (= (ControlFlow 0 23) 22) $generated@@637)))))
(let (($generated@@641  (and (=> (= (ControlFlow 0 25) 23) $generated@@640) (=> (= (ControlFlow 0 25) 24) $generated@@639))))
(let (($generated@@642  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 26) 25) $generated@@641) (=> (= (ControlFlow 0 26) 17) $generated@@617)))))
(let (($generated@@643  (=> (= $generated@@606  (not (and ($generated@@136 $generated@@607 $generated@@608) ($generated@@158 $generated@@609 $generated@@607)))) (=> (and (= $generated@@598 $generated@@606) (= (ControlFlow 0 11) 4)) $generated@@618))))
(let (($generated@@644  (=> (and (not ($generated@@158 $generated@@609 $generated@@610)) (= (ControlFlow 0 14) 11)) $generated@@643)))
(let (($generated@@645  (=> (and ($generated@@158 $generated@@609 $generated@@610) (= (ControlFlow 0 13) 11)) $generated@@643)))
(let (($generated@@646  (=> (and ($generated@@136 $generated@@610 $generated@@608) ($generated@@257 $generated@@610 $generated@@608 $generated@@605)) (and (=> (= (ControlFlow 0 15) 13) $generated@@645) (=> (= (ControlFlow 0 15) 14) $generated@@644)))))
(let (($generated@@647  (=> (and (not (and ($generated@@136 $generated@@610 $generated@@608) ($generated@@257 $generated@@610 $generated@@608 $generated@@605))) (= (ControlFlow 0 12) 11)) $generated@@643)))
(let (($generated@@648  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 16) 15) $generated@@646) (=> (= (ControlFlow 0 16) 12) $generated@@647)))))
(let (($generated@@649  (=> (and (and (forall (($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@134) ($generated@@136 $generated@@650 $generated@@608)) ($generated@@158 $generated@@609 $generated@@650)) ($generated@@135 $generated@@608 $generated@@650))
 :no-pattern (type $generated@@650)
 :no-pattern ($generated $generated@@650)
 :no-pattern ($generated@@0 $generated@@650)
)) (= $generated@@611  (not (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@134) (and (and ($generated@@136 $generated@@651 $generated@@608) ($generated@@158 $generated@@609 $generated@@651)) (= $generated@@607 ($generated@@133 $generated@@608 $generated@@651))))
 :no-pattern (type $generated@@651)
 :no-pattern ($generated $generated@@651)
 :no-pattern ($generated@@0 $generated@@651)
))))) (and (= $generated@@598 $generated@@611) (= (ControlFlow 0 5) 4))) $generated@@618)))
(let (($generated@@652  (=> (and (not ($generated@@158 $generated@@609 $generated@@612)) (= (ControlFlow 0 8) 5)) $generated@@649)))
(let (($generated@@653  (=> (and (and ($generated@@158 $generated@@609 $generated@@612) ($generated@@257 $generated@@612 $generated@@608 $generated@@605)) (and ($generated@@135 $generated@@608 $generated@@612) (= (ControlFlow 0 7) 5))) $generated@@649)))
(let (($generated@@654  (=> (and ($generated@@136 $generated@@612 $generated@@608) ($generated@@257 $generated@@612 $generated@@608 $generated@@605)) (and (=> (= (ControlFlow 0 9) 7) $generated@@653) (=> (= (ControlFlow 0 9) 8) $generated@@652)))))
(let (($generated@@655  (=> (and (not (and ($generated@@136 $generated@@612 $generated@@608) ($generated@@257 $generated@@612 $generated@@608 $generated@@605))) (= (ControlFlow 0 6) 5)) $generated@@649)))
(let (($generated@@656  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 9) $generated@@654) (=> (= (ControlFlow 0 10) 6) $generated@@655)))))
(let (($generated@@657  (=> (and (and (and (and (and (not ($generated@@0 ($generated@@249 ($generated@@11 true)))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@658  (=> (= $generated@@613 ($generated@@173 $generated@@614 $generated@@605 $generated@@60 false)) (and (and (and (and (and (=> (= (ControlFlow 0 41) 40) $generated@@625) (=> (= (ControlFlow 0 41) 32) $generated@@631)) (=> (= (ControlFlow 0 41) 26) $generated@@642)) (=> (= (ControlFlow 0 41) 16) $generated@@648)) (=> (= (ControlFlow 0 41) 10) $generated@@656)) (=> (= (ControlFlow 0 41) 2) $generated@@657)))))
(let (($generated@@659  (=> (and ($generated@@256 $generated@@605) ($generated@@615 $generated@@605)) (=> (and (and (and ($generated@@136 $generated@@607 $generated@@608) ($generated@@257 $generated@@607 $generated@@608 $generated@@605)) (and ($generated@@141 $generated@@609 ($generated@@479 $generated@@608)) ($generated@@74 $generated@@609 ($generated@@479 $generated@@608) $generated@@605))) (and (and (= 1 $generated@@132) (<= ($generated@@247 10) ($generated@@271 $generated@@609))) (and (= ($generated@@350 $generated@@609 ($generated@@247 4)) $generated@@607) (= (ControlFlow 0 42) 41)))) $generated@@658))))
$generated@@659)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () Int)
(assert  (and (and (and (and (and (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@575) ($generated@@252 $generated@@145))) (= (type $generated@@577) $generated@@145)) (= (type $generated@@578) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@580  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (=> (and (<= ($generated@@231 10) ($generated@@251 $generated@@575)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@231 4)) (< ($generated@@231 4) ($generated@@251 $generated@@575)))))))
(let (($generated@@581  (=> (and (and (and ($generated@@237 $generated@@574) ($generated@@576 $generated@@574)) (and ($generated@@212 $generated@@577 $generated@@578) ($generated@@238 $generated@@577 $generated@@578 $generated@@574))) (and (and ($generated@@132 $generated@@575 ($generated@@454 $generated@@578)) ($generated@@74 $generated@@575 ($generated@@454 $generated@@578) $generated@@574)) (and (= 1 $generated@@579) (= (ControlFlow 0 3) 2)))) $generated@@580)))
$generated@@581)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@T) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (Int) Bool)
(declare-fun $generated@@254 (Int) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U Int) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@133 $generated@@137 $generated@@138)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@137 $generated@@138))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@134)) (or ($generated@@135 $generated@@139 $generated@@140) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@140 $generated@@139)))) (= ($generated@@133 $generated@@139 $generated@@140) $generated@@140))
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@134)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert  (and (and (forall (($generated@@162 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@162)) 16)) (forall (($generated@@163 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@T) ) (! (= (type ($generated@@159 $generated@@164)) ($generated@@160 $generated@@164))
 :pattern ( ($generated@@159 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@158 ($generated@@159 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@158 ($generated@@159 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@141 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@141 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@229 $generated@@230)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@64) (= (type $generated@@232) $generated@@64)) (= (type $generated@@233) $generated@@134)) (= (type $generated@@234) $generated@@134)) (= ($generated@@141 ($generated@@228 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232))  (and ($generated@@136 $generated@@233 $generated@@231) ($generated@@136 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@145) (= (type $generated@@236) $generated@@145)) (= ($generated@@151 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@151 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@134) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@136 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@134) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@136 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@255 Int) ) (!  (=> (or ($generated@@254 $generated@@255) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@253 $generated@@255))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@64) (= (type $generated@@259) $generated@@64)) (= (type $generated@@260) $generated@@134)) (= (type $generated@@261) $generated@@134)) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@256 $generated@@262)) (= ($generated@@74 ($generated@@228 $generated@@260 $generated@@261) ($generated@@144 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@260 $generated@@261) ($generated@@144 $generated@@258 $generated@@259) $generated@@262))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@134)) (or ($generated@@135 $generated@@263 ($generated@@249 $generated@@264)) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@264 $generated@@263)))) (= ($generated@@133 $generated@@263 ($generated@@249 $generated@@264)) ($generated@@249 $generated@@264)))
 :weight 3
 :pattern ( ($generated@@133 $generated@@263 ($generated@@249 $generated@@264)))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@145) (= ($generated@@143 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@143 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@134) (= (type $generated@@270) $generated@@134)) (= $generated@@268 ($generated@@228 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@143 $generated@@268))
)))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@271 ($generated@@159 $generated@@272)) 0)
 :pattern ( ($generated@@159 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@134)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@257 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@74 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@257 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@79 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@81 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 18)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@168 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@278 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@168 $generated@@320))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@64) (= (type $generated@@324) $generated@@134)) (or ($generated@@135 $generated@@323 $generated@@324) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@324 $generated@@323)))) ($generated@@136 ($generated@@133 $generated@@323 $generated@@324) $generated@@323))
 :pattern ( ($generated@@133 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@288 (type $generated@@325))))
(let (($generated@@327 ($generated@@287 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@286 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@285 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@284 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@288 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@288 (type $generated@@332))))
(let (($generated@@334 ($generated@@287 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@286 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@285 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@306 (type $generated@@336))))
(let (($generated@@338 ($generated@@305 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@304 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@303 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@302 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@306 (type $generated@@343))))
(let (($generated@@345 ($generated@@305 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@304 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@303 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@141 $generated@@347 ($generated@@167 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@136 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@141 $generated@@347 ($generated@@167 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@161 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (=> (= (type $generated@@354) ($generated@@160 $generated@@356)) (= ($generated@@158 $generated@@354 $generated@@355) (exists (($generated@@357 Int) ) (!  (and (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@271 $generated@@354))) (= ($generated@@350 $generated@@354 $generated@@357) $generated@@355))
 :pattern ( ($generated@@350 $generated@@354 $generated@@357))
)))))
 :pattern ( ($generated@@158 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@237 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@134) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@257 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@237 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@242 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@134) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@257 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@242 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@279 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@279 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@288 (type $generated@@374))))
(let (($generated@@376 ($generated@@287 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@378) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@377) ($generated@@152 ($generated@@369 $generated@@145 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@152 ($generated@@369 $generated@@145 $generated@@378))) ($generated@@153 ($generated@@369 $generated@@145 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@306 (type $generated@@382))))
(let (($generated@@384 ($generated@@305 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@386) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@385) ($generated@@152 ($generated@@369 $generated@@145 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@152 ($generated@@369 $generated@@145 $generated@@386))) ($generated@@153 ($generated@@369 $generated@@145 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@287 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@305 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@304 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@400) $generated@@404))) (and ($generated@@257 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@257 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@408) $generated@@412))) (and ($generated@@257 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@257 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@306 (type $generated@@415))))
(let (($generated@@417 ($generated@@305 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@304 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@303 $generated@@417 $generated@@416)) (= ($generated@@302 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@302 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@306 (type $generated@@418))))
(let (($generated@@420 ($generated@@305 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@304 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@303 $generated@@420 $generated@@419)) (= ($generated@@340 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@340 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@306 (type $generated@@421))))
(let (($generated@@423 ($generated@@305 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@304 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@303 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@134))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@288 (type $generated@@424))))
(let (($generated@@426 ($generated@@287 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@286 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@285 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@134) (= (type $generated@@428) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@424) ($generated@@273 ($generated@@228 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@306 (type $generated@@429))))
(let (($generated@@431 ($generated@@305 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@304 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@303 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@134) (= (type $generated@@433) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@273 ($generated@@228 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@134) ($generated@@136 $generated@@434 $generated@@46)) (and (= ($generated@@273 ($generated@@369 $generated@@2 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@369 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@134) ($generated@@136 $generated@@435 $generated@@47)) (and (= ($generated@@273 ($generated@@369 $generated@@3 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@369 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@134) ($generated@@136 $generated@@436 $generated@@44)) (and (= ($generated@@273 ($generated@@369 $generated@@4 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@369 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@134) ($generated@@136 $generated@@438 $generated@@45)) (and (= ($generated@@273 ($generated@@369 $generated@@437 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@369 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@136 ($generated@@273 $generated@@439) $generated@@440) ($generated@@141 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@136 ($generated@@273 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@278 $generated@@441))))
 :pattern ( ($generated@@278 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@161 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@160 $generated@@444)) (<= 0 ($generated@@271 $generated@@443))))
 :pattern ( ($generated@@271 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@134) (= (type $generated@@466) $generated@@134)) (= ($generated@@265 ($generated@@228 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@144 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@144 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@144 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@144 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@134) (= (type $generated@@476) $generated@@134)) (= ($generated@@152 ($generated@@228 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@228 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@134) (= (type $generated@@478) $generated@@134)) (= ($generated@@153 ($generated@@228 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@228 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@160 $generated@@134)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@479 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@271 $generated@@481))) ($generated@@257 ($generated@@350 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@350 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@237 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@237 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@242 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@242 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@167 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@167 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@479 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@479 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@479 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@369 $generated@@504 ($generated@@273 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@273 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@141 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@505) $generated@@508))) (and ($generated@@136 ($generated@@81 ($generated@@370 $generated@@505) $generated@@508) $generated@@507) ($generated@@136 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@141 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@141 $generated@@509 ($generated@@405 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@509) $generated@@512))) (and ($generated@@136 ($generated@@81 ($generated@@380 $generated@@509) $generated@@512) $generated@@511) ($generated@@136 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@141 $generated@@509 ($generated@@405 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@134) (= (type $generated@@516) $generated@@134)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@228 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@228 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@134) (= (type $generated@@518) $generated@@134)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@228 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@228 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@134) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@136 $generated@@519 ($generated@@397 $generated@@520 $generated@@521))) (and (= ($generated@@273 ($generated@@369 ($generated@@286 $generated@@134 $generated@@134) $generated@@519)) $generated@@519) ($generated@@141 ($generated@@369 ($generated@@286 $generated@@134 $generated@@134) $generated@@519) ($generated@@397 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@136 $generated@@519 ($generated@@397 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@134) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@136 $generated@@522 ($generated@@405 $generated@@523 $generated@@524))) (and (= ($generated@@273 ($generated@@369 ($generated@@304 $generated@@134 $generated@@134) $generated@@522)) $generated@@522) ($generated@@141 ($generated@@369 ($generated@@304 $generated@@134 $generated@@134) $generated@@522) ($generated@@405 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@136 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@134)) ($generated@@136 $generated@@527 ($generated@@144 $generated@@525 $generated@@526))) (and (= ($generated@@273 ($generated@@369 $generated@@145 $generated@@527)) $generated@@527) ($generated@@141 ($generated@@369 $generated@@145 $generated@@527) ($generated@@144 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@136 $generated@@527 ($generated@@144 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@413 $generated@@529) $generated@@528)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@531 Int) ) (!  (=> (or ($generated@@254 $generated@@531) (not (= 0 $generated@@132))) (= ($generated@@253 $generated@@531) (= ($generated@@530 $generated@@531 ($generated@@247 2)) ($generated@@247 0))))
 :pattern ( ($generated@@253 $generated@@531))
))))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@530 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@530 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@513 ($generated@@273 $generated@@538)) ($generated@@514 $generated@@538)))
 :pattern ( ($generated@@513 ($generated@@273 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@134) ($generated@@136 $generated@@539 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@369 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@539) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@75 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@134) (= (type $generated@@541) $generated@@64)) ($generated@@136 $generated@@540 ($generated@@237 $generated@@541))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@540) ($generated@@237 $generated@@541))))
 :pattern ( ($generated@@136 $generated@@540 ($generated@@237 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@134) (= (type $generated@@543) $generated@@64)) ($generated@@136 $generated@@542 ($generated@@242 $generated@@543))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@4) $generated@@542) ($generated@@242 $generated@@543))))
 :pattern ( ($generated@@136 $generated@@542 ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@134) (= (type $generated@@545) $generated@@64)) ($generated@@136 $generated@@544 ($generated@@167 $generated@@545))) (and (= ($generated@@273 ($generated@@369 ($generated@@76 $generated@@134 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@369 ($generated@@76 $generated@@134 $generated@@2) $generated@@544) ($generated@@167 $generated@@545))))
 :pattern ( ($generated@@136 $generated@@544 ($generated@@167 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@134) (= (type $generated@@547) $generated@@64)) ($generated@@136 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@273 ($generated@@369 ($generated@@160 $generated@@134) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@369 ($generated@@160 $generated@@134) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@136 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@548 ($generated@@167 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@548 $generated@@551)))) ($generated@@257 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@81 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@167 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@257 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@257 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@257 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@257 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@134) (= (type $generated@@561) $generated@@134)) (= ($generated@@228 ($generated@@249 $generated@@560) ($generated@@249 $generated@@561)) ($generated@@249 ($generated@@228 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@228 ($generated@@249 $generated@@560) ($generated@@249 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@247 $generated@@562))) ($generated@@249 ($generated@@273 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@247 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@273 ($generated@@249 $generated@@563)) ($generated@@249 ($generated@@273 $generated@@563)))
 :pattern ( ($generated@@273 ($generated@@249 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@161 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@160 $generated@@565)) (= ($generated@@271 $generated@@564) 0)) (= $generated@@564 ($generated@@159 $generated@@565))))
 :pattern ( ($generated@@271 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@278 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@278 $generated@@566) ($generated ($generated@@81 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@278 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@570 Int) ) (!  (=> (or ($generated@@254 ($generated@@247 $generated@@570)) (not (= 0 $generated@@132))) (= ($generated@@253 ($generated@@247 $generated@@570)) (= ($generated@@247 ($generated@@530 $generated@@570 ($generated@@247 2))) ($generated@@247 0))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@247 $generated@@570)))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@2)) ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@3)) ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@4)) ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@437)) ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@134)) ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@160 $generated@@134)) (= (type $generated@@582) $generated@@64)) (= ($generated@@141 $generated@@581 ($generated@@479 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@271 $generated@@581))) ($generated@@136 ($generated@@350 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@350 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@141 $generated@@581 ($generated@@479 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@160 $generated@@134)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@271 $generated@@585))) (< ($generated@@514 ($generated@@369 $generated@@145 ($generated@@350 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@514 ($generated@@369 $generated@@145 ($generated@@350 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@286 $generated@@134 $generated@@134)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@141 $generated@@587 ($generated@@397 $generated@@588 $generated@@589))) (and (and ($generated@@141 ($generated@@284 $generated@@587) ($generated@@237 $generated@@588)) ($generated@@141 ($generated@@329 $generated@@587) ($generated@@237 $generated@@589))) ($generated@@141 ($generated@@368 $generated@@587) ($generated@@237 ($generated@@144 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@141 $generated@@587 ($generated@@397 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@304 $generated@@134 $generated@@134)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@141 $generated@@590 ($generated@@405 $generated@@591 $generated@@592))) (and (and ($generated@@141 ($generated@@302 $generated@@590) ($generated@@242 $generated@@591)) ($generated@@141 ($generated@@340 $generated@@590) ($generated@@242 $generated@@592))) ($generated@@141 ($generated@@379 $generated@@590) ($generated@@242 ($generated@@144 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@141 $generated@@590 ($generated@@405 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@141 $generated@@593 $generated@@46))
 :pattern ( ($generated@@141 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@141 $generated@@594 $generated@@47))
 :pattern ( ($generated@@141 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@141 $generated@@595 $generated@@44))
 :pattern ( ($generated@@141 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@437) ($generated@@141 $generated@@596 $generated@@45))
 :pattern ( ($generated@@141 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@134) ($generated@@141 $generated@@597 $generated@@48))
 :pattern ( ($generated@@141 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () Bool)
(declare-fun $generated@@599 () Bool)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Bool)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Bool)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) ($generated@@160 $generated@@134))) (= (type $generated@@608) $generated@@134)) (= (type $generated@@613) $generated@@134)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) $generated@@134)) (= (type $generated@@614) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@615) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@617 true))
(let (($generated@@618 true))
(let (($generated@@619  (=> (= (ControlFlow 0 4) (- 0 3)) $generated@@598)))
(let (($generated@@620  (=> (= $generated@@599  (and (<= ($generated@@247 0) ($generated@@247 7)) (< 7 10))) (=> (and (= $generated@@598 $generated@@599) (= (ControlFlow 0 35) 4)) $generated@@619))))
(let (($generated@@621  (=> (and (not (and (<= ($generated@@247 0) $generated@@600) (< $generated@@600 10))) (= (ControlFlow 0 37) 35)) $generated@@620)))
(let (($generated@@622  (=> (and (and (<= ($generated@@247 0) $generated@@600) (< $generated@@600 10)) (= (ControlFlow 0 36) 35)) $generated@@620)))
(let (($generated@@623  (=> (< $generated@@600 ($generated@@247 0)) (and (=> (= (ControlFlow 0 39) 36) $generated@@622) (=> (= (ControlFlow 0 39) 37) $generated@@621)))))
(let (($generated@@624  (=> (<= ($generated@@247 0) $generated@@600) (and (=> (= (ControlFlow 0 38) 36) $generated@@622) (=> (= (ControlFlow 0 38) 37) $generated@@621)))))
(let (($generated@@625  (and (=> (= (ControlFlow 0 40) 38) $generated@@624) (=> (= (ControlFlow 0 40) 39) $generated@@623))))
(let (($generated@@626  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 41) 40) $generated@@625) (=> (= (ControlFlow 0 41) 34) $generated@@617)))))
(let (($generated@@627  (=> (= $generated@@601  (and (<= ($generated@@247 0) ($generated@@247 8)) ($generated@@0 ($generated@@249 ($generated@@11 (< 8 10)))))) (=> (and (= $generated@@598 $generated@@601) (= (ControlFlow 0 28) 4)) $generated@@619))))
(let (($generated@@628  (=> (and (<= 10 $generated@@602) (= (ControlFlow 0 31) 28)) $generated@@627)))
(let (($generated@@629  (=> (and (< $generated@@602 10) (= (ControlFlow 0 30) 28)) $generated@@627)))
(let (($generated@@630  (=> (<= ($generated@@247 0) $generated@@602) (and (=> (= (ControlFlow 0 32) 30) $generated@@629) (=> (= (ControlFlow 0 32) 31) $generated@@628)))))
(let (($generated@@631  (=> (and (< $generated@@602 ($generated@@247 0)) (= (ControlFlow 0 29) 28)) $generated@@627)))
(let (($generated@@632  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 33) 32) $generated@@630) (=> (= (ControlFlow 0 33) 29) $generated@@631)))))
(let (($generated@@633  (=> (and (forall (($generated@@634 Int) ) (!  (=> (and (<= ($generated@@247 0) $generated@@634) (< $generated@@634 10)) ($generated@@254 $generated@@634))
 :pattern ( ($generated@@253 $generated@@634))
)) (= $generated@@603 (exists (($generated@@635 Int) ) (!  (and (and (and (<= ($generated@@247 0) $generated@@635) (< $generated@@635 10)) ($generated@@253 $generated@@635)) (= ($generated@@273 ($generated@@8 ($generated@@247 5))) ($generated@@273 ($generated@@8 (+ $generated@@635 1)))))
 :pattern ( ($generated@@253 $generated@@635))
)))) (=> (and (and (= $generated@@604 ($generated@@247 4)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and ($generated@@254 ($generated@@247 4)) ($generated@@254 ($generated@@247 4)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> ($generated@@254 ($generated@@247 4)) (or ($generated@@0 ($generated@@249 ($generated@@11 ($generated@@253 ($generated@@247 4))))) (= ($generated@@247 ($generated@@530 4 ($generated@@247 2))) ($generated@@247 0))))) (=> ($generated@@0 ($generated@@249 ($generated@@11 ($generated@@253 ($generated@@247 4))))) (=> (and (= $generated@@598 $generated@@603) (= (ControlFlow 0 18) 4)) $generated@@619)))))))
(let (($generated@@636  (=> (and (not (and (and (<= ($generated@@247 0) $generated@@606) (< $generated@@606 10)) ($generated@@253 $generated@@606))) (= (ControlFlow 0 21) 18)) $generated@@633)))
(let (($generated@@637  (=> (and (and (and (<= ($generated@@247 0) $generated@@606) (< $generated@@606 10)) ($generated@@253 $generated@@606)) (= (ControlFlow 0 20) 18)) $generated@@633)))
(let (($generated@@638  (=> (not (and (<= ($generated@@247 0) $generated@@606) (< $generated@@606 10))) (and (=> (= (ControlFlow 0 23) 20) $generated@@637) (=> (= (ControlFlow 0 23) 21) $generated@@636)))))
(let (($generated@@639  (=> (and (and (<= ($generated@@247 0) $generated@@606) (< $generated@@606 10)) (and ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605) ($generated@@254 $generated@@606))) (and (=> (= (ControlFlow 0 22) 20) $generated@@637) (=> (= (ControlFlow 0 22) 21) $generated@@636)))))
(let (($generated@@640  (=> (< $generated@@606 ($generated@@247 0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@639) (=> (= (ControlFlow 0 25) 23) $generated@@638)))))
(let (($generated@@641  (=> (<= ($generated@@247 0) $generated@@606) (and (=> (= (ControlFlow 0 24) 22) $generated@@639) (=> (= (ControlFlow 0 24) 23) $generated@@638)))))
(let (($generated@@642  (and (=> (= (ControlFlow 0 26) 24) $generated@@641) (=> (= (ControlFlow 0 26) 25) $generated@@640))))
(let (($generated@@643  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 27) 26) $generated@@642) (=> (= (ControlFlow 0 27) 17) $generated@@618)))))
(let (($generated@@644  (=> (= $generated@@607  (and ($generated@@136 $generated@@608 $generated@@609) ($generated@@158 $generated@@610 $generated@@608))) (=> (and (= $generated@@598 $generated@@607) (= (ControlFlow 0 11) 4)) $generated@@619))))
(let (($generated@@645  (=> (and (not ($generated@@158 $generated@@610 $generated@@611)) (= (ControlFlow 0 14) 11)) $generated@@644)))
(let (($generated@@646  (=> (and ($generated@@158 $generated@@610 $generated@@611) (= (ControlFlow 0 13) 11)) $generated@@644)))
(let (($generated@@647  (=> (and ($generated@@136 $generated@@611 $generated@@609) ($generated@@257 $generated@@611 $generated@@609 $generated@@605)) (and (=> (= (ControlFlow 0 15) 13) $generated@@646) (=> (= (ControlFlow 0 15) 14) $generated@@645)))))
(let (($generated@@648  (=> (and (not (and ($generated@@136 $generated@@611 $generated@@609) ($generated@@257 $generated@@611 $generated@@609 $generated@@605))) (= (ControlFlow 0 12) 11)) $generated@@644)))
(let (($generated@@649  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 16) 15) $generated@@647) (=> (= (ControlFlow 0 16) 12) $generated@@648)))))
(let (($generated@@650  (=> (and (and (forall (($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@134) ($generated@@136 $generated@@651 $generated@@609)) ($generated@@158 $generated@@610 $generated@@651)) ($generated@@135 $generated@@609 $generated@@651))
 :no-pattern (type $generated@@651)
 :no-pattern ($generated $generated@@651)
 :no-pattern ($generated@@0 $generated@@651)
)) (= $generated@@612 (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@134) (and (and ($generated@@136 $generated@@652 $generated@@609) ($generated@@158 $generated@@610 $generated@@652)) (= $generated@@608 ($generated@@133 $generated@@609 $generated@@652))))
 :no-pattern (type $generated@@652)
 :no-pattern ($generated $generated@@652)
 :no-pattern ($generated@@0 $generated@@652)
)))) (and (= $generated@@598 $generated@@612) (= (ControlFlow 0 5) 4))) $generated@@619)))
(let (($generated@@653  (=> (and (not ($generated@@158 $generated@@610 $generated@@613)) (= (ControlFlow 0 8) 5)) $generated@@650)))
(let (($generated@@654  (=> (and (and ($generated@@158 $generated@@610 $generated@@613) ($generated@@257 $generated@@613 $generated@@609 $generated@@605)) (and ($generated@@135 $generated@@609 $generated@@613) (= (ControlFlow 0 7) 5))) $generated@@650)))
(let (($generated@@655  (=> (and ($generated@@136 $generated@@613 $generated@@609) ($generated@@257 $generated@@613 $generated@@609 $generated@@605)) (and (=> (= (ControlFlow 0 9) 7) $generated@@654) (=> (= (ControlFlow 0 9) 8) $generated@@653)))))
(let (($generated@@656  (=> (and (not (and ($generated@@136 $generated@@613 $generated@@609) ($generated@@257 $generated@@613 $generated@@609 $generated@@605))) (= (ControlFlow 0 6) 5)) $generated@@650)))
(let (($generated@@657  (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) 9) $generated@@655) (=> (= (ControlFlow 0 10) 6) $generated@@656)))))
(let (($generated@@658  (=> (and (and (and (and (and (not ($generated@@0 ($generated@@249 ($generated@@11 true)))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (not ($generated@@0 ($generated@@249 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@659  (=> (= $generated@@614 ($generated@@173 $generated@@615 $generated@@605 $generated@@60 false)) (and (and (and (and (and (=> (= (ControlFlow 0 42) 41) $generated@@626) (=> (= (ControlFlow 0 42) 33) $generated@@632)) (=> (= (ControlFlow 0 42) 27) $generated@@643)) (=> (= (ControlFlow 0 42) 16) $generated@@649)) (=> (= (ControlFlow 0 42) 10) $generated@@657)) (=> (= (ControlFlow 0 42) 2) $generated@@658)))))
(let (($generated@@660  (=> (and ($generated@@256 $generated@@605) ($generated@@616 $generated@@605)) (=> (and (and (and ($generated@@136 $generated@@608 $generated@@609) ($generated@@257 $generated@@608 $generated@@609 $generated@@605)) (and ($generated@@141 $generated@@610 ($generated@@479 $generated@@609)) ($generated@@74 $generated@@610 ($generated@@479 $generated@@609) $generated@@605))) (and (and (= 1 $generated@@132) (<= ($generated@@247 10) ($generated@@271 $generated@@610))) (and (= ($generated@@350 $generated@@610 ($generated@@247 4)) $generated@@608) (= (ControlFlow 0 43) 42)))) $generated@@659))))
$generated@@660)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Bool)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@145)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@151 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@151 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@224 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@251 $generated@@526) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@526) (= ($generated@@525 $generated@@526 ($generated@@243 2)) ($generated@@243 0))))
 :pattern ( ($generated@@250 $generated@@526))
))))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@525 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@274 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@254 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@274 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@274 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@274 $generated@@558)))
 :pattern ( ($generated@@274 ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@269 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@268 $generated@@560)) (= ($generated@@267 $generated@@559) 0)) (= $generated@@559 ($generated@@266 $generated@@560))))
 :pattern ( ($generated@@267 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@279 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@565)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@565)) (= ($generated@@243 ($generated@@525 $generated@@565 ($generated@@243 2))) ($generated@@243 0))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@565)))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@428)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@224 ($generated@@471 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@471 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@285 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@328 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@359 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@303 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@339 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@370 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@428) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@598  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 2) 0)))))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@596 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@599) (=> (= (ControlFlow 0 4) 3) $generated@@598)))))
(let (($generated@@601  (=> (and (and ($generated@@253 $generated@@595) ($generated@@597 $generated@@595)) (and (= 0 $generated@@249) (= (ControlFlow 0 5) 4))) $generated@@600)))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@T) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U Int) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) Bool)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@494 (T@T) T@U)
(declare-fun $generated@@518 () T@T)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@613 (T@T) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@689 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@141)) 14)) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@139 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 (type $generated@@144)))
(= (type ($generated@@138 $generated@@143 $generated@@144)) ($generated@@139 $generated@@145)))
 :pattern ( ($generated@@138 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 (type $generated@@147)))
 (=> (and (= (type $generated@@146) ($generated@@139 $generated@@149)) (= (type $generated@@148) $generated@@149)) (= ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148)  (or (= $generated@@147 $generated@@148) ($generated@@137 $generated@@146 $generated@@148)))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@150 $generated@@153 $generated@@154)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@150 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@66) (= (type $generated@@156) ($generated@@139 $generated@@151))) (= (type $generated@@157) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@150 $generated@@155 $generated@@156) $generated@@157))  (and ($generated@@152 $generated@@157 $generated@@155) ($generated@@137 $generated@@156 $generated@@157))))
 :pattern ( ($generated@@83 ($generated@@150 $generated@@155 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@77 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@66) (= (type $generated@@166) $generated@@66)) (= (type $generated@@167) $generated@@162)) ($generated@@158 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@158 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@151)
 :pattern ( ($generated@@169 $generated@@171))
)) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@151)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@162) (= (type $generated@@174) $generated@@162)) true) (= ($generated@@168 $generated@@173 $generated@@174)  (and (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (= ($generated@@170 $generated@@173) ($generated@@170 $generated@@174)))))
 :pattern ( ($generated@@168 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@T) ) (! (= (type ($generated@@175 $generated@@176)) ($generated@@139 $generated@@176))
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
 (not ($generated@@137 ($generated@@175 $generated@@178) $generated@@177)))
 :pattern ( (let (($generated@@178 (type $generated@@177)))
($generated@@137 ($generated@@175 $generated@@178) $generated@@177)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@66)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@183) $generated@@66)) ($generated@@158 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@158 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 17)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@79 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@69 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@79) (= (type $generated@@234) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@235) ($generated@@68 $generated@@4))) (= (type $generated@@237) $generated@@79)) (= (type $generated@@238) ($generated@@68 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@81 (type $generated@@241))))
(= (type ($generated@@240 $generated@@241 $generated@@242)) ($generated@@78 $generated@@243 $generated@@4)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@81 (type $generated@@244))))
 (=> (and (= (type $generated@@244) ($generated@@78 $generated@@246 $generated@@4)) (= (type $generated@@245) ($generated@@78 $generated@@246 $generated@@4))) (= ($generated@@240 ($generated@@240 $generated@@244 $generated@@245) $generated@@245) ($generated@@240 $generated@@244 $generated@@245))))
 :pattern ( ($generated@@240 ($generated@@240 $generated@@244 $generated@@245) $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249)) $generated@@162)
 :pattern ( ($generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@66) (= (type $generated@@251) $generated@@66)) (= (type $generated@@252) $generated@@151)) (= (type $generated@@253) $generated@@151)) (= ($generated@@158 ($generated@@247 $generated@@252 $generated@@253) ($generated@@161 $generated@@250 $generated@@251))  (and ($generated@@152 $generated@@252 $generated@@250) ($generated@@152 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@158 ($generated@@247 $generated@@252 $generated@@253) ($generated@@161 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@162) (= (type $generated@@255) $generated@@162)) (= ($generated@@168 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@168 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@66)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@259) $generated@@66)) (= ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@151) ($generated@@0 ($generated@@83 $generated@@258 $generated@@260))) ($generated@@152 $generated@@260 $generated@@259))
 :pattern ( ($generated@@83 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@264) $generated@@66)) (= ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@151) ($generated@@0 ($generated@@83 $generated@@263 $generated@@265))) ($generated@@152 $generated@@265 $generated@@264))
 :pattern ( ($generated@@83 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@66)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) ($generated@@139 $generated@@151)) (= (type $generated@@275) $generated@@151)) (= (type $generated@@276) $generated@@66)) (and ($generated@@158 $generated@@274 ($generated@@272 $generated@@276)) ($generated@@152 $generated@@275 $generated@@276))) ($generated@@158 ($generated@@138 $generated@@274 $generated@@275) ($generated@@272 $generated@@276)))
 :pattern ( ($generated@@158 ($generated@@138 $generated@@274 $generated@@275) ($generated@@272 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@66) (= (type $generated@@280) $generated@@66)) (= (type $generated@@281) $generated@@151)) (= (type $generated@@282) $generated@@151)) (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@277 $generated@@283)) (= ($generated@@76 ($generated@@247 $generated@@281 $generated@@282) ($generated@@161 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@281 $generated@@282) ($generated@@161 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@70)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@162) (= ($generated@@160 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@162) ($generated@@160 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@151) (= (type $generated@@289) $generated@@151)) (= $generated@@287 ($generated@@247 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@160 $generated@@287))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@290 ($generated@@175 $generated@@291)) 0)
 :pattern ( ($generated@@175 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@158 $generated@@292 $generated@@134) (<= ($generated@@266 0) ($generated $generated@@292))))
 :pattern ( ($generated@@158 $generated@@292 $generated@@134))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
 (=> (= (type $generated@@293) ($generated@@139 $generated@@295)) (= ($generated@@290 ($generated@@138 $generated@@293 $generated@@294)) (+ 1 ($generated@@290 $generated@@293)))))
 :pattern ( ($generated@@138 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@151)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@66) (= (type $generated@@300) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@278 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@76 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@278 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@78 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@81 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@78 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@83 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@78 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@83 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@83 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@81 (type $generated@@344))))
 (=> (and (= (type $generated@@344) ($generated@@78 $generated@@346 $generated@@4)) (= (type $generated@@345) ($generated@@78 $generated@@346 $generated@@4))) (= ($generated@@343 $generated@@344 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (= ($generated@@0 ($generated@@83 $generated@@344 $generated@@347)) ($generated@@0 ($generated@@83 $generated@@345 $generated@@347))))
 :pattern ( ($generated@@83 $generated@@344 $generated@@347))
 :pattern ( ($generated@@83 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@140 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349 $generated@@350)) ($generated@@139 $generated@@351)))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@140 (type $generated@@352))))
 (=> (and (= (type $generated@@352) ($generated@@139 $generated@@354)) (= (type $generated@@353) ($generated@@139 $generated@@354))) (= ($generated@@290 ($generated@@348 $generated@@352 $generated@@353)) (+ ($generated@@290 $generated@@352) ($generated@@290 $generated@@353)))))
 :pattern ( ($generated@@290 ($generated@@348 $generated@@352 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@81 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@78 $generated@@356 $generated@@2)) (= ($generated@@180 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@83 $generated@@355 $generated@@357))) (<= ($generated ($generated@@83 $generated@@355 $generated@@357)) ($generated@@301 $generated@@355))))
 :pattern ( ($generated@@83 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@180 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@151) ($generated@@152 $generated@@361 $generated@@134)) (and (= ($generated@@296 ($generated@@358 $generated@@2 $generated@@361)) $generated@@361) ($generated@@158 ($generated@@358 $generated@@2 $generated@@361) $generated@@134)))
 :pattern ( ($generated@@152 $generated@@361 $generated@@134))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (! (let (($generated@@365 ($generated@@140 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@365))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@366) ($generated@@139 $generated@@369)) (and (=> (= $generated@@367 ($generated@@290 $generated@@366)) (= ($generated@@362 ($generated@@138 $generated@@366 $generated@@368) $generated@@367) $generated@@368)) (=> (not (= $generated@@367 ($generated@@290 $generated@@366))) (= ($generated@@362 ($generated@@138 $generated@@366 $generated@@368) $generated@@367) ($generated@@362 $generated@@366 $generated@@367))))))
 :pattern ( ($generated@@362 ($generated@@138 $generated@@366 $generated@@368) $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@311 (type $generated@@370))))
(let (($generated@@372 ($generated@@310 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@309 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@308 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@307 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@311 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@311 (type $generated@@377))))
(let (($generated@@379 ($generated@@310 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@309 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@308 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@329 (type $generated@@381))))
(let (($generated@@383 ($generated@@328 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@327 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@326 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@325 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@329 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@78 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@329 (type $generated@@388))))
(let (($generated@@390 ($generated@@328 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@327 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@326 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@83 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@393) $generated@@66)) (= ($generated@@158 $generated@@392 ($generated@@179 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) ($generated@@152 $generated@@394 $generated@@393))
 :pattern ( ($generated@@83 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@158 $generated@@392 ($generated@@179 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
 (=> (and (= (type $generated@@395) ($generated@@139 $generated@@398)) (= (type $generated@@396) ($generated@@139 $generated@@398))) (= ($generated@@137 ($generated@@348 $generated@@395 $generated@@396) $generated@@397)  (or ($generated@@137 $generated@@395 $generated@@397) ($generated@@137 $generated@@396 $generated@@397)))))
 :pattern ( ($generated@@137 ($generated@@348 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@81 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401 $generated@@402)) ($generated@@78 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@81 (type $generated@@404))))
 (=> (and (and (= (type $generated@@404) ($generated@@78 $generated@@406 $generated@@4)) (= (type $generated@@405) ($generated@@78 $generated@@406 $generated@@4))) ($generated@@399 $generated@@404 $generated@@405)) (and (= ($generated@@400 ($generated@@240 $generated@@404 $generated@@405) $generated@@404) $generated@@405) (= ($generated@@400 ($generated@@240 $generated@@404 $generated@@405) $generated@@405) $generated@@404))))
 :pattern ( ($generated@@240 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
 (=> (= (type $generated@@407) ($generated@@139 $generated@@409)) (= ($generated@@137 $generated@@407 $generated@@408) (exists (($generated@@410 Int) ) (!  (and (and (<= 0 $generated@@410) (< $generated@@410 ($generated@@290 $generated@@407))) (= ($generated@@362 $generated@@407 $generated@@410) $generated@@408))
 :pattern ( ($generated@@362 $generated@@407 $generated@@410))
)))))
 :pattern ( ($generated@@137 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
 (=> (and (= (type $generated@@411) ($generated@@78 $generated@@414 $generated@@4)) (= (type $generated@@412) ($generated@@78 $generated@@414 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@400 $generated@@411 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 $generated@@411 $generated@@413)) (not ($generated@@0 ($generated@@83 $generated@@412 $generated@@413)))))))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@256 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@151) ($generated@@0 ($generated@@83 $generated@@415 $generated@@418))) ($generated@@278 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@83 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@256 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@419 ($generated@@261 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@151) ($generated@@0 ($generated@@83 $generated@@419 $generated@@422))) ($generated@@278 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@83 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@419 ($generated@@261 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(= ($generated ($generated@@83 ($generated@@302 $generated@@424) $generated@@423)) 0))
 :pattern ( (let (($generated@@424 (type $generated@@423)))
($generated@@83 ($generated@@302 $generated@@424) $generated@@423)))
)))
(assert  (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@425 $generated@@427))
)) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
(= (type ($generated@@426 $generated@@428)) ($generated@@78 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@426 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@309 $generated@@151 $generated@@151)) (= (type $generated@@432) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@425 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@431) ($generated@@169 ($generated@@358 $generated@@162 $generated@@432)))) (= ($generated@@83 ($generated@@426 $generated@@431) ($generated@@169 ($generated@@358 $generated@@162 $generated@@432))) ($generated@@170 ($generated@@358 $generated@@162 $generated@@432))))))
 :pattern ( ($generated@@83 ($generated@@425 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@329 (type $generated@@436))))
(let (($generated@@438 ($generated@@328 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@78 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@440) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@83 ($generated@@325 $generated@@439) ($generated@@169 ($generated@@358 $generated@@162 $generated@@440)))) (= ($generated@@83 ($generated@@434 $generated@@439) ($generated@@169 ($generated@@358 $generated@@162 $generated@@440))) ($generated@@170 ($generated@@358 $generated@@162 $generated@@440))))))
 :pattern ( ($generated@@83 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@83 ($generated@@426 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@441) $generated@@445))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@83 ($generated@@385 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@83 ($generated@@325 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@83 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@446) $generated@@450))
 :pattern ( ($generated@@83 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@309 $generated@@151 $generated@@151)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@83 ($generated@@426 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@454) $generated@@458))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@76 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) $generated@@66)) (= (type $generated@@465) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@83 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@83 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@76 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@81 (type $generated@@467))))
 (=> (and (and (= (type $generated@@467) ($generated@@78 $generated@@469 $generated@@4)) (= (type $generated@@468) ($generated@@78 $generated@@469 $generated@@4))) ($generated@@343 $generated@@467 $generated@@468)) (= $generated@@467 $generated@@468)))
 :pattern ( ($generated@@343 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
(= (type ($generated@@470 $generated@@471 $generated@@472)) ($generated@@78 $generated@@473 $generated@@4)))
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@475)))
 (=> (and (and (= (type $generated@@474) ($generated@@78 $generated@@477 $generated@@4)) (= (type $generated@@476) $generated@@477)) ($generated@@0 ($generated@@83 $generated@@474 $generated@@476))) ($generated@@0 ($generated@@83 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))))
 :pattern ( ($generated@@470 $generated@@474 $generated@@475) ($generated@@83 $generated@@474 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
 (=> (and (and (= (type $generated@@478) ($generated@@78 $generated@@481 $generated@@4)) (= (type $generated@@479) ($generated@@78 $generated@@481 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@478 $generated@@480))) ($generated@@0 ($generated@@83 ($generated@@240 $generated@@478 $generated@@479) $generated@@480))))
 :pattern ( ($generated@@240 $generated@@478 $generated@@479) ($generated@@83 $generated@@478 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
 (=> (and (and (= (type $generated@@482) ($generated@@78 $generated@@485 $generated@@4)) (= (type $generated@@483) ($generated@@78 $generated@@485 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@483 $generated@@484))) ($generated@@0 ($generated@@83 ($generated@@240 $generated@@482 $generated@@483) $generated@@484))))
 :pattern ( ($generated@@240 $generated@@482 $generated@@483) ($generated@@83 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@487)))
 (=> (and (= (type $generated@@486) ($generated@@78 $generated@@489 $generated@@4)) (= (type $generated@@488) $generated@@489)) (= ($generated@@0 ($generated@@83 ($generated@@470 $generated@@486 $generated@@487) $generated@@488))  (or (= $generated@@488 $generated@@487) ($generated@@0 ($generated@@83 $generated@@486 $generated@@488))))))
 :pattern ( ($generated@@83 ($generated@@470 $generated@@486 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
 (=> (and (and (= (type $generated@@490) ($generated@@78 $generated@@493 $generated@@4)) (= (type $generated@@491) ($generated@@78 $generated@@493 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@491 $generated@@492))) (not ($generated@@0 ($generated@@83 ($generated@@400 $generated@@490 $generated@@491) $generated@@492)))))
 :pattern ( ($generated@@400 $generated@@490 $generated@@491) ($generated@@83 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@495 T@T) ) (! (= (type ($generated@@494 $generated@@495)) ($generated@@78 $generated@@495 $generated@@4))
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@329 (type $generated@@496))))
(let (($generated@@498 ($generated@@328 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@327 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@326 $generated@@498 $generated@@497)) (= ($generated@@325 $generated@@496) ($generated@@494 $generated@@498))))))
 :pattern ( ($generated@@325 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@329 (type $generated@@499))))
(let (($generated@@501 ($generated@@328 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@327 $generated@@501 $generated@@500)) (= (= $generated@@499 ($generated@@326 $generated@@501 $generated@@500)) (= ($generated@@385 $generated@@499) ($generated@@494 $generated@@500))))))
 :pattern ( ($generated@@385 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@329 (type $generated@@502))))
(let (($generated@@504 ($generated@@328 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@327 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@326 $generated@@504 $generated@@503)) (= ($generated@@433 $generated@@502) ($generated@@494 $generated@@151))))))
 :pattern ( ($generated@@433 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@311 (type $generated@@505))))
(let (($generated@@507 ($generated@@310 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@309 $generated@@507 $generated@@506)) (or (= $generated@@505 ($generated@@308 $generated@@507 $generated@@506)) (exists (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (and (and (= (type $generated@@508) $generated@@151) (= (type $generated@@509) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@425 $generated@@505) ($generated@@296 ($generated@@247 $generated@@508 $generated@@509)))))
 :no-pattern (type $generated@@508)
 :no-pattern (type $generated@@509)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
))))))
 :pattern ( ($generated@@425 $generated@@505))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@329 (type $generated@@510))))
(let (($generated@@512 ($generated@@328 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@327 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@326 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@151) (= (type $generated@@514) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@433 $generated@@510) ($generated@@296 ($generated@@247 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@433 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@151) ($generated@@152 $generated@@515 $generated@@46)) (and (= ($generated@@296 ($generated@@358 $generated@@2 $generated@@515)) $generated@@515) ($generated@@158 ($generated@@358 $generated@@2 $generated@@515) $generated@@46)))
 :pattern ( ($generated@@152 $generated@@515 $generated@@46))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@151) ($generated@@152 $generated@@516 $generated@@47)) (and (= ($generated@@296 ($generated@@358 $generated@@3 $generated@@516)) $generated@@516) ($generated@@158 ($generated@@358 $generated@@3 $generated@@516) $generated@@47)))
 :pattern ( ($generated@@152 $generated@@516 $generated@@47))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@151) ($generated@@152 $generated@@517 $generated@@44)) (and (= ($generated@@296 ($generated@@358 $generated@@4 $generated@@517)) $generated@@517) ($generated@@158 ($generated@@358 $generated@@4 $generated@@517) $generated@@44)))
 :pattern ( ($generated@@152 $generated@@517 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@518) 20))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@151) ($generated@@152 $generated@@519 $generated@@45)) (and (= ($generated@@296 ($generated@@358 $generated@@518 $generated@@519)) $generated@@519) ($generated@@158 ($generated@@358 $generated@@518 $generated@@519) $generated@@45)))
 :pattern ( ($generated@@152 $generated@@519 $generated@@45))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@152 ($generated@@296 $generated@@520) $generated@@521) ($generated@@158 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@152 ($generated@@296 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@81 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@78 $generated@@523 $generated@@2)) (<= 0 ($generated@@301 $generated@@522))))
 :pattern ( ($generated@@301 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@140 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@139 $generated@@525)) (<= 0 ($generated@@290 $generated@@524))))
 :pattern ( ($generated@@290 $generated@@524))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@66)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@526 ($generated@@451 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@451 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@66)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (= ($generated@@530 ($generated@@451 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@451 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@66) (= (type $generated@@535) $generated@@66)) (= ($generated@@74 ($generated@@451 $generated@@534 $generated@@535)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= ($generated@@536 ($generated@@459 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@459 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@66)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (= ($generated@@540 ($generated@@459 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@459 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= ($generated@@74 ($generated@@459 $generated@@544 $generated@@545)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@151) (= (type $generated@@547) $generated@@151)) (= ($generated@@284 ($generated@@247 $generated@@546 $generated@@547)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (= ($generated@@548 ($generated@@161 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@161 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@66) (= (type $generated@@555) $generated@@66)) (= ($generated@@552 ($generated@@161 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@161 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@151)) (= ($generated@@169 ($generated@@247 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@247 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@151)) (= ($generated@@170 ($generated@@247 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@247 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@139 $generated@@151)) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@560 ($generated@@272 $generated@@561) $generated@@562) (forall (($generated@@563 Int) ) (!  (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@290 $generated@@560))) ($generated@@278 ($generated@@362 $generated@@560 $generated@@563) $generated@@561 $generated@@562))
 :pattern ( ($generated@@362 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@272 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (=> (= (type $generated@@564) ($generated@@78 $generated@@566 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@470 $generated@@564 $generated@@565) $generated@@565))))
 :pattern ( ($generated@@470 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@567 ($generated@@77 $generated@@568)) $generated@@568)
 :pattern ( ($generated@@77 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@569 ($generated@@256 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@256 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@74 ($generated@@256 $generated@@572)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@573 ($generated@@261 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@261 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@74 ($generated@@261 $generated@@576)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@66)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@66) (= ($generated@@577 ($generated@@179 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@179 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@66) (= ($generated@@74 ($generated@@179 $generated@@580)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@66)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@66) (= ($generated@@581 ($generated@@272 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@272 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@66) (= ($generated@@74 ($generated@@272 $generated@@584)) $generated@@57))
 :pattern ( ($generated@@272 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
(= ($generated@@358 $generated@@586 ($generated@@296 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@296 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@309 $generated@@151 $generated@@151)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) (= ($generated@@158 $generated@@587 ($generated@@451 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@587) $generated@@590))) (and ($generated@@152 ($generated@@83 ($generated@@426 $generated@@587) $generated@@590) $generated@@589) ($generated@@152 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@587) $generated@@590))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@158 $generated@@587 ($generated@@451 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) (= ($generated@@158 $generated@@591 ($generated@@459 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@591) $generated@@594))) (and ($generated@@152 ($generated@@83 ($generated@@434 $generated@@591) $generated@@594) $generated@@593) ($generated@@152 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@83 ($generated@@434 $generated@@591) $generated@@594))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@158 $generated@@591 ($generated@@459 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@151) (= (type $generated@@598) $generated@@151)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@247 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@247 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@151) (= (type $generated@@600) $generated@@151)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@247 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@247 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@81 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@78 $generated@@603 $generated@@4)) (= (type $generated@@602) ($generated@@78 $generated@@603 $generated@@4))) (= ($generated@@240 $generated@@601 ($generated@@240 $generated@@601 $generated@@602)) ($generated@@240 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@240 $generated@@601 ($generated@@240 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@151) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@152 $generated@@604 ($generated@@451 $generated@@605 $generated@@606))) (and (= ($generated@@296 ($generated@@358 ($generated@@309 $generated@@151 $generated@@151) $generated@@604)) $generated@@604) ($generated@@158 ($generated@@358 ($generated@@309 $generated@@151 $generated@@151) $generated@@604) ($generated@@451 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@152 $generated@@604 ($generated@@451 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@151) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@152 $generated@@607 ($generated@@459 $generated@@608 $generated@@609))) (and (= ($generated@@296 ($generated@@358 ($generated@@327 $generated@@151 $generated@@151) $generated@@607)) $generated@@607) ($generated@@158 ($generated@@358 ($generated@@327 $generated@@151 $generated@@151) $generated@@607) ($generated@@459 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@152 $generated@@607 ($generated@@459 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@66) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@151)) ($generated@@152 $generated@@612 ($generated@@161 $generated@@610 $generated@@611))) (and (= ($generated@@296 ($generated@@358 $generated@@162 $generated@@612)) $generated@@612) ($generated@@158 ($generated@@358 $generated@@162 $generated@@612) ($generated@@161 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@152 $generated@@612 ($generated@@161 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@614 T@T) ) (! (= (type ($generated@@613 $generated@@614)) ($generated@@78 $generated@@614 $generated@@4))
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
 (not ($generated@@0 ($generated@@83 ($generated@@613 $generated@@616) $generated@@615))))
 :pattern ( (let (($generated@@616 (type $generated@@615)))
($generated@@83 ($generated@@613 $generated@@616) $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@617)))
 (not ($generated@@0 ($generated@@83 ($generated@@494 $generated@@618) $generated@@617))))
 :pattern ( (let (($generated@@618 (type $generated@@617)))
($generated@@83 ($generated@@494 $generated@@618) $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@71)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@66) (= (type $generated@@622) $generated@@66)) (and (= ($generated@@74 ($generated@@161 $generated@@621 $generated@@622)) $generated@@63) (= ($generated@@619 ($generated@@161 $generated@@621 $generated@@622)) $generated@@65)))
 :pattern ( ($generated@@161 $generated@@621 $generated@@622))
)))
(assert  (and (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@140 (type $generated@@625))))
(= (type ($generated@@623 $generated@@625)) ($generated@@139 $generated@@626)))
 :pattern ( ($generated@@623 $generated@@625))
)) (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@140 (type $generated@@627))))
(= (type ($generated@@624 $generated@@627)) $generated@@628))
 :pattern ( ($generated@@624 $generated@@627))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
 (=> (= (type $generated@@629) ($generated@@139 $generated@@631)) (and (= ($generated@@623 ($generated@@138 $generated@@629 $generated@@630)) $generated@@629) (= ($generated@@624 ($generated@@138 $generated@@629 $generated@@630)) $generated@@630))))
 :pattern ( ($generated@@138 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@162) (= ($generated@@595 ($generated@@296 $generated@@632)) ($generated@@596 $generated@@632)))
 :pattern ( ($generated@@595 ($generated@@296 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@151) ($generated@@152 $generated@@633 ($generated@@77 0))) (and (= ($generated@@296 ($generated@@358 $generated@@2 $generated@@633)) $generated@@633) ($generated@@158 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@633) ($generated@@77 0))))
 :pattern ( ($generated@@152 $generated@@633 ($generated@@77 0)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@151) (= (type $generated@@635) $generated@@66)) ($generated@@152 $generated@@634 ($generated@@256 $generated@@635))) (and (= ($generated@@296 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@634)) $generated@@634) ($generated@@158 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@634) ($generated@@256 $generated@@635))))
 :pattern ( ($generated@@152 $generated@@634 ($generated@@256 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@151) (= (type $generated@@637) $generated@@66)) ($generated@@152 $generated@@636 ($generated@@261 $generated@@637))) (and (= ($generated@@296 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@636)) $generated@@636) ($generated@@158 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@636) ($generated@@261 $generated@@637))))
 :pattern ( ($generated@@152 $generated@@636 ($generated@@261 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@151) (= (type $generated@@639) $generated@@66)) ($generated@@152 $generated@@638 ($generated@@179 $generated@@639))) (and (= ($generated@@296 ($generated@@358 ($generated@@78 $generated@@151 $generated@@2) $generated@@638)) $generated@@638) ($generated@@158 ($generated@@358 ($generated@@78 $generated@@151 $generated@@2) $generated@@638) ($generated@@179 $generated@@639))))
 :pattern ( ($generated@@152 $generated@@638 ($generated@@179 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@151) (= (type $generated@@641) $generated@@66)) ($generated@@152 $generated@@640 ($generated@@272 $generated@@641))) (and (= ($generated@@296 ($generated@@358 ($generated@@139 $generated@@151) $generated@@640)) $generated@@640) ($generated@@158 ($generated@@358 ($generated@@139 $generated@@151) $generated@@640) ($generated@@272 $generated@@641))))
 :pattern ( ($generated@@152 $generated@@640 ($generated@@272 $generated@@641)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@619 $generated@@134) $generated@@64))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@643) $generated@@66)) (= (type $generated@@644) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@642 ($generated@@179 $generated@@643) $generated@@644) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@642 $generated@@645)))) ($generated@@278 $generated@@645 $generated@@643 $generated@@644))
 :pattern ( ($generated@@83 $generated@@642 $generated@@645))
))))
 :pattern ( ($generated@@76 $generated@@642 ($generated@@179 $generated@@643) $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@81 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@78 $generated@@648 $generated@@4)) (= (type $generated@@647) ($generated@@78 $generated@@648 $generated@@4))) (= ($generated@@399 $generated@@646 $generated@@647) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@648) (or (not ($generated@@0 ($generated@@83 $generated@@646 $generated@@649))) (not ($generated@@0 ($generated@@83 $generated@@647 $generated@@649)))))
 :pattern ( ($generated@@83 $generated@@646 $generated@@649))
 :pattern ( ($generated@@83 $generated@@647 $generated@@649))
)))))
 :pattern ( ($generated@@399 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@162) (= (type $generated@@651) $generated@@66)) (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@277 $generated@@652) (and ($generated@@160 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@66) ($generated@@76 $generated@@650 ($generated@@161 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@76 $generated@@650 ($generated@@161 $generated@@651 $generated@@653) $generated@@652))
))))) ($generated@@278 ($generated@@169 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@278 ($generated@@169 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@162) (= (type $generated@@655) $generated@@66)) (= (type $generated@@656) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@277 $generated@@656) (and ($generated@@160 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@66) ($generated@@76 $generated@@654 ($generated@@161 $generated@@657 $generated@@655) $generated@@656))
 :pattern ( ($generated@@76 $generated@@654 ($generated@@161 $generated@@657 $generated@@655) $generated@@656))
))))) ($generated@@278 ($generated@@170 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@278 ($generated@@170 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 Int) ) (! (let (($generated@@661 ($generated@@140 (type $generated@@658))))
 (=> (and (= (type $generated@@658) ($generated@@139 $generated@@661)) (= (type $generated@@659) ($generated@@139 $generated@@661))) (and (=> (< $generated@@660 ($generated@@290 $generated@@658)) (= ($generated@@362 ($generated@@348 $generated@@658 $generated@@659) $generated@@660) ($generated@@362 $generated@@658 $generated@@660))) (=> (<= ($generated@@290 $generated@@658) $generated@@660) (= ($generated@@362 ($generated@@348 $generated@@658 $generated@@659) $generated@@660) ($generated@@362 $generated@@659 (- $generated@@660 ($generated@@290 $generated@@658))))))))
 :pattern ( ($generated@@362 ($generated@@348 $generated@@658 $generated@@659) $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@151) (= (type $generated@@663) $generated@@151)) (= ($generated@@247 ($generated@@268 $generated@@662) ($generated@@268 $generated@@663)) ($generated@@268 ($generated@@247 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@662) ($generated@@268 $generated@@663)))
)))
(assert (forall (($generated@@664 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@266 $generated@@664))) ($generated@@268 ($generated@@296 ($generated@@8 $generated@@664))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@266 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ) (! (= ($generated@@296 ($generated@@268 $generated@@665)) ($generated@@268 ($generated@@296 $generated@@665)))
 :pattern ( ($generated@@296 ($generated@@268 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@140 (type $generated@@666))))
 (=> (and (= (type $generated@@666) ($generated@@139 $generated@@667)) (= ($generated@@290 $generated@@666) 0)) (= $generated@@666 ($generated@@175 $generated@@667))))
 :pattern ( ($generated@@290 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (! (let (($generated@@671 (type $generated@@669)))
 (=> (and (and (= (type $generated@@668) ($generated@@78 $generated@@671 $generated@@2)) (= (type $generated@@670) $generated@@2)) (<= 0 ($generated $generated@@670))) (= ($generated@@301 ($generated@@84 $generated@@668 $generated@@669 $generated@@670)) (+ (- ($generated@@301 $generated@@668) ($generated ($generated@@83 $generated@@668 $generated@@669))) ($generated $generated@@670)))))
 :pattern ( ($generated@@301 ($generated@@84 $generated@@668 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (! (let (($generated@@675 (type $generated@@674)))
 (=> (and (= (type $generated@@672) ($generated@@78 $generated@@675 $generated@@4)) (= (type $generated@@673) ($generated@@78 $generated@@675 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@240 $generated@@672 $generated@@673) $generated@@674))  (or ($generated@@0 ($generated@@83 $generated@@672 $generated@@674)) ($generated@@0 ($generated@@83 $generated@@673 $generated@@674))))))
 :pattern ( ($generated@@83 ($generated@@240 $generated@@672 $generated@@673) $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@677) $generated@@2)) ($generated@@76 $generated@@677 $generated@@46 $generated@@676))
 :pattern ( ($generated@@76 $generated@@677 $generated@@46 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@679) $generated@@3)) ($generated@@76 $generated@@679 $generated@@47 $generated@@678))
 :pattern ( ($generated@@76 $generated@@679 $generated@@47 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@681) $generated@@4)) ($generated@@76 $generated@@681 $generated@@44 $generated@@680))
 :pattern ( ($generated@@76 $generated@@681 $generated@@44 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@683) $generated@@518)) ($generated@@76 $generated@@683 $generated@@45 $generated@@682))
 :pattern ( ($generated@@76 $generated@@683 $generated@@45 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@685) $generated@@151)) ($generated@@76 $generated@@685 $generated@@48 $generated@@684))
 :pattern ( ($generated@@76 $generated@@685 $generated@@48 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@139 $generated@@151)) (= (type $generated@@687) $generated@@66)) (= ($generated@@158 $generated@@686 ($generated@@272 $generated@@687)) (forall (($generated@@688 Int) ) (!  (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@290 $generated@@686))) ($generated@@152 ($generated@@362 $generated@@686 $generated@@688) $generated@@687))
 :pattern ( ($generated@@362 $generated@@686 $generated@@688))
))))
 :pattern ( ($generated@@158 $generated@@686 ($generated@@272 $generated@@687)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Int) ) (!  (=> (= (type $generated@@690) ($generated@@139 $generated@@151)) (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@290 $generated@@690))) (< ($generated@@596 ($generated@@358 $generated@@162 ($generated@@362 $generated@@690 $generated@@691))) ($generated@@689 $generated@@690))))
 :pattern ( ($generated@@596 ($generated@@358 $generated@@162 ($generated@@362 $generated@@690 $generated@@691))))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) ($generated@@309 $generated@@151 $generated@@151)) (= (type $generated@@693) $generated@@66)) (= (type $generated@@694) $generated@@66)) ($generated@@158 $generated@@692 ($generated@@451 $generated@@693 $generated@@694))) (and (and ($generated@@158 ($generated@@307 $generated@@692) ($generated@@256 $generated@@693)) ($generated@@158 ($generated@@374 $generated@@692) ($generated@@256 $generated@@694))) ($generated@@158 ($generated@@425 $generated@@692) ($generated@@256 ($generated@@161 $generated@@693 $generated@@694)))))
 :pattern ( ($generated@@158 $generated@@692 ($generated@@451 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@696) $generated@@66)) (= (type $generated@@697) $generated@@66)) ($generated@@158 $generated@@695 ($generated@@459 $generated@@696 $generated@@697))) (and (and ($generated@@158 ($generated@@325 $generated@@695) ($generated@@261 $generated@@696)) ($generated@@158 ($generated@@385 $generated@@695) ($generated@@261 $generated@@697))) ($generated@@158 ($generated@@433 $generated@@695) ($generated@@261 ($generated@@161 $generated@@696 $generated@@697)))))
 :pattern ( ($generated@@158 $generated@@695 ($generated@@459 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@2) ($generated@@158 $generated@@698 $generated@@46))
 :pattern ( ($generated@@158 $generated@@698 $generated@@46))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@3) ($generated@@158 $generated@@699 $generated@@47))
 :pattern ( ($generated@@158 $generated@@699 $generated@@47))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@4) ($generated@@158 $generated@@700 $generated@@44))
 :pattern ( ($generated@@158 $generated@@700 $generated@@44))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@518) ($generated@@158 $generated@@701 $generated@@45))
 :pattern ( ($generated@@158 $generated@@701 $generated@@45))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@151) ($generated@@158 $generated@@702 $generated@@48))
 :pattern ( ($generated@@158 $generated@@702 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 (T@U) Bool)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@703) ($generated@@139 $generated@@151)) (= (type $generated@@704) ($generated@@78 $generated@@151 $generated@@4))) (= (type $generated@@705) ($generated@@78 $generated@@151 $generated@@4))) (= (type $generated@@708) ($generated@@78 $generated@@151 $generated@@4))) (= (type $generated@@709) ($generated@@139 $generated@@151))) (= (type $generated@@712) ($generated@@186 $generated@@79 $generated@@4))) (= (type $generated@@713) $generated@@79)) (= (type $generated@@714) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@716) ($generated@@78 $generated@@151 $generated@@4))) (= (type $generated@@717) ($generated@@139 $generated@@151))) (= (type $generated@@718) ($generated@@78 $generated@@151 $generated@@4))) (= (type $generated@@719) ($generated@@78 $generated@@151 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@721 true))
(let (($generated@@722  (=> (and (forall (($generated@@723 Int) ) (!  (=> true (=> (and (<= ($generated@@266 0) $generated@@723) (< $generated@@723 ($generated@@290 $generated@@703))) (<= ($generated@@266 0) ($generated ($generated@@358 $generated@@2 ($generated@@362 $generated@@703 $generated@@723))))))
 :pattern ( ($generated@@358 $generated@@2 ($generated@@362 $generated@@703 $generated@@723)))
)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@343 $generated@@704 $generated@@705))))
(let (($generated@@724  (and (=> (= (ControlFlow 0 7) 5) $generated@@722) (=> (= (ControlFlow 0 7) 6) $generated@@721))))
(let (($generated@@725  (=> (and (not (and (<= ($generated@@266 0) $generated@@706) (< $generated@@706 ($generated@@290 $generated@@703)))) (= (ControlFlow 0 10) 7)) $generated@@724)))
(let (($generated@@726  (=> (and (<= ($generated@@266 0) $generated@@706) (< $generated@@706 ($generated@@290 $generated@@703))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@290 $generated@@703)))) (=> (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@290 $generated@@703))) (=> (= (ControlFlow 0 8) 7) $generated@@724))))))
(let (($generated@@727  (=> (< $generated@@706 ($generated@@266 0)) (and (=> (= (ControlFlow 0 12) 8) $generated@@726) (=> (= (ControlFlow 0 12) 10) $generated@@725)))))
(let (($generated@@728  (=> (<= ($generated@@266 0) $generated@@706) (and (=> (= (ControlFlow 0 11) 8) $generated@@726) (=> (= (ControlFlow 0 11) 10) $generated@@725)))))
(let (($generated@@729  (and (=> (= (ControlFlow 0 13) 11) $generated@@728) (=> (= (ControlFlow 0 13) 12) $generated@@727))))
(let (($generated@@730 true))
(let (($generated@@731  (=> (= $generated@@704 ($generated@@150 $generated@@134 $generated@@703)) (and (=> (= (ControlFlow 0 14) 13) $generated@@729) (=> (= (ControlFlow 0 14) 3) $generated@@730)))))
(let (($generated@@732  (=> (and (not ($generated@@137 $generated@@703 ($generated@@296 ($generated@@8 $generated@@707)))) (= (ControlFlow 0 17) 14)) $generated@@731)))
(let (($generated@@733  (=> (and ($generated@@137 $generated@@703 ($generated@@296 ($generated@@8 $generated@@707))) (= (ControlFlow 0 16) 14)) $generated@@731)))
(let (($generated@@734  (=> (<= ($generated@@266 0) $generated@@707) (and (=> (= (ControlFlow 0 18) 16) $generated@@733) (=> (= (ControlFlow 0 18) 17) $generated@@732)))))
(let (($generated@@735  (=> (and (< $generated@@707 ($generated@@266 0)) (= (ControlFlow 0 15) 14)) $generated@@731)))
(let (($generated@@736  (=> (= $generated@@708 ($generated@@150 $generated@@46 $generated@@709)) (and (=> (= (ControlFlow 0 19) (- 0 20)) ($generated@@343 ($generated@@240 $generated@@705 ($generated@@470 ($generated@@613 $generated@@151) ($generated@@296 ($generated@@8 ($generated@@266 115))))) $generated@@708)) (=> ($generated@@343 ($generated@@240 $generated@@705 ($generated@@470 ($generated@@613 $generated@@151) ($generated@@296 ($generated@@8 ($generated@@266 115))))) $generated@@708) (and (=> (= (ControlFlow 0 19) 18) $generated@@734) (=> (= (ControlFlow 0 19) 15) $generated@@735)))))))
(let (($generated@@737  (=> (and (not ($generated@@137 $generated@@709 ($generated@@296 ($generated@@8 $generated@@710)))) (= (ControlFlow 0 22) 19)) $generated@@736)))
(let (($generated@@738  (=> (and ($generated@@137 $generated@@709 ($generated@@296 ($generated@@8 $generated@@710))) (= (ControlFlow 0 21) 19)) $generated@@736)))
(let (($generated@@739  (and (=> (= (ControlFlow 0 23) 21) $generated@@738) (=> (= (ControlFlow 0 23) 22) $generated@@737))))
(let (($generated@@740 true))
(let (($generated@@741  (=> (and (= $generated@@705 ($generated@@150 $generated@@46 $generated@@703)) (= $generated@@709 ($generated@@348 $generated@@703 ($generated@@138 ($generated@@175 $generated@@151) ($generated@@296 ($generated@@8 ($generated@@266 115))))))) (and (=> (= (ControlFlow 0 24) 23) $generated@@739) (=> (= (ControlFlow 0 24) 2) $generated@@740)))))
(let (($generated@@742  (=> (and (not ($generated@@137 $generated@@703 ($generated@@296 ($generated@@8 $generated@@711)))) (= (ControlFlow 0 26) 24)) $generated@@741)))
(let (($generated@@743  (=> (and ($generated@@137 $generated@@703 ($generated@@296 ($generated@@8 $generated@@711))) (= (ControlFlow 0 25) 24)) $generated@@741)))
(let (($generated@@744  (and (=> (= (ControlFlow 0 27) 25) $generated@@743) (=> (= (ControlFlow 0 27) 26) $generated@@742))))
(let (($generated@@745 true))
(let (($generated@@746  (=> (= $generated@@712 ($generated@@185 $generated@@713 $generated@@714 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) 27) $generated@@744) (=> (= (ControlFlow 0 28) 1) $generated@@745)))))
(let (($generated@@747  (=> (and (and (and ($generated@@277 $generated@@714) ($generated@@715 $generated@@714)) (and ($generated@@158 $generated@@703 ($generated@@272 $generated@@46)) ($generated@@76 $generated@@703 ($generated@@272 $generated@@46) $generated@@714))) (and (and ($generated@@158 $generated@@716 ($generated@@256 $generated@@46)) ($generated@@76 $generated@@716 ($generated@@256 $generated@@46) $generated@@714)) true)) (=> (and (and (and (and ($generated@@158 $generated@@717 ($generated@@272 $generated@@46)) ($generated@@76 $generated@@717 ($generated@@272 $generated@@46) $generated@@714)) true) (and (and ($generated@@158 $generated@@718 ($generated@@256 $generated@@46)) ($generated@@76 $generated@@718 ($generated@@256 $generated@@46) $generated@@714)) true)) (and (and (and ($generated@@158 $generated@@719 ($generated@@256 $generated@@134)) ($generated@@76 $generated@@719 ($generated@@256 $generated@@134) $generated@@714)) true) (and (= 1 $generated@@720) (= (ControlFlow 0 29) 28)))) $generated@@746))))
$generated@@747)))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
