(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0 18))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0 18)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0 18)) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 20))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@233 (Int) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@311 (Int) T@U)
(declare-fun $generated@@315 (Int) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@T) T@U)
(declare-fun $generated@@505 () T@T)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@82) 11) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@84 T@U) ) (! (= (type ($generated@@81 $generated@@84)) $generated@@82)
 :pattern ( ($generated@@81 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and (= (type $generated@@85) $generated@@82) (= (type $generated@@86) $generated@@83)) (= (type $generated@@87) $generated@@83)) (= ($generated@@80 ($generated@@81 $generated@@85) $generated@@86 $generated@@87) (= $generated@@86 $generated@@87)))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@70)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (= ($generated@@1 $generated@@151) 16))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@151) (= (type $generated@@153) $generated@@151)) (= (type $generated@@154) $generated@@151)) (and ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))) ($generated@@150 $generated@@152 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@89 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@89 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@70)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@70) (= (type $generated@@162) $generated@@70)) (= (type $generated@@163) $generated@@83)) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@151)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@151)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@83) (= (type $generated@@170) $generated@@83)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@90 $generated@@151 $generated@@2)) (= (type $generated@@175) $generated@@70)) ($generated@@155 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@155 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@91 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@73 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@91) (= (type $generated@@226) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@227) ($generated@@72 $generated@@4))) (= (type $generated@@229) $generated@@91)) (= (type $generated@@230) ($generated@@72 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 Int) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@151)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@82) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) $generated@@83)) (forall (($generated@@238 Int) ) (!  (=> (<= 0 $generated@@238) ($generated@@232 ($generated@@233 $generated@@238) ($generated@@81 $generated@@235) $generated@@236 $generated@@237))
 :pattern ( ($generated@@232 ($generated@@233 $generated@@238) ($generated@@81 $generated@@235) $generated@@236 $generated@@237))
))) ($generated@@80 ($generated@@81 $generated@@235) $generated@@236 $generated@@237))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (= (type $generated@@240) $generated@@70))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@83) ($generated@@155 $generated@@241 $generated@@240)) ($generated@@239 $generated@@241))
 :pattern ( ($generated@@239 $generated@@241) ($generated@@155 $generated@@241 $generated@@240))
)))
(assert (= (type $generated@@243) $generated@@70))
(assert (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@83) ($generated@@155 $generated@@244 $generated@@243)) ($generated@@242 $generated@@244))
 :pattern ( ($generated@@242 $generated@@244) ($generated@@155 $generated@@244 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@83)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) $generated@@70)) (= (type $generated@@251) $generated@@151)) (= (type $generated@@252) $generated@@151)) (= ($generated@@155 ($generated@@245 $generated@@251 $generated@@252) ($generated@@158 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@155 ($generated@@245 $generated@@251 $generated@@252) ($generated@@158 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@83) (= (type $generated@@254) $generated@@83)) (= ($generated@@164 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@164 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@83) (= (type $generated@@257) $generated@@83)) (= ($generated@@255 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@151) (= (type $generated@@259) $generated@@82)) (= (type $generated@@260) $generated@@83)) (= (type $generated@@261) $generated@@83)) (= (type $generated@@262) $generated@@151)) (and ($generated@@150 $generated@@258 $generated@@262) ($generated@@232 $generated@@262 ($generated@@81 $generated@@259) $generated@@260 $generated@@261))) ($generated@@232 $generated@@258 ($generated@@81 $generated@@259) $generated@@260 $generated@@261))
 :pattern ( ($generated@@232 $generated@@258 ($generated@@81 $generated@@259) $generated@@260 $generated@@261) ($generated@@232 $generated@@262 ($generated@@81 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@90 $generated@@151 $generated@@4)) (= (type $generated@@266) $generated@@70)) (= ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@151) ($generated@@0 ($generated@@95 $generated@@265 $generated@@267))) ($generated@@246 $generated@@267 $generated@@266))
 :pattern ( ($generated@@95 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@70)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@90 $generated@@151 $generated@@4)) (= (type $generated@@271) $generated@@70)) (= ($generated@@155 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@151) ($generated@@0 ($generated@@95 $generated@@270 $generated@@272))) ($generated@@246 $generated@@272 $generated@@271))
 :pattern ( ($generated@@95 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@155 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@281) $generated@@151) (= (type $generated@@282) $generated@@82)) (= (type $generated@@283) $generated@@83)) (= (type $generated@@284) $generated@@83)) (and ($generated@@155 $generated@@283 $generated@@243) ($generated@@155 $generated@@284 $generated@@243))) (= ($generated@@232 $generated@@281 ($generated@@81 $generated@@282) $generated@@283 $generated@@284)  (and (=> (< 0 ($generated@@279 $generated@@281)) (and (and ($generated@@242 $generated@@283) ($generated@@242 $generated@@284)) (=> (and ($generated@@242 $generated@@283) ($generated@@242 $generated@@284)) (= ($generated@@280 $generated@@283) ($generated@@280 $generated@@284))))) (=> (and (not (= $generated@@281 ($generated@@233 0))) (= ($generated@@279 $generated@@281) 0)) ($generated@@80 $generated@@282 $generated@@283 $generated@@284)))))
 :pattern ( ($generated@@232 $generated@@281 ($generated@@81 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) $generated@@70)) (= (type $generated@@289) $generated@@151)) (= (type $generated@@290) $generated@@151)) (= (type $generated@@291) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@285 $generated@@291)) (= ($generated@@88 ($generated@@245 $generated@@289 $generated@@290) ($generated@@158 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@88 ($generated@@245 $generated@@289 $generated@@290) ($generated@@158 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@74)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@83) (= ($generated@@157 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@83) (= ($generated@@239 $generated@@295) (= ($generated@@292 $generated@@295) $generated@@63)))
 :pattern ( ($generated@@239 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@83) (= ($generated@@242 $generated@@296) (= ($generated@@292 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@242 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@83) ($generated@@157 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@151) (= (type $generated@@299) $generated@@151)) (= $generated@@297 ($generated@@245 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@157 $generated@@297))
)))
(assert  (and (and (forall (($generated@@304 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@304)) 18)) (forall (($generated@@305 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
))) (forall (($generated@@306 T@T) ) (! (= (type ($generated@@300 $generated@@306)) ($generated@@302 $generated@@306))
 :pattern ( ($generated@@300 $generated@@306))
))))
(assert (forall (($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@307)) 0)
 :pattern ( ($generated@@300 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@309) $generated@@83) (= (type $generated@@310) $generated@@83)) true) (= ($generated@@255 $generated@@309 $generated@@310) (= ($generated@@308 $generated@@309) ($generated@@308 $generated@@310))))
 :pattern ( ($generated@@255 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 Int) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@83)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@83) ($generated@@239 $generated@@313)) (exists (($generated@@314 Int) ) (= $generated@@313 ($generated@@311 $generated@@314))))
 :pattern ( ($generated@@239 $generated@@313))
)))
(assert (forall (($generated@@316 Int) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@83)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@83) ($generated@@242 $generated@@317)) (exists (($generated@@318 Int) ) (= $generated@@317 ($generated@@315 $generated@@318))))
 :pattern ( ($generated@@242 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) $generated@@151) (= (type $generated@@320) $generated@@82)) (= (type $generated@@321) $generated@@83)) (= (type $generated@@322) $generated@@83)) (not (= $generated@@319 ($generated@@233 0)))) (= ($generated@@232 $generated@@319 ($generated@@81 $generated@@320) $generated@@321 $generated@@322) ($generated@@232 $generated@@319 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@232 $generated@@319 ($generated@@81 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@82) (= (type $generated@@324) $generated@@83)) (= (type $generated@@325) $generated@@83)) (= ($generated@@80 ($generated@@81 $generated@@323) $generated@@324 $generated@@325) ($generated@@80 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@151)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@70) (= (type $generated@@330) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@286 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@88 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@286 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@331) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@332) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@333) $generated@@151)) (= (type $generated@@334) $generated@@70)) ($generated@@146 $generated@@331 $generated@@332)) ($generated@@286 $generated@@333 $generated@@334 $generated@@331)) ($generated@@286 $generated@@333 $generated@@334 $generated@@332))
 :pattern ( ($generated@@146 $generated@@331 $generated@@332) ($generated@@286 $generated@@333 $generated@@334 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@335) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@336) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@338) $generated@@70)) ($generated@@146 $generated@@335 $generated@@336)) ($generated@@88 $generated@@337 $generated@@338 $generated@@335)) ($generated@@88 $generated@@337 $generated@@338 $generated@@336))
 :pattern ( ($generated@@146 $generated@@335 $generated@@336) ($generated@@88 $generated@@337 $generated@@338 $generated@@335))
)))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@90 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@93 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@90 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@95 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@90 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@90 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@382 Int) ) (!  (=> (<= 0 $generated@@382) (and ($generated@@381 ($generated@@233 $generated@@382)) (= ($generated@@279 ($generated@@233 $generated@@382)) $generated@@382)))
 :pattern ( ($generated@@233 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@93 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@90 $generated@@384 $generated@@2)) (= ($generated@@172 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@95 $generated@@383 $generated@@385))) (<= ($generated ($generated@@95 $generated@@383 $generated@@385)) ($generated@@339 $generated@@383))))
 :pattern ( ($generated@@95 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@172 $generated@@383))
)))
(assert (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@151) ($generated@@246 $generated@@389 $generated@@240)) (and (= ($generated@@326 ($generated@@386 $generated@@83 $generated@@389)) $generated@@389) ($generated@@155 ($generated@@386 $generated@@83 $generated@@389) $generated@@240)))
 :pattern ( ($generated@@246 $generated@@389 $generated@@240))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@151) ($generated@@246 $generated@@390 $generated@@243)) (and (= ($generated@@326 ($generated@@386 $generated@@83 $generated@@390)) $generated@@390) ($generated@@155 ($generated@@386 $generated@@83 $generated@@390) $generated@@243)))
 :pattern ( ($generated@@246 $generated@@390 $generated@@243))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@82) (= (type $generated@@392) $generated@@83)) (= (type $generated@@393) $generated@@83)) (= ($generated@@80 ($generated@@81 $generated@@391) $generated@@392 $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@151) ($generated@@232 $generated@@394 ($generated@@81 $generated@@391) $generated@@392 $generated@@393))
 :pattern ( ($generated@@232 $generated@@394 ($generated@@81 $generated@@391) $generated@@392 $generated@@393))
))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@391) $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@349 (type $generated@@395))))
(let (($generated@@397 ($generated@@348 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@347 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@346 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@345 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@349 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@90 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@349 (type $generated@@402))))
(let (($generated@@404 ($generated@@348 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@347 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@346 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@95 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@367 (type $generated@@406))))
(let (($generated@@408 ($generated@@366 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@365 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@364 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@363 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@367 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@90 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@367 (type $generated@@413))))
(let (($generated@@415 ($generated@@366 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@365 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@364 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@95 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@90 $generated@@151 $generated@@2)) (= (type $generated@@418) $generated@@70)) (= ($generated@@155 $generated@@417 ($generated@@171 $generated@@418)) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@151) (< 0 ($generated ($generated@@95 $generated@@417 $generated@@419)))) ($generated@@246 $generated@@419 $generated@@418))
 :pattern ( ($generated@@95 $generated@@417 $generated@@419))
))))
 :pattern ( ($generated@@155 $generated@@417 ($generated@@171 $generated@@418)))
)))
(assert (forall (($generated@@420 Int) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@285 $generated@@421)) (= ($generated@@88 ($generated@@311 $generated@@420) $generated@@240 $generated@@421) ($generated@@88 ($generated@@8 $generated@@420) $generated@@46 $generated@@421)))
 :pattern ( ($generated@@88 ($generated@@311 $generated@@420) $generated@@240 $generated@@421))
)))
(assert (forall (($generated@@422 Int) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@285 $generated@@423)) (= ($generated@@88 ($generated@@315 $generated@@422) $generated@@243 $generated@@423) ($generated@@88 ($generated@@8 $generated@@422) $generated@@46 $generated@@423)))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@422) $generated@@243 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) (= (type $generated@@425) $generated@@151)) (or (or ($generated@@150 $generated@@424 $generated@@425) (= $generated@@424 $generated@@425)) ($generated@@150 $generated@@425 $generated@@424)))
 :pattern ( ($generated@@150 $generated@@424 $generated@@425) ($generated@@150 $generated@@425 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@90 $generated@@151 $generated@@4)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@426 ($generated@@263 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@151) ($generated@@0 ($generated@@95 $generated@@426 $generated@@429))) ($generated@@286 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@95 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@88 $generated@@426 ($generated@@263 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@90 $generated@@151 $generated@@4)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@430 ($generated@@268 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@151) ($generated@@0 ($generated@@95 $generated@@430 $generated@@433))) ($generated@@286 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@95 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@88 $generated@@430 ($generated@@268 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@95 ($generated@@340 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@95 ($generated@@340 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@90 $generated@@151 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@349 (type $generated@@439))))
(let (($generated@@441 ($generated@@348 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@90 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@347 $generated@@151 $generated@@151)) (= (type $generated@@443) $generated@@151)) (= ($generated@@0 ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@442) ($generated@@165 ($generated@@386 $generated@@83 $generated@@443)))) (= ($generated@@95 ($generated@@437 $generated@@442) ($generated@@165 ($generated@@386 $generated@@83 $generated@@443))) ($generated@@166 ($generated@@386 $generated@@83 $generated@@443))))))
 :pattern ( ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@90 $generated@@151 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@367 (type $generated@@447))))
(let (($generated@@449 ($generated@@366 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@90 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@365 $generated@@151 $generated@@151)) (= (type $generated@@451) $generated@@151)) (= ($generated@@0 ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@450) ($generated@@165 ($generated@@386 $generated@@83 $generated@@451)))) (= ($generated@@95 ($generated@@445 $generated@@450) ($generated@@165 ($generated@@386 $generated@@83 $generated@@451))) ($generated@@166 ($generated@@386 $generated@@83 $generated@@451))))))
 :pattern ( ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@348 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@347 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@95 ($generated@@399 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@452) $generated@@456))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@95 ($generated@@399 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@366 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@365 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@95 ($generated@@410 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@457) $generated@@461))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@95 ($generated@@410 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@347 $generated@@151 $generated@@151)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@151) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@465) $generated@@469))) (and ($generated@@286 ($generated@@95 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@286 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@365 $generated@@151 $generated@@151)) (= (type $generated@@474) $generated@@70)) (= (type $generated@@475) $generated@@70)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@473) $generated@@477))) (and ($generated@@286 ($generated@@95 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@286 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@478) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@479) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@480) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@478 $generated@@480))) (and ($generated@@146 $generated@@478 $generated@@479) ($generated@@146 $generated@@479 $generated@@480))) ($generated@@146 $generated@@478 $generated@@480))
 :pattern ( ($generated@@146 $generated@@478 $generated@@479) ($generated@@146 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@T) ) (! (= (type ($generated@@481 $generated@@482)) ($generated@@90 $generated@@482 $generated@@4))
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@367 (type $generated@@483))))
(let (($generated@@485 ($generated@@366 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@365 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@364 $generated@@485 $generated@@484)) (= ($generated@@363 $generated@@483) ($generated@@481 $generated@@485))))))
 :pattern ( ($generated@@363 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@367 (type $generated@@486))))
(let (($generated@@488 ($generated@@366 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@365 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@364 $generated@@488 $generated@@487)) (= ($generated@@410 $generated@@486) ($generated@@481 $generated@@487))))))
 :pattern ( ($generated@@410 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@367 (type $generated@@489))))
(let (($generated@@491 ($generated@@366 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@365 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@364 $generated@@491 $generated@@490)) (= ($generated@@444 $generated@@489) ($generated@@481 $generated@@151))))))
 :pattern ( ($generated@@444 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@349 (type $generated@@492))))
(let (($generated@@494 ($generated@@348 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@347 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@346 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@151) (= (type $generated@@496) $generated@@151)) ($generated@@0 ($generated@@95 ($generated@@436 $generated@@492) ($generated@@326 ($generated@@245 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@436 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@367 (type $generated@@497))))
(let (($generated@@499 ($generated@@366 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@365 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@364 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@151) (= (type $generated@@501) $generated@@151)) ($generated@@0 ($generated@@95 ($generated@@444 $generated@@497) ($generated@@326 ($generated@@245 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@444 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@151) ($generated@@246 $generated@@502 $generated@@46)) (and (= ($generated@@326 ($generated@@386 $generated@@2 $generated@@502)) $generated@@502) ($generated@@155 ($generated@@386 $generated@@2 $generated@@502) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@502 $generated@@46))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@151) ($generated@@246 $generated@@503 $generated@@47)) (and (= ($generated@@326 ($generated@@386 $generated@@3 $generated@@503)) $generated@@503) ($generated@@155 ($generated@@386 $generated@@3 $generated@@503) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@503 $generated@@47))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@151) ($generated@@246 $generated@@504 $generated@@44)) (and (= ($generated@@326 ($generated@@386 $generated@@4 $generated@@504)) $generated@@504) ($generated@@155 ($generated@@386 $generated@@4 $generated@@504) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@504 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@505) 21))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@151) ($generated@@246 $generated@@506 $generated@@45)) (and (= ($generated@@326 ($generated@@386 $generated@@505 $generated@@506)) $generated@@506) ($generated@@155 ($generated@@386 $generated@@505 $generated@@506) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@506 $generated@@45))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@246 ($generated@@326 $generated@@507) $generated@@508) ($generated@@155 $generated@@507 $generated@@508)))
 :pattern ( ($generated@@246 ($generated@@326 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@151) (<= 0 ($generated@@279 $generated@@509)))
 :pattern ( ($generated@@279 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@93 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@90 $generated@@511 $generated@@2)) (<= 0 ($generated@@339 $generated@@510))))
 :pattern ( ($generated@@339 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@303 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@302 $generated@@513)) (<= 0 ($generated@@301 $generated@@512))))
 :pattern ( ($generated@@301 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@70) (= (type $generated@@517) $generated@@70)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@70) (= (type $generated@@521) $generated@@70)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@70) (= (type $generated@@523) $generated@@70)) (= ($generated@@78 ($generated@@462 $generated@@522 $generated@@523)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@70) (= (type $generated@@527) $generated@@70)) (= ($generated@@524 ($generated@@470 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@470 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@70) (= (type $generated@@531) $generated@@70)) (= ($generated@@528 ($generated@@470 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@70) (= (type $generated@@533) $generated@@70)) (= ($generated@@78 ($generated@@470 $generated@@532 $generated@@533)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@151) (= (type $generated@@535) $generated@@151)) (= ($generated@@292 ($generated@@245 $generated@@534 $generated@@535)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (= ($generated@@536 ($generated@@158 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@158 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@70) (= (type $generated@@543) $generated@@70)) (= ($generated@@540 ($generated@@158 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@158 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@151) (= (type $generated@@545) $generated@@151)) (= ($generated@@165 ($generated@@245 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@245 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@151) (= (type $generated@@547) $generated@@151)) (= ($generated@@166 ($generated@@245 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@245 $generated@@546 $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@303 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@302 $generated@@151)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@301 $generated@@554))) ($generated@@286 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@88 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@89 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@89 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@263 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@78 ($generated@@263 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@268 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@268 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@78 ($generated@@268 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@171 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@171 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@78 ($generated@@171 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@70)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@70) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@78 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@292 ($generated@@311 $generated@@576)) $generated@@63)
 :pattern ( ($generated@@311 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@308 ($generated@@311 $generated@@577)) $generated@@577)
 :pattern ( ($generated@@311 $generated@@577))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@292 ($generated@@315 $generated@@578)) $generated@@65)
 :pattern ( ($generated@@315 $generated@@578))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@280 ($generated@@315 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@315 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
(= ($generated@@386 $generated@@581 ($generated@@326 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@326 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@347 $generated@@151 $generated@@151)) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) $generated@@70)) (= ($generated@@155 $generated@@582 ($generated@@462 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@151) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@582) $generated@@585))) (and ($generated@@246 ($generated@@95 ($generated@@437 $generated@@582) $generated@@585) $generated@@584) ($generated@@246 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@582) $generated@@585))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@155 $generated@@582 ($generated@@462 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@365 $generated@@151 $generated@@151)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) $generated@@70)) (= ($generated@@155 $generated@@586 ($generated@@470 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@151) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@586) $generated@@589))) (and ($generated@@246 ($generated@@95 ($generated@@445 $generated@@586) $generated@@589) $generated@@588) ($generated@@246 $generated@@589 $generated@@587)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@586) $generated@@589))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@586) $generated@@589))
))))
 :pattern ( ($generated@@155 $generated@@586 ($generated@@470 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@151) (= (type $generated@@591) $generated@@151)) (and (and (and (=> ($generated@@150 $generated@@590 $generated@@591) (not (= $generated@@590 $generated@@591))) (=> (and ($generated@@381 $generated@@590) (not ($generated@@381 $generated@@591))) ($generated@@150 $generated@@590 $generated@@591))) (=> (and ($generated@@381 $generated@@590) ($generated@@381 $generated@@591)) (= ($generated@@150 $generated@@590 $generated@@591) (< ($generated@@279 $generated@@590) ($generated@@279 $generated@@591))))) (=> (and ($generated@@150 $generated@@590 $generated@@591) ($generated@@381 $generated@@591)) ($generated@@381 $generated@@590))))
 :pattern ( ($generated@@150 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@151) (= (type $generated@@595) $generated@@151)) (< ($generated@@592 $generated@@594) ($generated@@593 ($generated@@245 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@245 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@151) (= (type $generated@@597) $generated@@151)) (< ($generated@@592 $generated@@597) ($generated@@593 ($generated@@245 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@245 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@155 ($generated@@311 $generated@@598) $generated@@240) ($generated@@155 ($generated@@8 $generated@@598) $generated@@46))
 :pattern ( ($generated@@155 ($generated@@311 $generated@@598) $generated@@240))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@155 ($generated@@315 $generated@@599) $generated@@243) ($generated@@155 ($generated@@8 $generated@@599) $generated@@46))
 :pattern ( ($generated@@155 ($generated@@315 $generated@@599) $generated@@243))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@151) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@246 $generated@@600 ($generated@@462 $generated@@601 $generated@@602))) (and (= ($generated@@326 ($generated@@386 ($generated@@347 $generated@@151 $generated@@151) $generated@@600)) $generated@@600) ($generated@@155 ($generated@@386 ($generated@@347 $generated@@151 $generated@@151) $generated@@600) ($generated@@462 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@246 $generated@@600 ($generated@@462 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@151) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@246 $generated@@603 ($generated@@470 $generated@@604 $generated@@605))) (and (= ($generated@@326 ($generated@@386 ($generated@@365 $generated@@151 $generated@@151) $generated@@603)) $generated@@603) ($generated@@155 ($generated@@386 ($generated@@365 $generated@@151 $generated@@151) $generated@@603) ($generated@@470 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@246 $generated@@603 ($generated@@470 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@151)) ($generated@@246 $generated@@608 ($generated@@158 $generated@@606 $generated@@607))) (and (= ($generated@@326 ($generated@@386 $generated@@83 $generated@@608)) $generated@@608) ($generated@@155 ($generated@@386 $generated@@83 $generated@@608) ($generated@@158 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@246 $generated@@608 ($generated@@158 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@95 ($generated@@481 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@95 ($generated@@481 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@75)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@70) (= (type $generated@@614) $generated@@70)) (and (= ($generated@@78 ($generated@@158 $generated@@613 $generated@@614)) $generated@@62) (= ($generated@@611 ($generated@@158 $generated@@613 $generated@@614)) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@83) (= (type $generated@@616) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@285 $generated@@616) (and ($generated@@239 $generated@@615) ($generated@@88 $generated@@615 $generated@@240 $generated@@616)))) ($generated@@88 ($generated@@8 ($generated@@308 $generated@@615)) $generated@@46 $generated@@616))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@308 $generated@@615)) $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@83) (= (type $generated@@618) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@285 $generated@@618) (and ($generated@@242 $generated@@617) ($generated@@88 $generated@@617 $generated@@243 $generated@@618)))) ($generated@@88 ($generated@@8 ($generated@@280 $generated@@617)) $generated@@46 $generated@@618))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@280 $generated@@617)) $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@83) (= ($generated@@592 ($generated@@326 $generated@@619)) ($generated@@593 $generated@@619)))
 :pattern ( ($generated@@592 ($generated@@326 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@151) ($generated@@246 $generated@@620 ($generated@@89 0))) (and (= ($generated@@326 ($generated@@386 $generated@@2 $generated@@620)) $generated@@620) ($generated@@155 ($generated@@386 ($generated@@90 $generated@@151 $generated@@4) $generated@@620) ($generated@@89 0))))
 :pattern ( ($generated@@246 $generated@@620 ($generated@@89 0)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@151) (= (type $generated@@622) $generated@@70)) ($generated@@246 $generated@@621 ($generated@@263 $generated@@622))) (and (= ($generated@@326 ($generated@@386 ($generated@@90 $generated@@151 $generated@@4) $generated@@621)) $generated@@621) ($generated@@155 ($generated@@386 ($generated@@90 $generated@@151 $generated@@4) $generated@@621) ($generated@@263 $generated@@622))))
 :pattern ( ($generated@@246 $generated@@621 ($generated@@263 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@151) (= (type $generated@@624) $generated@@70)) ($generated@@246 $generated@@623 ($generated@@268 $generated@@624))) (and (= ($generated@@326 ($generated@@386 ($generated@@90 $generated@@151 $generated@@4) $generated@@623)) $generated@@623) ($generated@@155 ($generated@@386 ($generated@@90 $generated@@151 $generated@@4) $generated@@623) ($generated@@268 $generated@@624))))
 :pattern ( ($generated@@246 $generated@@623 ($generated@@268 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@151) (= (type $generated@@626) $generated@@70)) ($generated@@246 $generated@@625 ($generated@@171 $generated@@626))) (and (= ($generated@@326 ($generated@@386 ($generated@@90 $generated@@151 $generated@@2) $generated@@625)) $generated@@625) ($generated@@155 ($generated@@386 ($generated@@90 $generated@@151 $generated@@2) $generated@@625) ($generated@@171 $generated@@626))))
 :pattern ( ($generated@@246 $generated@@625 ($generated@@171 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@151) (= (type $generated@@628) $generated@@70)) ($generated@@246 $generated@@627 ($generated@@548 $generated@@628))) (and (= ($generated@@326 ($generated@@386 ($generated@@302 $generated@@151) $generated@@627)) $generated@@627) ($generated@@155 ($generated@@386 ($generated@@302 $generated@@151) $generated@@627) ($generated@@548 $generated@@628))))
 :pattern ( ($generated@@246 $generated@@627 ($generated@@548 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@151) ($generated@@381 $generated@@629)) (= $generated@@629 ($generated@@233 ($generated@@279 $generated@@629))))
 :pattern ( ($generated@@279 $generated@@629))
 :pattern ( ($generated@@381 $generated@@629))
)))
(assert (= ($generated@@78 $generated@@240) $generated@@64))
(assert (= ($generated@@611 $generated@@240) $generated@@68))
(assert (= ($generated@@78 $generated@@243) $generated@@66))
(assert (= ($generated@@611 $generated@@243) $generated@@69))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@90 $generated@@151 $generated@@2)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@630 ($generated@@171 $generated@@631) $generated@@632) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@151) (< 0 ($generated ($generated@@95 $generated@@630 $generated@@633)))) ($generated@@286 $generated@@633 $generated@@631 $generated@@632))
 :pattern ( ($generated@@95 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@88 $generated@@630 ($generated@@171 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@82) (= (type $generated@@635) $generated@@83)) (= (type $generated@@636) $generated@@83)) (and ($generated@@155 $generated@@635 $generated@@243) ($generated@@155 $generated@@636 $generated@@243))) (= ($generated@@80 ($generated@@81 $generated@@634) $generated@@635 $generated@@636)  (and (and ($generated@@242 $generated@@635) ($generated@@242 $generated@@636)) (=> (and ($generated@@242 $generated@@635) ($generated@@242 $generated@@636)) (= ($generated@@280 $generated@@635) ($generated@@280 $generated@@636))))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@83) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@285 $generated@@639) (and ($generated@@157 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@70) ($generated@@88 $generated@@637 ($generated@@158 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@88 $generated@@637 ($generated@@158 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@286 ($generated@@165 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@286 ($generated@@165 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@83) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@285 $generated@@643) (and ($generated@@157 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@70) ($generated@@88 $generated@@641 ($generated@@158 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@88 $generated@@641 ($generated@@158 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@286 ($generated@@166 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@286 ($generated@@166 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@151) (= (type $generated@@646) $generated@@151)) (= ($generated@@245 ($generated@@275 $generated@@645) ($generated@@275 $generated@@646)) ($generated@@275 ($generated@@245 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@245 ($generated@@275 $generated@@645) ($generated@@275 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@326 ($generated@@8 ($generated@@273 $generated@@647))) ($generated@@275 ($generated@@326 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@326 ($generated@@8 ($generated@@273 $generated@@647))))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@311 ($generated@@273 $generated@@648)) ($generated@@275 ($generated@@311 $generated@@648)))
 :pattern ( ($generated@@311 ($generated@@273 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@326 ($generated@@275 $generated@@649)) ($generated@@275 ($generated@@326 $generated@@649)))
 :pattern ( ($generated@@326 ($generated@@275 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@303 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@302 $generated@@651)) (= ($generated@@301 $generated@@650) 0)) (= $generated@@650 ($generated@@300 $generated@@651))))
 :pattern ( ($generated@@301 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@90 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@339 ($generated@@96 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@339 $generated@@652) ($generated ($generated@@95 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@339 ($generated@@96 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@657) $generated@@2)) ($generated@@88 $generated@@657 $generated@@46 $generated@@656))
 :pattern ( ($generated@@88 $generated@@657 $generated@@46 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@659) $generated@@3)) ($generated@@88 $generated@@659 $generated@@47 $generated@@658))
 :pattern ( ($generated@@88 $generated@@659 $generated@@47 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@661) $generated@@4)) ($generated@@88 $generated@@661 $generated@@44 $generated@@660))
 :pattern ( ($generated@@88 $generated@@661 $generated@@44 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@663) $generated@@505)) ($generated@@88 $generated@@663 $generated@@45 $generated@@662))
 :pattern ( ($generated@@88 $generated@@663 $generated@@45 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@665) $generated@@151)) ($generated@@88 $generated@@665 $generated@@48 $generated@@664))
 :pattern ( ($generated@@88 $generated@@665 $generated@@48 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@302 $generated@@151)) (= (type $generated@@667) $generated@@70)) (= ($generated@@155 $generated@@666 ($generated@@548 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@301 $generated@@666))) ($generated@@246 ($generated@@549 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@549 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@155 $generated@@666 ($generated@@548 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@302 $generated@@151)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@301 $generated@@670))) (< ($generated@@593 ($generated@@386 $generated@@83 ($generated@@549 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@593 ($generated@@386 $generated@@83 ($generated@@549 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@672) $generated@@151) (= (type $generated@@673) $generated@@82)) (= (type $generated@@674) $generated@@83)) (= (type $generated@@675) $generated@@83)) (= $generated@@674 $generated@@675)) ($generated@@232 $generated@@672 ($generated@@81 $generated@@673) $generated@@674 $generated@@675))
 :pattern ( ($generated@@232 $generated@@672 ($generated@@81 $generated@@673) $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@347 $generated@@151 $generated@@151)) (= (type $generated@@677) $generated@@70)) (= (type $generated@@678) $generated@@70)) ($generated@@155 $generated@@676 ($generated@@462 $generated@@677 $generated@@678))) (and (and ($generated@@155 ($generated@@345 $generated@@676) ($generated@@263 $generated@@677)) ($generated@@155 ($generated@@399 $generated@@676) ($generated@@263 $generated@@678))) ($generated@@155 ($generated@@436 $generated@@676) ($generated@@263 ($generated@@158 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@155 $generated@@676 ($generated@@462 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@365 $generated@@151 $generated@@151)) (= (type $generated@@680) $generated@@70)) (= (type $generated@@681) $generated@@70)) ($generated@@155 $generated@@679 ($generated@@470 $generated@@680 $generated@@681))) (and (and ($generated@@155 ($generated@@363 $generated@@679) ($generated@@268 $generated@@680)) ($generated@@155 ($generated@@410 $generated@@679) ($generated@@268 $generated@@681))) ($generated@@155 ($generated@@444 $generated@@679) ($generated@@268 ($generated@@158 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@155 $generated@@679 ($generated@@470 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@2) ($generated@@155 $generated@@682 $generated@@46))
 :pattern ( ($generated@@155 $generated@@682 $generated@@46))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@3) ($generated@@155 $generated@@683 $generated@@47))
 :pattern ( ($generated@@155 $generated@@683 $generated@@47))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@4) ($generated@@155 $generated@@684 $generated@@44))
 :pattern ( ($generated@@155 $generated@@684 $generated@@44))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@505) ($generated@@155 $generated@@685 $generated@@45))
 :pattern ( ($generated@@155 $generated@@685 $generated@@45))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@151) ($generated@@155 $generated@@686 $generated@@48))
 :pattern ( ($generated@@155 $generated@@686 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 (T@U) Bool)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@687) ($generated@@178 $generated@@91 $generated@@4)) (= (type $generated@@688) $generated@@91)) (= (type $generated@@689) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@690) $generated@@83)) (= (type $generated@@691) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@693) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@694) $generated@@83)) (= (type $generated@@695) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@696) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@699) $generated@@83)) (= (type $generated@@700) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@703  (=> (and (= $generated@@687 ($generated@@177 $generated@@688 $generated@@689 $generated@@60 false)) (= $generated@@690 ($generated@@275 ($generated@@311 ($generated@@273 15))))) (=> (and (and ($generated@@285 $generated@@691) ($generated@@692 $generated@@691)) (and (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@91) (=> (and (not (= $generated@@704 $generated@@688)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@689 $generated@@704) $generated@@60))) (= ($generated@@95 $generated@@691 $generated@@704) ($generated@@95 $generated@@689 $generated@@704))))
 :pattern ( ($generated@@95 $generated@@691 $generated@@704))
)) ($generated@@146 $generated@@689 $generated@@691))) (=> (and (and (and (and (and ($generated@@285 $generated@@693) ($generated@@692 $generated@@693)) (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@91) (=> (and (not (= $generated@@705 $generated@@688)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@691 $generated@@705) $generated@@60))) (= ($generated@@95 $generated@@693 $generated@@705) ($generated@@95 $generated@@691 $generated@@705))))
 :pattern ( ($generated@@95 $generated@@693 $generated@@705))
))) (and ($generated@@146 $generated@@691 $generated@@693) (= $generated@@694 ($generated@@275 ($generated@@315 ($generated@@273 15)))))) (and (and ($generated@@285 $generated@@695) ($generated@@692 $generated@@695)) (and (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@91) (=> (and (not (= $generated@@706 $generated@@688)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@693 $generated@@706) $generated@@60))) (= ($generated@@95 $generated@@695 $generated@@706) ($generated@@95 $generated@@693 $generated@@706))))
 :pattern ( ($generated@@95 $generated@@695 $generated@@706))
)) ($generated@@146 $generated@@693 $generated@@695)))) (and (and (and (and ($generated@@285 $generated@@696) ($generated@@692 $generated@@696)) (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@91) (=> (and (not (= $generated@@707 $generated@@688)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@695 $generated@@707) $generated@@60))) (= ($generated@@95 $generated@@696 $generated@@707) ($generated@@95 $generated@@695 $generated@@707))))
 :pattern ( ($generated@@95 $generated@@696 $generated@@707))
))) (and ($generated@@146 $generated@@695 $generated@@696) ($generated@@88 $generated@@694 $generated@@243 $generated@@696))) (and (and ($generated@@697 $generated@@694) ($generated@@697 $generated@@694)) (and (= $generated@@698 ($generated@@273 3)) (= (ControlFlow 0 2) (- 0 1)))))) (and (<= ($generated@@273 (- 0 18)) $generated@@698) (< $generated@@698 20)))))))
(let (($generated@@708  (=> (and ($generated@@285 $generated@@689) ($generated@@692 $generated@@689)) (=> (and (and (and (and ($generated@@155 $generated@@699 $generated@@240) ($generated@@88 $generated@@699 $generated@@240 $generated@@689)) true) (and (and ($generated@@155 $generated@@700 $generated@@243) ($generated@@88 $generated@@700 $generated@@243 $generated@@689)) true)) (and (and (and (<= ($generated@@273 (- 0 18)) $generated@@701) (< $generated@@701 20)) true) (and (= 1 $generated@@702) (= (ControlFlow 0 3) 2)))) $generated@@703))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
