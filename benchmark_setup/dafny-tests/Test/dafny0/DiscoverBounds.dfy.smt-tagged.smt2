(set-logic UFLIRABV)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@157 (- 0 2)) ($generated@@157 0)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 5) 4))) $generated@@182)))
$generated@@183)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@175) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@176) $generated@@47)) (= (type $generated@@177) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@178) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@183  (=> (= $generated@@173 ($generated@@157 0)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@157 (- 0 2)) $generated@@173)) (=> (<= ($generated@@157 (- 0 2)) $generated@@173) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))))
(let (($generated@@184  (=> (and (= $generated@@174 ($generated@@157 100)) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@157 (- 0 2)) $generated@@174))))
(let (($generated@@185  (=> (= $generated@@175 ($generated@@45 $generated@@176 $generated@@177 $generated@@178 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@184) (=> (= (ControlFlow 0 6) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and (and ($generated@@179 $generated@@177) ($generated@@180 $generated@@177)) (<= ($generated@@157 (- 0 2)) $generated@@181)) (and (= 1 $generated@@182) (= (ControlFlow 0 7) 6))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Real)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0.0 2.0))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0.0 2.0)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0.0 2.0)) ($generated@@157 0.0))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@157 0.0) ($generated@@157 5.4))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 12)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 12))
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 28)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 28))
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 () Int)
(declare-fun $generated@@265 (Int) Bool)
(declare-fun $generated@@266 (Int) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@543 (T@U T@U T@U) T@U)
(declare-fun $generated@@564 (T@T) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 12)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 12)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 12) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 12) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 28)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 28)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 ($generated@@77 28) $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@77 28) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@66))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@155 $generated@@154 $generated@@156))
 :pattern ( ($generated@@76 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@77 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@77 0)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@134) ($generated@@157 $generated@@159 ($generated@@77 12)))
 :pattern ( ($generated@@157 $generated@@159 ($generated@@77 12)))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@142) ($generated@@157 $generated@@160 ($generated@@77 28)))
 :pattern ( ($generated@@157 $generated@@160 ($generated@@77 28)))
)))
(assert  (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@66) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@163)) ($generated@@157 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@157 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 17) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@66)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@78 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@66)) ($generated@@157 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@157 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 18)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@79 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@69 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@79) (= (type $generated@@232) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@233) ($generated@@68 $generated@@4))) (= (type $generated@@235) $generated@@79)) (= (type $generated@@236) ($generated@@68 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@66) (= (type $generated@@243) $generated@@66)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@157 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@157 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@157 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@157 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@66)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@66)) (= ($generated@@157 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@83 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@83 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@157 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert  (=> (<= 0 $generated@@264) (forall (($generated@@267 Int) ) (!  (=> (or ($generated@@266 $generated@@267) (not (= 0 $generated@@264))) true)
 :pattern ( ($generated@@265 $generated@@267))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) $generated@@66)) (= (type $generated@@272) $generated@@172)) (= (type $generated@@273) $generated@@172)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@268 $generated@@274)) (= ($generated@@76 ($generated@@238 $generated@@272 $generated@@273) ($generated@@162 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@272 $generated@@273) ($generated@@162 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@163) (= ($generated@@161 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@163) ($generated@@161 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@172) (= (type $generated@@280) $generated@@172)) (= $generated@@278 ($generated@@238 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@161 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@2) (= ($generated@@157 $generated@@289 $generated@@154) (<= ($generated@@258 (- 0 2)) ($generated $generated@@289))))
 :pattern ( ($generated@@157 $generated@@289 $generated@@154))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@172)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@297) $generated@@172)) (= (type $generated@@298) $generated@@66)) ($generated@@150 $generated@@295 $generated@@296)) ($generated@@269 $generated@@297 $generated@@298 $generated@@295)) ($generated@@269 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@150 $generated@@295 $generated@@296) ($generated@@269 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@300) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@302) $generated@@66)) ($generated@@150 $generated@@299 $generated@@300)) ($generated@@76 $generated@@301 $generated@@302 $generated@@299)) ($generated@@76 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@150 $generated@@299 $generated@@300) ($generated@@76 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@78 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@81 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@78 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@83 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 21)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@78 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@83 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@81 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@78 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@83 $generated@@345 $generated@@347))) (<= ($generated ($generated@@83 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@83 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@172) ($generated@@239 $generated@@351 $generated@@154)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@157 ($generated@@348 $generated@@2 $generated@@351) $generated@@154)))
 :pattern ( ($generated@@239 $generated@@351 $generated@@154))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@309 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@313 (type $generated@@359))))
(let (($generated@@361 ($generated@@312 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@311 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@310 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@331 (type $generated@@363))))
(let (($generated@@365 ($generated@@330 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@329 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@328 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@327 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@78 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@331 (type $generated@@370))))
(let (($generated@@372 ($generated@@330 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@329 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@328 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@78 $generated@@172 $generated@@2)) (= (type $generated@@375) $generated@@66)) (= ($generated@@157 $generated@@374 ($generated@@177 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) (< 0 ($generated ($generated@@83 $generated@@374 $generated@@376)))) ($generated@@239 $generated@@376 $generated@@375))
 :pattern ( ($generated@@83 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@157 $generated@@374 ($generated@@177 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@248 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@0 ($generated@@83 $generated@@377 $generated@@380))) ($generated@@269 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@83 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@248 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@253 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@172) ($generated@@0 ($generated@@83 $generated@@381 $generated@@384))) ($generated@@269 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@253 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@83 ($generated@@304 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@83 ($generated@@304 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@172 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@313 (type $generated@@390))))
(let (($generated@@392 ($generated@@312 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@394) $generated@@172)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) ($generated@@170 ($generated@@348 $generated@@163 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@170 ($generated@@348 $generated@@163 $generated@@394))) ($generated@@171 ($generated@@348 $generated@@163 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@78 $generated@@172 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@331 (type $generated@@398))))
(let (($generated@@400 ($generated@@330 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@78 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@402) $generated@@172)) (= ($generated@@0 ($generated@@83 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@401) ($generated@@170 ($generated@@348 $generated@@163 $generated@@402)))) (= ($generated@@83 ($generated@@396 $generated@@401) ($generated@@170 ($generated@@348 $generated@@163 $generated@@402))) ($generated@@171 ($generated@@348 $generated@@163 $generated@@402))))))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@312 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@311 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@83 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@403) $generated@@407))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@330 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@329 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@83 ($generated@@327 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@83 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@172) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@416) $generated@@420))) (and ($generated@@269 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@269 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) $generated@@66)) (= (type $generated@@427) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@424) $generated@@428))) (and ($generated@@269 ($generated@@83 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@269 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@429) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@431) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@429 $generated@@431))) (and ($generated@@150 $generated@@429 $generated@@430) ($generated@@150 $generated@@430 $generated@@431))) ($generated@@150 $generated@@429 $generated@@431))
 :pattern ( ($generated@@150 $generated@@429 $generated@@430) ($generated@@150 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@78 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@331 (type $generated@@434))))
(let (($generated@@436 ($generated@@330 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@329 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@328 $generated@@436 $generated@@435)) (= ($generated@@327 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@327 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@331 (type $generated@@437))))
(let (($generated@@439 ($generated@@330 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@329 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@328 $generated@@439 $generated@@438)) (= ($generated@@367 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@367 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@331 (type $generated@@440))))
(let (($generated@@442 ($generated@@330 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@329 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@328 $generated@@442 $generated@@441)) (= ($generated@@395 $generated@@440) ($generated@@432 $generated@@172))))))
 :pattern ( ($generated@@395 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@313 (type $generated@@443))))
(let (($generated@@445 ($generated@@312 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@311 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@310 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@172) (= (type $generated@@447) $generated@@172)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@443) ($generated@@290 ($generated@@238 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@387 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@331 (type $generated@@448))))
(let (($generated@@450 ($generated@@330 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@329 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@328 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@172) (= (type $generated@@452) $generated@@172)) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@448) ($generated@@290 ($generated@@238 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@395 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@172) ($generated@@239 $generated@@453 $generated@@46)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@453)) $generated@@453) ($generated@@157 ($generated@@348 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@47)) (and (= ($generated@@290 ($generated@@348 $generated@@3 $generated@@454)) $generated@@454) ($generated@@157 ($generated@@348 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@44)) (and (= ($generated@@290 ($generated@@348 $generated@@4 $generated@@455)) $generated@@455) ($generated@@157 ($generated@@348 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 22))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@172) ($generated@@239 $generated@@457 $generated@@45)) (and (= ($generated@@290 ($generated@@348 $generated@@456 $generated@@457)) $generated@@457) ($generated@@157 ($generated@@348 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@66) (= ($generated@@239 ($generated@@290 $generated@@458) $generated@@459) ($generated@@157 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@239 ($generated@@290 $generated@@458) $generated@@459))
)))
(assert  (=> (<= 0 $generated@@264) (forall (($generated@@460 Int) ) (!  (=> (or ($generated@@266 $generated@@460) (not (= 0 $generated@@264))) (= ($generated@@265 $generated@@460) (= $generated@@460 ($generated@@258 157))))
 :pattern ( ($generated@@265 $generated@@460))
))))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@81 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@78 $generated@@462 $generated@@2)) (<= 0 ($generated@@303 $generated@@461))))
 :pattern ( ($generated@@303 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@284 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@283 $generated@@464)) (<= 0 ($generated@@282 $generated@@463))))
 :pattern ( ($generated@@282 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@413 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@413 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@413 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@413 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@421 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@74 ($generated@@421 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) (= (type $generated@@486) $generated@@172)) (= ($generated@@275 ($generated@@238 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@487 ($generated@@162 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@162 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@162 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@162 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@172) (= (type $generated@@498) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@238 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@172)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@269 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@76 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@77 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@77 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@248 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@248 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@253 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@253 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@253 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@177 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@177 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@74 ($generated@@177 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@74 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@348 $generated@@528 ($generated@@290 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@290 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) (= ($generated@@157 $generated@@529 ($generated@@413 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@172) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@529) $generated@@532))) (and ($generated@@239 ($generated@@83 ($generated@@388 $generated@@529) $generated@@532) $generated@@531) ($generated@@239 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@529) $generated@@532))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@157 $generated@@529 ($generated@@413 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) (= ($generated@@157 $generated@@533 ($generated@@421 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@172) ($generated@@0 ($generated@@83 ($generated@@327 $generated@@533) $generated@@536))) (and ($generated@@239 ($generated@@83 ($generated@@396 $generated@@533) $generated@@536) $generated@@535) ($generated@@239 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@533) $generated@@536))
 :pattern ( ($generated@@83 ($generated@@327 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@157 $generated@@533 ($generated@@421 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) (= (type $generated@@540) $generated@@172)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@238 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@238 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@172) (= (type $generated@@542) $generated@@172)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@238 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@238 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(let (($generated@@548 (type $generated@@545)))
(= (type ($generated@@543 $generated@@544 $generated@@545 $generated@@546)) ($generated@@311 $generated@@548 $generated@@547))))
 :pattern ( ($generated@@543 $generated@@544 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(let (($generated@@554 (type $generated@@550)))
 (=> (and (= (type $generated@@549) ($generated@@311 $generated@@554 $generated@@553)) (= (type $generated@@551) $generated@@554)) (and (=> (= $generated@@551 $generated@@550) (and ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551)) (= ($generated@@83 ($generated@@388 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551) $generated@@552))) (=> (not (= $generated@@551 $generated@@550)) (and (= ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551)) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@549) $generated@@551))) (= ($generated@@83 ($generated@@388 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551) ($generated@@83 ($generated@@388 $generated@@549) $generated@@551))))))))
 :pattern ( ($generated@@83 ($generated@@309 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@83 ($generated@@388 ($generated@@543 $generated@@549 $generated@@550 $generated@@552)) $generated@@551))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@172) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) ($generated@@239 $generated@@555 ($generated@@413 $generated@@556 $generated@@557))) (and (= ($generated@@290 ($generated@@348 ($generated@@311 $generated@@172 $generated@@172) $generated@@555)) $generated@@555) ($generated@@157 ($generated@@348 ($generated@@311 $generated@@172 $generated@@172) $generated@@555) ($generated@@413 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@555 ($generated@@413 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@172) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) $generated@@66)) ($generated@@239 $generated@@558 ($generated@@421 $generated@@559 $generated@@560))) (and (= ($generated@@290 ($generated@@348 ($generated@@329 $generated@@172 $generated@@172) $generated@@558)) $generated@@558) ($generated@@157 ($generated@@348 ($generated@@329 $generated@@172 $generated@@172) $generated@@558) ($generated@@421 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@421 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@66) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) $generated@@172)) ($generated@@239 $generated@@563 ($generated@@162 $generated@@561 $generated@@562))) (and (= ($generated@@290 ($generated@@348 $generated@@163 $generated@@563)) $generated@@563) ($generated@@157 ($generated@@348 $generated@@163 $generated@@563) ($generated@@162 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@162 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@565 T@T) ) (! (= (type ($generated@@564 $generated@@565)) ($generated@@78 $generated@@565 $generated@@4))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@83 ($generated@@564 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@83 ($generated@@564 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (not ($generated@@0 ($generated@@83 ($generated@@432 $generated@@569) $generated@@568))))
 :pattern ( (let (($generated@@569 (type $generated@@568)))
($generated@@83 ($generated@@432 $generated@@569) $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@71)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@66) (= (type $generated@@573) $generated@@66)) (and (= ($generated@@74 ($generated@@162 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@162 $generated@@572 $generated@@573)) $generated@@64)))
 :pattern ( ($generated@@162 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@163) (= ($generated@@537 ($generated@@290 $generated@@574)) ($generated@@538 $generated@@574)))
 :pattern ( ($generated@@537 ($generated@@290 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@172) ($generated@@239 $generated@@575 ($generated@@77 0))) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@575)) $generated@@575) ($generated@@157 ($generated@@348 ($generated@@78 $generated@@172 $generated@@4) $generated@@575) ($generated@@77 0))))
 :pattern ( ($generated@@239 $generated@@575 ($generated@@77 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@172) (= (type $generated@@577) $generated@@66)) ($generated@@239 $generated@@576 ($generated@@248 $generated@@577))) (and (= ($generated@@290 ($generated@@348 ($generated@@78 $generated@@172 $generated@@4) $generated@@576)) $generated@@576) ($generated@@157 ($generated@@348 ($generated@@78 $generated@@172 $generated@@4) $generated@@576) ($generated@@248 $generated@@577))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@248 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@172) (= (type $generated@@579) $generated@@66)) ($generated@@239 $generated@@578 ($generated@@253 $generated@@579))) (and (= ($generated@@290 ($generated@@348 ($generated@@78 $generated@@172 $generated@@4) $generated@@578)) $generated@@578) ($generated@@157 ($generated@@348 ($generated@@78 $generated@@172 $generated@@4) $generated@@578) ($generated@@253 $generated@@579))))
 :pattern ( ($generated@@239 $generated@@578 ($generated@@253 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@172) (= (type $generated@@581) $generated@@66)) ($generated@@239 $generated@@580 ($generated@@177 $generated@@581))) (and (= ($generated@@290 ($generated@@348 ($generated@@78 $generated@@172 $generated@@2) $generated@@580)) $generated@@580) ($generated@@157 ($generated@@348 ($generated@@78 $generated@@172 $generated@@2) $generated@@580) ($generated@@177 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@580 ($generated@@177 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@172) (= (type $generated@@583) $generated@@66)) ($generated@@239 $generated@@582 ($generated@@499 $generated@@583))) (and (= ($generated@@290 ($generated@@348 ($generated@@283 $generated@@172) $generated@@582)) $generated@@582) ($generated@@157 ($generated@@348 ($generated@@283 $generated@@172) $generated@@582) ($generated@@499 $generated@@583))))
 :pattern ( ($generated@@239 $generated@@582 ($generated@@499 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@172) ($generated@@239 $generated@@584 ($generated@@77 12))) (and (= ($generated@@290 ($generated@@348 $generated@@134 $generated@@584)) $generated@@584) ($generated@@157 ($generated@@348 $generated@@134 $generated@@584) ($generated@@77 12))))
 :pattern ( ($generated@@239 $generated@@584 ($generated@@77 12)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@172) ($generated@@239 $generated@@585 ($generated@@77 28))) (and (= ($generated@@290 ($generated@@348 $generated@@142 $generated@@585)) $generated@@585) ($generated@@157 ($generated@@348 $generated@@142 $generated@@585) ($generated@@77 28))))
 :pattern ( ($generated@@239 $generated@@585 ($generated@@77 28)))
)))
(assert (= ($generated@@74 $generated@@154) $generated@@63))
(assert (= ($generated@@570 $generated@@154) $generated@@65))
(assert  (=> (<= 0 $generated@@264) (forall (($generated@@586 Int) ) (!  (=> (or ($generated@@266 ($generated@@258 $generated@@586)) (not (= 0 $generated@@264))) (= ($generated@@265 ($generated@@258 $generated@@586)) (= ($generated@@258 $generated@@586) ($generated@@258 157))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@258 $generated@@586)))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@172 $generated@@2)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@587 ($generated@@177 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@172) (< 0 ($generated ($generated@@83 $generated@@587 $generated@@590)))) ($generated@@269 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@83 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@76 $generated@@587 ($generated@@177 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@163) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@268 $generated@@593) (and ($generated@@161 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@66) ($generated@@76 $generated@@591 ($generated@@162 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@76 $generated@@591 ($generated@@162 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@269 ($generated@@170 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@269 ($generated@@170 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@163) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@268 $generated@@597) (and ($generated@@161 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@66) ($generated@@76 $generated@@595 ($generated@@162 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@162 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@269 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@269 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@172) (= (type $generated@@600) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@599) ($generated@@260 $generated@@600)) ($generated@@260 ($generated@@238 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@599) ($generated@@260 $generated@@600)))
)))
(assert (forall (($generated@@601 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@258 $generated@@601))) ($generated@@260 ($generated@@290 ($generated@@8 $generated@@601))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@258 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@290 ($generated@@260 $generated@@602)) ($generated@@260 ($generated@@290 $generated@@602)))
 :pattern ( ($generated@@290 ($generated@@260 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@284 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@283 $generated@@604)) (= ($generated@@282 $generated@@603) 0)) (= $generated@@603 ($generated@@281 $generated@@604))))
 :pattern ( ($generated@@282 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@78 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@303 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@303 $generated@@605) ($generated ($generated@@83 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@303 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@610) $generated@@2)) ($generated@@76 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@76 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@3)) ($generated@@76 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@76 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) $generated@@4)) ($generated@@76 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@76 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) $generated@@456)) ($generated@@76 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@76 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@618) $generated@@172)) ($generated@@76 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@76 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@283 $generated@@172)) (= (type $generated@@620) $generated@@66)) (= ($generated@@157 $generated@@619 ($generated@@499 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@282 $generated@@619))) ($generated@@239 ($generated@@500 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@500 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@157 $generated@@619 ($generated@@499 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@283 $generated@@172)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@282 $generated@@623))) (< ($generated@@538 ($generated@@348 $generated@@163 ($generated@@500 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@538 ($generated@@348 $generated@@163 ($generated@@500 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@626) $generated@@66)) (= (type $generated@@627) $generated@@66)) ($generated@@157 $generated@@625 ($generated@@413 $generated@@626 $generated@@627))) (and (and ($generated@@157 ($generated@@309 $generated@@625) ($generated@@248 $generated@@626)) ($generated@@157 ($generated@@356 $generated@@625) ($generated@@248 $generated@@627))) ($generated@@157 ($generated@@387 $generated@@625) ($generated@@248 ($generated@@162 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@157 $generated@@625 ($generated@@413 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@629) $generated@@66)) (= (type $generated@@630) $generated@@66)) ($generated@@157 $generated@@628 ($generated@@421 $generated@@629 $generated@@630))) (and (and ($generated@@157 ($generated@@327 $generated@@628) ($generated@@253 $generated@@629)) ($generated@@157 ($generated@@367 $generated@@628) ($generated@@253 $generated@@630))) ($generated@@157 ($generated@@395 $generated@@628) ($generated@@253 ($generated@@162 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@157 $generated@@628 ($generated@@421 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@157 $generated@@631 $generated@@46))
 :pattern ( ($generated@@157 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@157 $generated@@632 $generated@@47))
 :pattern ( ($generated@@157 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@157 $generated@@633 $generated@@44))
 :pattern ( ($generated@@157 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@456) ($generated@@157 $generated@@634 $generated@@45))
 :pattern ( ($generated@@157 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@172) ($generated@@157 $generated@@635 $generated@@48))
 :pattern ( ($generated@@157 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Bool)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Bool)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@660) ($generated@@184 $generated@@79 $generated@@4))) (= (type $generated@@661) $generated@@79)) (= (type $generated@@668) ($generated@@78 $generated@@172 $generated@@4))) (= (type $generated@@669) ($generated@@283 $generated@@172))) (= (type $generated@@670) ($generated@@311 $generated@@172 $generated@@172))) (= (type $generated@@671) ($generated@@78 $generated@@172 $generated@@2))) (= (type $generated@@672) ($generated@@78 $generated@@172 $generated@@4))) (= (type $generated@@673) ($generated@@329 $generated@@172 $generated@@172))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 55) (let (($generated@@674 true))
(let (($generated@@675  (=> (and (not (and (<= ($generated@@258 (- 0 3)) $generated@@636) (< $generated@@636 7))) (= (ControlFlow 0 4) 1)) $generated@@674)))
(let (($generated@@676  (=> (and (and (and (<= ($generated@@258 (- 0 3)) $generated@@636) (< $generated@@636 7)) ($generated@@76 ($generated@@8 $generated@@636) $generated@@46 $generated@@637)) (and ($generated@@266 $generated@@636) (= (ControlFlow 0 3) 1))) $generated@@674)))
(let (($generated@@677  (=> (< $generated@@636 ($generated@@258 (- 0 3))) (and (=> (= (ControlFlow 0 6) 3) $generated@@676) (=> (= (ControlFlow 0 6) 4) $generated@@675)))))
(let (($generated@@678  (=> (and (<= ($generated@@258 (- 0 3)) $generated@@636) (= $generated@@638 ($generated@@258 7))) (and (=> (= (ControlFlow 0 5) 3) $generated@@676) (=> (= (ControlFlow 0 5) 4) $generated@@675)))))
(let (($generated@@679  (=> (and ($generated@@0 ($generated@@260 ($generated@@11 true))) (= $generated@@639 ($generated@@258 (- 0 3)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@678) (=> (= (ControlFlow 0 7) 6) $generated@@677)))))
(let (($generated@@680  (=> (and (not ($generated@@0 ($generated@@260 ($generated@@11 true)))) (= (ControlFlow 0 2) 1)) $generated@@674)))
(let (($generated@@681  (=> (and (forall (($generated@@682 Int) )  (=> (<= ($generated@@258 (- 0 2)) $generated@@682) (=> (< $generated@@682 20) ($generated@@266 $generated@@682)))) (= $generated@@640 (forall (($generated@@683 Int) )  (=> (<= ($generated@@258 (- 0 2)) $generated@@683) (=> (< $generated@@683 20) ($generated@@265 $generated@@683)))))) (and (=> (= (ControlFlow 0 8) 7) $generated@@679) (=> (= (ControlFlow 0 8) 2) $generated@@680)))))
(let (($generated@@684  (=> (and (<= 20 $generated@@641) (= (ControlFlow 0 11) 8)) $generated@@681)))
(let (($generated@@685  (=> (and (and (< $generated@@641 20) ($generated@@76 ($generated@@8 $generated@@641) $generated@@46 $generated@@637)) (and ($generated@@266 $generated@@641) (= (ControlFlow 0 10) 8))) $generated@@681)))
(let (($generated@@686  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@641) (= $generated@@642 ($generated@@258 20))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (<= ($generated@@258 (- 0 2)) $generated@@642)) (=> (<= ($generated@@258 (- 0 2)) $generated@@642) (and (=> (= (ControlFlow 0 12) 10) $generated@@685) (=> (= (ControlFlow 0 12) 11) $generated@@684)))))))
(let (($generated@@687  (=> (and (< $generated@@641 ($generated@@258 (- 0 2))) (= (ControlFlow 0 9) 8)) $generated@@681)))
(let (($generated@@688  (=> (and (forall (($generated@@689 Int) )  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@689) (< $generated@@689 100)) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@266 $generated@@689)))) (= $generated@@643 (forall (($generated@@690 Int) )  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@690) (< $generated@@690 100)) (=> true ($generated@@265 $generated@@690)))))) (and (=> (= (ControlFlow 0 14) 12) $generated@@686) (=> (= (ControlFlow 0 14) 9) $generated@@687)))))
(let (($generated@@691  (=> (and (not ($generated@@0 ($generated@@260 ($generated@@11 true)))) (= (ControlFlow 0 17) 14)) $generated@@688)))
(let (($generated@@692  (=> (and (and ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@76 ($generated@@8 $generated@@644) $generated@@46 $generated@@637)) (and ($generated@@266 $generated@@644) (= (ControlFlow 0 16) 14))) $generated@@688)))
(let (($generated@@693  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@644) (< $generated@@644 100)) (and (=> (= (ControlFlow 0 18) 16) $generated@@692) (=> (= (ControlFlow 0 18) 17) $generated@@691)))))
(let (($generated@@694  (=> (and (not (and (<= ($generated@@258 (- 0 2)) $generated@@644) (< $generated@@644 100))) (= (ControlFlow 0 15) 14)) $generated@@688)))
(let (($generated@@695  (=> (and (forall (($generated@@696 Int) )  (=> (and (<= ($generated@@258 0) $generated@@696) (< $generated@@696 100)) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@266 $generated@@696)))) (= $generated@@645 (forall (($generated@@697 Int) )  (=> (and (<= ($generated@@258 0) $generated@@697) (< $generated@@697 100)) (=> true ($generated@@265 $generated@@697)))))) (and (=> (= (ControlFlow 0 19) 18) $generated@@693) (=> (= (ControlFlow 0 19) 15) $generated@@694)))))
(let (($generated@@698  (=> (and (not ($generated@@0 ($generated@@260 ($generated@@11 true)))) (= (ControlFlow 0 22) 19)) $generated@@695)))
(let (($generated@@699  (=> (and (and ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@76 ($generated@@8 $generated@@646) $generated@@46 $generated@@637)) (and ($generated@@266 $generated@@646) (= (ControlFlow 0 21) 19))) $generated@@695)))
(let (($generated@@700  (=> (and (<= ($generated@@258 0) $generated@@646) (< $generated@@646 100)) (and (=> (= (ControlFlow 0 23) 21) $generated@@699) (=> (= (ControlFlow 0 23) 22) $generated@@698)))))
(let (($generated@@701  (=> (and (not (and (<= ($generated@@258 0) $generated@@646) (< $generated@@646 100))) (= (ControlFlow 0 20) 19)) $generated@@695)))
(let (($generated@@702  (=> (and (forall (($generated@@703 Int) )  (=> (and (<= ($generated@@258 0) $generated@@703) (< $generated@@703 100)) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@266 $generated@@703)))) (= $generated@@647 (forall (($generated@@704 Int) )  (=> (and (<= ($generated@@258 0) $generated@@704) (< $generated@@704 100)) (=> true ($generated@@265 $generated@@704)))))) (and (=> (= (ControlFlow 0 24) 23) $generated@@700) (=> (= (ControlFlow 0 24) 20) $generated@@701)))))
(let (($generated@@705  (=> (and (not ($generated@@0 ($generated@@260 ($generated@@11 true)))) (= (ControlFlow 0 27) 24)) $generated@@702)))
(let (($generated@@706  (=> (and (and ($generated@@0 ($generated@@260 ($generated@@11 true))) ($generated@@76 ($generated@@8 $generated@@648) $generated@@46 $generated@@637)) (and ($generated@@266 $generated@@648) (= (ControlFlow 0 26) 24))) $generated@@702)))
(let (($generated@@707  (=> (and (<= ($generated@@258 0) $generated@@648) (< $generated@@648 100)) (and (=> (= (ControlFlow 0 28) 26) $generated@@706) (=> (= (ControlFlow 0 28) 27) $generated@@705)))))
(let (($generated@@708  (=> (and (not (and (<= ($generated@@258 0) $generated@@648) (< $generated@@648 100))) (= (ControlFlow 0 25) 24)) $generated@@702)))
(let (($generated@@709  (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@0 ($generated@@260 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (and (=> (= (ControlFlow 0 29) 28) $generated@@707) (=> (= (ControlFlow 0 29) 25) $generated@@708)))))))
(let (($generated@@710  (=> (and (not ($generated@@0 ($generated@@260 ($generated@@11 true)))) (= (ControlFlow 0 32) 29)) $generated@@709)))
(let (($generated@@711  (=> (and ($generated@@0 ($generated@@260 ($generated@@11 true))) (= (ControlFlow 0 31) 29)) $generated@@709)))
(let (($generated@@712  (and (=> (= (ControlFlow 0 33) (- 0 34)) ($generated@@0 ($generated@@260 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (=> (<= ($generated@@258 (- 0 2)) $generated@@649) (and (=> (= (ControlFlow 0 33) 31) $generated@@711) (=> (= (ControlFlow 0 33) 32) $generated@@710)))))))
(let (($generated@@713  (=> (and (< $generated@@650 ($generated@@258 (- 0 2))) (= (ControlFlow 0 36) 33)) $generated@@712)))
(let (($generated@@714  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@650) (= (ControlFlow 0 35) 33)) $generated@@712)))
(let (($generated@@715  (and (=> (= (ControlFlow 0 37) (- 0 38)) (or (and ($generated@@157 ($generated@@8 ($generated@@258 (- 20 1))) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< (- 20 1) 20))))) (or (and ($generated@@157 ($generated@@8 ($generated@@258 (- 0 2))) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< (- 0 2) 20))))) (or (and ($generated@@157 ($generated@@8 ($generated@@258 0)) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< 0 20))))) (exists (($generated@@716 Int) )  (and (<= ($generated@@258 (- 0 2)) $generated@@716) (< $generated@@716 20))))))) (=> (or (and ($generated@@157 ($generated@@8 ($generated@@258 (- 20 1))) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< (- 20 1) 20))))) (or (and ($generated@@157 ($generated@@8 ($generated@@258 (- 0 2))) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< (- 0 2) 20))))) (or (and ($generated@@157 ($generated@@8 ($generated@@258 0)) $generated@@154) ($generated@@0 ($generated@@260 ($generated@@11 (< 0 20))))) (exists (($generated@@717 Int) )  (and (<= ($generated@@258 (- 0 2)) $generated@@717) (< $generated@@717 20)))))) (=> (and (<= ($generated@@258 (- 0 2)) $generated@@651) (< $generated@@651 20)) (and (=> (= (ControlFlow 0 37) 35) $generated@@714) (=> (= (ControlFlow 0 37) 36) $generated@@713)))))))
(let (($generated@@718  (=> (and (< $generated@@652 ($generated@@258 (- 0 2))) (= (ControlFlow 0 41) 37)) $generated@@715)))
(let (($generated@@719  (=> (and (<= ($generated@@258 (- 0 2)) $generated@@652) (= $generated@@653 ($generated@@258 20))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (<= ($generated@@258 (- 0 2)) $generated@@653)) (=> (<= ($generated@@258 (- 0 2)) $generated@@653) (=> (= (ControlFlow 0 39) 37) $generated@@715))))))
(let (($generated@@720  (and (=> (= (ControlFlow 0 42) (- 0 43)) ($generated@@0 ($generated@@260 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (=> (and (<= ($generated@@258 (- 0 2)) $generated@@654) (< $generated@@654 100)) (and (=> (= (ControlFlow 0 42) 39) $generated@@719) (=> (= (ControlFlow 0 42) 41) $generated@@718)))))))
(let (($generated@@721  (=> (and (not (and (<= ($generated@@258 (- 0 2)) $generated@@655) (< $generated@@655 100))) (= (ControlFlow 0 45) 42)) $generated@@720)))
(let (($generated@@722  (=> (and (and (<= ($generated@@258 (- 0 2)) $generated@@655) (< $generated@@655 100)) (= (ControlFlow 0 44) 42)) $generated@@720)))
(let (($generated@@723  (and (=> (= (ControlFlow 0 46) (- 0 47)) ($generated@@0 ($generated@@260 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (=> (and (<= ($generated@@258 0) $generated@@656) (< $generated@@656 100)) (and (=> (= (ControlFlow 0 46) 44) $generated@@722) (=> (= (ControlFlow 0 46) 45) $generated@@721)))))))
(let (($generated@@724  (=> (and (not (and (<= ($generated@@258 0) $generated@@657) (< $generated@@657 100))) (= (ControlFlow 0 49) 46)) $generated@@723)))
(let (($generated@@725  (=> (and (and (<= ($generated@@258 0) $generated@@657) (< $generated@@657 100)) (= (ControlFlow 0 48) 46)) $generated@@723)))
(let (($generated@@726  (and (=> (= (ControlFlow 0 50) (- 0 51)) ($generated@@0 ($generated@@260 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@260 ($generated@@11 true))) (=> (and (<= ($generated@@258 0) $generated@@658) (< $generated@@658 100)) (and (=> (= (ControlFlow 0 50) 48) $generated@@725) (=> (= (ControlFlow 0 50) 49) $generated@@724)))))))
(let (($generated@@727  (=> (and (not (and (<= ($generated@@258 0) $generated@@659) (< $generated@@659 100))) (= (ControlFlow 0 53) 50)) $generated@@726)))
(let (($generated@@728  (=> (and (and (<= ($generated@@258 0) $generated@@659) (< $generated@@659 100)) (= (ControlFlow 0 52) 50)) $generated@@726)))
(let (($generated@@729  (=> (= $generated@@660 ($generated@@183 $generated@@661 $generated@@637 $generated@@60 false)) (and (=> (= (ControlFlow 0 54) 52) $generated@@728) (=> (= (ControlFlow 0 54) 53) $generated@@727)))))
(let (($generated@@730  (=> (and ($generated@@268 $generated@@637) ($generated@@662 $generated@@637)) (=> (and (and (and (and (<= ($generated@@258 0) $generated@@663) (< $generated@@663 100)) true) (and (and (<= ($generated@@258 0) $generated@@664) (< $generated@@664 100)) true)) (and (and (and (<= ($generated@@258 (- 0 2)) $generated@@665) (< $generated@@665 100)) true) (and (<= ($generated@@258 (- 0 2)) $generated@@666) true))) (=> (and (and (and (and (and (<= ($generated@@258 (- 0 2)) $generated@@667) true) (and ($generated@@0 ($generated@@260 ($generated@@11 true))) true)) (and (and ($generated@@157 $generated@@668 ($generated@@248 $generated@@46)) ($generated@@76 $generated@@668 ($generated@@248 $generated@@46) $generated@@637)) true)) (and (and (and ($generated@@157 $generated@@669 ($generated@@499 $generated@@47)) ($generated@@76 $generated@@669 ($generated@@499 $generated@@47) $generated@@637)) true) (and (and ($generated@@157 $generated@@670 ($generated@@413 $generated@@46 $generated@@46)) ($generated@@76 $generated@@670 ($generated@@413 $generated@@46 $generated@@46) $generated@@637)) true))) (and (and (and (and ($generated@@157 $generated@@671 ($generated@@177 $generated@@45)) ($generated@@76 $generated@@671 ($generated@@177 $generated@@45) $generated@@637)) true) (and (and ($generated@@157 $generated@@672 ($generated@@253 ($generated@@77 12))) ($generated@@76 $generated@@672 ($generated@@253 ($generated@@77 12)) $generated@@637)) true)) (and (and (and ($generated@@157 $generated@@673 ($generated@@421 ($generated@@77 28) $generated@@46)) ($generated@@76 $generated@@673 ($generated@@421 ($generated@@77 28) $generated@@46) $generated@@637)) true) (and (= 2 $generated@@264) (= (ControlFlow 0 55) 54))))) $generated@@729)))))
$generated@@730))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 12)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 12))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 28)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 28))
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 (Real) Bool)
(declare-fun $generated@@243 (Real) Real)
(declare-fun $generated@@244 (Real) Bool)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 12)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 12)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 12) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 12) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 28)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 28)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 28) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 28) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@132) ($generated@@148 $generated@@150 ($generated@@75 12)))
 :pattern ( ($generated@@148 $generated@@150 ($generated@@75 12)))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@140) ($generated@@148 $generated@@151 ($generated@@75 28)))
 :pattern ( ($generated@@148 $generated@@151 ($generated@@75 28)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@64) (= (type $generated@@158) $generated@@64)) (= (type $generated@@159) $generated@@154)) ($generated@@148 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@148 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 17) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@64)) ($generated@@148 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@148 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 18)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@77 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@77 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@67 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@77) (= (type $generated@@235) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@236) ($generated@@66 $generated@@4))) (= (type $generated@@238) $generated@@77)) (= (type $generated@@239) ($generated@@66 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert  (=> (<= 0 $generated@@241) (forall (($generated@@245 Real) ) (!  (=> (or ($generated@@244 ($generated@@243 $generated@@245)) (not (= 0 $generated@@241))) (= ($generated@@242 ($generated@@243 $generated@@245)) (<= ($generated@@243 (/ $generated@@245 2.0)) ($generated@@243 $generated@@245))))
 :weight 3
 :pattern ( ($generated@@242 ($generated@@243 $generated@@245)))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@154)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@64) (= (type $generated@@251) $generated@@64)) (= (type $generated@@252) $generated@@163)) (= (type $generated@@253) $generated@@163)) (= ($generated@@148 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@148 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@154) (= (type $generated@@255) $generated@@154)) (= ($generated@@160 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@160 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@64)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@259) $generated@@64)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@163) ($generated@@0 ($generated@@81 $generated@@258 $generated@@260))) ($generated@@247 $generated@@260 $generated@@259))
 :pattern ( ($generated@@81 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@264) $generated@@64)) (= ($generated@@148 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@163) ($generated@@0 ($generated@@81 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@81 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@148 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@266 Real) ) (! (= ($generated@@243 $generated@@266) $generated@@266)
 :pattern ( ($generated@@243 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert  (=> (<= 0 $generated@@241) (forall (($generated@@271 Real) ) (!  (=> (or ($generated@@244 $generated@@271) (not (= 0 $generated@@241))) true)
 :pattern ( ($generated@@242 $generated@@271))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@163)) (= (type $generated@@277) $generated@@163)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@278)) (= ($generated@@74 ($generated@@246 $generated@@276 $generated@@277) ($generated@@153 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@74 ($generated@@246 $generated@@276 $generated@@277) ($generated@@153 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@154) (= ($generated@@152 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@154) ($generated@@152 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@163) (= (type $generated@@284) $generated@@163)) (= $generated@@282 ($generated@@246 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@152 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 19)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@163)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 20)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 21)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@169 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@169 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@304 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@308 (type $generated@@350))))
(let (($generated@@352 ($generated@@307 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@306 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@305 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@326 (type $generated@@354))))
(let (($generated@@356 ($generated@@325 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@324 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@323 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@322 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@326 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@326 (type $generated@@361))))
(let (($generated@@363 ($generated@@325 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@324 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@323 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@148 $generated@@365 ($generated@@168 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@163) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@247 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@148 $generated@@365 ($generated@@168 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@256 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@163) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@273 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@256 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@261 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@273 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@261 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@299 $generated@@377) $generated@@376)))
)))
(assert  (and (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@381)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@378 $generated@@381))
)) (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@379 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@308 (type $generated@@384))))
(let (($generated@@386 ($generated@@307 (type $generated@@384))))
(= (type ($generated@@380 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@380 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@306 $generated@@163 $generated@@163)) (= (type $generated@@388) $generated@@163)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@387) ($generated@@161 ($generated@@379 $generated@@154 $generated@@388)))) (= ($generated@@81 ($generated@@380 $generated@@387) ($generated@@161 ($generated@@379 $generated@@154 $generated@@388))) ($generated@@162 ($generated@@379 $generated@@154 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@326 (type $generated@@392))))
(let (($generated@@394 ($generated@@325 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@324 $generated@@163 $generated@@163)) (= (type $generated@@396) $generated@@163)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@395) ($generated@@161 ($generated@@379 $generated@@154 $generated@@396)))) (= ($generated@@81 ($generated@@390 $generated@@395) ($generated@@161 ($generated@@379 $generated@@154 $generated@@396))) ($generated@@162 ($generated@@379 $generated@@154 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@307 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@306 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@325 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@324 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@306 $generated@@163 $generated@@163)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))) (and ($generated@@273 ($generated@@81 ($generated@@380 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@273 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@324 $generated@@163 $generated@@163)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))) (and ($generated@@273 ($generated@@81 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@273 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@326 (type $generated@@425))))
(let (($generated@@427 ($generated@@325 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@324 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@323 $generated@@427 $generated@@426)) (= ($generated@@322 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@322 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@326 (type $generated@@428))))
(let (($generated@@430 ($generated@@325 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@324 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@323 $generated@@430 $generated@@429)) (= ($generated@@358 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@358 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@326 (type $generated@@431))))
(let (($generated@@433 ($generated@@325 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@324 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@323 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@163))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@308 (type $generated@@434))))
(let (($generated@@436 ($generated@@307 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@306 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@305 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@163) (= (type $generated@@438) $generated@@163)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@434) ($generated@@293 ($generated@@246 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@378 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@163) (= (type $generated@@443) $generated@@163)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@439) ($generated@@293 ($generated@@246 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@163) ($generated@@247 $generated@@444 $generated@@46)) (and (= ($generated@@293 ($generated@@379 $generated@@2 $generated@@444)) $generated@@444) ($generated@@148 ($generated@@379 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@163) ($generated@@247 $generated@@445 $generated@@47)) (and (= ($generated@@293 ($generated@@379 $generated@@3 $generated@@445)) $generated@@445) ($generated@@148 ($generated@@379 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@163) ($generated@@247 $generated@@446 $generated@@44)) (and (= ($generated@@293 ($generated@@379 $generated@@4 $generated@@446)) $generated@@446) ($generated@@148 ($generated@@379 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 22))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@163) ($generated@@247 $generated@@448 $generated@@45)) (and (= ($generated@@293 ($generated@@379 $generated@@447 $generated@@448)) $generated@@448) ($generated@@148 ($generated@@379 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@64) (= ($generated@@247 ($generated@@293 $generated@@449) $generated@@450) ($generated@@148 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@247 ($generated@@293 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@79 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@76 $generated@@452 $generated@@2)) (<= 0 ($generated@@298 $generated@@451))))
 :pattern ( ($generated@@298 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@288 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@287 $generated@@454)) (<= 0 ($generated@@286 $generated@@453))))
 :pattern ( ($generated@@286 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@163) (= (type $generated@@476) $generated@@163)) (= ($generated@@279 ($generated@@246 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@153 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@153 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@153 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@153 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) (= (type $generated@@486) $generated@@163)) (= ($generated@@161 ($generated@@246 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@246 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@163) (= (type $generated@@488) $generated@@163)) (= ($generated@@162 ($generated@@246 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@246 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@288 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@287 $generated@@163)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@286 $generated@@495))) ($generated@@273 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@75 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@75 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@256 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@256 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@256 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@261 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@261 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@168 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@168 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@168 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@379 $generated@@518 ($generated@@293 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@293 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@306 $generated@@163 $generated@@163)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@148 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@519) $generated@@522))) (and ($generated@@247 ($generated@@81 ($generated@@380 $generated@@519) $generated@@522) $generated@@521) ($generated@@247 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@148 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@324 $generated@@163 $generated@@163)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@148 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@523) $generated@@526))) (and ($generated@@247 ($generated@@81 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@247 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@148 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@163) (= (type $generated@@530) $generated@@163)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@246 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@246 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@163) (= (type $generated@@532) $generated@@163)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@246 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@246 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@163) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@247 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@293 ($generated@@379 ($generated@@306 $generated@@163 $generated@@163) $generated@@533)) $generated@@533) ($generated@@148 ($generated@@379 ($generated@@306 $generated@@163 $generated@@163) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@247 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@163) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@247 $generated@@536 ($generated@@415 $generated@@537 $generated@@538))) (and (= ($generated@@293 ($generated@@379 ($generated@@324 $generated@@163 $generated@@163) $generated@@536)) $generated@@536) ($generated@@148 ($generated@@379 ($generated@@324 $generated@@163 $generated@@163) $generated@@536) ($generated@@415 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@247 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@163)) ($generated@@247 $generated@@541 ($generated@@153 $generated@@539 $generated@@540))) (and (= ($generated@@293 ($generated@@379 $generated@@154 $generated@@541)) $generated@@541) ($generated@@148 ($generated@@379 $generated@@154 $generated@@541) ($generated@@153 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@247 $generated@@541 ($generated@@153 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@81 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@81 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (and (= ($generated@@72 ($generated@@153 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@153 $generated@@546 $generated@@547)) $generated@@63)))
 :pattern ( ($generated@@153 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@154) (= ($generated@@527 ($generated@@293 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@293 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@163) ($generated@@247 $generated@@549 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@379 $generated@@2 $generated@@549)) $generated@@549) ($generated@@148 ($generated@@379 ($generated@@76 $generated@@163 $generated@@4) $generated@@549) ($generated@@75 0))))
 :pattern ( ($generated@@247 $generated@@549 ($generated@@75 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@64)) ($generated@@247 $generated@@550 ($generated@@256 $generated@@551))) (and (= ($generated@@293 ($generated@@379 ($generated@@76 $generated@@163 $generated@@4) $generated@@550)) $generated@@550) ($generated@@148 ($generated@@379 ($generated@@76 $generated@@163 $generated@@4) $generated@@550) ($generated@@256 $generated@@551))))
 :pattern ( ($generated@@247 $generated@@550 ($generated@@256 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@64)) ($generated@@247 $generated@@552 ($generated@@261 $generated@@553))) (and (= ($generated@@293 ($generated@@379 ($generated@@76 $generated@@163 $generated@@4) $generated@@552)) $generated@@552) ($generated@@148 ($generated@@379 ($generated@@76 $generated@@163 $generated@@4) $generated@@552) ($generated@@261 $generated@@553))))
 :pattern ( ($generated@@247 $generated@@552 ($generated@@261 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@163) (= (type $generated@@555) $generated@@64)) ($generated@@247 $generated@@554 ($generated@@168 $generated@@555))) (and (= ($generated@@293 ($generated@@379 ($generated@@76 $generated@@163 $generated@@2) $generated@@554)) $generated@@554) ($generated@@148 ($generated@@379 ($generated@@76 $generated@@163 $generated@@2) $generated@@554) ($generated@@168 $generated@@555))))
 :pattern ( ($generated@@247 $generated@@554 ($generated@@168 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@163) (= (type $generated@@557) $generated@@64)) ($generated@@247 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@293 ($generated@@379 ($generated@@287 $generated@@163) $generated@@556)) $generated@@556) ($generated@@148 ($generated@@379 ($generated@@287 $generated@@163) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@247 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@163) ($generated@@247 $generated@@558 ($generated@@75 12))) (and (= ($generated@@293 ($generated@@379 $generated@@132 $generated@@558)) $generated@@558) ($generated@@148 ($generated@@379 $generated@@132 $generated@@558) ($generated@@75 12))))
 :pattern ( ($generated@@247 $generated@@558 ($generated@@75 12)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) ($generated@@247 $generated@@559 ($generated@@75 28))) (and (= ($generated@@293 ($generated@@379 $generated@@140 $generated@@559)) $generated@@559) ($generated@@148 ($generated@@379 $generated@@140 $generated@@559) ($generated@@75 28))))
 :pattern ( ($generated@@247 $generated@@559 ($generated@@75 28)))
)))
(assert  (=> (<= 0 $generated@@241) (forall (($generated@@560 Real) ) (!  (=> (or ($generated@@244 $generated@@560) (not (= 0 $generated@@241))) (= ($generated@@242 $generated@@560) (<= (/ $generated@@560 2.0) $generated@@560)))
 :pattern ( ($generated@@242 $generated@@560))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@168 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@163) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@273 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@168 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@567) (and ($generated@@152 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@153 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@153 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@273 ($generated@@161 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@273 ($generated@@161 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@154) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@571) (and ($generated@@152 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@153 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@153 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@273 ($generated@@162 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@273 ($generated@@162 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@163)) (= ($generated@@246 ($generated@@267 $generated@@573) ($generated@@267 $generated@@574)) ($generated@@267 ($generated@@246 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@246 ($generated@@267 $generated@@573) ($generated@@267 $generated@@574)))
)))
(assert (forall (($generated@@575 Real) ) (! (= ($generated@@293 ($generated@@9 ($generated@@243 $generated@@575))) ($generated@@267 ($generated@@293 ($generated@@9 $generated@@575))))
 :pattern ( ($generated@@293 ($generated@@9 ($generated@@243 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@293 ($generated@@267 $generated@@576)) ($generated@@267 ($generated@@293 $generated@@576)))
 :pattern ( ($generated@@293 ($generated@@267 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@288 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@287 $generated@@578)) (= ($generated@@286 $generated@@577) 0)) (= $generated@@577 ($generated@@285 $generated@@578))))
 :pattern ( ($generated@@286 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@298 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@298 $generated@@579) ($generated ($generated@@81 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@2)) ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@3)) ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@4)) ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@447)) ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@163)) ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@287 $generated@@163)) (= (type $generated@@594) $generated@@64)) (= ($generated@@148 $generated@@593 ($generated@@489 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@286 $generated@@593))) ($generated@@247 ($generated@@490 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@490 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@148 $generated@@593 ($generated@@489 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@287 $generated@@163)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@286 $generated@@597))) (< ($generated@@528 ($generated@@379 $generated@@154 ($generated@@490 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@528 ($generated@@379 $generated@@154 ($generated@@490 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@306 $generated@@163 $generated@@163)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@148 $generated@@599 ($generated@@407 $generated@@600 $generated@@601))) (and (and ($generated@@148 ($generated@@304 $generated@@599) ($generated@@256 $generated@@600)) ($generated@@148 ($generated@@347 $generated@@599) ($generated@@256 $generated@@601))) ($generated@@148 ($generated@@378 $generated@@599) ($generated@@256 ($generated@@153 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@148 $generated@@599 ($generated@@407 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@324 $generated@@163 $generated@@163)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@148 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@148 ($generated@@322 $generated@@602) ($generated@@261 $generated@@603)) ($generated@@148 ($generated@@358 $generated@@602) ($generated@@261 $generated@@604))) ($generated@@148 ($generated@@389 $generated@@602) ($generated@@261 ($generated@@153 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@148 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@148 $generated@@605 $generated@@46))
 :pattern ( ($generated@@148 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@148 $generated@@606 $generated@@47))
 :pattern ( ($generated@@148 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@148 $generated@@607 $generated@@44))
 :pattern ( ($generated@@148 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@447) ($generated@@148 $generated@@608 $generated@@45))
 :pattern ( ($generated@@148 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@163) ($generated@@148 $generated@@609 $generated@@48))
 :pattern ( ($generated@@148 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@610) ($generated@@175 $generated@@77 $generated@@4)) (= (type $generated@@611) $generated@@77)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@613) ($generated@@175 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@615  (=> (and (= $generated@@610 ($generated@@229 $generated@@611 $generated@@612 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 2.0) 0.0)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (= $generated@@613 ($generated@@174 $generated@@611 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@616) (=> (= (ControlFlow 0 4) 3) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@272 $generated@@612) ($generated@@614 $generated@@612)) (and (= 0 $generated@@241) (= (ControlFlow 0 5) 4))) $generated@@617)))
$generated@@618)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 12)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 12))
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 28)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 28))
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@U Int) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@U) Bool)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@310 (T@U T@U T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@U T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Bool)
(declare-fun $generated@@339 (T@U T@U) Bool)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@T T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@593 (T@T) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 12)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 12)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 12) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 12) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 28)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 28)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@146 ($generated@@75 28) $generated@@147))
 :pattern ( ($generated@@74 $generated@@146 ($generated@@75 28) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@132) ($generated@@148 $generated@@150 ($generated@@75 12)))
 :pattern ( ($generated@@148 $generated@@150 ($generated@@75 12)))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@140) ($generated@@148 $generated@@151 ($generated@@75 28)))
 :pattern ( ($generated@@148 $generated@@151 ($generated@@75 28)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@64) (= (type $generated@@158) $generated@@64)) (= (type $generated@@159) $generated@@154)) ($generated@@148 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@148 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 17) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@64)) ($generated@@148 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@148 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 18)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@77 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@154)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@163)) (= (type $generated@@236) $generated@@163)) (= ($generated@@148 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@148 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@154) (= (type $generated@@238) $generated@@154)) (= ($generated@@160 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@160 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@148 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@163) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@148 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@148 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@163) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@148 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@256)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@76 $generated@@163 $generated@@4)) ($generated@@254 $generated@@257)) (and ($generated@@148 ($generated@@253 $generated@@257) ($generated@@239 $generated@@46)) ($generated@@255 ($generated@@253 $generated@@257) $generated@@257)))
 :pattern ( ($generated@@253 $generated@@257))
)))
(assert  (and (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@264)) 19)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@259 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@259 $generated@@265))
))) (forall (($generated@@266 T@U) ) (! (= (type ($generated@@258 $generated@@266)) ($generated@@259 $generated@@163))
 :pattern ( ($generated@@258 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (= (type ($generated@@261 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@259 $generated@@163)) ($generated@@260 $generated@@268)) (and ($generated@@148 ($generated@@258 $generated@@268) ($generated@@261 $generated@@47)) ($generated@@262 ($generated@@258 $generated@@268) $generated@@268)))
 :pattern ( ($generated@@258 $generated@@268))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@272)) ($generated@@76 $generated@@163 $generated@@2))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@76 $generated@@163 $generated@@2)) ($generated@@270 $generated@@273)) (and ($generated@@148 ($generated@@269 $generated@@273) ($generated@@168 $generated@@45)) ($generated@@271 ($generated@@269 $generated@@273) $generated@@273)))
 :pattern ( ($generated@@269 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@163)) (= (type $generated@@279) $generated@@163)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@229 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@278 $generated@@279) ($generated@@153 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@154) (= ($generated@@152 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 Int) ) (! (let (($generated@@288 ($generated@@263 (type $generated@@286))))
(= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@263 (type $generated@@289))))
 (=> (and (= (type $generated@@289) ($generated@@259 $generated@@291)) (= (type $generated@@290) ($generated@@259 $generated@@291))) (= ($generated@@262 $generated@@289 $generated@@290)  (and (= ($generated@@284 $generated@@289) ($generated@@284 $generated@@290)) (forall (($generated@@292 Int) ) (!  (=> (and (<= 0 $generated@@292) (< $generated@@292 ($generated@@284 $generated@@289))) (= ($generated@@285 $generated@@289 $generated@@292) ($generated@@285 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@285 $generated@@289 $generated@@292))
 :pattern ( ($generated@@285 $generated@@290 $generated@@292))
))))))
 :pattern ( ($generated@@262 $generated@@289 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@300 $generated@@301)) 20)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@294 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@294 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@294 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (= (type ($generated@@293 $generated@@306)) ($generated@@294 $generated@@163 $generated@@163))
 :pattern ( ($generated@@293 $generated@@306))
))) (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (! (= (type ($generated@@296 $generated@@307 $generated@@308)) $generated@@64)
 :pattern ( ($generated@@296 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@294 $generated@@163 $generated@@163)) ($generated@@295 $generated@@309)) (and ($generated@@148 ($generated@@293 $generated@@309) ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 ($generated@@293 $generated@@309) $generated@@309)))
 :pattern ( ($generated@@293 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@317 $generated@@318)) 21)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@311 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@311 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@311 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (! (= (type ($generated@@310 $generated@@323 $generated@@324 $generated@@325)) ($generated@@311 $generated@@163 $generated@@163))
 :pattern ( ($generated@@310 $generated@@323 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (! (= (type ($generated@@313 $generated@@326 $generated@@327)) $generated@@64)
 :pattern ( ($generated@@313 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@328) $generated@@64) (= (type $generated@@329) $generated@@64)) (= (type $generated@@330) ($generated@@311 $generated@@163 $generated@@163))) ($generated@@312 $generated@@328 $generated@@329 $generated@@330)) (and ($generated@@148 ($generated@@310 $generated@@328 $generated@@329 $generated@@330) ($generated@@313 $generated@@328 $generated@@329)) ($generated@@314 ($generated@@310 $generated@@328 $generated@@329 $generated@@330) $generated@@330)))
 :pattern ( ($generated@@310 $generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@154) ($generated@@152 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@163) (= (type $generated@@333) $generated@@163)) (= $generated@@331 ($generated@@229 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@152 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@259 $generated@@335))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@T) ) (! (= ($generated@@284 ($generated@@334 $generated@@336)) 0)
 :pattern ( ($generated@@334 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@337 $generated@@340)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@76 $generated@@163 $generated@@4)) ($generated@@338 $generated@@341)) (and ($generated@@148 ($generated@@337 $generated@@341) ($generated@@244 ($generated@@75 12))) ($generated@@339 ($generated@@337 $generated@@341) $generated@@341)))
 :pattern ( ($generated@@337 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@163)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@74 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@275 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@349 T@T) ) (! (= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@349 $generated@@2))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (and (= (= ($generated@@347 $generated@@350) 0) (= $generated@@350 ($generated@@348 $generated@@351))) (=> (not (= ($generated@@347 $generated@@350) 0)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352))))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@354 $generated@@357 $generated@@358)) ($generated@@311 $generated@@357 $generated@@358))
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@81 ($generated@@353 ($generated@@354 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@81 ($generated@@353 ($generated@@354 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@298 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) ($generated@@294 $generated@@366 $generated@@367))
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@81 ($generated@@362 ($generated@@363 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@81 ($generated@@362 ($generated@@363 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@79 (type $generated@@371))))
 (=> (and (= (type $generated@@371) ($generated@@76 $generated@@373 $generated@@4)) (= (type $generated@@372) ($generated@@76 $generated@@373 $generated@@4))) (= ($generated@@255 $generated@@371 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (= ($generated@@0 ($generated@@81 $generated@@371 $generated@@374)) ($generated@@0 ($generated@@81 $generated@@372 $generated@@374))))
 :pattern ( ($generated@@81 $generated@@371 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@255 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@79 (type $generated@@375))))
 (=> (and (= (type $generated@@375) ($generated@@76 $generated@@377 $generated@@4)) (= (type $generated@@376) ($generated@@76 $generated@@377 $generated@@4))) (= ($generated@@339 $generated@@375 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (= ($generated@@0 ($generated@@81 $generated@@375 $generated@@378)) ($generated@@0 ($generated@@81 $generated@@376 $generated@@378))))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@339 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@79 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@76 $generated@@380 $generated@@2)) (= ($generated@@169 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@81 $generated@@379 $generated@@381))) (<= ($generated ($generated@@81 $generated@@379 $generated@@381)) ($generated@@347 $generated@@379))))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@169 $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@316 (type $generated@@382))))
(let (($generated@@384 ($generated@@315 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@311 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@354 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@353 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@316 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@316 (type $generated@@389))))
(let (($generated@@391 ($generated@@315 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@354 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@299 (type $generated@@393))))
(let (($generated@@395 ($generated@@298 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@294 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@363 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@362 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@299 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@76 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@299 (type $generated@@400))))
(let (($generated@@402 ($generated@@298 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@294 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@363 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@81 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@405) $generated@@64)) (= ($generated@@148 $generated@@404 ($generated@@168 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@163) (< 0 ($generated ($generated@@81 $generated@@404 $generated@@406)))) ($generated@@230 $generated@@406 $generated@@405))
 :pattern ( ($generated@@81 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@148 $generated@@404 ($generated@@168 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@79 (type $generated@@407))))
 (=> (and (= (type $generated@@407) ($generated@@76 $generated@@409 $generated@@2)) (= (type $generated@@408) ($generated@@76 $generated@@409 $generated@@2))) (= ($generated@@271 $generated@@407 $generated@@408) (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@409) (= ($generated ($generated@@81 $generated@@407 $generated@@410)) ($generated ($generated@@81 $generated@@408 $generated@@410))))
 :pattern ( ($generated@@81 $generated@@407 $generated@@410))
 :pattern ( ($generated@@81 $generated@@408 $generated@@410))
)))))
 :pattern ( ($generated@@271 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@239 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@163) ($generated@@0 ($generated@@81 $generated@@411 $generated@@414))) ($generated@@275 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@81 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@239 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@415 ($generated@@244 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@163) ($generated@@0 ($generated@@81 $generated@@415 $generated@@418))) ($generated@@275 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@81 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@415 ($generated@@244 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@81 ($generated@@348 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@81 ($generated@@348 $generated@@420) $generated@@419)))
)))
(assert  (and (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@421 $generated@@424)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@421 $generated@@424))
)) (forall (($generated@@425 T@T) ($generated@@426 T@U) ) (! (= (type ($generated@@422 $generated@@425 $generated@@426)) $generated@@425)
 :pattern ( ($generated@@422 $generated@@425 $generated@@426))
))) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
(= (type ($generated@@423 $generated@@427)) ($generated@@76 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@423 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@431) $generated@@163)) (= ($generated@@0 ($generated@@81 ($generated@@421 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@81 ($generated@@353 $generated@@430) ($generated@@161 ($generated@@422 $generated@@154 $generated@@431)))) (= ($generated@@81 ($generated@@423 $generated@@430) ($generated@@161 ($generated@@422 $generated@@154 $generated@@431))) ($generated@@162 ($generated@@422 $generated@@154 $generated@@431))))))
 :pattern ( ($generated@@81 ($generated@@421 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@76 $generated@@163 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@299 (type $generated@@435))))
(let (($generated@@437 ($generated@@298 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@76 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@294 $generated@@163 $generated@@163)) (= (type $generated@@439) $generated@@163)) (= ($generated@@0 ($generated@@81 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@81 ($generated@@362 $generated@@438) ($generated@@161 ($generated@@422 $generated@@154 $generated@@439)))) (= ($generated@@81 ($generated@@433 $generated@@438) ($generated@@161 ($generated@@422 $generated@@154 $generated@@439))) ($generated@@162 ($generated@@422 $generated@@154 $generated@@439))))))
 :pattern ( ($generated@@81 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@315 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@311 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@81 ($generated@@386 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@81 ($generated@@353 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@81 ($generated@@423 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@440) $generated@@444))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@298 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@294 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@81 ($generated@@397 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@81 ($generated@@362 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@81 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@445) $generated@@449))
 :pattern ( ($generated@@81 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@451) $generated@@64)) (= (type $generated@@452) $generated@@64)) (= (type $generated@@453) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@450 ($generated@@313 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@450) $generated@@454))) (and ($generated@@275 ($generated@@81 ($generated@@423 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@275 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@450) $generated@@454))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@74 $generated@@450 ($generated@@313 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@294 $generated@@163 $generated@@163)) (= (type $generated@@456) $generated@@64)) (= (type $generated@@457) $generated@@64)) (= (type $generated@@458) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@455 ($generated@@296 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@455) $generated@@459))) (and ($generated@@275 ($generated@@81 ($generated@@433 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@275 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@81 ($generated@@433 $generated@@455) $generated@@459))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@74 $generated@@455 ($generated@@296 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@79 (type $generated@@460))))
 (=> (and (and (= (type $generated@@460) ($generated@@76 $generated@@462 $generated@@4)) (= (type $generated@@461) ($generated@@76 $generated@@462 $generated@@4))) ($generated@@255 $generated@@460 $generated@@461)) (= $generated@@460 $generated@@461)))
 :pattern ( ($generated@@255 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@463))))
 (=> (and (and (= (type $generated@@463) ($generated@@76 $generated@@465 $generated@@4)) (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@4))) ($generated@@339 $generated@@463 $generated@@464)) (= $generated@@463 $generated@@464)))
 :pattern ( ($generated@@339 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@76 $generated@@468 $generated@@2)) (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2))) ($generated@@271 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@271 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@263 (type $generated@@469))))
 (=> (and (and (= (type $generated@@469) ($generated@@259 $generated@@471)) (= (type $generated@@470) ($generated@@259 $generated@@471))) ($generated@@262 $generated@@469 $generated@@470)) (= $generated@@469 $generated@@470)))
 :pattern ( ($generated@@262 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@316 (type $generated@@472))))
(let (($generated@@475 ($generated@@315 (type $generated@@472))))
 (=> (and (and (= (type $generated@@472) ($generated@@311 $generated@@475 $generated@@474)) (= (type $generated@@473) ($generated@@311 $generated@@475 $generated@@474))) ($generated@@314 $generated@@472 $generated@@473)) (= $generated@@472 $generated@@473))))
 :pattern ( ($generated@@314 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@299 (type $generated@@476))))
(let (($generated@@479 ($generated@@298 (type $generated@@476))))
 (=> (and (and (= (type $generated@@476) ($generated@@294 $generated@@479 $generated@@478)) (= (type $generated@@477) ($generated@@294 $generated@@479 $generated@@478))) ($generated@@297 $generated@@476 $generated@@477)) (= $generated@@476 $generated@@477))))
 :pattern ( ($generated@@297 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@76 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@299 (type $generated@@482))))
(let (($generated@@484 ($generated@@298 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@294 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@363 $generated@@484 $generated@@483)) (= ($generated@@362 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@362 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@299 (type $generated@@485))))
(let (($generated@@487 ($generated@@298 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@294 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@363 $generated@@487 $generated@@486)) (= ($generated@@397 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@397 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@299 (type $generated@@488))))
(let (($generated@@490 ($generated@@298 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@294 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@363 $generated@@490 $generated@@489)) (= ($generated@@432 $generated@@488) ($generated@@480 $generated@@163))))))
 :pattern ( ($generated@@432 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@316 (type $generated@@491))))
(let (($generated@@493 ($generated@@315 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@311 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@354 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) ($generated@@0 ($generated@@81 ($generated@@421 $generated@@491) ($generated@@342 ($generated@@229 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@421 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@299 (type $generated@@496))))
(let (($generated@@498 ($generated@@298 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@294 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@363 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@163) (= (type $generated@@500) $generated@@163)) ($generated@@0 ($generated@@81 ($generated@@432 $generated@@496) ($generated@@342 ($generated@@229 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@432 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@163) ($generated@@230 $generated@@501 $generated@@46)) (and (= ($generated@@342 ($generated@@422 $generated@@2 $generated@@501)) $generated@@501) ($generated@@148 ($generated@@422 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@163) ($generated@@230 $generated@@502 $generated@@47)) (and (= ($generated@@342 ($generated@@422 $generated@@3 $generated@@502)) $generated@@502) ($generated@@148 ($generated@@422 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@163) ($generated@@230 $generated@@503 $generated@@44)) (and (= ($generated@@342 ($generated@@422 $generated@@4 $generated@@503)) $generated@@503) ($generated@@148 ($generated@@422 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 22))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@163) ($generated@@230 $generated@@505 $generated@@45)) (and (= ($generated@@342 ($generated@@422 $generated@@504 $generated@@505)) $generated@@505) ($generated@@148 ($generated@@422 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@230 ($generated@@342 $generated@@506) $generated@@507) ($generated@@148 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@230 ($generated@@342 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@79 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@76 $generated@@509 $generated@@2)) (<= 0 ($generated@@347 $generated@@508))))
 :pattern ( ($generated@@347 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@263 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@259 $generated@@511)) (<= 0 ($generated@@284 $generated@@510))))
 :pattern ( ($generated@@284 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= ($generated@@512 ($generated@@313 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@313 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= ($generated@@516 ($generated@@313 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@313 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@72 ($generated@@313 $generated@@520 $generated@@521)) $generated@@58))
 :pattern ( ($generated@@313 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@296 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@296 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@296 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@296 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= ($generated@@72 ($generated@@296 $generated@@530 $generated@@531)) $generated@@59))
 :pattern ( ($generated@@296 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) (= (type $generated@@533) $generated@@163)) (= ($generated@@281 ($generated@@229 $generated@@532 $generated@@533)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@153 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@153 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= ($generated@@538 ($generated@@153 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@153 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@163) (= (type $generated@@543) $generated@@163)) (= ($generated@@161 ($generated@@229 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@229 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@163)) (= ($generated@@162 ($generated@@229 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@229 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@259 $generated@@163)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@261 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@284 $generated@@546))) ($generated@@275 ($generated@@285 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@285 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@261 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@550 ($generated@@75 $generated@@551)) $generated@@551)
 :pattern ( ($generated@@75 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@239 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@239 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@555)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@244 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@244 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@559)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@64)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@64) (= ($generated@@560 ($generated@@168 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@168 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@64) (= ($generated@@72 ($generated@@168 $generated@@563)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@564 ($generated@@261 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@261 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@567)) $generated@@57))
 :pattern ( ($generated@@261 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
(= ($generated@@422 $generated@@569 ($generated@@342 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@342 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) $generated@@64)) (= ($generated@@148 $generated@@570 ($generated@@313 $generated@@571 $generated@@572)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@570) $generated@@573))) (and ($generated@@230 ($generated@@81 ($generated@@423 $generated@@570) $generated@@573) $generated@@572) ($generated@@230 $generated@@573 $generated@@571)))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@570) $generated@@573))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@570) $generated@@573))
))))
 :pattern ( ($generated@@148 $generated@@570 ($generated@@313 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@294 $generated@@163 $generated@@163)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) (= ($generated@@148 $generated@@574 ($generated@@296 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@163) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@574) $generated@@577))) (and ($generated@@230 ($generated@@81 ($generated@@433 $generated@@574) $generated@@577) $generated@@576) ($generated@@230 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@81 ($generated@@433 $generated@@574) $generated@@577))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@148 $generated@@574 ($generated@@296 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@163)) (< ($generated@@578 $generated@@580) ($generated@@579 ($generated@@229 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (= (type $generated@@583) $generated@@163)) (< ($generated@@578 $generated@@583) ($generated@@579 ($generated@@229 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@163) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@230 $generated@@584 ($generated@@313 $generated@@585 $generated@@586))) (and (= ($generated@@342 ($generated@@422 ($generated@@311 $generated@@163 $generated@@163) $generated@@584)) $generated@@584) ($generated@@148 ($generated@@422 ($generated@@311 $generated@@163 $generated@@163) $generated@@584) ($generated@@313 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@230 $generated@@584 ($generated@@313 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@163) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@230 $generated@@587 ($generated@@296 $generated@@588 $generated@@589))) (and (= ($generated@@342 ($generated@@422 ($generated@@294 $generated@@163 $generated@@163) $generated@@587)) $generated@@587) ($generated@@148 ($generated@@422 ($generated@@294 $generated@@163 $generated@@163) $generated@@587) ($generated@@296 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@230 $generated@@587 ($generated@@296 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@64) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@163)) ($generated@@230 $generated@@592 ($generated@@153 $generated@@590 $generated@@591))) (and (= ($generated@@342 ($generated@@422 $generated@@154 $generated@@592)) $generated@@592) ($generated@@148 ($generated@@422 $generated@@154 $generated@@592) ($generated@@153 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@230 $generated@@592 ($generated@@153 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@594 T@T) ) (! (= (type ($generated@@593 $generated@@594)) ($generated@@76 $generated@@594 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (not ($generated@@0 ($generated@@81 ($generated@@593 $generated@@596) $generated@@595))))
 :pattern ( (let (($generated@@596 (type $generated@@595)))
($generated@@81 ($generated@@593 $generated@@596) $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@81 ($generated@@480 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@81 ($generated@@480 $generated@@598) $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@69)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@64) (= (type $generated@@602) $generated@@64)) (and (= ($generated@@72 ($generated@@153 $generated@@601 $generated@@602)) $generated@@62) (= ($generated@@599 ($generated@@153 $generated@@601 $generated@@602)) $generated@@63)))
 :pattern ( ($generated@@153 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@316 (type $generated@@603))))
(let (($generated@@606 ($generated@@315 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@311 $generated@@606 $generated@@605)) (= (type $generated@@604) ($generated@@311 $generated@@606 $generated@@605))) (= ($generated@@314 $generated@@603 $generated@@604)  (and (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@606) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@603) $generated@@607)) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@604) $generated@@607))))
 :no-pattern (type $generated@@607)
 :no-pattern ($generated $generated@@607)
 :no-pattern ($generated@@0 $generated@@607)
)) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@606) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@603) $generated@@608))) (= ($generated@@81 ($generated@@423 $generated@@603) $generated@@608) ($generated@@81 ($generated@@423 $generated@@604) $generated@@608)))
 :no-pattern (type $generated@@608)
 :no-pattern ($generated $generated@@608)
 :no-pattern ($generated@@0 $generated@@608)
)))))))
 :pattern ( ($generated@@314 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@299 (type $generated@@609))))
(let (($generated@@612 ($generated@@298 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@294 $generated@@612 $generated@@611)) (= (type $generated@@610) ($generated@@294 $generated@@612 $generated@@611))) (= ($generated@@297 $generated@@609 $generated@@610)  (and (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@612) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@609) $generated@@613)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@610) $generated@@613))))
 :no-pattern (type $generated@@613)
 :no-pattern ($generated $generated@@613)
 :no-pattern ($generated@@0 $generated@@613)
)) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@612) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@609) $generated@@614))) (= ($generated@@81 ($generated@@433 $generated@@609) $generated@@614) ($generated@@81 ($generated@@433 $generated@@610) $generated@@614)))
 :no-pattern (type $generated@@614)
 :no-pattern ($generated $generated@@614)
 :no-pattern ($generated@@0 $generated@@614)
)))))))
 :pattern ( ($generated@@297 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@154) (= ($generated@@578 ($generated@@342 $generated@@615)) ($generated@@579 $generated@@615)))
 :pattern ( ($generated@@578 ($generated@@342 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@163) ($generated@@230 $generated@@616 ($generated@@75 0))) (and (= ($generated@@342 ($generated@@422 $generated@@2 $generated@@616)) $generated@@616) ($generated@@148 ($generated@@422 ($generated@@76 $generated@@163 $generated@@4) $generated@@616) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@616 ($generated@@75 0)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@163) (= (type $generated@@618) $generated@@64)) ($generated@@230 $generated@@617 ($generated@@239 $generated@@618))) (and (= ($generated@@342 ($generated@@422 ($generated@@76 $generated@@163 $generated@@4) $generated@@617)) $generated@@617) ($generated@@148 ($generated@@422 ($generated@@76 $generated@@163 $generated@@4) $generated@@617) ($generated@@239 $generated@@618))))
 :pattern ( ($generated@@230 $generated@@617 ($generated@@239 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@163) (= (type $generated@@620) $generated@@64)) ($generated@@230 $generated@@619 ($generated@@244 $generated@@620))) (and (= ($generated@@342 ($generated@@422 ($generated@@76 $generated@@163 $generated@@4) $generated@@619)) $generated@@619) ($generated@@148 ($generated@@422 ($generated@@76 $generated@@163 $generated@@4) $generated@@619) ($generated@@244 $generated@@620))))
 :pattern ( ($generated@@230 $generated@@619 ($generated@@244 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@163) (= (type $generated@@622) $generated@@64)) ($generated@@230 $generated@@621 ($generated@@168 $generated@@622))) (and (= ($generated@@342 ($generated@@422 ($generated@@76 $generated@@163 $generated@@2) $generated@@621)) $generated@@621) ($generated@@148 ($generated@@422 ($generated@@76 $generated@@163 $generated@@2) $generated@@621) ($generated@@168 $generated@@622))))
 :pattern ( ($generated@@230 $generated@@621 ($generated@@168 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@163) (= (type $generated@@624) $generated@@64)) ($generated@@230 $generated@@623 ($generated@@261 $generated@@624))) (and (= ($generated@@342 ($generated@@422 ($generated@@259 $generated@@163) $generated@@623)) $generated@@623) ($generated@@148 ($generated@@422 ($generated@@259 $generated@@163) $generated@@623) ($generated@@261 $generated@@624))))
 :pattern ( ($generated@@230 $generated@@623 ($generated@@261 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@163) ($generated@@230 $generated@@625 ($generated@@75 12))) (and (= ($generated@@342 ($generated@@422 $generated@@132 $generated@@625)) $generated@@625) ($generated@@148 ($generated@@422 $generated@@132 $generated@@625) ($generated@@75 12))))
 :pattern ( ($generated@@230 $generated@@625 ($generated@@75 12)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@163) ($generated@@230 $generated@@626 ($generated@@75 28))) (and (= ($generated@@342 ($generated@@422 $generated@@140 $generated@@626)) $generated@@626) ($generated@@148 ($generated@@422 $generated@@140 $generated@@626) ($generated@@75 28))))
 :pattern ( ($generated@@230 $generated@@626 ($generated@@75 28)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@76 $generated@@163 $generated@@2)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@627 ($generated@@168 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@163) (< 0 ($generated ($generated@@81 $generated@@627 $generated@@630)))) ($generated@@275 $generated@@630 $generated@@628 $generated@@629))
 :pattern ( ($generated@@81 $generated@@627 $generated@@630))
))))
 :pattern ( ($generated@@74 $generated@@627 ($generated@@168 $generated@@628) $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@154) (= (type $generated@@632) $generated@@64)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@633) (and ($generated@@152 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@64) ($generated@@74 $generated@@631 ($generated@@153 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@74 $generated@@631 ($generated@@153 $generated@@632 $generated@@634) $generated@@633))
))))) ($generated@@275 ($generated@@161 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@275 ($generated@@161 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@154) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@637) (and ($generated@@152 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@64) ($generated@@74 $generated@@635 ($generated@@153 $generated@@638 $generated@@636) $generated@@637))
 :pattern ( ($generated@@74 $generated@@635 ($generated@@153 $generated@@638 $generated@@636) $generated@@637))
))))) ($generated@@275 ($generated@@162 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@275 ($generated@@162 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@163) (= (type $generated@@640) $generated@@163)) (= ($generated@@229 ($generated@@249 $generated@@639) ($generated@@249 $generated@@640)) ($generated@@249 ($generated@@229 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@229 ($generated@@249 $generated@@639) ($generated@@249 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@342 ($generated@@249 $generated@@641)) ($generated@@249 ($generated@@342 $generated@@641)))
 :pattern ( ($generated@@342 ($generated@@249 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@263 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@259 $generated@@643)) (= ($generated@@284 $generated@@642) 0)) (= $generated@@642 ($generated@@334 $generated@@643))))
 :pattern ( ($generated@@284 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@76 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@347 ($generated@@82 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@347 $generated@@644) ($generated ($generated@@81 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@347 ($generated@@82 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) $generated@@2)) ($generated@@74 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@74 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@651) $generated@@3)) ($generated@@74 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@74 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@653) $generated@@4)) ($generated@@74 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@74 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@655) $generated@@504)) ($generated@@74 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@74 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@657) $generated@@163)) ($generated@@74 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@74 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@259 $generated@@163)) (= (type $generated@@659) $generated@@64)) (= ($generated@@148 $generated@@658 ($generated@@261 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@284 $generated@@658))) ($generated@@230 ($generated@@285 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@285 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@148 $generated@@658 ($generated@@261 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@259 $generated@@163)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@284 $generated@@662))) (< ($generated@@579 ($generated@@422 $generated@@154 ($generated@@285 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@579 ($generated@@422 $generated@@154 ($generated@@285 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@311 $generated@@163 $generated@@163)) (= (type $generated@@665) $generated@@64)) (= (type $generated@@666) $generated@@64)) ($generated@@148 $generated@@664 ($generated@@313 $generated@@665 $generated@@666))) (and (and ($generated@@148 ($generated@@353 $generated@@664) ($generated@@239 $generated@@665)) ($generated@@148 ($generated@@386 $generated@@664) ($generated@@239 $generated@@666))) ($generated@@148 ($generated@@421 $generated@@664) ($generated@@239 ($generated@@153 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@148 $generated@@664 ($generated@@313 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@294 $generated@@163 $generated@@163)) (= (type $generated@@668) $generated@@64)) (= (type $generated@@669) $generated@@64)) ($generated@@148 $generated@@667 ($generated@@296 $generated@@668 $generated@@669))) (and (and ($generated@@148 ($generated@@362 $generated@@667) ($generated@@244 $generated@@668)) ($generated@@148 ($generated@@397 $generated@@667) ($generated@@244 $generated@@669))) ($generated@@148 ($generated@@432 $generated@@667) ($generated@@244 ($generated@@153 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@148 $generated@@667 ($generated@@296 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@148 $generated@@670 $generated@@46))
 :pattern ( ($generated@@148 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@148 $generated@@671 $generated@@47))
 :pattern ( ($generated@@148 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@148 $generated@@672 $generated@@44))
 :pattern ( ($generated@@148 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@504) ($generated@@148 $generated@@673 $generated@@45))
 :pattern ( ($generated@@148 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@163) ($generated@@148 $generated@@674 $generated@@48))
 :pattern ( ($generated@@148 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 (T@U) Bool)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@675) ($generated@@294 $generated@@163 $generated@@163)) (= (type $generated@@696) ($generated@@294 $generated@@163 $generated@@163))) (= (type $generated@@677) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@697) ($generated@@294 $generated@@163 $generated@@163))) (= (type $generated@@678) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@698) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@699) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@700) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@681) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@701) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@702) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@703) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@684) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@685) $generated@@64)) (= (type $generated@@686) $generated@@64)) (= (type $generated@@704) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@705) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@706) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@689) ($generated@@259 $generated@@163))) (= (type $generated@@707) ($generated@@259 $generated@@163))) (= (type $generated@@708) ($generated@@259 $generated@@163))) (= (type $generated@@709) ($generated@@259 $generated@@163))) (= (type $generated@@692) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@710) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@711) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@712) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@676) ($generated@@294 $generated@@163 $generated@@163))) (= (type $generated@@679) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@680) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@682) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@683) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@687) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@688) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@690) ($generated@@259 $generated@@163))) (= (type $generated@@691) ($generated@@259 $generated@@163))) (= (type $generated@@693) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@694) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@713) ($generated@@175 $generated@@77 $generated@@4))) (= (type $generated@@714) $generated@@77)) (= (type $generated@@716) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@717) ($generated@@259 $generated@@163))) (= (type $generated@@718) ($generated@@311 $generated@@163 $generated@@163))) (= (type $generated@@719) ($generated@@76 $generated@@163 $generated@@2))) (= (type $generated@@720) ($generated@@76 $generated@@163 $generated@@4))) (= (type $generated@@721) ($generated@@294 $generated@@163 $generated@@163))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 58) (let (($generated@@723  (=> (= (ControlFlow 0 33) (- 0 32)) (or (and ($generated@@148 $generated@@675 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@675 $generated@@675)) (exists (($generated@@724 T@U) ) (!  (and (= (type $generated@@724) ($generated@@294 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@724 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@724 $generated@@675)))
 :no-pattern (type $generated@@724)
 :no-pattern ($generated $generated@@724)
 :no-pattern ($generated@@0 $generated@@724)
))))))
(let (($generated@@725  (=> (and (not (and ($generated@@148 $generated@@676 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@676 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677))) (= (ControlFlow 0 35) 33)) $generated@@723)))
(let (($generated@@726  (=> (and (and ($generated@@148 $generated@@676 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@676 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) (= (ControlFlow 0 34) 33)) $generated@@723)))
(let (($generated@@727  (and (=> (= (ControlFlow 0 36) (- 0 37)) (or (and ($generated@@148 $generated@@678 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@678 $generated@@678)) (or (and ($generated@@148 ($generated@@249 ($generated@@480 $generated@@163)) ($generated@@244 ($generated@@75 12))) ($generated@@339 ($generated@@480 $generated@@163) $generated@@678)) (exists (($generated@@728 T@U) ) (!  (and (= (type $generated@@728) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@728 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@728 $generated@@678)))
 :no-pattern (type $generated@@728)
 :no-pattern ($generated $generated@@728)
 :no-pattern ($generated@@0 $generated@@728)
))))) (=> (or (and ($generated@@148 $generated@@678 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@678 $generated@@678)) (or (and ($generated@@148 ($generated@@249 ($generated@@480 $generated@@163)) ($generated@@244 ($generated@@75 12))) ($generated@@339 ($generated@@480 $generated@@163) $generated@@678)) (exists (($generated@@729 T@U) ) (!  (and (= (type $generated@@729) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@729 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@729 $generated@@678)))
 :no-pattern (type $generated@@729)
 :no-pattern ($generated $generated@@729)
 :no-pattern ($generated@@0 $generated@@729)
)))) (=> (and (and ($generated@@148 $generated@@679 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@679 ($generated@@244 ($generated@@75 12)) $generated@@677)) ($generated@@339 $generated@@679 $generated@@678)) (and (=> (= (ControlFlow 0 36) 34) $generated@@726) (=> (= (ControlFlow 0 36) 35) $generated@@725)))))))
(let (($generated@@730  (=> (and (not (and ($generated@@148 $generated@@680 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@680 ($generated@@244 ($generated@@75 12)) $generated@@677))) (= (ControlFlow 0 39) 36)) $generated@@727)))
(let (($generated@@731  (=> (and (and ($generated@@148 $generated@@680 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@680 ($generated@@244 ($generated@@75 12)) $generated@@677)) (= (ControlFlow 0 38) 36)) $generated@@727)))
(let (($generated@@732  (and (=> (= (ControlFlow 0 40) (- 0 41)) (or (and ($generated@@148 $generated@@681 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@681 $generated@@681)) (or (and ($generated@@148 ($generated@@249 ($generated@@348 $generated@@163)) ($generated@@168 $generated@@45)) ($generated@@271 ($generated@@348 $generated@@163) $generated@@681)) (exists (($generated@@733 T@U) ) (!  (and (= (type $generated@@733) ($generated@@76 $generated@@163 $generated@@2)) (and ($generated@@148 $generated@@733 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@733 $generated@@681)))
 :no-pattern (type $generated@@733)
 :no-pattern ($generated $generated@@733)
 :no-pattern ($generated@@0 $generated@@733)
))))) (=> (or (and ($generated@@148 $generated@@681 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@681 $generated@@681)) (or (and ($generated@@148 ($generated@@249 ($generated@@348 $generated@@163)) ($generated@@168 $generated@@45)) ($generated@@271 ($generated@@348 $generated@@163) $generated@@681)) (exists (($generated@@734 T@U) ) (!  (and (= (type $generated@@734) ($generated@@76 $generated@@163 $generated@@2)) (and ($generated@@148 $generated@@734 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@734 $generated@@681)))
 :no-pattern (type $generated@@734)
 :no-pattern ($generated $generated@@734)
 :no-pattern ($generated@@0 $generated@@734)
)))) (=> (and (and ($generated@@148 $generated@@682 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@682 ($generated@@168 $generated@@45) $generated@@677)) ($generated@@271 $generated@@682 $generated@@681)) (and (=> (= (ControlFlow 0 40) 38) $generated@@731) (=> (= (ControlFlow 0 40) 39) $generated@@730)))))))
(let (($generated@@735  (=> (and (not (and ($generated@@148 $generated@@683 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@683 ($generated@@168 $generated@@45) $generated@@677))) (= (ControlFlow 0 43) 40)) $generated@@732)))
(let (($generated@@736  (=> (and (and ($generated@@148 $generated@@683 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@683 ($generated@@168 $generated@@45) $generated@@677)) (= (ControlFlow 0 42) 40)) $generated@@732)))
(let (($generated@@737  (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (and ($generated@@148 $generated@@684 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@684 $generated@@684)) (exists (($generated@@738 T@U) ) (!  (and (= (type $generated@@738) ($generated@@311 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@738 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@738 $generated@@684)))
 :no-pattern (type $generated@@738)
 :no-pattern ($generated $generated@@738)
 :no-pattern ($generated@@0 $generated@@738)
)))) (=> (or (and ($generated@@148 $generated@@684 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@684 $generated@@684)) (exists (($generated@@739 T@U) ) (!  (and (= (type $generated@@739) ($generated@@311 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@739 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@739 $generated@@684)))
 :no-pattern (type $generated@@739)
 :no-pattern ($generated $generated@@739)
 :no-pattern ($generated@@0 $generated@@739)
))) (=> (and (and ($generated@@148 $generated@@687 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@687 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)) ($generated@@314 $generated@@687 $generated@@684)) (and (=> (= (ControlFlow 0 44) 42) $generated@@736) (=> (= (ControlFlow 0 44) 43) $generated@@735)))))))
(let (($generated@@740  (=> (and (not (and ($generated@@148 $generated@@688 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@688 ($generated@@313 $generated@@685 $generated@@686) $generated@@677))) (= (ControlFlow 0 47) 44)) $generated@@737)))
(let (($generated@@741  (=> (and (and ($generated@@148 $generated@@688 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@688 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)) (= (ControlFlow 0 46) 44)) $generated@@737)))
(let (($generated@@742  (and (=> (= (ControlFlow 0 48) (- 0 49)) (or (and ($generated@@148 $generated@@689 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@689 $generated@@689)) (or (and ($generated@@148 ($generated@@249 ($generated@@334 $generated@@163)) ($generated@@261 $generated@@47)) ($generated@@262 ($generated@@334 $generated@@163) $generated@@689)) (exists (($generated@@743 T@U) ) (!  (and (= (type $generated@@743) ($generated@@259 $generated@@163)) (and ($generated@@148 $generated@@743 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@743 $generated@@689)))
 :no-pattern (type $generated@@743)
 :no-pattern ($generated $generated@@743)
 :no-pattern ($generated@@0 $generated@@743)
))))) (=> (or (and ($generated@@148 $generated@@689 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@689 $generated@@689)) (or (and ($generated@@148 ($generated@@249 ($generated@@334 $generated@@163)) ($generated@@261 $generated@@47)) ($generated@@262 ($generated@@334 $generated@@163) $generated@@689)) (exists (($generated@@744 T@U) ) (!  (and (= (type $generated@@744) ($generated@@259 $generated@@163)) (and ($generated@@148 $generated@@744 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@744 $generated@@689)))
 :no-pattern (type $generated@@744)
 :no-pattern ($generated $generated@@744)
 :no-pattern ($generated@@0 $generated@@744)
)))) (=> (and (and ($generated@@148 $generated@@690 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@690 ($generated@@261 $generated@@47) $generated@@677)) ($generated@@262 $generated@@690 $generated@@689)) (and (=> (= (ControlFlow 0 48) 46) $generated@@741) (=> (= (ControlFlow 0 48) 47) $generated@@740)))))))
(let (($generated@@745  (=> (and (not (and ($generated@@148 $generated@@691 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@691 ($generated@@261 $generated@@47) $generated@@677))) (= (ControlFlow 0 51) 48)) $generated@@742)))
(let (($generated@@746  (=> (and (and ($generated@@148 $generated@@691 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@691 ($generated@@261 $generated@@47) $generated@@677)) (= (ControlFlow 0 50) 48)) $generated@@742)))
(let (($generated@@747  (and (=> (= (ControlFlow 0 52) (- 0 53)) (or (and ($generated@@148 $generated@@692 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@692 $generated@@692)) (or (and ($generated@@148 ($generated@@249 ($generated@@593 $generated@@163)) ($generated@@239 $generated@@46)) ($generated@@255 ($generated@@593 $generated@@163) $generated@@692)) (exists (($generated@@748 T@U) ) (!  (and (= (type $generated@@748) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@748 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@748 $generated@@692)))
 :no-pattern (type $generated@@748)
 :no-pattern ($generated $generated@@748)
 :no-pattern ($generated@@0 $generated@@748)
))))) (=> (or (and ($generated@@148 $generated@@692 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@692 $generated@@692)) (or (and ($generated@@148 ($generated@@249 ($generated@@593 $generated@@163)) ($generated@@239 $generated@@46)) ($generated@@255 ($generated@@593 $generated@@163) $generated@@692)) (exists (($generated@@749 T@U) ) (!  (and (= (type $generated@@749) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@749 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@749 $generated@@692)))
 :no-pattern (type $generated@@749)
 :no-pattern ($generated $generated@@749)
 :no-pattern ($generated@@0 $generated@@749)
)))) (=> (and (and ($generated@@148 $generated@@693 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@693 ($generated@@239 $generated@@46) $generated@@677)) ($generated@@255 $generated@@693 $generated@@692)) (and (=> (= (ControlFlow 0 52) 50) $generated@@746) (=> (= (ControlFlow 0 52) 51) $generated@@745)))))))
(let (($generated@@750  (=> (and (not (and ($generated@@148 $generated@@694 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@694 ($generated@@239 $generated@@46) $generated@@677))) (= (ControlFlow 0 55) 52)) $generated@@747)))
(let (($generated@@751  (=> (and (and ($generated@@148 $generated@@694 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@694 ($generated@@239 $generated@@46) $generated@@677)) (= (ControlFlow 0 54) 52)) $generated@@747)))
(let (($generated@@752  (=> $generated@@695 (and (=> (= (ControlFlow 0 56) 54) $generated@@751) (=> (= (ControlFlow 0 56) 55) $generated@@750)))))
(let (($generated@@753  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (and ($generated@@148 $generated@@675 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@675 $generated@@675)) (exists (($generated@@754 T@U) ) (!  (and (= (type $generated@@754) ($generated@@294 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@754 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@754 $generated@@675)))
 :no-pattern (type $generated@@754)
 :no-pattern ($generated $generated@@754)
 :no-pattern ($generated@@0 $generated@@754)
)))) (=> (or (and ($generated@@148 $generated@@675 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@675 $generated@@675)) (exists (($generated@@755 T@U) ) (!  (and (= (type $generated@@755) ($generated@@294 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@755 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@297 $generated@@755 $generated@@675)))
 :no-pattern (type $generated@@755)
 :no-pattern ($generated $generated@@755)
 :no-pattern ($generated@@0 $generated@@755)
))) (=> (and (and (and ($generated@@148 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) ($generated@@297 $generated@@696 $generated@@675)) (and (and ($generated@@148 $generated@@697 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@697 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) (and ($generated@@297 $generated@@697 $generated@@675) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@297 $generated@@696 $generated@@697))))))
(let (($generated@@756  (=> (and (not (and ($generated@@148 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677))) (= (ControlFlow 0 5) 2)) $generated@@753)))
(let (($generated@@757  (=> (and (and ($generated@@148 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@696 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) (= (ControlFlow 0 4) 2)) $generated@@753)))
(let (($generated@@758  (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (and ($generated@@148 $generated@@678 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@678 $generated@@678)) (or (and ($generated@@148 ($generated@@249 ($generated@@480 $generated@@163)) ($generated@@244 ($generated@@75 12))) ($generated@@339 ($generated@@480 $generated@@163) $generated@@678)) (exists (($generated@@759 T@U) ) (!  (and (= (type $generated@@759) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@759 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@759 $generated@@678)))
 :no-pattern (type $generated@@759)
 :no-pattern ($generated $generated@@759)
 :no-pattern ($generated@@0 $generated@@759)
))))) (=> (or (and ($generated@@148 $generated@@678 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@678 $generated@@678)) (or (and ($generated@@148 ($generated@@249 ($generated@@480 $generated@@163)) ($generated@@244 ($generated@@75 12))) ($generated@@339 ($generated@@480 $generated@@163) $generated@@678)) (exists (($generated@@760 T@U) ) (!  (and (= (type $generated@@760) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@760 ($generated@@244 ($generated@@75 12))) ($generated@@339 $generated@@760 $generated@@678)))
 :no-pattern (type $generated@@760)
 :no-pattern ($generated $generated@@760)
 :no-pattern ($generated@@0 $generated@@760)
)))) (=> (and (and (and ($generated@@148 $generated@@698 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@698 ($generated@@244 ($generated@@75 12)) $generated@@677)) ($generated@@339 $generated@@698 $generated@@678)) (and (and ($generated@@148 $generated@@699 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@699 ($generated@@244 ($generated@@75 12)) $generated@@677)) ($generated@@339 $generated@@699 $generated@@678))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@339 $generated@@698 $generated@@699)) (=> ($generated@@339 $generated@@698 $generated@@699) (=> ($generated@@338 $generated@@678) (=> (and ($generated@@338 $generated@@678) (= $generated@@700 (let (($generated@@761 ($generated@@337 $generated@@678)))
$generated@@761))) (and (=> (= (ControlFlow 0 6) 4) $generated@@757) (=> (= (ControlFlow 0 6) 5) $generated@@756)))))))))))
(let (($generated@@762  (=> (and (not (and ($generated@@148 $generated@@698 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@698 ($generated@@244 ($generated@@75 12)) $generated@@677))) (= (ControlFlow 0 10) 6)) $generated@@758)))
(let (($generated@@763  (=> (and (and ($generated@@148 $generated@@698 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@698 ($generated@@244 ($generated@@75 12)) $generated@@677)) (= (ControlFlow 0 9) 6)) $generated@@758)))
(let (($generated@@764  (and (=> (= (ControlFlow 0 11) (- 0 13)) (or (and ($generated@@148 $generated@@681 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@681 $generated@@681)) (or (and ($generated@@148 ($generated@@249 ($generated@@348 $generated@@163)) ($generated@@168 $generated@@45)) ($generated@@271 ($generated@@348 $generated@@163) $generated@@681)) (exists (($generated@@765 T@U) ) (!  (and (= (type $generated@@765) ($generated@@76 $generated@@163 $generated@@2)) (and ($generated@@148 $generated@@765 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@765 $generated@@681)))
 :no-pattern (type $generated@@765)
 :no-pattern ($generated $generated@@765)
 :no-pattern ($generated@@0 $generated@@765)
))))) (=> (or (and ($generated@@148 $generated@@681 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@681 $generated@@681)) (or (and ($generated@@148 ($generated@@249 ($generated@@348 $generated@@163)) ($generated@@168 $generated@@45)) ($generated@@271 ($generated@@348 $generated@@163) $generated@@681)) (exists (($generated@@766 T@U) ) (!  (and (= (type $generated@@766) ($generated@@76 $generated@@163 $generated@@2)) (and ($generated@@148 $generated@@766 ($generated@@168 $generated@@45)) ($generated@@271 $generated@@766 $generated@@681)))
 :no-pattern (type $generated@@766)
 :no-pattern ($generated $generated@@766)
 :no-pattern ($generated@@0 $generated@@766)
)))) (=> (and (and (and ($generated@@148 $generated@@701 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@701 ($generated@@168 $generated@@45) $generated@@677)) ($generated@@271 $generated@@701 $generated@@681)) (and (and ($generated@@148 $generated@@702 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@702 ($generated@@168 $generated@@45) $generated@@677)) ($generated@@271 $generated@@702 $generated@@681))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@271 $generated@@701 $generated@@702)) (=> ($generated@@271 $generated@@701 $generated@@702) (=> ($generated@@270 $generated@@681) (=> (and ($generated@@270 $generated@@681) (= $generated@@703 (let (($generated@@767 ($generated@@269 $generated@@681)))
$generated@@767))) (and (=> (= (ControlFlow 0 11) 9) $generated@@763) (=> (= (ControlFlow 0 11) 10) $generated@@762)))))))))))
(let (($generated@@768  (=> (and (not (and ($generated@@148 $generated@@701 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@701 ($generated@@168 $generated@@45) $generated@@677))) (= (ControlFlow 0 15) 11)) $generated@@764)))
(let (($generated@@769  (=> (and (and ($generated@@148 $generated@@701 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@701 ($generated@@168 $generated@@45) $generated@@677)) (= (ControlFlow 0 14) 11)) $generated@@764)))
(let (($generated@@770  (and (=> (= (ControlFlow 0 16) (- 0 18)) (or (and ($generated@@148 $generated@@684 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@684 $generated@@684)) (exists (($generated@@771 T@U) ) (!  (and (= (type $generated@@771) ($generated@@311 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@771 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@771 $generated@@684)))
 :no-pattern (type $generated@@771)
 :no-pattern ($generated $generated@@771)
 :no-pattern ($generated@@0 $generated@@771)
)))) (=> (or (and ($generated@@148 $generated@@684 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@684 $generated@@684)) (exists (($generated@@772 T@U) ) (!  (and (= (type $generated@@772) ($generated@@311 $generated@@163 $generated@@163)) (and ($generated@@148 $generated@@772 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@314 $generated@@772 $generated@@684)))
 :no-pattern (type $generated@@772)
 :no-pattern ($generated $generated@@772)
 :no-pattern ($generated@@0 $generated@@772)
))) (=> (and (and (and ($generated@@148 $generated@@704 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@704 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)) ($generated@@314 $generated@@704 $generated@@684)) (and (and ($generated@@148 $generated@@705 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@705 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)) ($generated@@314 $generated@@705 $generated@@684))) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@314 $generated@@704 $generated@@705)) (=> ($generated@@314 $generated@@704 $generated@@705) (=> ($generated@@312 $generated@@685 $generated@@686 $generated@@684) (=> (and ($generated@@312 $generated@@685 $generated@@686 $generated@@684) (= $generated@@706 (let (($generated@@773 ($generated@@310 $generated@@685 $generated@@686 $generated@@684)))
$generated@@773))) (and (=> (= (ControlFlow 0 16) 14) $generated@@769) (=> (= (ControlFlow 0 16) 15) $generated@@768)))))))))))
(let (($generated@@774  (=> (and (not (and ($generated@@148 $generated@@704 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@704 ($generated@@313 $generated@@685 $generated@@686) $generated@@677))) (= (ControlFlow 0 20) 16)) $generated@@770)))
(let (($generated@@775  (=> (and (and ($generated@@148 $generated@@704 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@704 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)) (= (ControlFlow 0 19) 16)) $generated@@770)))
(let (($generated@@776  (and (=> (= (ControlFlow 0 21) (- 0 23)) (or (and ($generated@@148 $generated@@689 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@689 $generated@@689)) (or (and ($generated@@148 ($generated@@249 ($generated@@334 $generated@@163)) ($generated@@261 $generated@@47)) ($generated@@262 ($generated@@334 $generated@@163) $generated@@689)) (exists (($generated@@777 T@U) ) (!  (and (= (type $generated@@777) ($generated@@259 $generated@@163)) (and ($generated@@148 $generated@@777 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@777 $generated@@689)))
 :no-pattern (type $generated@@777)
 :no-pattern ($generated $generated@@777)
 :no-pattern ($generated@@0 $generated@@777)
))))) (=> (or (and ($generated@@148 $generated@@689 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@689 $generated@@689)) (or (and ($generated@@148 ($generated@@249 ($generated@@334 $generated@@163)) ($generated@@261 $generated@@47)) ($generated@@262 ($generated@@334 $generated@@163) $generated@@689)) (exists (($generated@@778 T@U) ) (!  (and (= (type $generated@@778) ($generated@@259 $generated@@163)) (and ($generated@@148 $generated@@778 ($generated@@261 $generated@@47)) ($generated@@262 $generated@@778 $generated@@689)))
 :no-pattern (type $generated@@778)
 :no-pattern ($generated $generated@@778)
 :no-pattern ($generated@@0 $generated@@778)
)))) (=> (and (and (and ($generated@@148 $generated@@707 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@707 ($generated@@261 $generated@@47) $generated@@677)) ($generated@@262 $generated@@707 $generated@@689)) (and (and ($generated@@148 $generated@@708 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@708 ($generated@@261 $generated@@47) $generated@@677)) ($generated@@262 $generated@@708 $generated@@689))) (and (=> (= (ControlFlow 0 21) (- 0 22)) ($generated@@262 $generated@@707 $generated@@708)) (=> ($generated@@262 $generated@@707 $generated@@708) (=> ($generated@@260 $generated@@689) (=> (and ($generated@@260 $generated@@689) (= $generated@@709 (let (($generated@@779 ($generated@@258 $generated@@689)))
$generated@@779))) (and (=> (= (ControlFlow 0 21) 19) $generated@@775) (=> (= (ControlFlow 0 21) 20) $generated@@774)))))))))))
(let (($generated@@780  (=> (and (not (and ($generated@@148 $generated@@707 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@707 ($generated@@261 $generated@@47) $generated@@677))) (= (ControlFlow 0 25) 21)) $generated@@776)))
(let (($generated@@781  (=> (and (and ($generated@@148 $generated@@707 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@707 ($generated@@261 $generated@@47) $generated@@677)) (= (ControlFlow 0 24) 21)) $generated@@776)))
(let (($generated@@782  (and (=> (= (ControlFlow 0 26) (- 0 28)) (or (and ($generated@@148 $generated@@692 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@692 $generated@@692)) (or (and ($generated@@148 ($generated@@249 ($generated@@593 $generated@@163)) ($generated@@239 $generated@@46)) ($generated@@255 ($generated@@593 $generated@@163) $generated@@692)) (exists (($generated@@783 T@U) ) (!  (and (= (type $generated@@783) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@783 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@783 $generated@@692)))
 :no-pattern (type $generated@@783)
 :no-pattern ($generated $generated@@783)
 :no-pattern ($generated@@0 $generated@@783)
))))) (=> (or (and ($generated@@148 $generated@@692 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@692 $generated@@692)) (or (and ($generated@@148 ($generated@@249 ($generated@@593 $generated@@163)) ($generated@@239 $generated@@46)) ($generated@@255 ($generated@@593 $generated@@163) $generated@@692)) (exists (($generated@@784 T@U) ) (!  (and (= (type $generated@@784) ($generated@@76 $generated@@163 $generated@@4)) (and ($generated@@148 $generated@@784 ($generated@@239 $generated@@46)) ($generated@@255 $generated@@784 $generated@@692)))
 :no-pattern (type $generated@@784)
 :no-pattern ($generated $generated@@784)
 :no-pattern ($generated@@0 $generated@@784)
)))) (=> (and (and (and ($generated@@148 $generated@@710 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@710 ($generated@@239 $generated@@46) $generated@@677)) ($generated@@255 $generated@@710 $generated@@692)) (and (and ($generated@@148 $generated@@711 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@711 ($generated@@239 $generated@@46) $generated@@677)) ($generated@@255 $generated@@711 $generated@@692))) (and (=> (= (ControlFlow 0 26) (- 0 27)) ($generated@@255 $generated@@710 $generated@@711)) (=> ($generated@@255 $generated@@710 $generated@@711) (=> ($generated@@254 $generated@@692) (=> (and ($generated@@254 $generated@@692) (= $generated@@712 (let (($generated@@785 ($generated@@253 $generated@@692)))
$generated@@785))) (and (=> (= (ControlFlow 0 26) 24) $generated@@781) (=> (= (ControlFlow 0 26) 25) $generated@@780)))))))))))
(let (($generated@@786  (=> (and (not (and ($generated@@148 $generated@@710 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@710 ($generated@@239 $generated@@46) $generated@@677))) (= (ControlFlow 0 30) 26)) $generated@@782)))
(let (($generated@@787  (=> (and (and ($generated@@148 $generated@@710 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@710 ($generated@@239 $generated@@46) $generated@@677)) (= (ControlFlow 0 29) 26)) $generated@@782)))
(let (($generated@@788  (=> (not $generated@@695) (and (=> (= (ControlFlow 0 31) 29) $generated@@787) (=> (= (ControlFlow 0 31) 30) $generated@@786)))))
(let (($generated@@789  (=> (= $generated@@713 ($generated@@174 $generated@@714 $generated@@677 $generated@@60 false)) (and (=> (= (ControlFlow 0 57) 56) $generated@@752) (=> (= (ControlFlow 0 57) 31) $generated@@788)))))
(let (($generated@@790  (=> (and (and ($generated@@274 $generated@@677) ($generated@@715 $generated@@677)) (and ($generated@@148 $generated@@692 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@692 ($generated@@239 $generated@@46) $generated@@677))) (=> (and (and (and ($generated@@148 $generated@@689 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@689 ($generated@@261 $generated@@47) $generated@@677)) (and ($generated@@148 $generated@@684 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@684 ($generated@@313 $generated@@685 $generated@@686) $generated@@677))) (and (and ($generated@@148 $generated@@681 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@681 ($generated@@168 $generated@@45) $generated@@677)) (and ($generated@@148 $generated@@678 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@678 ($generated@@244 ($generated@@75 12)) $generated@@677)))) (=> (and (and (and (and ($generated@@148 $generated@@675 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@675 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) (and ($generated@@148 $generated@@716 ($generated@@239 $generated@@46)) ($generated@@74 $generated@@716 ($generated@@239 $generated@@46) $generated@@677))) (and (and ($generated@@148 $generated@@717 ($generated@@261 $generated@@47)) ($generated@@74 $generated@@717 ($generated@@261 $generated@@47) $generated@@677)) (and ($generated@@148 $generated@@718 ($generated@@313 $generated@@685 $generated@@686)) ($generated@@74 $generated@@718 ($generated@@313 $generated@@685 $generated@@686) $generated@@677)))) (and (and (and ($generated@@148 $generated@@719 ($generated@@168 $generated@@45)) ($generated@@74 $generated@@719 ($generated@@168 $generated@@45) $generated@@677)) (and ($generated@@148 $generated@@720 ($generated@@244 ($generated@@75 12))) ($generated@@74 $generated@@720 ($generated@@244 ($generated@@75 12)) $generated@@677))) (and (and ($generated@@148 $generated@@721 ($generated@@296 ($generated@@75 28) $generated@@46)) ($generated@@74 $generated@@721 ($generated@@296 ($generated@@75 28) $generated@@46) $generated@@677)) (and (= 0 $generated@@722) (= (ControlFlow 0 58) 57))))) $generated@@789)))))
$generated@@790)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
