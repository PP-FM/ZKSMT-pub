(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U Int) T@U)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U) Int)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U Int) T@U)
(declare-fun $generated@@201 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (Int) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U Int) T@U)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@T T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@605 (T@U T@U T@U) T@U)
(declare-fun $generated@@606 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@607 (T@T T@T) T@T)
(declare-fun $generated@@608 (T@T) T@T)
(declare-fun $generated@@609 (T@T) T@T)
(declare-fun $generated@@610 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@666 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (and (and (and (forall (($generated@@183 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@183)) 16)) (forall (($generated@@184 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@180 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (let (($generated@@187 ($generated@@182 (type $generated@@185))))
(= (type ($generated@@178 $generated@@185 $generated@@186)) ($generated@@180 $generated@@187)))
 :pattern ( ($generated@@178 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@179 $generated@@188 $generated@@189)) ($generated@@180 $generated@@190)))
 :pattern ( ($generated@@179 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Int) ) (! (let (($generated@@194 (type $generated@@192)))
 (=> (= (type $generated@@191) ($generated@@180 $generated@@194)) (=> (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@181 $generated@@191))) (= ($generated@@178 ($generated@@179 $generated@@191 $generated@@192) $generated@@193) ($generated@@179 ($generated@@178 $generated@@191 $generated@@193) $generated@@192)))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@199) $generated@@67)) ($generated@@140 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@140 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (forall (($generated@@202 T@U) ($generated@@203 Int) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@202))))
(= (type ($generated@@200 $generated@@202 $generated@@203)) ($generated@@180 $generated@@204)))
 :pattern ( ($generated@@200 $generated@@202 $generated@@203))
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@182 (type $generated@@205))))
(= (type ($generated@@201 $generated@@205 $generated@@206)) ($generated@@180 $generated@@207)))
 :pattern ( ($generated@@201 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Int) ) (! (let (($generated@@211 ($generated@@182 (type $generated@@208))))
 (=> (and (and (= (type $generated@@208) ($generated@@180 $generated@@211)) (= (type $generated@@209) ($generated@@180 $generated@@211))) (= $generated@@210 ($generated@@181 $generated@@208))) (and (= ($generated@@200 ($generated@@201 $generated@@208 $generated@@209) $generated@@210) $generated@@208) (= ($generated@@178 ($generated@@201 $generated@@208 $generated@@209) $generated@@210) $generated@@209))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@208 $generated@@209) $generated@@210))
 :pattern ( ($generated@@178 ($generated@@201 $generated@@208 $generated@@209) $generated@@210))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= (type ($generated@@212 $generated@@214 $generated@@215)) $generated@@164)
 :pattern ( ($generated@@212 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (= (type $generated@@216) $generated@@67) (= (type $generated@@217) $generated@@67)) (= (type $generated@@218) $generated@@173)) (= (type $generated@@219) $generated@@173)) (= ($generated@@140 ($generated@@212 $generated@@218 $generated@@219) ($generated@@163 $generated@@216 $generated@@217))  (and ($generated@@213 $generated@@218 $generated@@216) ($generated@@213 $generated@@219 $generated@@217))))
 :pattern ( ($generated@@140 ($generated@@212 $generated@@218 $generated@@219) ($generated@@163 $generated@@216 $generated@@217)))
)))
(assert  (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) ($generated@@180 $generated@@173))
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)) (forall (($generated@@224 Int) ) (! (= (type ($generated@@221 $generated@@224)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@221 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Int) ($generated@@228 Int) ) (!  (=> (and (= (type $generated@@225) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@226) $generated@@81)) (=> (and (and (= (+ $generated@@227 1) $generated@@228) (<= 0 $generated@@227)) (<= $generated@@228 ($generated@@136 $generated@@226))) (= ($generated@@200 ($generated@@220 $generated@@225 $generated@@226) $generated@@228) ($generated@@179 ($generated@@200 ($generated@@220 $generated@@225 $generated@@226) $generated@@227) ($generated@@87 ($generated@@85 $generated@@225 $generated@@226) ($generated@@221 $generated@@227))))))
 :pattern ( ($generated@@200 ($generated@@220 $generated@@225 $generated@@226) $generated@@227) ($generated@@200 ($generated@@220 $generated@@225 $generated@@226) $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@164) (= (type $generated@@230) $generated@@164)) (= ($generated@@170 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@170 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 Int) ) (! (let (($generated@@233 ($generated@@182 (type $generated@@231))))
 (=> (and (= (type $generated@@231) ($generated@@180 $generated@@233)) (= $generated@@232 0)) (= ($generated@@178 $generated@@231 $generated@@232) $generated@@231)))
 :pattern ( ($generated@@178 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@140 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@173) ($generated@@0 ($generated@@85 $generated@@236 $generated@@238))) ($generated@@213 $generated@@238 $generated@@237))
 :pattern ( ($generated@@85 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@140 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@173) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@213 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) ($generated@@180 $generated@@173)) (= (type $generated@@253) $generated@@173)) (= (type $generated@@254) $generated@@67)) (and ($generated@@140 $generated@@252 ($generated@@250 $generated@@254)) ($generated@@213 $generated@@253 $generated@@254))) ($generated@@140 ($generated@@179 $generated@@252 $generated@@253) ($generated@@250 $generated@@254)))
 :pattern ( ($generated@@140 ($generated@@179 $generated@@252 $generated@@253) ($generated@@250 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 Int) ) (! (let (($generated@@258 ($generated@@182 (type $generated@@256))))
(= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@182 (type $generated@@259))))
 (=> (= (type $generated@@259) ($generated@@180 $generated@@262)) (=> (and (and (<= 0 $generated@@261) (< $generated@@261 $generated@@260)) (< $generated@@261 ($generated@@181 $generated@@259))) (= ($generated@@255 ($generated@@200 $generated@@259 $generated@@260) $generated@@261) ($generated@@255 $generated@@259 $generated@@261)))))
 :weight 25
 :pattern ( ($generated@@255 ($generated@@200 $generated@@259 $generated@@260) $generated@@261))
 :pattern ( ($generated@@255 $generated@@259 $generated@@261) ($generated@@200 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@67) (= (type $generated@@265) $generated@@67)) (= (type $generated@@266) $generated@@173)) (= (type $generated@@267) $generated@@173)) (= (type $generated@@268) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@268)) (= ($generated@@78 ($generated@@212 $generated@@266 $generated@@267) ($generated@@163 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@78 ($generated@@212 $generated@@266 $generated@@267) ($generated@@163 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@182 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@180 $generated@@271)) (=> (and (<= 0 $generated@@270) (<= $generated@@270 ($generated@@181 $generated@@269))) (= ($generated@@181 ($generated@@178 $generated@@269 $generated@@270)) (- ($generated@@181 $generated@@269) $generated@@270)))))
 :pattern ( ($generated@@181 ($generated@@178 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@71)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@164) (= ($generated@@162 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@182 (type $generated@@276))))
 (=> (and (= (type $generated@@276) ($generated@@180 $generated@@278)) (= (type $generated@@277) ($generated@@180 $generated@@278))) (= ($generated@@275 $generated@@276 $generated@@277)  (and (= ($generated@@181 $generated@@276) ($generated@@181 $generated@@277)) (forall (($generated@@279 Int) ) (!  (=> (and (<= 0 $generated@@279) (< $generated@@279 ($generated@@181 $generated@@276))) (= ($generated@@255 $generated@@276 $generated@@279) ($generated@@255 $generated@@277 $generated@@279)))
 :pattern ( ($generated@@255 $generated@@276 $generated@@279))
 :pattern ( ($generated@@255 $generated@@277 $generated@@279))
))))))
 :pattern ( ($generated@@275 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 ($generated@@182 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@180 $generated@@283)) (=> (and (<= 0 $generated@@282) (< $generated@@282 ($generated@@181 $generated@@281))) (< ($generated@@280 ($generated@@200 $generated@@281 $generated@@282)) ($generated@@280 $generated@@281)))))
 :pattern ( ($generated@@280 ($generated@@200 $generated@@281 $generated@@282)))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@164) ($generated@@162 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@173) (= (type $generated@@286) $generated@@173)) (= $generated@@284 ($generated@@212 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@162 $generated@@284))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@180 $generated@@288))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@181 ($generated@@287 $generated@@289)) 0)
 :pattern ( ($generated@@287 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@182 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@180 $generated@@292)) (=> (and (< 0 $generated@@291) (<= $generated@@291 ($generated@@181 $generated@@290))) (< ($generated@@280 ($generated@@178 $generated@@290 $generated@@291)) ($generated@@280 $generated@@290)))))
 :pattern ( ($generated@@280 ($generated@@178 $generated@@290 $generated@@291)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
 (=> (= (type $generated@@293) ($generated@@180 $generated@@295)) (= ($generated@@181 ($generated@@179 $generated@@293 $generated@@294)) (+ 1 ($generated@@181 $generated@@293)))))
 :pattern ( ($generated@@179 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@67) (= (type $generated@@297) $generated@@81)) (= ($generated@@140 $generated@@297 ($generated@@157 $generated@@296))  (and ($generated@@140 $generated@@297 ($generated@@137 $generated@@296)) (not (= $generated@@297 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@297 ($generated@@157 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@173)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@263 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@78 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@263 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@305) $generated@@173)) (= (type $generated@@306) $generated@@67)) ($generated@@145 $generated@@303 $generated@@304)) ($generated@@263 $generated@@305 $generated@@306 $generated@@303)) ($generated@@263 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@145 $generated@@303 $generated@@304) ($generated@@263 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@67)) ($generated@@145 $generated@@307 $generated@@308)) ($generated@@78 $generated@@309 $generated@@310 $generated@@307)) ($generated@@78 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@145 $generated@@307 $generated@@308) ($generated@@78 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ($generated@@313 Int) ) (! (let (($generated@@314 ($generated@@182 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@180 $generated@@314)) (=> (and (and (<= 0 $generated@@312) (<= 0 $generated@@313)) (< $generated@@313 (- ($generated@@181 $generated@@311) $generated@@312))) (= ($generated@@255 ($generated@@178 $generated@@311 $generated@@312) $generated@@313) ($generated@@255 $generated@@311 (+ $generated@@313 $generated@@312))))))
 :weight 25
 :pattern ( ($generated@@255 ($generated@@178 $generated@@311 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@80 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@83 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@80 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@85 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@72)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@323)) $generated@@61) (= ($generated@@321 ($generated@@137 $generated@@323)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@324)) $generated@@62) (= ($generated@@321 ($generated@@157 $generated@@324)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 17)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 18)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@182 (type $generated@@361))))
 (=> (and (= (type $generated@@361) ($generated@@180 $generated@@363)) (= (type $generated@@362) ($generated@@180 $generated@@363))) (= ($generated@@181 ($generated@@201 $generated@@361 $generated@@362)) (+ ($generated@@181 $generated@@361) ($generated@@181 $generated@@362)))))
 :pattern ( ($generated@@181 ($generated@@201 $generated@@361 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@83 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@80 $generated@@365 $generated@@2)) (= ($generated@@196 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@85 $generated@@364 $generated@@366))) (<= ($generated ($generated@@85 $generated@@364 $generated@@366)) ($generated@@315 $generated@@364))))
 :pattern ( ($generated@@85 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@196 $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@67) (= (type $generated@@368) $generated@@81)) (= ($generated@@140 $generated@@368 ($generated@@137 $generated@@367))  (or (= $generated@@368 $generated@@138) (= ($generated@@139 $generated@@368) ($generated@@137 $generated@@367)))))
 :pattern ( ($generated@@140 $generated@@368 ($generated@@137 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
 (=> (= (type $generated@@369) ($generated@@180 $generated@@372)) (and (=> (= $generated@@370 ($generated@@181 $generated@@369)) (= ($generated@@255 ($generated@@179 $generated@@369 $generated@@371) $generated@@370) $generated@@371)) (=> (not (= $generated@@370 ($generated@@181 $generated@@369))) (= ($generated@@255 ($generated@@179 $generated@@369 $generated@@371) $generated@@370) ($generated@@255 $generated@@369 $generated@@370))))))
 :pattern ( ($generated@@255 ($generated@@179 $generated@@369 $generated@@371) $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(let (($generated@@375 ($generated@@328 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@327 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@326 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@325 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@329 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@80 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@329 (type $generated@@380))))
(let (($generated@@382 ($generated@@328 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@327 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@326 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@347 (type $generated@@384))))
(let (($generated@@386 ($generated@@346 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@345 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@344 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@343 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@347 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@80 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@347 (type $generated@@391))))
(let (($generated@@393 ($generated@@346 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@345 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@344 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@396) $generated@@81)) (forall (($generated@@397 Int) ) (!  (=> (and (<= 0 $generated@@397) (< $generated@@397 ($generated@@181 ($generated@@220 $generated@@395 $generated@@396)))) (= ($generated@@255 ($generated@@220 $generated@@395 $generated@@396) $generated@@397) ($generated@@87 ($generated@@85 $generated@@395 $generated@@396) ($generated@@221 $generated@@397))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@395 $generated@@396) ($generated@@221 $generated@@397)))
 :pattern ( ($generated@@255 ($generated@@220 $generated@@395 $generated@@396) $generated@@397))
)))
 :pattern ( ($generated@@220 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@399) $generated@@67)) (= ($generated@@140 $generated@@398 ($generated@@195 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@398 $generated@@400)))) ($generated@@213 $generated@@400 $generated@@399))
 :pattern ( ($generated@@85 $generated@@398 $generated@@400))
))))
 :pattern ( ($generated@@140 $generated@@398 ($generated@@195 $generated@@399)))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@401 ($generated@@234 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@173) ($generated@@0 ($generated@@85 $generated@@401 $generated@@404))) ($generated@@263 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@85 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@78 $generated@@401 ($generated@@234 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@405 ($generated@@239 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@173) ($generated@@0 ($generated@@85 $generated@@405 $generated@@408))) ($generated@@263 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@85 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@78 $generated@@405 ($generated@@239 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(= ($generated ($generated@@85 ($generated@@316 $generated@@410) $generated@@409)) 0))
 :pattern ( (let (($generated@@410 (type $generated@@409)))
($generated@@85 ($generated@@316 $generated@@410) $generated@@409)))
)))
(assert  (and (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@411 $generated@@414)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@411 $generated@@414))
)) (forall (($generated@@415 T@T) ($generated@@416 T@U) ) (! (= (type ($generated@@412 $generated@@415 $generated@@416)) $generated@@415)
 :pattern ( ($generated@@412 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@329 (type $generated@@417))))
(let (($generated@@419 ($generated@@328 (type $generated@@417))))
(= (type ($generated@@413 $generated@@417)) ($generated@@80 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@413 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@327 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@411 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@420) ($generated@@171 ($generated@@412 $generated@@164 $generated@@421)))) (= ($generated@@85 ($generated@@413 $generated@@420) ($generated@@171 ($generated@@412 $generated@@164 $generated@@421))) ($generated@@172 ($generated@@412 $generated@@164 $generated@@421))))))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@347 (type $generated@@425))))
(let (($generated@@427 ($generated@@346 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@80 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@345 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@428) ($generated@@171 ($generated@@412 $generated@@164 $generated@@429)))) (= ($generated@@85 ($generated@@423 $generated@@428) ($generated@@171 ($generated@@412 $generated@@164 $generated@@429))) ($generated@@172 ($generated@@412 $generated@@164 $generated@@429))))))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@328 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@327 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@85 ($generated@@413 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@346 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@345 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@327 $generated@@173 $generated@@173)) (= (type $generated@@444) $generated@@67)) (= (type $generated@@445) $generated@@67)) (= (type $generated@@446) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@443) $generated@@447))) (and ($generated@@263 ($generated@@85 ($generated@@413 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@263 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@443) $generated@@447))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@345 $generated@@173 $generated@@173)) (= (type $generated@@452) $generated@@67)) (= (type $generated@@453) $generated@@67)) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@451) $generated@@455))) (and ($generated@@263 ($generated@@85 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@263 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@182 (type $generated@@456))))
 (=> (and (and (= (type $generated@@456) ($generated@@180 $generated@@458)) (= (type $generated@@457) ($generated@@180 $generated@@458))) ($generated@@275 $generated@@456 $generated@@457)) (= $generated@@456 $generated@@457)))
 :pattern ( ($generated@@275 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@182 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@180 $generated@@461)) (=> (and (<= 0 $generated@@460) (<= $generated@@460 ($generated@@181 $generated@@459))) (= ($generated@@181 ($generated@@200 $generated@@459 $generated@@460)) $generated@@460))))
 :pattern ( ($generated@@181 ($generated@@200 $generated@@459 $generated@@460)))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@464) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@462 $generated@@464))) (and ($generated@@145 $generated@@462 $generated@@463) ($generated@@145 $generated@@463 $generated@@464))) ($generated@@145 $generated@@462 $generated@@464))
 :pattern ( ($generated@@145 $generated@@462 $generated@@463) ($generated@@145 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 Int) ) (!  (=> (and (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@467) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@466) (and (not (= $generated@@467 $generated@@138)) (= ($generated@@139 $generated@@467) ($generated@@137 $generated@@465)))) (and (<= 0 $generated@@468) (< $generated@@468 ($generated@@136 $generated@@467)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@466 $generated@@467) $generated@@60))) ($generated@@263 ($generated@@87 ($generated@@85 $generated@@466 $generated@@467) ($generated@@221 $generated@@468)) $generated@@465 $generated@@466)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@466 $generated@@467) ($generated@@221 $generated@@468)) ($generated@@137 $generated@@465))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@80 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@347 (type $generated@@471))))
(let (($generated@@473 ($generated@@346 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@345 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@344 $generated@@473 $generated@@472)) (= ($generated@@343 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@343 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@347 (type $generated@@474))))
(let (($generated@@476 ($generated@@346 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@345 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@344 $generated@@476 $generated@@475)) (= ($generated@@388 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@388 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@347 (type $generated@@477))))
(let (($generated@@479 ($generated@@346 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@345 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@344 $generated@@479 $generated@@478)) (= ($generated@@422 $generated@@477) ($generated@@469 $generated@@173))))))
 :pattern ( ($generated@@422 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@329 (type $generated@@480))))
(let (($generated@@482 ($generated@@328 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@327 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@326 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@173) (= (type $generated@@484) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@411 $generated@@480) ($generated@@298 ($generated@@212 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@411 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@347 (type $generated@@485))))
(let (($generated@@487 ($generated@@346 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@345 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@344 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@173) (= (type $generated@@489) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@422 $generated@@485) ($generated@@298 ($generated@@212 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@422 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@173) ($generated@@213 $generated@@490 $generated@@46)) (and (= ($generated@@298 ($generated@@412 $generated@@2 $generated@@490)) $generated@@490) ($generated@@140 ($generated@@412 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@213 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@173) ($generated@@213 $generated@@491 $generated@@47)) (and (= ($generated@@298 ($generated@@412 $generated@@3 $generated@@491)) $generated@@491) ($generated@@140 ($generated@@412 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@213 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@173) ($generated@@213 $generated@@492 $generated@@44)) (and (= ($generated@@298 ($generated@@412 $generated@@4 $generated@@492)) $generated@@492) ($generated@@140 ($generated@@412 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@213 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 19))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@173) ($generated@@213 $generated@@494 $generated@@45)) (and (= ($generated@@298 ($generated@@412 $generated@@493 $generated@@494)) $generated@@494) ($generated@@140 ($generated@@412 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@213 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@213 ($generated@@298 $generated@@495) $generated@@496) ($generated@@140 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@213 ($generated@@298 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@81) (<= 0 ($generated@@136 $generated@@497)))
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@83 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@80 $generated@@499 $generated@@2)) (<= 0 ($generated@@315 $generated@@498))))
 :pattern ( ($generated@@315 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@182 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@180 $generated@@501)) (<= 0 ($generated@@181 $generated@@500))))
 :pattern ( ($generated@@181 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 Int) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@182 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@180 $generated@@505)) (=> (and (and (<= 0 $generated@@503) (< $generated@@503 $generated@@504)) (<= $generated@@504 ($generated@@181 $generated@@502))) (< ($generated@@280 ($generated@@201 ($generated@@200 $generated@@502 $generated@@503) ($generated@@178 $generated@@502 $generated@@504))) ($generated@@280 $generated@@502)))))
 :pattern ( ($generated@@280 ($generated@@201 ($generated@@200 $generated@@502 $generated@@503) ($generated@@178 $generated@@502 $generated@@504))))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@506 ($generated@@440 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@440 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@440 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@440 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@76 ($generated@@440 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@448 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@448 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@520 ($generated@@448 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@448 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@76 ($generated@@448 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@173) (= (type $generated@@527) $generated@@173)) (= ($generated@@272 ($generated@@212 $generated@@526 $generated@@527)) $generated@@63))
 :pattern ( ($generated@@212 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@67) (= (type $generated@@531) $generated@@67)) (= ($generated@@528 ($generated@@163 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@163 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@532 ($generated@@163 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@163 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@173) (= (type $generated@@537) $generated@@173)) (= ($generated@@171 ($generated@@212 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@212 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@173) (= (type $generated@@539) $generated@@173)) (= ($generated@@172 ($generated@@212 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@212 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@180 $generated@@173)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@540 ($generated@@250 $generated@@541) $generated@@542) (forall (($generated@@543 Int) ) (!  (=> (and (<= 0 $generated@@543) (< $generated@@543 ($generated@@181 $generated@@540))) ($generated@@263 ($generated@@255 $generated@@540 $generated@@543) $generated@@541 $generated@@542))
 :pattern ( ($generated@@255 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@78 $generated@@540 ($generated@@250 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@544 ($generated@@79 $generated@@545)) $generated@@545)
 :pattern ( ($generated@@79 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@67) (= ($generated@@546 ($generated@@234 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@234 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@67) (= ($generated@@76 ($generated@@234 $generated@@549)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@550 ($generated@@239 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@239 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@76 ($generated@@239 $generated@@553)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@195 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@195 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@76 ($generated@@195 $generated@@557)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@67) (= ($generated@@558 ($generated@@250 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@250 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@67) (= ($generated@@76 ($generated@@250 $generated@@561)) $generated@@57))
 :pattern ( ($generated@@250 $generated@@561))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@75 ($generated@@221 $generated@@562)) 1)
 :pattern ( ($generated@@221 $generated@@562))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@221 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@221 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@67)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@67) (= ($generated@@565 ($generated@@137 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@137 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@568 ($generated@@157 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@157 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@412 $generated@@572 ($generated@@298 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@298 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@327 $generated@@173 $generated@@173)) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) $generated@@67)) (= ($generated@@140 $generated@@573 ($generated@@440 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@573) $generated@@576))) (and ($generated@@213 ($generated@@85 ($generated@@413 $generated@@573) $generated@@576) $generated@@575) ($generated@@213 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@573) $generated@@576))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@140 $generated@@573 ($generated@@440 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@345 $generated@@173 $generated@@173)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) (= ($generated@@140 $generated@@577 ($generated@@448 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@577) $generated@@580))) (and ($generated@@213 ($generated@@85 ($generated@@423 $generated@@577) $generated@@580) $generated@@579) ($generated@@213 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@577) $generated@@580))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@140 $generated@@577 ($generated@@448 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@583) $generated@@81)) (and (and ($generated@@152 $generated@@582) (and (not (= $generated@@583 $generated@@138)) (= ($generated@@139 $generated@@583) ($generated@@137 $generated@@581)))) (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@136 $generated@@583))))) ($generated@@213 ($generated@@87 ($generated@@85 $generated@@582 $generated@@583) ($generated@@221 $generated@@584)) $generated@@581))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@582 $generated@@583) ($generated@@221 $generated@@584)) ($generated@@137 $generated@@581))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@173) (= (type $generated@@588) $generated@@173)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@212 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@212 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@173) (= (type $generated@@590) $generated@@173)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@212 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@212 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) $generated@@67)) ($generated@@213 $generated@@591 ($generated@@440 $generated@@592 $generated@@593))) (and (= ($generated@@298 ($generated@@412 ($generated@@327 $generated@@173 $generated@@173) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@412 ($generated@@327 $generated@@173 $generated@@173) $generated@@591) ($generated@@440 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@213 $generated@@591 ($generated@@440 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@173) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) ($generated@@213 $generated@@594 ($generated@@448 $generated@@595 $generated@@596))) (and (= ($generated@@298 ($generated@@412 ($generated@@345 $generated@@173 $generated@@173) $generated@@594)) $generated@@594) ($generated@@140 ($generated@@412 ($generated@@345 $generated@@173 $generated@@173) $generated@@594) ($generated@@448 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@213 $generated@@594 ($generated@@448 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@67) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@173)) ($generated@@213 $generated@@599 ($generated@@163 $generated@@597 $generated@@598))) (and (= ($generated@@298 ($generated@@412 $generated@@164 $generated@@599)) $generated@@599) ($generated@@140 ($generated@@412 $generated@@164 $generated@@599) ($generated@@163 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@213 $generated@@599 ($generated@@163 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@85 ($generated@@469 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@85 ($generated@@469 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@604) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@602) ($generated@@152 $generated@@603)) ($generated@@145 $generated@@602 $generated@@603)) (= ($generated@@85 $generated@@602 $generated@@604) ($generated@@85 $generated@@603 $generated@@604))) (= ($generated@@220 $generated@@602 $generated@@604) ($generated@@220 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@220 $generated@@603 $generated@@604) ($generated@@145 $generated@@602 $generated@@603))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@611 T@T) ($generated@@612 T@T) ) (= ($generated@@1 ($generated@@607 $generated@@611 $generated@@612)) 20)) (forall (($generated@@613 T@T) ($generated@@614 T@T) ) (! (= ($generated@@608 ($generated@@607 $generated@@613 $generated@@614)) $generated@@613)
 :pattern ( ($generated@@607 $generated@@613 $generated@@614))
))) (forall (($generated@@615 T@T) ($generated@@616 T@T) ) (! (= ($generated@@609 ($generated@@607 $generated@@615 $generated@@616)) $generated@@616)
 :pattern ( ($generated@@607 $generated@@615 $generated@@616))
))) (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@609 (type $generated@@617))))
(= (type ($generated@@605 $generated@@617 $generated@@618 $generated@@619)) $generated@@620))
 :pattern ( ($generated@@605 $generated@@617 $generated@@618 $generated@@619))
))) (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
(let (($generated@@626 (type $generated@@622)))
(= (type ($generated@@610 $generated@@621 $generated@@622 $generated@@623 $generated@@624)) ($generated@@607 $generated@@626 $generated@@625))))
 :pattern ( ($generated@@610 $generated@@621 $generated@@622 $generated@@623 $generated@@624))
))) (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@609 (type $generated@@627))))
 (=> (= (type $generated@@630) $generated@@631) (= ($generated@@605 ($generated@@610 $generated@@627 $generated@@628 $generated@@629 $generated@@630) $generated@@628 $generated@@629) $generated@@630)))
 :weight 0
))) (and (and (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (or (= $generated@@634 $generated@@636) (= ($generated@@605 ($generated@@610 $generated@@633 $generated@@634 $generated@@635 $generated@@632) $generated@@636 $generated@@637) ($generated@@605 $generated@@633 $generated@@636 $generated@@637)))
 :weight 0
)) (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (or (= $generated@@641 $generated@@643) (= ($generated@@605 ($generated@@610 $generated@@639 $generated@@640 $generated@@641 $generated@@638) $generated@@642 $generated@@643) ($generated@@605 $generated@@639 $generated@@642 $generated@@643)))
 :weight 0
))) (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (or true (= ($generated@@605 ($generated@@610 $generated@@645 $generated@@646 $generated@@647 $generated@@644) $generated@@648 $generated@@649) ($generated@@605 $generated@@645 $generated@@648 $generated@@649)))
 :weight 0
)))) (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (= (type ($generated@@606 $generated@@650 $generated@@651 $generated@@652 $generated@@653)) ($generated@@607 $generated@@81 $generated@@4))
 :pattern ( ($generated@@606 $generated@@650 $generated@@651 $generated@@652 $generated@@653))
))))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@70 (type $generated@@659))))
 (=> (and (and (and (and (and (= (type $generated@@654) $generated@@81) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) ($generated@@69 $generated@@4))) (= (type $generated@@657) $generated@@81)) (= (type $generated@@658) $generated@@81)) (= (type $generated@@659) ($generated@@69 $generated@@660))) (= ($generated@@0 ($generated@@605 ($generated@@606 $generated@@654 $generated@@655 $generated@@656 $generated@@657) $generated@@658 $generated@@659))  (=> (and (not (= $generated@@658 $generated@@654)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@658) $generated@@656))) (= $generated@@658 $generated@@657)))))
 :pattern ( ($generated@@605 ($generated@@606 $generated@@654 $generated@@655 $generated@@656 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@81)) (= ($generated@@181 ($generated@@220 $generated@@661 $generated@@662)) ($generated@@136 $generated@@662)))
 :pattern ( ($generated@@181 ($generated@@220 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@67) (= (type $generated@@664) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@663 $generated@@664)) $generated@@64) (= ($generated@@321 ($generated@@163 $generated@@663 $generated@@664)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@663 $generated@@664))
)))
(assert  (and (forall (($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@182 (type $generated@@667))))
(= (type ($generated@@665 $generated@@667)) ($generated@@180 $generated@@668)))
 :pattern ( ($generated@@665 $generated@@667))
)) (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@182 (type $generated@@669))))
(= (type ($generated@@666 $generated@@669)) $generated@@670))
 :pattern ( ($generated@@666 $generated@@669))
))))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@672)))
 (=> (= (type $generated@@671) ($generated@@180 $generated@@673)) (and (= ($generated@@665 ($generated@@179 $generated@@671 $generated@@672)) $generated@@671) (= ($generated@@666 ($generated@@179 $generated@@671 $generated@@672)) $generated@@672))))
 :pattern ( ($generated@@179 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@164) (= ($generated@@585 ($generated@@298 $generated@@674)) ($generated@@586 $generated@@674)))
 :pattern ( ($generated@@585 ($generated@@298 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@173) ($generated@@213 $generated@@675 ($generated@@79 0))) (and (= ($generated@@298 ($generated@@412 $generated@@2 $generated@@675)) $generated@@675) ($generated@@140 ($generated@@412 ($generated@@80 $generated@@173 $generated@@4) $generated@@675) ($generated@@79 0))))
 :pattern ( ($generated@@213 $generated@@675 ($generated@@79 0)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@173) (= (type $generated@@677) $generated@@67)) ($generated@@213 $generated@@676 ($generated@@234 $generated@@677))) (and (= ($generated@@298 ($generated@@412 ($generated@@80 $generated@@173 $generated@@4) $generated@@676)) $generated@@676) ($generated@@140 ($generated@@412 ($generated@@80 $generated@@173 $generated@@4) $generated@@676) ($generated@@234 $generated@@677))))
 :pattern ( ($generated@@213 $generated@@676 ($generated@@234 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@173) (= (type $generated@@679) $generated@@67)) ($generated@@213 $generated@@678 ($generated@@239 $generated@@679))) (and (= ($generated@@298 ($generated@@412 ($generated@@80 $generated@@173 $generated@@4) $generated@@678)) $generated@@678) ($generated@@140 ($generated@@412 ($generated@@80 $generated@@173 $generated@@4) $generated@@678) ($generated@@239 $generated@@679))))
 :pattern ( ($generated@@213 $generated@@678 ($generated@@239 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@173) (= (type $generated@@681) $generated@@67)) ($generated@@213 $generated@@680 ($generated@@195 $generated@@681))) (and (= ($generated@@298 ($generated@@412 ($generated@@80 $generated@@173 $generated@@2) $generated@@680)) $generated@@680) ($generated@@140 ($generated@@412 ($generated@@80 $generated@@173 $generated@@2) $generated@@680) ($generated@@195 $generated@@681))))
 :pattern ( ($generated@@213 $generated@@680 ($generated@@195 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) $generated@@173) (= (type $generated@@683) $generated@@67)) ($generated@@213 $generated@@682 ($generated@@250 $generated@@683))) (and (= ($generated@@298 ($generated@@412 ($generated@@180 $generated@@173) $generated@@682)) $generated@@682) ($generated@@140 ($generated@@412 ($generated@@180 $generated@@173) $generated@@682) ($generated@@250 $generated@@683))))
 :pattern ( ($generated@@213 $generated@@682 ($generated@@250 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@67) (= (type $generated@@685) $generated@@173)) ($generated@@213 $generated@@685 ($generated@@137 $generated@@684))) (and (= ($generated@@298 ($generated@@412 $generated@@81 $generated@@685)) $generated@@685) ($generated@@140 ($generated@@412 $generated@@81 $generated@@685) ($generated@@137 $generated@@684))))
 :pattern ( ($generated@@213 $generated@@685 ($generated@@137 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@67) (= (type $generated@@687) $generated@@173)) ($generated@@213 $generated@@687 ($generated@@157 $generated@@686))) (and (= ($generated@@298 ($generated@@412 $generated@@81 $generated@@687)) $generated@@687) ($generated@@140 ($generated@@412 $generated@@81 $generated@@687) ($generated@@157 $generated@@686))))
 :pattern ( ($generated@@213 $generated@@687 ($generated@@157 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ($generated@@690 Int) ) (! (let (($generated@@691 ($generated@@182 (type $generated@@688))))
 (=> (= (type $generated@@688) ($generated@@180 $generated@@691)) (=> (and (and (<= 0 $generated@@689) (<= $generated@@689 $generated@@690)) (< $generated@@690 ($generated@@181 $generated@@688))) (= ($generated@@255 ($generated@@178 $generated@@688 $generated@@689) (- $generated@@690 $generated@@689)) ($generated@@255 $generated@@688 $generated@@690)))))
 :weight 25
 :pattern ( ($generated@@255 $generated@@688 $generated@@690) ($generated@@178 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@692) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@693) $generated@@67)) (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@692 ($generated@@195 $generated@@693) $generated@@694) (forall (($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@692 $generated@@695)))) ($generated@@263 $generated@@695 $generated@@693 $generated@@694))
 :pattern ( ($generated@@85 $generated@@692 $generated@@695))
))))
 :pattern ( ($generated@@78 $generated@@692 ($generated@@195 $generated@@693) $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ($generated@@698 Int) ) (! (let (($generated@@699 ($generated@@182 (type $generated@@696))))
 (=> (= (type $generated@@696) ($generated@@180 $generated@@699)) (=> (and (and (<= 0 $generated@@697) (<= 0 $generated@@698)) (<= (+ $generated@@697 $generated@@698) ($generated@@181 $generated@@696))) (= ($generated@@178 ($generated@@178 $generated@@696 $generated@@697) $generated@@698) ($generated@@178 $generated@@696 (+ $generated@@697 $generated@@698))))))
 :pattern ( ($generated@@178 ($generated@@178 $generated@@696 $generated@@697) $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) $generated@@164) (= (type $generated@@701) $generated@@67)) (= (type $generated@@702) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@702) (and ($generated@@162 $generated@@700) (exists (($generated@@703 T@U) ) (!  (and (= (type $generated@@703) $generated@@67) ($generated@@78 $generated@@700 ($generated@@163 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@78 $generated@@700 ($generated@@163 $generated@@701 $generated@@703) $generated@@702))
))))) ($generated@@263 ($generated@@171 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@263 ($generated@@171 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@164) (= (type $generated@@705) $generated@@67)) (= (type $generated@@706) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@706) (and ($generated@@162 $generated@@704) (exists (($generated@@707 T@U) ) (!  (and (= (type $generated@@707) $generated@@67) ($generated@@78 $generated@@704 ($generated@@163 $generated@@707 $generated@@705) $generated@@706))
 :pattern ( ($generated@@78 $generated@@704 ($generated@@163 $generated@@707 $generated@@705) $generated@@706))
))))) ($generated@@263 ($generated@@172 $generated@@704) $generated@@705 $generated@@706))
 :pattern ( ($generated@@263 ($generated@@172 $generated@@704) $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 Int) ) (! (let (($generated@@711 ($generated@@182 (type $generated@@708))))
 (=> (and (= (type $generated@@708) ($generated@@180 $generated@@711)) (= (type $generated@@709) ($generated@@180 $generated@@711))) (and (=> (< $generated@@710 ($generated@@181 $generated@@708)) (= ($generated@@255 ($generated@@201 $generated@@708 $generated@@709) $generated@@710) ($generated@@255 $generated@@708 $generated@@710))) (=> (<= ($generated@@181 $generated@@708) $generated@@710) (= ($generated@@255 ($generated@@201 $generated@@708 $generated@@709) $generated@@710) ($generated@@255 $generated@@709 (- $generated@@710 ($generated@@181 $generated@@708))))))))
 :pattern ( ($generated@@255 ($generated@@201 $generated@@708 $generated@@709) $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@173) (= (type $generated@@713) $generated@@173)) (= ($generated@@212 ($generated@@246 $generated@@712) ($generated@@246 $generated@@713)) ($generated@@246 ($generated@@212 $generated@@712 $generated@@713))))
 :pattern ( ($generated@@212 ($generated@@246 $generated@@712) ($generated@@246 $generated@@713)))
)))
(assert (forall (($generated@@714 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@244 $generated@@714))) ($generated@@246 ($generated@@298 ($generated@@8 $generated@@714))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@244 $generated@@714))))
)))
(assert (forall (($generated@@715 T@U) ) (! (= ($generated@@298 ($generated@@246 $generated@@715)) ($generated@@246 ($generated@@298 $generated@@715)))
 :pattern ( ($generated@@298 ($generated@@246 $generated@@715)))
)))
(assert (forall (($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@182 (type $generated@@716))))
 (=> (and (= (type $generated@@716) ($generated@@180 $generated@@717)) (= ($generated@@181 $generated@@716) 0)) (= $generated@@716 ($generated@@287 $generated@@717))))
 :pattern ( ($generated@@181 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 Int) ) (! (let (($generated@@720 ($generated@@182 (type $generated@@718))))
 (=> (and (= (type $generated@@718) ($generated@@180 $generated@@720)) (= $generated@@719 0)) (= ($generated@@200 $generated@@718 $generated@@719) ($generated@@287 $generated@@720))))
 :pattern ( ($generated@@200 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@722)))
 (=> (and (and (= (type $generated@@721) ($generated@@80 $generated@@724 $generated@@2)) (= (type $generated@@723) $generated@@2)) (<= 0 ($generated $generated@@723))) (= ($generated@@315 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)) (+ (- ($generated@@315 $generated@@721) ($generated ($generated@@85 $generated@@721 $generated@@722))) ($generated $generated@@723)))))
 :pattern ( ($generated@@315 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@726) $generated@@2)) ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
 :pattern ( ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@728) $generated@@3)) ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
 :pattern ( ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@730) $generated@@4)) ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
 :pattern ( ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@732) $generated@@493)) ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
 :pattern ( ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@734) $generated@@173)) ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
 :pattern ( ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@180 $generated@@173)) (= (type $generated@@736) $generated@@67)) (= ($generated@@140 $generated@@735 ($generated@@250 $generated@@736)) (forall (($generated@@737 Int) ) (!  (=> (and (<= 0 $generated@@737) (< $generated@@737 ($generated@@181 $generated@@735))) ($generated@@213 ($generated@@255 $generated@@735 $generated@@737) $generated@@736))
 :pattern ( ($generated@@255 $generated@@735 $generated@@737))
))))
 :pattern ( ($generated@@140 $generated@@735 ($generated@@250 $generated@@736)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 Int) ) (!  (=> (= (type $generated@@738) ($generated@@180 $generated@@173)) (=> (and (<= 0 $generated@@739) (< $generated@@739 ($generated@@181 $generated@@738))) (< ($generated@@586 ($generated@@412 $generated@@164 ($generated@@255 $generated@@738 $generated@@739))) ($generated@@280 $generated@@738))))
 :pattern ( ($generated@@586 ($generated@@412 $generated@@164 ($generated@@255 $generated@@738 $generated@@739))))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) ($generated@@327 $generated@@173 $generated@@173)) (= (type $generated@@741) $generated@@67)) (= (type $generated@@742) $generated@@67)) ($generated@@140 $generated@@740 ($generated@@440 $generated@@741 $generated@@742))) (and (and ($generated@@140 ($generated@@325 $generated@@740) ($generated@@234 $generated@@741)) ($generated@@140 ($generated@@377 $generated@@740) ($generated@@234 $generated@@742))) ($generated@@140 ($generated@@411 $generated@@740) ($generated@@234 ($generated@@163 $generated@@741 $generated@@742)))))
 :pattern ( ($generated@@140 $generated@@740 ($generated@@440 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (and (= (type $generated@@743) ($generated@@345 $generated@@173 $generated@@173)) (= (type $generated@@744) $generated@@67)) (= (type $generated@@745) $generated@@67)) ($generated@@140 $generated@@743 ($generated@@448 $generated@@744 $generated@@745))) (and (and ($generated@@140 ($generated@@343 $generated@@743) ($generated@@239 $generated@@744)) ($generated@@140 ($generated@@388 $generated@@743) ($generated@@239 $generated@@745))) ($generated@@140 ($generated@@422 $generated@@743) ($generated@@239 ($generated@@163 $generated@@744 $generated@@745)))))
 :pattern ( ($generated@@140 $generated@@743 ($generated@@448 $generated@@744 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@2) ($generated@@140 $generated@@746 $generated@@46))
 :pattern ( ($generated@@140 $generated@@746 $generated@@46))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@3) ($generated@@140 $generated@@747 $generated@@47))
 :pattern ( ($generated@@140 $generated@@747 $generated@@47))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@4) ($generated@@140 $generated@@748 $generated@@44))
 :pattern ( ($generated@@140 $generated@@748 $generated@@44))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@493) ($generated@@140 $generated@@749 $generated@@45))
 :pattern ( ($generated@@140 $generated@@749 $generated@@45))
)))
(assert (forall (($generated@@750 T@U) ) (!  (=> (= (type $generated@@750) $generated@@173) ($generated@@140 $generated@@750 $generated@@48))
 :pattern ( ($generated@@140 $generated@@750 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 (T@U) Bool)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () Int)
(assert  (and (and (and (and (and (= (type $generated@@751) ($generated@@607 $generated@@81 $generated@@4)) (= (type $generated@@752) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@753) $generated@@81)) (= (type $generated@@755) ($generated@@180 $generated@@173))) (= (type $generated@@756) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@758) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@760  (=> (= $generated@@751 ($generated@@606 $generated@@138 $generated@@752 $generated@@60 $generated@@753)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@753 $generated@@138))) (=> (not (= $generated@@753 $generated@@138)) (=> (<= (+ $generated@@754 ($generated@@181 $generated@@755)) ($generated@@136 $generated@@753)) (=> (and (and ($generated@@152 $generated@@756) ($generated@@757 $generated@@756)) (and (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@81) (=> (and (not (= $generated@@761 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@752 $generated@@761) $generated@@60))) (or (= ($generated@@85 $generated@@756 $generated@@761) ($generated@@85 $generated@@752 $generated@@761)) (= $generated@@761 $generated@@753))))
 :pattern ( ($generated@@85 $generated@@756 $generated@@761))
)) ($generated@@145 $generated@@752 $generated@@756))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@753 $generated@@138))) (=> (not (= $generated@@753 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@753 $generated@@138))) (=> (not (= $generated@@753 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@78 $generated@@753 ($generated@@137 $generated@@758) $generated@@752)) (=> ($generated@@78 $generated@@753 ($generated@@137 $generated@@758) $generated@@752) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@244 0)) (<= ($generated@@244 0) ($generated@@136 $generated@@753)))) (=> (and (<= 0 ($generated@@244 0)) (<= ($generated@@244 0) ($generated@@136 $generated@@753))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@244 0) $generated@@754) (<= $generated@@754 ($generated@@136 $generated@@753)))) (=> (and (<= ($generated@@244 0) $generated@@754) (<= $generated@@754 ($generated@@136 $generated@@753))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@753 $generated@@138))) (=> (not (= $generated@@753 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@78 $generated@@753 ($generated@@137 $generated@@758) $generated@@752)) (=> ($generated@@78 $generated@@753 ($generated@@137 $generated@@758) $generated@@752) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 (+ $generated@@754 ($generated@@181 $generated@@755))) (<= (+ $generated@@754 ($generated@@181 $generated@@755)) ($generated@@136 $generated@@753)))))))))))))))))))))))))
(let (($generated@@762  (=> (and (and ($generated@@152 $generated@@752) ($generated@@757 $generated@@752)) (and ($generated@@140 $generated@@755 ($generated@@250 $generated@@758)) ($generated@@78 $generated@@755 ($generated@@250 $generated@@758) $generated@@752))) (=> (and (and (and ($generated@@140 $generated@@753 ($generated@@157 $generated@@758)) ($generated@@78 $generated@@753 ($generated@@157 $generated@@758) $generated@@752)) (<= ($generated@@244 0) $generated@@754)) (and (= 1 $generated@@759) (= (ControlFlow 0 11) 2))) $generated@@760))))
$generated@@762)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U Int) T@U)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U) Int)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U Int) T@U)
(declare-fun $generated@@201 (T@U Int T@U) T@U)
(declare-fun $generated@@214 (T@U Int) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (Int) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@T T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) T@U)
(declare-fun $generated@@489 (T@T) T@U)
(declare-fun $generated@@513 () T@T)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@615 (T@U) Int)
(declare-fun $generated@@634 (T@U T@U T@U) T@U)
(declare-fun $generated@@635 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@636 (T@T T@T) T@T)
(declare-fun $generated@@637 (T@T) T@T)
(declare-fun $generated@@638 (T@T) T@T)
(declare-fun $generated@@639 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@698 (T@U) T@U)
(declare-fun $generated@@699 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert  (and (and (and (forall (($generated@@183 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@183)) 16)) (forall (($generated@@184 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@180 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (let (($generated@@187 ($generated@@182 (type $generated@@185))))
(= (type ($generated@@178 $generated@@185 $generated@@186)) ($generated@@180 $generated@@187)))
 :pattern ( ($generated@@178 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@179 $generated@@188 $generated@@189)) ($generated@@180 $generated@@190)))
 :pattern ( ($generated@@179 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Int) ) (! (let (($generated@@194 (type $generated@@192)))
 (=> (= (type $generated@@191) ($generated@@180 $generated@@194)) (=> (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@181 $generated@@191))) (= ($generated@@178 ($generated@@179 $generated@@191 $generated@@192) $generated@@193) ($generated@@179 ($generated@@178 $generated@@191 $generated@@193) $generated@@192)))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@67)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@199) $generated@@67)) ($generated@@140 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@140 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (forall (($generated@@202 T@U) ($generated@@203 Int) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@202))))
(= (type ($generated@@200 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@200 $generated@@202 $generated@@203))
)) (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(= (type ($generated@@201 $generated@@205 $generated@@206 $generated@@207)) ($generated@@180 $generated@@208)))
 :pattern ( ($generated@@201 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ($generated@@211 T@U) ($generated@@212 Int) ) (! (let (($generated@@213 (type $generated@@211)))
 (=> (= (type $generated@@209) ($generated@@180 $generated@@213)) (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@181 $generated@@209))) (and (=> (= $generated@@210 $generated@@212) (= ($generated@@200 ($generated@@201 $generated@@209 $generated@@210 $generated@@211) $generated@@212) $generated@@211)) (=> (not (= $generated@@210 $generated@@212)) (= ($generated@@200 ($generated@@201 $generated@@209 $generated@@210 $generated@@211) $generated@@212) ($generated@@200 $generated@@209 $generated@@212)))))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@209 $generated@@210 $generated@@211) $generated@@212))
)))
(assert  (and (forall (($generated@@216 T@U) ($generated@@217 Int) ) (! (let (($generated@@218 ($generated@@182 (type $generated@@216))))
(= (type ($generated@@214 $generated@@216 $generated@@217)) ($generated@@180 $generated@@218)))
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@182 (type $generated@@219))))
(= (type ($generated@@215 $generated@@219 $generated@@220)) ($generated@@180 $generated@@221)))
 :pattern ( ($generated@@215 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Int) ) (! (let (($generated@@225 ($generated@@182 (type $generated@@222))))
 (=> (and (and (= (type $generated@@222) ($generated@@180 $generated@@225)) (= (type $generated@@223) ($generated@@180 $generated@@225))) (= $generated@@224 ($generated@@181 $generated@@222))) (and (= ($generated@@214 ($generated@@215 $generated@@222 $generated@@223) $generated@@224) $generated@@222) (= ($generated@@178 ($generated@@215 $generated@@222 $generated@@223) $generated@@224) $generated@@223))))
 :pattern ( ($generated@@214 ($generated@@215 $generated@@222 $generated@@223) $generated@@224))
 :pattern ( ($generated@@178 ($generated@@215 $generated@@222 $generated@@223) $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@164)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@67) (= (type $generated@@231) $generated@@67)) (= (type $generated@@232) $generated@@173)) (= (type $generated@@233) $generated@@173)) (= ($generated@@140 ($generated@@226 $generated@@232 $generated@@233) ($generated@@163 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@140 ($generated@@226 $generated@@232 $generated@@233) ($generated@@163 $generated@@230 $generated@@231)))
)))
(assert  (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) ($generated@@180 $generated@@173))
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)) (forall (($generated@@238 Int) ) (! (= (type ($generated@@235 $generated@@238)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Int) ($generated@@242 Int) ) (!  (=> (and (= (type $generated@@239) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@240) $generated@@81)) (=> (and (and (= (+ $generated@@241 1) $generated@@242) (<= 0 $generated@@241)) (<= $generated@@242 ($generated@@136 $generated@@240))) (= ($generated@@214 ($generated@@234 $generated@@239 $generated@@240) $generated@@242) ($generated@@179 ($generated@@214 ($generated@@234 $generated@@239 $generated@@240) $generated@@241) ($generated@@87 ($generated@@85 $generated@@239 $generated@@240) ($generated@@235 $generated@@241))))))
 :pattern ( ($generated@@214 ($generated@@234 $generated@@239 $generated@@240) $generated@@241) ($generated@@214 ($generated@@234 $generated@@239 $generated@@240) $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 Int) ($generated@@245 T@U) ($generated@@246 Int) ) (! (let (($generated@@247 (type $generated@@245)))
 (=> (= (type $generated@@243) ($generated@@180 $generated@@247)) (=> (and (and (<= 0 $generated@@246) (<= $generated@@246 $generated@@244)) (< $generated@@244 ($generated@@181 $generated@@243))) (= ($generated@@178 ($generated@@201 $generated@@243 $generated@@244 $generated@@245) $generated@@246) ($generated@@201 ($generated@@178 $generated@@243 $generated@@246) (- $generated@@244 $generated@@246) $generated@@245)))))
 :pattern ( ($generated@@178 ($generated@@201 $generated@@243 $generated@@244 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@164) (= (type $generated@@249) $generated@@164)) (= ($generated@@170 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@170 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 Int) ) (! (let (($generated@@252 ($generated@@182 (type $generated@@250))))
 (=> (and (= (type $generated@@250) ($generated@@180 $generated@@252)) (= $generated@@251 0)) (= ($generated@@178 $generated@@250 $generated@@251) $generated@@250)))
 :pattern ( ($generated@@178 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@173) ($generated@@0 ($generated@@85 $generated@@255 $generated@@257))) ($generated@@227 $generated@@257 $generated@@256))
 :pattern ( ($generated@@85 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@261) $generated@@67)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@173) ($generated@@0 ($generated@@85 $generated@@260 $generated@@262))) ($generated@@227 $generated@@262 $generated@@261))
 :pattern ( ($generated@@85 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@67)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@180 $generated@@173)) (= (type $generated@@272) $generated@@173)) (= (type $generated@@273) $generated@@67)) (and ($generated@@140 $generated@@271 ($generated@@269 $generated@@273)) ($generated@@227 $generated@@272 $generated@@273))) ($generated@@140 ($generated@@179 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
 :pattern ( ($generated@@140 ($generated@@179 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 Int) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@182 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@180 $generated@@277)) (=> (and (and (<= 0 $generated@@276) (< $generated@@276 $generated@@275)) (< $generated@@276 ($generated@@181 $generated@@274))) (= ($generated@@200 ($generated@@214 $generated@@274 $generated@@275) $generated@@276) ($generated@@200 $generated@@274 $generated@@276)))))
 :weight 25
 :pattern ( ($generated@@200 ($generated@@214 $generated@@274 $generated@@275) $generated@@276))
 :pattern ( ($generated@@200 $generated@@274 $generated@@276) ($generated@@214 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@67) (= (type $generated@@280) $generated@@67)) (= (type $generated@@281) $generated@@173)) (= (type $generated@@282) $generated@@173)) (= (type $generated@@283) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@283)) (= ($generated@@78 ($generated@@226 $generated@@281 $generated@@282) ($generated@@163 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@78 ($generated@@226 $generated@@281 $generated@@282) ($generated@@163 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 Int) ) (! (let (($generated@@286 ($generated@@182 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@180 $generated@@286)) (=> (and (<= 0 $generated@@285) (<= $generated@@285 ($generated@@181 $generated@@284))) (= ($generated@@181 ($generated@@178 $generated@@284 $generated@@285)) (- ($generated@@181 $generated@@284) $generated@@285)))))
 :pattern ( ($generated@@181 ($generated@@178 $generated@@284 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@71)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@164) (= ($generated@@162 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@182 (type $generated@@291))))
 (=> (and (= (type $generated@@291) ($generated@@180 $generated@@293)) (= (type $generated@@292) ($generated@@180 $generated@@293))) (= ($generated@@290 $generated@@291 $generated@@292)  (and (= ($generated@@181 $generated@@291) ($generated@@181 $generated@@292)) (forall (($generated@@294 Int) ) (!  (=> (and (<= 0 $generated@@294) (< $generated@@294 ($generated@@181 $generated@@291))) (= ($generated@@200 $generated@@291 $generated@@294) ($generated@@200 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@200 $generated@@291 $generated@@294))
 :pattern ( ($generated@@200 $generated@@292 $generated@@294))
))))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 Int) ) (! (let (($generated@@298 ($generated@@182 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@180 $generated@@298)) (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@181 $generated@@296))) (< ($generated@@295 ($generated@@214 $generated@@296 $generated@@297)) ($generated@@295 $generated@@296)))))
 :pattern ( ($generated@@295 ($generated@@214 $generated@@296 $generated@@297)))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@164) ($generated@@162 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@173) (= (type $generated@@301) $generated@@173)) (= $generated@@299 ($generated@@226 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@162 $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@180 $generated@@303))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@181 ($generated@@302 $generated@@304)) 0)
 :pattern ( ($generated@@302 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 Int) ) (! (let (($generated@@307 ($generated@@182 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@180 $generated@@307)) (=> (and (< 0 $generated@@306) (<= $generated@@306 ($generated@@181 $generated@@305))) (< ($generated@@295 ($generated@@178 $generated@@305 $generated@@306)) ($generated@@295 $generated@@305)))))
 :pattern ( ($generated@@295 ($generated@@178 $generated@@305 $generated@@306)))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@309)))
 (=> (= (type $generated@@308) ($generated@@180 $generated@@310)) (= ($generated@@181 ($generated@@179 $generated@@308 $generated@@309)) (+ 1 ($generated@@181 $generated@@308)))))
 :pattern ( ($generated@@179 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@67) (= (type $generated@@312) $generated@@81)) (= ($generated@@140 $generated@@312 ($generated@@157 $generated@@311))  (and ($generated@@140 $generated@@312 ($generated@@137 $generated@@311)) (not (= $generated@@312 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@312 ($generated@@157 $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@173)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@278 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@78 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@278 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@319) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@320) $generated@@173)) (= (type $generated@@321) $generated@@67)) ($generated@@145 $generated@@318 $generated@@319)) ($generated@@278 $generated@@320 $generated@@321 $generated@@318)) ($generated@@278 $generated@@320 $generated@@321 $generated@@319))
 :pattern ( ($generated@@145 $generated@@318 $generated@@319) ($generated@@278 $generated@@320 $generated@@321 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@323) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@325) $generated@@67)) ($generated@@145 $generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@325 $generated@@322)) ($generated@@78 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@145 $generated@@322 $generated@@323) ($generated@@78 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 Int) ) (! (let (($generated@@329 ($generated@@182 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@180 $generated@@329)) (=> (and (and (<= 0 $generated@@327) (<= 0 $generated@@328)) (< $generated@@328 (- ($generated@@181 $generated@@326) $generated@@327))) (= ($generated@@200 ($generated@@178 $generated@@326 $generated@@327) $generated@@328) ($generated@@200 $generated@@326 (+ $generated@@328 $generated@@327))))))
 :weight 25
 :pattern ( ($generated@@200 ($generated@@178 $generated@@326 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@80 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@83 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@80 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@85 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@72)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@338)) $generated@@61) (= ($generated@@336 ($generated@@137 $generated@@338)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@339)) $generated@@62) (= ($generated@@336 ($generated@@157 $generated@@339)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 17)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 18)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@182 (type $generated@@376))))
 (=> (and (= (type $generated@@376) ($generated@@180 $generated@@378)) (= (type $generated@@377) ($generated@@180 $generated@@378))) (= ($generated@@181 ($generated@@215 $generated@@376 $generated@@377)) (+ ($generated@@181 $generated@@376) ($generated@@181 $generated@@377)))))
 :pattern ( ($generated@@181 ($generated@@215 $generated@@376 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@83 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@80 $generated@@380 $generated@@2)) (= ($generated@@196 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@85 $generated@@379 $generated@@381))) (<= ($generated ($generated@@85 $generated@@379 $generated@@381)) ($generated@@330 $generated@@379))))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@196 $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@67) (= (type $generated@@383) $generated@@81)) (= ($generated@@140 $generated@@383 ($generated@@137 $generated@@382))  (or (= $generated@@383 $generated@@138) (= ($generated@@139 $generated@@383) ($generated@@137 $generated@@382)))))
 :pattern ( ($generated@@140 $generated@@383 ($generated@@137 $generated@@382)))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 Int) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
 (=> (= (type $generated@@384) ($generated@@180 $generated@@387)) (and (=> (= $generated@@385 ($generated@@181 $generated@@384)) (= ($generated@@200 ($generated@@179 $generated@@384 $generated@@386) $generated@@385) $generated@@386)) (=> (not (= $generated@@385 ($generated@@181 $generated@@384))) (= ($generated@@200 ($generated@@179 $generated@@384 $generated@@386) $generated@@385) ($generated@@200 $generated@@384 $generated@@385))))))
 :pattern ( ($generated@@200 ($generated@@179 $generated@@384 $generated@@386) $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@344 (type $generated@@388))))
(let (($generated@@390 ($generated@@343 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@342 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@341 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@340 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@344 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@80 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@344 (type $generated@@395))))
(let (($generated@@397 ($generated@@343 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@342 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@341 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@362 (type $generated@@399))))
(let (($generated@@401 ($generated@@361 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@360 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@359 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@358 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@362 (type $generated@@404))))
(= (type ($generated@@403 $generated@@404)) ($generated@@80 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@362 (type $generated@@406))))
(let (($generated@@408 ($generated@@361 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@360 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@359 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@407) ($generated@@0 ($generated@@85 ($generated@@403 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@403 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@411) $generated@@81)) (forall (($generated@@412 Int) ) (!  (=> (and (<= 0 $generated@@412) (< $generated@@412 ($generated@@181 ($generated@@234 $generated@@410 $generated@@411)))) (= ($generated@@200 ($generated@@234 $generated@@410 $generated@@411) $generated@@412) ($generated@@87 ($generated@@85 $generated@@410 $generated@@411) ($generated@@235 $generated@@412))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@410 $generated@@411) ($generated@@235 $generated@@412)))
 :pattern ( ($generated@@200 ($generated@@234 $generated@@410 $generated@@411) $generated@@412))
)))
 :pattern ( ($generated@@234 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@414) $generated@@67)) (= ($generated@@140 $generated@@413 ($generated@@195 $generated@@414)) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@413 $generated@@415)))) ($generated@@227 $generated@@415 $generated@@414))
 :pattern ( ($generated@@85 $generated@@413 $generated@@415))
))))
 :pattern ( ($generated@@140 $generated@@413 ($generated@@195 $generated@@414)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ($generated@@418 T@U) ($generated@@419 Int) ) (! (let (($generated@@420 (type $generated@@418)))
 (=> (= (type $generated@@416) ($generated@@180 $generated@@420)) (=> (and (and (<= 0 $generated@@417) (< $generated@@417 $generated@@419)) (<= $generated@@419 ($generated@@181 $generated@@416))) (= ($generated@@178 ($generated@@201 $generated@@416 $generated@@417 $generated@@418) $generated@@419) ($generated@@178 $generated@@416 $generated@@419)))))
 :pattern ( ($generated@@178 ($generated@@201 $generated@@416 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@421 ($generated@@253 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 $generated@@421 $generated@@424))) ($generated@@278 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@85 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@421 ($generated@@253 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@425) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@258 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@173) ($generated@@0 ($generated@@85 $generated@@425 $generated@@428))) ($generated@@278 $generated@@428 $generated@@426 $generated@@427))
 :pattern ( ($generated@@85 $generated@@425 $generated@@428))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@258 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(= ($generated ($generated@@85 ($generated@@331 $generated@@430) $generated@@429)) 0))
 :pattern ( (let (($generated@@430 (type $generated@@429)))
($generated@@85 ($generated@@331 $generated@@430) $generated@@429)))
)))
(assert  (and (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@431 $generated@@434)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@431 $generated@@434))
)) (forall (($generated@@435 T@T) ($generated@@436 T@U) ) (! (= (type ($generated@@432 $generated@@435 $generated@@436)) $generated@@435)
 :pattern ( ($generated@@432 $generated@@435 $generated@@436))
))) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@344 (type $generated@@437))))
(let (($generated@@439 ($generated@@343 (type $generated@@437))))
(= (type ($generated@@433 $generated@@437)) ($generated@@80 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@433 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@441) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@431 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@440) ($generated@@171 ($generated@@432 $generated@@164 $generated@@441)))) (= ($generated@@85 ($generated@@433 $generated@@440) ($generated@@171 ($generated@@432 $generated@@164 $generated@@441))) ($generated@@172 ($generated@@432 $generated@@164 $generated@@441))))))
 :pattern ( ($generated@@85 ($generated@@431 $generated@@440) $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@362 (type $generated@@445))))
(let (($generated@@447 ($generated@@361 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445)) ($generated@@80 $generated@@447 $generated@@446))))
 :pattern ( ($generated@@443 $generated@@445))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@360 $generated@@173 $generated@@173)) (= (type $generated@@449) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@442 $generated@@448) $generated@@449))  (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@448) ($generated@@171 ($generated@@432 $generated@@164 $generated@@449)))) (= ($generated@@85 ($generated@@443 $generated@@448) ($generated@@171 ($generated@@432 $generated@@164 $generated@@449))) ($generated@@172 ($generated@@432 $generated@@164 $generated@@449))))))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@343 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@342 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@85 ($generated@@433 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@433 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(let (($generated@@458 ($generated@@361 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@360 $generated@@458 $generated@@457)) (= ($generated@@0 ($generated@@85 ($generated@@403 $generated@@455) $generated@@456)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@455) $generated@@459)) (= $generated@@456 ($generated@@85 ($generated@@443 $generated@@455) $generated@@459))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@455) $generated@@459))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@455) $generated@@459))
))))))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) $generated@@67)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@463) $generated@@467))) (and ($generated@@278 ($generated@@85 ($generated@@433 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@278 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@85 ($generated@@433 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (= (type $generated@@471) ($generated@@360 $generated@@173 $generated@@173)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) $generated@@67)) (= (type $generated@@474) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@471) $generated@@475))) (and ($generated@@278 ($generated@@85 ($generated@@443 $generated@@471) $generated@@475) $generated@@473 $generated@@474) ($generated@@278 $generated@@475 $generated@@472 $generated@@474)))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@471) $generated@@475))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@471) $generated@@475))
))))
 :pattern ( ($generated@@78 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@182 (type $generated@@476))))
 (=> (and (and (= (type $generated@@476) ($generated@@180 $generated@@478)) (= (type $generated@@477) ($generated@@180 $generated@@478))) ($generated@@290 $generated@@476 $generated@@477)) (= $generated@@476 $generated@@477)))
 :pattern ( ($generated@@290 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@182 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@180 $generated@@481)) (=> (and (<= 0 $generated@@480) (<= $generated@@480 ($generated@@181 $generated@@479))) (= ($generated@@181 ($generated@@214 $generated@@479 $generated@@480)) $generated@@480))))
 :pattern ( ($generated@@181 ($generated@@214 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@484) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@482 $generated@@484))) (and ($generated@@145 $generated@@482 $generated@@483) ($generated@@145 $generated@@483 $generated@@484))) ($generated@@145 $generated@@482 $generated@@484))
 :pattern ( ($generated@@145 $generated@@482 $generated@@483) ($generated@@145 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 Int) ) (!  (=> (and (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@487) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@486) (and (not (= $generated@@487 $generated@@138)) (= ($generated@@139 $generated@@487) ($generated@@137 $generated@@485)))) (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@136 $generated@@487)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@486 $generated@@487) $generated@@60))) ($generated@@278 ($generated@@87 ($generated@@85 $generated@@486 $generated@@487) ($generated@@235 $generated@@488)) $generated@@485 $generated@@486)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@486 $generated@@487) ($generated@@235 $generated@@488)) ($generated@@137 $generated@@485))
)))
(assert (forall (($generated@@490 T@T) ) (! (= (type ($generated@@489 $generated@@490)) ($generated@@80 $generated@@490 $generated@@4))
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@362 (type $generated@@491))))
(let (($generated@@493 ($generated@@361 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@360 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@359 $generated@@493 $generated@@492)) (= ($generated@@358 $generated@@491) ($generated@@489 $generated@@493))))))
 :pattern ( ($generated@@358 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@362 (type $generated@@494))))
(let (($generated@@496 ($generated@@361 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@360 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@359 $generated@@496 $generated@@495)) (= ($generated@@403 $generated@@494) ($generated@@489 $generated@@495))))))
 :pattern ( ($generated@@403 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@362 (type $generated@@497))))
(let (($generated@@499 ($generated@@361 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@360 $generated@@499 $generated@@498)) (= (= $generated@@497 ($generated@@359 $generated@@499 $generated@@498)) (= ($generated@@442 $generated@@497) ($generated@@489 $generated@@173))))))
 :pattern ( ($generated@@442 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@344 (type $generated@@500))))
(let (($generated@@502 ($generated@@343 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@342 $generated@@502 $generated@@501)) (or (= $generated@@500 ($generated@@341 $generated@@502 $generated@@501)) (exists (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (and (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@431 $generated@@500) ($generated@@313 ($generated@@226 $generated@@503 $generated@@504)))))
 :no-pattern (type $generated@@503)
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@431 $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@362 (type $generated@@505))))
(let (($generated@@507 ($generated@@361 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@360 $generated@@507 $generated@@506)) (or (= $generated@@505 ($generated@@359 $generated@@507 $generated@@506)) (exists (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@442 $generated@@505) ($generated@@313 ($generated@@226 $generated@@508 $generated@@509)))))
 :no-pattern (type $generated@@508)
 :no-pattern (type $generated@@509)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
))))))
 :pattern ( ($generated@@442 $generated@@505))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@173) ($generated@@227 $generated@@510 $generated@@46)) (and (= ($generated@@313 ($generated@@432 $generated@@2 $generated@@510)) $generated@@510) ($generated@@140 ($generated@@432 $generated@@2 $generated@@510) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@510 $generated@@46))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@173) ($generated@@227 $generated@@511 $generated@@47)) (and (= ($generated@@313 ($generated@@432 $generated@@3 $generated@@511)) $generated@@511) ($generated@@140 ($generated@@432 $generated@@3 $generated@@511) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@511 $generated@@47))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@173) ($generated@@227 $generated@@512 $generated@@44)) (and (= ($generated@@313 ($generated@@432 $generated@@4 $generated@@512)) $generated@@512) ($generated@@140 ($generated@@432 $generated@@4 $generated@@512) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@512 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@513) 19))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@173) ($generated@@227 $generated@@514 $generated@@45)) (and (= ($generated@@313 ($generated@@432 $generated@@513 $generated@@514)) $generated@@514) ($generated@@140 ($generated@@432 $generated@@513 $generated@@514) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@514 $generated@@45))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@227 ($generated@@313 $generated@@515) $generated@@516) ($generated@@140 $generated@@515 $generated@@516)))
 :pattern ( ($generated@@227 ($generated@@313 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 Int) ($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 (type $generated@@519)))
 (=> (= (type $generated@@517) ($generated@@180 $generated@@521)) (=> (and (<= $generated@@520 $generated@@518) (< $generated@@518 ($generated@@181 $generated@@517))) (= ($generated@@214 ($generated@@201 $generated@@517 $generated@@518 $generated@@519) $generated@@520) ($generated@@214 $generated@@517 $generated@@520)))))
 :pattern ( ($generated@@214 ($generated@@201 $generated@@517 $generated@@518 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@81) (<= 0 ($generated@@136 $generated@@522)))
 :no-pattern (type $generated@@522)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@83 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@80 $generated@@524 $generated@@2)) (<= 0 ($generated@@330 $generated@@523))))
 :pattern ( ($generated@@330 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@182 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@180 $generated@@526)) (<= 0 ($generated@@181 $generated@@525))))
 :pattern ( ($generated@@181 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@182 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@180 $generated@@530)) (=> (and (and (<= 0 $generated@@528) (< $generated@@528 $generated@@529)) (<= $generated@@529 ($generated@@181 $generated@@527))) (< ($generated@@295 ($generated@@215 ($generated@@214 $generated@@527 $generated@@528) ($generated@@178 $generated@@527 $generated@@529))) ($generated@@295 $generated@@527)))))
 :pattern ( ($generated@@295 ($generated@@215 ($generated@@214 $generated@@527 $generated@@528) ($generated@@178 $generated@@527 $generated@@529))))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= ($generated@@531 ($generated@@460 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@460 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@460 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@460 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= ($generated@@76 ($generated@@460 $generated@@539 $generated@@540)) $generated@@58))
 :pattern ( ($generated@@460 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@67) (= (type $generated@@544) $generated@@67)) (= ($generated@@541 ($generated@@468 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@468 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@67)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (= ($generated@@545 ($generated@@468 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@468 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@67)) (= ($generated@@76 ($generated@@468 $generated@@549 $generated@@550)) $generated@@59))
 :pattern ( ($generated@@468 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) (= (type $generated@@552) $generated@@173)) (= ($generated@@287 ($generated@@226 $generated@@551 $generated@@552)) $generated@@63))
 :pattern ( ($generated@@226 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@67)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@67) (= (type $generated@@556) $generated@@67)) (= ($generated@@553 ($generated@@163 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@163 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@67)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (= ($generated@@557 ($generated@@163 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@163 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@173) (= (type $generated@@562) $generated@@173)) (= ($generated@@171 ($generated@@226 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@226 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@173) (= (type $generated@@564) $generated@@173)) (= ($generated@@172 ($generated@@226 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@226 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@180 $generated@@173)) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@565 ($generated@@269 $generated@@566) $generated@@567) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@181 $generated@@565))) ($generated@@278 ($generated@@200 $generated@@565 $generated@@568) $generated@@566 $generated@@567))
 :pattern ( ($generated@@200 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@78 $generated@@565 ($generated@@269 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@569 ($generated@@79 $generated@@570)) $generated@@570)
 :pattern ( ($generated@@79 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@571 ($generated@@253 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@253 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@67) (= ($generated@@76 ($generated@@253 $generated@@574)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@575 ($generated@@258 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@258 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@67) (= ($generated@@76 ($generated@@258 $generated@@578)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@67)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@67) (= ($generated@@579 ($generated@@195 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@195 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@67) (= ($generated@@76 ($generated@@195 $generated@@582)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@67)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@67) (= ($generated@@583 ($generated@@269 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@269 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@67) (= ($generated@@76 ($generated@@269 $generated@@586)) $generated@@57))
 :pattern ( ($generated@@269 $generated@@586))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@75 ($generated@@235 $generated@@587)) 1)
 :pattern ( ($generated@@235 $generated@@587))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@588 ($generated@@235 $generated@@589)) $generated@@589)
 :pattern ( ($generated@@235 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@67)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@67) (= ($generated@@590 ($generated@@137 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@137 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@67)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@67) (= ($generated@@593 ($generated@@157 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@157 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@432 $generated@@597 ($generated@@313 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@313 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) (= ($generated@@140 $generated@@598 ($generated@@460 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@598) $generated@@601))) (and ($generated@@227 ($generated@@85 ($generated@@433 $generated@@598) $generated@@601) $generated@@600) ($generated@@227 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@85 ($generated@@433 $generated@@598) $generated@@601))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@140 $generated@@598 ($generated@@460 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@360 $generated@@173 $generated@@173)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@67)) (= ($generated@@140 $generated@@602 ($generated@@468 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@602) $generated@@605))) (and ($generated@@227 ($generated@@85 ($generated@@443 $generated@@602) $generated@@605) $generated@@604) ($generated@@227 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@602) $generated@@605))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@140 $generated@@602 ($generated@@468 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@173)) (= (type $generated@@609) $generated@@81)) (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@136 $generated@@609)))) (= ($generated@@234 ($generated@@86 $generated@@606 $generated@@609 ($generated@@88 ($generated@@85 $generated@@606 $generated@@609) ($generated@@235 $generated@@607) $generated@@608)) $generated@@609) ($generated@@201 ($generated@@234 $generated@@606 $generated@@609) $generated@@607 $generated@@608)))
 :pattern ( ($generated@@234 ($generated@@86 $generated@@606 $generated@@609 ($generated@@88 ($generated@@85 $generated@@606 $generated@@609) ($generated@@235 $generated@@607) $generated@@608)) $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@67) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@612) $generated@@81)) (and (and ($generated@@152 $generated@@611) (and (not (= $generated@@612 $generated@@138)) (= ($generated@@139 $generated@@612) ($generated@@137 $generated@@610)))) (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@136 $generated@@612))))) ($generated@@227 ($generated@@87 ($generated@@85 $generated@@611 $generated@@612) ($generated@@235 $generated@@613)) $generated@@610))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@611 $generated@@612) ($generated@@235 $generated@@613)) ($generated@@137 $generated@@610))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@173) (= (type $generated@@617) $generated@@173)) (< ($generated@@614 $generated@@616) ($generated@@615 ($generated@@226 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@226 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@173) (= (type $generated@@619) $generated@@173)) (< ($generated@@614 $generated@@619) ($generated@@615 ($generated@@226 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@226 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@173) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@227 $generated@@620 ($generated@@460 $generated@@621 $generated@@622))) (and (= ($generated@@313 ($generated@@432 ($generated@@342 $generated@@173 $generated@@173) $generated@@620)) $generated@@620) ($generated@@140 ($generated@@432 ($generated@@342 $generated@@173 $generated@@173) $generated@@620) ($generated@@460 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@227 $generated@@620 ($generated@@460 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@173) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@67)) ($generated@@227 $generated@@623 ($generated@@468 $generated@@624 $generated@@625))) (and (= ($generated@@313 ($generated@@432 ($generated@@360 $generated@@173 $generated@@173) $generated@@623)) $generated@@623) ($generated@@140 ($generated@@432 ($generated@@360 $generated@@173 $generated@@173) $generated@@623) ($generated@@468 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@227 $generated@@623 ($generated@@468 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@67) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) $generated@@173)) ($generated@@227 $generated@@628 ($generated@@163 $generated@@626 $generated@@627))) (and (= ($generated@@313 ($generated@@432 $generated@@164 $generated@@628)) $generated@@628) ($generated@@140 ($generated@@432 $generated@@164 $generated@@628) ($generated@@163 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@227 $generated@@628 ($generated@@163 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (not ($generated@@0 ($generated@@85 ($generated@@489 $generated@@630) $generated@@629))))
 :pattern ( (let (($generated@@630 (type $generated@@629)))
($generated@@85 ($generated@@489 $generated@@630) $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@633) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@631) ($generated@@152 $generated@@632)) ($generated@@145 $generated@@631 $generated@@632)) (= ($generated@@85 $generated@@631 $generated@@633) ($generated@@85 $generated@@632 $generated@@633))) (= ($generated@@234 $generated@@631 $generated@@633) ($generated@@234 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@234 $generated@@632 $generated@@633) ($generated@@145 $generated@@631 $generated@@632))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@640 T@T) ($generated@@641 T@T) ) (= ($generated@@1 ($generated@@636 $generated@@640 $generated@@641)) 20)) (forall (($generated@@642 T@T) ($generated@@643 T@T) ) (! (= ($generated@@637 ($generated@@636 $generated@@642 $generated@@643)) $generated@@642)
 :pattern ( ($generated@@636 $generated@@642 $generated@@643))
))) (forall (($generated@@644 T@T) ($generated@@645 T@T) ) (! (= ($generated@@638 ($generated@@636 $generated@@644 $generated@@645)) $generated@@645)
 :pattern ( ($generated@@636 $generated@@644 $generated@@645))
))) (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@638 (type $generated@@646))))
(= (type ($generated@@634 $generated@@646 $generated@@647 $generated@@648)) $generated@@649))
 :pattern ( ($generated@@634 $generated@@646 $generated@@647 $generated@@648))
))) (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
(let (($generated@@655 (type $generated@@651)))
(= (type ($generated@@639 $generated@@650 $generated@@651 $generated@@652 $generated@@653)) ($generated@@636 $generated@@655 $generated@@654))))
 :pattern ( ($generated@@639 $generated@@650 $generated@@651 $generated@@652 $generated@@653))
))) (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@638 (type $generated@@656))))
 (=> (= (type $generated@@659) $generated@@660) (= ($generated@@634 ($generated@@639 $generated@@656 $generated@@657 $generated@@658 $generated@@659) $generated@@657 $generated@@658) $generated@@659)))
 :weight 0
))) (and (and (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (or (= $generated@@663 $generated@@665) (= ($generated@@634 ($generated@@639 $generated@@662 $generated@@663 $generated@@664 $generated@@661) $generated@@665 $generated@@666) ($generated@@634 $generated@@662 $generated@@665 $generated@@666)))
 :weight 0
)) (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (or (= $generated@@670 $generated@@672) (= ($generated@@634 ($generated@@639 $generated@@668 $generated@@669 $generated@@670 $generated@@667) $generated@@671 $generated@@672) ($generated@@634 $generated@@668 $generated@@671 $generated@@672)))
 :weight 0
))) (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (or true (= ($generated@@634 ($generated@@639 $generated@@674 $generated@@675 $generated@@676 $generated@@673) $generated@@677 $generated@@678) ($generated@@634 $generated@@674 $generated@@677 $generated@@678)))
 :weight 0
)))) (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (! (= (type ($generated@@635 $generated@@679 $generated@@680 $generated@@681 $generated@@682)) ($generated@@636 $generated@@81 $generated@@4))
 :pattern ( ($generated@@635 $generated@@679 $generated@@680 $generated@@681 $generated@@682))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@70 (type $generated@@688))))
 (=> (and (and (and (and (and (= (type $generated@@683) $generated@@81) (= (type $generated@@684) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@685) ($generated@@69 $generated@@4))) (= (type $generated@@686) $generated@@81)) (= (type $generated@@687) $generated@@81)) (= (type $generated@@688) ($generated@@69 $generated@@689))) (= ($generated@@0 ($generated@@634 ($generated@@635 $generated@@683 $generated@@684 $generated@@685 $generated@@686) $generated@@687 $generated@@688))  (=> (and (not (= $generated@@687 $generated@@683)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@684 $generated@@687) $generated@@685))) (= $generated@@687 $generated@@686)))))
 :pattern ( ($generated@@634 ($generated@@635 $generated@@683 $generated@@684 $generated@@685 $generated@@686) $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 Int) ($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (=> (= (type $generated@@690) ($generated@@180 $generated@@693)) (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@181 $generated@@690))) (= ($generated@@181 ($generated@@201 $generated@@690 $generated@@691 $generated@@692)) ($generated@@181 $generated@@690)))))
 :pattern ( ($generated@@181 ($generated@@201 $generated@@690 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@695) $generated@@81)) (= ($generated@@181 ($generated@@234 $generated@@694 $generated@@695)) ($generated@@136 $generated@@695)))
 :pattern ( ($generated@@181 ($generated@@234 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@67) (= (type $generated@@697) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@696 $generated@@697)) $generated@@64) (= ($generated@@336 ($generated@@163 $generated@@696 $generated@@697)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@696 $generated@@697))
)))
(assert  (and (forall (($generated@@700 T@U) ) (! (let (($generated@@701 ($generated@@182 (type $generated@@700))))
(= (type ($generated@@698 $generated@@700)) ($generated@@180 $generated@@701)))
 :pattern ( ($generated@@698 $generated@@700))
)) (forall (($generated@@702 T@U) ) (! (let (($generated@@703 ($generated@@182 (type $generated@@702))))
(= (type ($generated@@699 $generated@@702)) $generated@@703))
 :pattern ( ($generated@@699 $generated@@702))
))))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (! (let (($generated@@706 (type $generated@@705)))
 (=> (= (type $generated@@704) ($generated@@180 $generated@@706)) (and (= ($generated@@698 ($generated@@179 $generated@@704 $generated@@705)) $generated@@704) (= ($generated@@699 ($generated@@179 $generated@@704 $generated@@705)) $generated@@705))))
 :pattern ( ($generated@@179 $generated@@704 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@164) (= ($generated@@614 ($generated@@313 $generated@@707)) ($generated@@615 $generated@@707)))
 :pattern ( ($generated@@614 ($generated@@313 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@173) ($generated@@227 $generated@@708 ($generated@@79 0))) (and (= ($generated@@313 ($generated@@432 $generated@@2 $generated@@708)) $generated@@708) ($generated@@140 ($generated@@432 ($generated@@80 $generated@@173 $generated@@4) $generated@@708) ($generated@@79 0))))
 :pattern ( ($generated@@227 $generated@@708 ($generated@@79 0)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@173) (= (type $generated@@710) $generated@@67)) ($generated@@227 $generated@@709 ($generated@@253 $generated@@710))) (and (= ($generated@@313 ($generated@@432 ($generated@@80 $generated@@173 $generated@@4) $generated@@709)) $generated@@709) ($generated@@140 ($generated@@432 ($generated@@80 $generated@@173 $generated@@4) $generated@@709) ($generated@@253 $generated@@710))))
 :pattern ( ($generated@@227 $generated@@709 ($generated@@253 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@173) (= (type $generated@@712) $generated@@67)) ($generated@@227 $generated@@711 ($generated@@258 $generated@@712))) (and (= ($generated@@313 ($generated@@432 ($generated@@80 $generated@@173 $generated@@4) $generated@@711)) $generated@@711) ($generated@@140 ($generated@@432 ($generated@@80 $generated@@173 $generated@@4) $generated@@711) ($generated@@258 $generated@@712))))
 :pattern ( ($generated@@227 $generated@@711 ($generated@@258 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@173) (= (type $generated@@714) $generated@@67)) ($generated@@227 $generated@@713 ($generated@@195 $generated@@714))) (and (= ($generated@@313 ($generated@@432 ($generated@@80 $generated@@173 $generated@@2) $generated@@713)) $generated@@713) ($generated@@140 ($generated@@432 ($generated@@80 $generated@@173 $generated@@2) $generated@@713) ($generated@@195 $generated@@714))))
 :pattern ( ($generated@@227 $generated@@713 ($generated@@195 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@173) (= (type $generated@@716) $generated@@67)) ($generated@@227 $generated@@715 ($generated@@269 $generated@@716))) (and (= ($generated@@313 ($generated@@432 ($generated@@180 $generated@@173) $generated@@715)) $generated@@715) ($generated@@140 ($generated@@432 ($generated@@180 $generated@@173) $generated@@715) ($generated@@269 $generated@@716))))
 :pattern ( ($generated@@227 $generated@@715 ($generated@@269 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@67) (= (type $generated@@718) $generated@@173)) ($generated@@227 $generated@@718 ($generated@@137 $generated@@717))) (and (= ($generated@@313 ($generated@@432 $generated@@81 $generated@@718)) $generated@@718) ($generated@@140 ($generated@@432 $generated@@81 $generated@@718) ($generated@@137 $generated@@717))))
 :pattern ( ($generated@@227 $generated@@718 ($generated@@137 $generated@@717)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@67) (= (type $generated@@720) $generated@@173)) ($generated@@227 $generated@@720 ($generated@@157 $generated@@719))) (and (= ($generated@@313 ($generated@@432 $generated@@81 $generated@@720)) $generated@@720) ($generated@@140 ($generated@@432 $generated@@81 $generated@@720) ($generated@@157 $generated@@719))))
 :pattern ( ($generated@@227 $generated@@720 ($generated@@157 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (! (let (($generated@@725 (type $generated@@724)))
 (=> (and (and (and (= (type $generated@@721) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@722) $generated@@81)) (= (type $generated@@723) ($generated@@69 $generated@@725))) ($generated@@152 ($generated@@86 $generated@@721 $generated@@722 ($generated@@88 ($generated@@85 $generated@@721 $generated@@722) $generated@@723 $generated@@724)))) ($generated@@145 $generated@@721 ($generated@@86 $generated@@721 $generated@@722 ($generated@@88 ($generated@@85 $generated@@721 $generated@@722) $generated@@723 $generated@@724)))))
 :pattern ( ($generated@@86 $generated@@721 $generated@@722 ($generated@@88 ($generated@@85 $generated@@721 $generated@@722) $generated@@723 $generated@@724)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 Int) ($generated@@728 Int) ) (! (let (($generated@@729 ($generated@@182 (type $generated@@726))))
 (=> (= (type $generated@@726) ($generated@@180 $generated@@729)) (=> (and (and (<= 0 $generated@@727) (<= $generated@@727 $generated@@728)) (< $generated@@728 ($generated@@181 $generated@@726))) (= ($generated@@200 ($generated@@178 $generated@@726 $generated@@727) (- $generated@@728 $generated@@727)) ($generated@@200 $generated@@726 $generated@@728)))))
 :weight 25
 :pattern ( ($generated@@200 $generated@@726 $generated@@728) ($generated@@178 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@730) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@731) $generated@@67)) (= (type $generated@@732) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@730 ($generated@@195 $generated@@731) $generated@@732) (forall (($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@730 $generated@@733)))) ($generated@@278 $generated@@733 $generated@@731 $generated@@732))
 :pattern ( ($generated@@85 $generated@@730 $generated@@733))
))))
 :pattern ( ($generated@@78 $generated@@730 ($generated@@195 $generated@@731) $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 Int) ($generated@@736 Int) ) (! (let (($generated@@737 ($generated@@182 (type $generated@@734))))
 (=> (= (type $generated@@734) ($generated@@180 $generated@@737)) (=> (and (and (<= 0 $generated@@735) (<= 0 $generated@@736)) (<= (+ $generated@@735 $generated@@736) ($generated@@181 $generated@@734))) (= ($generated@@178 ($generated@@178 $generated@@734 $generated@@735) $generated@@736) ($generated@@178 $generated@@734 (+ $generated@@735 $generated@@736))))))
 :pattern ( ($generated@@178 ($generated@@178 $generated@@734 $generated@@735) $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) $generated@@164) (= (type $generated@@739) $generated@@67)) (= (type $generated@@740) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@740) (and ($generated@@162 $generated@@738) (exists (($generated@@741 T@U) ) (!  (and (= (type $generated@@741) $generated@@67) ($generated@@78 $generated@@738 ($generated@@163 $generated@@739 $generated@@741) $generated@@740))
 :pattern ( ($generated@@78 $generated@@738 ($generated@@163 $generated@@739 $generated@@741) $generated@@740))
))))) ($generated@@278 ($generated@@171 $generated@@738) $generated@@739 $generated@@740))
 :pattern ( ($generated@@278 ($generated@@171 $generated@@738) $generated@@739 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (and (and (= (type $generated@@742) $generated@@164) (= (type $generated@@743) $generated@@67)) (= (type $generated@@744) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@744) (and ($generated@@162 $generated@@742) (exists (($generated@@745 T@U) ) (!  (and (= (type $generated@@745) $generated@@67) ($generated@@78 $generated@@742 ($generated@@163 $generated@@745 $generated@@743) $generated@@744))
 :pattern ( ($generated@@78 $generated@@742 ($generated@@163 $generated@@745 $generated@@743) $generated@@744))
))))) ($generated@@278 ($generated@@172 $generated@@742) $generated@@743 $generated@@744))
 :pattern ( ($generated@@278 ($generated@@172 $generated@@742) $generated@@743 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 Int) ) (! (let (($generated@@749 ($generated@@182 (type $generated@@746))))
 (=> (and (= (type $generated@@746) ($generated@@180 $generated@@749)) (= (type $generated@@747) ($generated@@180 $generated@@749))) (and (=> (< $generated@@748 ($generated@@181 $generated@@746)) (= ($generated@@200 ($generated@@215 $generated@@746 $generated@@747) $generated@@748) ($generated@@200 $generated@@746 $generated@@748))) (=> (<= ($generated@@181 $generated@@746) $generated@@748) (= ($generated@@200 ($generated@@215 $generated@@746 $generated@@747) $generated@@748) ($generated@@200 $generated@@747 (- $generated@@748 ($generated@@181 $generated@@746))))))))
 :pattern ( ($generated@@200 ($generated@@215 $generated@@746 $generated@@747) $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) $generated@@173) (= (type $generated@@751) $generated@@173)) (= ($generated@@226 ($generated@@265 $generated@@750) ($generated@@265 $generated@@751)) ($generated@@265 ($generated@@226 $generated@@750 $generated@@751))))
 :pattern ( ($generated@@226 ($generated@@265 $generated@@750) ($generated@@265 $generated@@751)))
)))
(assert (forall (($generated@@752 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@263 $generated@@752))) ($generated@@265 ($generated@@313 ($generated@@8 $generated@@752))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@263 $generated@@752))))
)))
(assert (forall (($generated@@753 T@U) ) (! (= ($generated@@313 ($generated@@265 $generated@@753)) ($generated@@265 ($generated@@313 $generated@@753)))
 :pattern ( ($generated@@313 ($generated@@265 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ) (! (let (($generated@@755 ($generated@@182 (type $generated@@754))))
 (=> (and (= (type $generated@@754) ($generated@@180 $generated@@755)) (= ($generated@@181 $generated@@754) 0)) (= $generated@@754 ($generated@@302 $generated@@755))))
 :pattern ( ($generated@@181 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 Int) ) (! (let (($generated@@758 ($generated@@182 (type $generated@@756))))
 (=> (and (= (type $generated@@756) ($generated@@180 $generated@@758)) (= $generated@@757 0)) (= ($generated@@214 $generated@@756 $generated@@757) ($generated@@302 $generated@@758))))
 :pattern ( ($generated@@214 $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (! (let (($generated@@762 (type $generated@@760)))
 (=> (and (and (= (type $generated@@759) ($generated@@80 $generated@@762 $generated@@2)) (= (type $generated@@761) $generated@@2)) (<= 0 ($generated $generated@@761))) (= ($generated@@330 ($generated@@86 $generated@@759 $generated@@760 $generated@@761)) (+ (- ($generated@@330 $generated@@759) ($generated ($generated@@85 $generated@@759 $generated@@760))) ($generated $generated@@761)))))
 :pattern ( ($generated@@330 ($generated@@86 $generated@@759 $generated@@760 $generated@@761)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@764) $generated@@2)) ($generated@@78 $generated@@764 $generated@@46 $generated@@763))
 :pattern ( ($generated@@78 $generated@@764 $generated@@46 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@766) $generated@@3)) ($generated@@78 $generated@@766 $generated@@47 $generated@@765))
 :pattern ( ($generated@@78 $generated@@766 $generated@@47 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@768) $generated@@4)) ($generated@@78 $generated@@768 $generated@@44 $generated@@767))
 :pattern ( ($generated@@78 $generated@@768 $generated@@44 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@769) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@770) $generated@@513)) ($generated@@78 $generated@@770 $generated@@45 $generated@@769))
 :pattern ( ($generated@@78 $generated@@770 $generated@@45 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (= (type $generated@@771) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@772) $generated@@173)) ($generated@@78 $generated@@772 $generated@@48 $generated@@771))
 :pattern ( ($generated@@78 $generated@@772 $generated@@48 $generated@@771))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 Int) ($generated@@775 T@U) ($generated@@776 Int) ) (! (let (($generated@@777 (type $generated@@775)))
 (=> (= (type $generated@@773) ($generated@@180 $generated@@777)) (=> (and (and (<= 0 $generated@@774) (< $generated@@774 $generated@@776)) (<= $generated@@776 ($generated@@181 $generated@@773))) (= ($generated@@214 ($generated@@201 $generated@@773 $generated@@774 $generated@@775) $generated@@776) ($generated@@201 ($generated@@214 $generated@@773 $generated@@776) $generated@@774 $generated@@775)))))
 :pattern ( ($generated@@214 ($generated@@201 $generated@@773 $generated@@774 $generated@@775) $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@778) ($generated@@180 $generated@@173)) (= (type $generated@@779) $generated@@67)) (= ($generated@@140 $generated@@778 ($generated@@269 $generated@@779)) (forall (($generated@@780 Int) ) (!  (=> (and (<= 0 $generated@@780) (< $generated@@780 ($generated@@181 $generated@@778))) ($generated@@227 ($generated@@200 $generated@@778 $generated@@780) $generated@@779))
 :pattern ( ($generated@@200 $generated@@778 $generated@@780))
))))
 :pattern ( ($generated@@140 $generated@@778 ($generated@@269 $generated@@779)))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 Int) ) (!  (=> (= (type $generated@@781) ($generated@@180 $generated@@173)) (=> (and (<= 0 $generated@@782) (< $generated@@782 ($generated@@181 $generated@@781))) (< ($generated@@615 ($generated@@432 $generated@@164 ($generated@@200 $generated@@781 $generated@@782))) ($generated@@295 $generated@@781))))
 :pattern ( ($generated@@615 ($generated@@432 $generated@@164 ($generated@@200 $generated@@781 $generated@@782))))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (and (and (= (type $generated@@783) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@784) $generated@@67)) (= (type $generated@@785) $generated@@67)) ($generated@@140 $generated@@783 ($generated@@460 $generated@@784 $generated@@785))) (and (and ($generated@@140 ($generated@@340 $generated@@783) ($generated@@253 $generated@@784)) ($generated@@140 ($generated@@392 $generated@@783) ($generated@@253 $generated@@785))) ($generated@@140 ($generated@@431 $generated@@783) ($generated@@253 ($generated@@163 $generated@@784 $generated@@785)))))
 :pattern ( ($generated@@140 $generated@@783 ($generated@@460 $generated@@784 $generated@@785)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (and (and (= (type $generated@@786) ($generated@@360 $generated@@173 $generated@@173)) (= (type $generated@@787) $generated@@67)) (= (type $generated@@788) $generated@@67)) ($generated@@140 $generated@@786 ($generated@@468 $generated@@787 $generated@@788))) (and (and ($generated@@140 ($generated@@358 $generated@@786) ($generated@@258 $generated@@787)) ($generated@@140 ($generated@@403 $generated@@786) ($generated@@258 $generated@@788))) ($generated@@140 ($generated@@442 $generated@@786) ($generated@@258 ($generated@@163 $generated@@787 $generated@@788)))))
 :pattern ( ($generated@@140 $generated@@786 ($generated@@468 $generated@@787 $generated@@788)))
)))
(assert (forall (($generated@@789 T@U) ) (!  (=> (= (type $generated@@789) $generated@@2) ($generated@@140 $generated@@789 $generated@@46))
 :pattern ( ($generated@@140 $generated@@789 $generated@@46))
)))
(assert (forall (($generated@@790 T@U) ) (!  (=> (= (type $generated@@790) $generated@@3) ($generated@@140 $generated@@790 $generated@@47))
 :pattern ( ($generated@@140 $generated@@790 $generated@@47))
)))
(assert (forall (($generated@@791 T@U) ) (!  (=> (= (type $generated@@791) $generated@@4) ($generated@@140 $generated@@791 $generated@@44))
 :pattern ( ($generated@@140 $generated@@791 $generated@@44))
)))
(assert (forall (($generated@@792 T@U) ) (!  (=> (= (type $generated@@792) $generated@@513) ($generated@@140 $generated@@792 $generated@@45))
 :pattern ( ($generated@@140 $generated@@792 $generated@@45))
)))
(assert (forall (($generated@@793 T@U) ) (!  (=> (= (type $generated@@793) $generated@@173) ($generated@@140 $generated@@793 $generated@@48))
 :pattern ( ($generated@@140 $generated@@793 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@794 () Int)
(declare-fun $generated@@795 () Int)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () T@U)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 () Bool)
(declare-fun $generated@@801 () T@U)
(declare-fun $generated@@802 () T@U)
(declare-fun $generated@@803 () Int)
(declare-fun $generated@@804 () T@U)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () Int)
(declare-fun $generated@@808 (T@U) Bool)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@796) ($generated@@180 $generated@@173)) (= (type $generated@@797) $generated@@81)) (= (type $generated@@804) ($generated@@636 $generated@@81 $generated@@4))) (= (type $generated@@805) $generated@@173)) (= (type $generated@@806) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@802) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@799) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@801) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@798) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@811  (=> (and (and (<= $generated@@794 $generated@@795) (<= $generated@@795 (+ $generated@@794 ($generated@@181 $generated@@796)))) (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797))) (and (=> (= (ControlFlow 0 18) (- 0 25)) (not (= $generated@@797 $generated@@138))) (=> (not (= $generated@@797 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 24)) (not (= $generated@@797 $generated@@138))) (=> (not (= $generated@@797 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 23)) ($generated@@78 $generated@@797 ($generated@@137 $generated@@798) $generated@@799)) (=> ($generated@@78 $generated@@797 ($generated@@137 $generated@@798) $generated@@799) (and (=> (= (ControlFlow 0 18) (- 0 22)) (and (<= 0 $generated@@794) (<= $generated@@794 ($generated@@136 $generated@@797)))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (and (<= 0 (- $generated@@795 $generated@@794)) (<= (- $generated@@795 $generated@@794) ($generated@@181 $generated@@796)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (not (= $generated@@797 $generated@@138))) (=> (not (= $generated@@797 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@78 $generated@@797 ($generated@@137 $generated@@798) $generated@@799)) (=> ($generated@@78 $generated@@797 ($generated@@137 $generated@@798) $generated@@799) (=> (= (ControlFlow 0 18) (- 0 17)) (and (<= 0 $generated@@795) (<= $generated@@795 ($generated@@136 $generated@@797)))))))))))))))))))
(let (($generated@@812  (=> (and (not (and (<= $generated@@794 $generated@@795) (<= $generated@@795 (+ $generated@@794 ($generated@@181 $generated@@796))))) (= (ControlFlow 0 28) 18)) $generated@@811)))
(let (($generated@@813  (=> (and (<= $generated@@794 $generated@@795) (<= $generated@@795 (+ $generated@@794 ($generated@@181 $generated@@796)))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (not (= $generated@@797 $generated@@138))) (=> (= (ControlFlow 0 26) 18) $generated@@811)))))
(let (($generated@@814  (=> (< $generated@@795 $generated@@794) (and (=> (= (ControlFlow 0 30) 26) $generated@@813) (=> (= (ControlFlow 0 30) 28) $generated@@812)))))
(let (($generated@@815  (=> (<= $generated@@794 $generated@@795) (and (=> (= (ControlFlow 0 29) 26) $generated@@813) (=> (= (ControlFlow 0 29) 28) $generated@@812)))))
(let (($generated@@816  (=> (not $generated@@800) (and (=> (= (ControlFlow 0 31) 29) $generated@@815) (=> (= (ControlFlow 0 31) 30) $generated@@814)))))
(let (($generated@@817  (=> (= (ControlFlow 0 14) (- 0 13)) ($generated@@290 ($generated@@234 $generated@@801 $generated@@797) ($generated@@215 ($generated@@215 ($generated@@178 ($generated@@214 ($generated@@234 $generated@@799 $generated@@797) $generated@@794) ($generated@@263 0)) $generated@@796) ($generated@@178 ($generated@@234 $generated@@799 $generated@@797) (+ $generated@@794 ($generated@@181 $generated@@796))))))))
(let (($generated@@818  (=> (<= (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@795) (=> (and (= $generated@@801 $generated@@802) (= (ControlFlow 0 15) 14)) $generated@@817))))
(let (($generated@@819  (=> (and (< $generated@@795 (+ $generated@@794 ($generated@@181 $generated@@796))) (= $generated@@803 (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@795))) (and (=> (= (ControlFlow 0 3) (- 0 12)) (not (= $generated@@797 $generated@@138))) (=> (not (= $generated@@797 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 11)) (and (<= 0 $generated@@795) (< $generated@@795 ($generated@@136 $generated@@797)))) (=> (and (<= 0 $generated@@795) (< $generated@@795 ($generated@@136 $generated@@797))) (and (=> (= (ControlFlow 0 3) (- 0 10)) ($generated@@0 ($generated@@634 $generated@@804 $generated@@797 ($generated@@235 $generated@@795)))) (=> ($generated@@0 ($generated@@634 $generated@@804 $generated@@797 ($generated@@235 $generated@@795))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (and (<= 0 (- $generated@@795 $generated@@794)) (< (- $generated@@795 $generated@@794) ($generated@@181 $generated@@796)))) (=> (and (<= 0 (- $generated@@795 $generated@@794)) (< (- $generated@@795 $generated@@794) ($generated@@181 $generated@@796))) (=> (and (and (= $generated@@805 ($generated@@200 $generated@@796 (- $generated@@795 $generated@@794))) (= $generated@@806 ($generated@@86 $generated@@802 $generated@@797 ($generated@@88 ($generated@@85 $generated@@802 $generated@@797) ($generated@@235 $generated@@795) $generated@@805)))) (and ($generated@@152 $generated@@806) (= $generated@@807 (+ $generated@@795 1)))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (<= 0 $generated@@803) (= (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@807) $generated@@803))) (=> (or (<= 0 $generated@@803) (= (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@807) $generated@@803)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (< (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@807) $generated@@803)) (=> (< (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@807) $generated@@803) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> $generated@@800 (<= $generated@@794 $generated@@807))) (=> (=> $generated@@800 (<= $generated@@794 $generated@@807)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@800 (<= $generated@@807 (+ $generated@@794 ($generated@@181 $generated@@796))))) (=> (=> $generated@@800 (<= $generated@@807 (+ $generated@@794 ($generated@@181 $generated@@796)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@800 (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797)))) (=> (=> $generated@@800 (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@800 ($generated@@290 ($generated@@234 $generated@@806 $generated@@797) ($generated@@215 ($generated@@215 ($generated@@214 ($generated@@234 $generated@@799 $generated@@797) $generated@@794) ($generated@@214 $generated@@796 (- $generated@@807 $generated@@794))) ($generated@@178 ($generated@@234 $generated@@799 $generated@@797) $generated@@807)))))))))))))))))))))))))))
(let (($generated@@820  (=> $generated@@800 (and (=> (= (ControlFlow 0 16) 15) $generated@@818) (=> (= (ControlFlow 0 16) 3) $generated@@819)))))
(let (($generated@@821  (and (=> (= (ControlFlow 0 32) 31) $generated@@816) (=> (= (ControlFlow 0 32) 16) $generated@@820))))
(let (($generated@@822 true))
(let (($generated@@823  (=> (and ($generated@@152 $generated@@802) ($generated@@808 $generated@@802)) (=> (and (and (not false) (=> $generated@@800 true)) (and (=> $generated@@800 (<= $generated@@794 $generated@@795)) (=> $generated@@800 (<= $generated@@795 (+ $generated@@794 ($generated@@181 $generated@@796)))))) (=> (and (and (and (=> $generated@@800 (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797))) (=> $generated@@800 true)) (and (=> $generated@@800 ($generated@@290 ($generated@@234 $generated@@802 $generated@@797) ($generated@@215 ($generated@@215 ($generated@@214 ($generated@@234 $generated@@799 $generated@@797) $generated@@794) ($generated@@214 $generated@@796 (- $generated@@795 $generated@@794))) ($generated@@178 ($generated@@234 $generated@@799 $generated@@797) $generated@@795)))) (forall (($generated@@824 T@U) ) (!  (=> (= (type $generated@@824) $generated@@81) (=> (and (not (= $generated@@824 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@799 $generated@@824) $generated@@60))) (or (= ($generated@@85 $generated@@802 $generated@@824) ($generated@@85 $generated@@799 $generated@@824)) (= $generated@@824 $generated@@797))))
 :pattern ( ($generated@@85 $generated@@802 $generated@@824))
)))) (and (and ($generated@@145 $generated@@799 $generated@@802) (forall (($generated@@825 T@U) ($generated@@826 T@U) ) (! (let (($generated@@827 ($generated@@70 (type $generated@@826))))
 (=> (and (and (= (type $generated@@825) $generated@@81) (= (type $generated@@826) ($generated@@69 $generated@@827))) (and (not (= $generated@@825 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@799 $generated@@825) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@802 $generated@@825) $generated@@826) ($generated@@87 ($generated@@85 $generated@@799 $generated@@825) $generated@@826)) ($generated@@0 ($generated@@634 $generated@@804 $generated@@825 $generated@@826)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@802 $generated@@825) $generated@@826))
))) (and (<= (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@795) $generated@@809) (=> (= (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@795) $generated@@809) true)))) (and (=> (= (ControlFlow 0 33) 1) $generated@@822) (=> (= (ControlFlow 0 33) 32) $generated@@821)))))))
(let (($generated@@828  (=> (and (= $generated@@804 ($generated@@635 $generated@@138 $generated@@799 $generated@@60 $generated@@797)) (= $generated@@809 (- (+ $generated@@794 ($generated@@181 $generated@@796)) $generated@@794))) (and (=> (= (ControlFlow 0 34) (- 0 38)) (=> $generated@@800 (<= $generated@@794 $generated@@794))) (=> (=> $generated@@800 (<= $generated@@794 $generated@@794)) (and (=> (= (ControlFlow 0 34) (- 0 37)) (=> $generated@@800 (<= $generated@@794 (+ $generated@@794 ($generated@@181 $generated@@796))))) (=> (=> $generated@@800 (<= $generated@@794 (+ $generated@@794 ($generated@@181 $generated@@796)))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (=> $generated@@800 (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797)))) (=> (=> $generated@@800 (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (=> $generated@@800 ($generated@@290 ($generated@@234 $generated@@799 $generated@@797) ($generated@@215 ($generated@@215 ($generated@@214 ($generated@@234 $generated@@799 $generated@@797) $generated@@794) ($generated@@214 $generated@@796 (- $generated@@794 $generated@@794))) ($generated@@178 ($generated@@234 $generated@@799 $generated@@797) $generated@@794))))) (=> (=> $generated@@800 ($generated@@290 ($generated@@234 $generated@@799 $generated@@797) ($generated@@215 ($generated@@215 ($generated@@214 ($generated@@234 $generated@@799 $generated@@797) $generated@@794) ($generated@@214 $generated@@796 (- $generated@@794 $generated@@794))) ($generated@@178 ($generated@@234 $generated@@799 $generated@@797) $generated@@794)))) (=> (= (ControlFlow 0 34) 33) $generated@@823))))))))))))
(let (($generated@@829  (=> (and ($generated@@152 $generated@@799) ($generated@@808 $generated@@799)) (=> (and (and (and ($generated@@140 $generated@@796 ($generated@@269 $generated@@798)) ($generated@@78 $generated@@796 ($generated@@269 $generated@@798) $generated@@799)) (and ($generated@@140 $generated@@797 ($generated@@157 $generated@@798)) ($generated@@78 $generated@@797 ($generated@@157 $generated@@798) $generated@@799))) (and (and (<= ($generated@@263 0) $generated@@794) (= 1 $generated@@810)) (and (<= (+ $generated@@794 ($generated@@181 $generated@@796)) ($generated@@136 $generated@@797)) (= (ControlFlow 0 39) 34)))) $generated@@828))))
$generated@@829))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
