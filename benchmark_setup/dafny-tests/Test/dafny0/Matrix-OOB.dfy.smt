(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@291 (T@U Int) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@445 (Int) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@81)) (and (not (= $generated@@147 $generated@@138)) (= ($generated@@139 $generated@@147) ($generated@@137 $generated@@146)))) ($generated@@140 ($generated@@8 ($generated@@145 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@145 $generated@@147) ($generated@@137 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@81)) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@158) $generated@@81)) (and (and ($generated@@155 $generated@@157) (and (not (= $generated@@158 $generated@@138)) (= ($generated@@139 $generated@@158) ($generated@@137 $generated@@156)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@158)) $generated@@46 $generated@@157))
 :pattern ( ($generated@@136 $generated@@158) ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60) ($generated@@137 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@161) $generated@@81)) (and (and ($generated@@155 $generated@@160) (and (not (= $generated@@161 $generated@@138)) (= ($generated@@139 $generated@@161) ($generated@@137 $generated@@159)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@145 $generated@@161) ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60) ($generated@@137 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@140 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@67) (= (type $generated@@174) $generated@@67)) (= (type $generated@@175) $generated@@170)) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@140 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@140 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@81 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@70 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@81) (= (type $generated@@239) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@240) ($generated@@69 $generated@@4))) (= (type $generated@@242) $generated@@81)) (= (type $generated@@243) ($generated@@69 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@170)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@179)) (= (type $generated@@252) $generated@@179)) (= ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@169 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@169 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@170) (= (type $generated@@254) $generated@@170)) (= ($generated@@176 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@176 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@140 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@179) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@140 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@263) $generated@@67)) (= ($generated@@140 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@179) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@140 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) $generated@@67)) (= (type $generated@@274) $generated@@179)) (= (type $generated@@275) $generated@@179)) (= (type $generated@@276) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@155 $generated@@276)) (= ($generated@@78 ($generated@@245 $generated@@274 $generated@@275) ($generated@@169 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@78 ($generated@@245 $generated@@274 $generated@@275) ($generated@@169 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@71)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@170) (= ($generated@@168 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@170) ($generated@@168 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@179) (= (type $generated@@282) $generated@@179)) (= $generated@@280 ($generated@@245 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@168 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 Int) ) (! (= (type ($generated@@291 $generated@@292 $generated@@293)) ($generated@@69 $generated@@179))
 :pattern ( ($generated@@291 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (!  (=> (= (type $generated@@294) ($generated@@69 $generated@@179)) (= ($generated@@75 ($generated@@291 $generated@@294 $generated@@295)) (+ ($generated@@75 $generated@@294) 1)))
 :pattern ( ($generated@@291 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@67) (= (type $generated@@297) $generated@@81)) (= ($generated@@140 $generated@@297 ($generated@@163 $generated@@296))  (and ($generated@@140 $generated@@297 ($generated@@137 $generated@@296)) (not (= $generated@@297 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@297 ($generated@@163 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@179)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@271 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@78 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@271 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@305) $generated@@179)) (= (type $generated@@306) $generated@@67)) ($generated@@148 $generated@@303 $generated@@304)) ($generated@@271 $generated@@305 $generated@@306 $generated@@303)) ($generated@@271 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@148 $generated@@303 $generated@@304) ($generated@@271 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@67)) ($generated@@148 $generated@@307 $generated@@308)) ($generated@@78 $generated@@309 $generated@@310 $generated@@307)) ($generated@@78 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@148 $generated@@307 $generated@@308) ($generated@@78 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@80 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@83 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@80 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@85 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@72)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@319)) $generated@@61) (= ($generated@@317 ($generated@@137 $generated@@319)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@67) (and (= ($generated@@76 ($generated@@163 $generated@@320)) $generated@@62) (= ($generated@@317 ($generated@@163 $generated@@320)) $generated@@65)))
 :pattern ( ($generated@@163 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 18)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@80 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@85 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@83 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@80 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@85 $generated@@357 $generated@@359))) (<= ($generated ($generated@@85 $generated@@357 $generated@@359)) ($generated@@311 $generated@@357))))
 :pattern ( ($generated@@85 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@67) (= (type $generated@@361) $generated@@81)) (= ($generated@@140 $generated@@361 ($generated@@137 $generated@@360))  (or (= $generated@@361 $generated@@138) (= ($generated@@139 $generated@@361) ($generated@@137 $generated@@360)))))
 :pattern ( ($generated@@140 $generated@@361 ($generated@@137 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(let (($generated@@364 ($generated@@324 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@323 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@322 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@325 (type $generated@@369))))
(let (($generated@@371 ($generated@@324 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@323 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@322 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@343 (type $generated@@373))))
(let (($generated@@375 ($generated@@342 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@341 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@340 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@339 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@343 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@80 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@343 (type $generated@@380))))
(let (($generated@@382 ($generated@@342 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@341 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@340 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@385) $generated@@67)) (= ($generated@@140 $generated@@384 ($generated@@184 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@179) (< 0 ($generated ($generated@@85 $generated@@384 $generated@@386)))) ($generated@@246 $generated@@386 $generated@@385))
 :pattern ( ($generated@@85 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@140 $generated@@384 ($generated@@184 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@387 ($generated@@255 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@179) ($generated@@0 ($generated@@85 $generated@@387 $generated@@390))) ($generated@@271 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@85 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@78 $generated@@387 ($generated@@255 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@260 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@179) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@271 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@260 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@85 ($generated@@312 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@85 ($generated@@312 $generated@@396) $generated@@395)))
)))
(assert  (and (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@397 $generated@@400)) ($generated@@80 $generated@@179 $generated@@4))
 :pattern ( ($generated@@397 $generated@@400))
)) (forall (($generated@@401 T@T) ($generated@@402 T@U) ) (! (= (type ($generated@@398 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@398 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@325 (type $generated@@403))))
(let (($generated@@405 ($generated@@324 (type $generated@@403))))
(= (type ($generated@@399 $generated@@403)) ($generated@@80 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@399 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@323 $generated@@179 $generated@@179)) (= (type $generated@@407) $generated@@179)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@406) ($generated@@177 ($generated@@398 $generated@@170 $generated@@407)))) (= ($generated@@85 ($generated@@399 $generated@@406) ($generated@@177 ($generated@@398 $generated@@170 $generated@@407))) ($generated@@178 ($generated@@398 $generated@@170 $generated@@407))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@179 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@343 (type $generated@@411))))
(let (($generated@@413 ($generated@@342 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@341 $generated@@179 $generated@@179)) (= (type $generated@@415) $generated@@179)) (= ($generated@@0 ($generated@@85 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@414) ($generated@@177 ($generated@@398 $generated@@170 $generated@@415)))) (= ($generated@@85 ($generated@@409 $generated@@414) ($generated@@177 ($generated@@398 $generated@@170 $generated@@415))) ($generated@@178 ($generated@@398 $generated@@170 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@324 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@323 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@85 ($generated@@321 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@85 ($generated@@399 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@416) $generated@@420))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@342 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@341 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@85 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@421) $generated@@425))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@323 $generated@@179 $generated@@179)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@429) $generated@@433))) (and ($generated@@271 ($generated@@85 ($generated@@399 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@271 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@341 $generated@@179 $generated@@179)) (= (type $generated@@438) $generated@@67)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@437) $generated@@441))) (and ($generated@@271 ($generated@@85 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@271 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@442 $generated@@444))) (and ($generated@@148 $generated@@442 $generated@@443) ($generated@@148 $generated@@443 $generated@@444))) ($generated@@148 $generated@@442 $generated@@444))
 :pattern ( ($generated@@148 $generated@@442 $generated@@443) ($generated@@148 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 Int) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@69 $generated@@179))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 Int) ($generated@@451 Int) ) (!  (=> (and (and (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@449) $generated@@81)) (and (and ($generated@@155 $generated@@448) (and (not (= $generated@@449 $generated@@138)) (= ($generated@@139 $generated@@449) ($generated@@137 $generated@@447)))) (and (and (<= 0 $generated@@450) (< $generated@@450 ($generated@@136 $generated@@449))) (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@145 $generated@@449)))))) ($generated@@246 ($generated@@87 ($generated@@85 $generated@@448 $generated@@449) ($generated@@291 ($generated@@445 $generated@@450) $generated@@451)) $generated@@447))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@448 $generated@@449) ($generated@@291 ($generated@@445 $generated@@450) $generated@@451)) ($generated@@137 $generated@@447))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@80 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@343 (type $generated@@454))))
(let (($generated@@456 ($generated@@342 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@341 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@340 $generated@@456 $generated@@455)) (= ($generated@@339 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@339 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@343 (type $generated@@457))))
(let (($generated@@459 ($generated@@342 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@341 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@340 $generated@@459 $generated@@458)) (= ($generated@@377 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@377 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@343 (type $generated@@460))))
(let (($generated@@462 ($generated@@342 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@341 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@340 $generated@@462 $generated@@461)) (= ($generated@@408 $generated@@460) ($generated@@452 $generated@@179))))))
 :pattern ( ($generated@@408 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@325 (type $generated@@463))))
(let (($generated@@465 ($generated@@324 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@323 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@322 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@179) (= (type $generated@@467) $generated@@179)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@463) ($generated@@298 ($generated@@245 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@397 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@343 (type $generated@@468))))
(let (($generated@@470 ($generated@@342 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@341 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@340 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@179) (= (type $generated@@472) $generated@@179)) ($generated@@0 ($generated@@85 ($generated@@408 $generated@@468) ($generated@@298 ($generated@@245 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@408 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@179) ($generated@@246 $generated@@473 $generated@@46)) (and (= ($generated@@298 ($generated@@398 $generated@@2 $generated@@473)) $generated@@473) ($generated@@140 ($generated@@398 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@179) ($generated@@246 $generated@@474 $generated@@47)) (and (= ($generated@@298 ($generated@@398 $generated@@3 $generated@@474)) $generated@@474) ($generated@@140 ($generated@@398 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@179) ($generated@@246 $generated@@475 $generated@@44)) (and (= ($generated@@298 ($generated@@398 $generated@@4 $generated@@475)) $generated@@475) ($generated@@140 ($generated@@398 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@179) ($generated@@246 $generated@@477 $generated@@45)) (and (= ($generated@@298 ($generated@@398 $generated@@476 $generated@@477)) $generated@@477) ($generated@@140 ($generated@@398 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@246 ($generated@@298 $generated@@478) $generated@@479) ($generated@@140 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@246 ($generated@@298 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@81) (<= 0 ($generated@@136 $generated@@480)))
 :pattern ( ($generated@@136 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@81) (<= 0 ($generated@@145 $generated@@481)))
 :pattern ( ($generated@@145 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@311 $generated@@482))))
 :pattern ( ($generated@@311 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@286 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@285 $generated@@485)) (<= 0 ($generated@@284 $generated@@484))))
 :pattern ( ($generated@@284 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@426 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@426 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@426 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@426 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@76 ($generated@@426 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@496 ($generated@@434 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@434 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@434 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@76 ($generated@@434 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@179) (= (type $generated@@507) $generated@@179)) (= ($generated@@277 ($generated@@245 $generated@@506 $generated@@507)) $generated@@63))
 :pattern ( ($generated@@245 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@169 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@169 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@169 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@169 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@179) (= (type $generated@@517) $generated@@179)) (= ($generated@@177 ($generated@@245 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@245 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@179) (= (type $generated@@519) $generated@@179)) (= ($generated@@178 ($generated@@245 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@245 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@286 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@285 $generated@@179)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@284 $generated@@526))) ($generated@@271 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@78 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@79 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@79 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@255 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@255 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@76 ($generated@@255 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@260 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@260 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@76 ($generated@@260 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@184 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@184 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@76 ($generated@@184 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@520 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@520 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@76 ($generated@@520 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@75 ($generated@@445 $generated@@548)) 1)
 :pattern ( ($generated@@445 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@445 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@445 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@137 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@137 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@163 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@163 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@398 $generated@@558 ($generated@@298 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@298 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@323 $generated@@179 $generated@@179)) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@67)) (= ($generated@@140 $generated@@559 ($generated@@426 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@559) $generated@@562))) (and ($generated@@246 ($generated@@85 ($generated@@399 $generated@@559) $generated@@562) $generated@@561) ($generated@@246 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@140 $generated@@559 ($generated@@426 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@341 $generated@@179 $generated@@179)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) (= ($generated@@140 $generated@@563 ($generated@@434 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@563) $generated@@566))) (and ($generated@@246 ($generated@@85 ($generated@@409 $generated@@563) $generated@@566) $generated@@565) ($generated@@246 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@140 $generated@@563 ($generated@@434 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@179) (= (type $generated@@570) $generated@@179)) (< ($generated@@567 $generated@@569) ($generated@@568 ($generated@@245 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@245 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@179) (= (type $generated@@572) $generated@@179)) (< ($generated@@567 $generated@@572) ($generated@@568 ($generated@@245 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 Int) ($generated@@577 Int) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@575) $generated@@81)) (=> (and (and (and ($generated@@155 $generated@@574) (and (not (= $generated@@575 $generated@@138)) (= ($generated@@139 $generated@@575) ($generated@@137 $generated@@573)))) (and (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@136 $generated@@575))) (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@145 $generated@@575))))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@574 $generated@@575) $generated@@60))) ($generated@@271 ($generated@@87 ($generated@@85 $generated@@574 $generated@@575) ($generated@@291 ($generated@@445 $generated@@576) $generated@@577)) $generated@@573 $generated@@574)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@574 $generated@@575) ($generated@@291 ($generated@@445 $generated@@576) $generated@@577)) ($generated@@137 $generated@@573))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@179) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@246 $generated@@578 ($generated@@426 $generated@@579 $generated@@580))) (and (= ($generated@@298 ($generated@@398 ($generated@@323 $generated@@179 $generated@@179) $generated@@578)) $generated@@578) ($generated@@140 ($generated@@398 ($generated@@323 $generated@@179 $generated@@179) $generated@@578) ($generated@@426 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@246 $generated@@578 ($generated@@426 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@179) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@246 $generated@@581 ($generated@@434 $generated@@582 $generated@@583))) (and (= ($generated@@298 ($generated@@398 ($generated@@341 $generated@@179 $generated@@179) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@398 ($generated@@341 $generated@@179 $generated@@179) $generated@@581) ($generated@@434 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@246 $generated@@581 ($generated@@434 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@179)) ($generated@@246 $generated@@586 ($generated@@169 $generated@@584 $generated@@585))) (and (= ($generated@@298 ($generated@@398 $generated@@170 $generated@@586)) $generated@@586) ($generated@@140 ($generated@@398 $generated@@170 $generated@@586) ($generated@@169 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@246 $generated@@586 ($generated@@169 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@85 ($generated@@452 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@85 ($generated@@452 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@70 (type $generated@@591))))
(= (type ($generated@@589 $generated@@591)) ($generated@@69 $generated@@592)))
 :pattern ( ($generated@@589 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@69 $generated@@179)) (and (= ($generated@@589 ($generated@@291 $generated@@593 $generated@@594)) $generated@@593) (= ($generated@@590 ($generated@@291 $generated@@593 $generated@@594)) $generated@@594)))
 :pattern ( ($generated@@291 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@67) (= (type $generated@@596) $generated@@67)) (and (= ($generated@@76 ($generated@@169 $generated@@595 $generated@@596)) $generated@@64) (= ($generated@@317 ($generated@@169 $generated@@595 $generated@@596)) $generated@@66)))
 :pattern ( ($generated@@169 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@170) (= ($generated@@567 ($generated@@298 $generated@@597)) ($generated@@568 $generated@@597)))
 :pattern ( ($generated@@567 ($generated@@298 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@179) ($generated@@246 $generated@@598 ($generated@@79 0))) (and (= ($generated@@298 ($generated@@398 $generated@@2 $generated@@598)) $generated@@598) ($generated@@140 ($generated@@398 ($generated@@80 $generated@@179 $generated@@4) $generated@@598) ($generated@@79 0))))
 :pattern ( ($generated@@246 $generated@@598 ($generated@@79 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@179) (= (type $generated@@600) $generated@@67)) ($generated@@246 $generated@@599 ($generated@@255 $generated@@600))) (and (= ($generated@@298 ($generated@@398 ($generated@@80 $generated@@179 $generated@@4) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@398 ($generated@@80 $generated@@179 $generated@@4) $generated@@599) ($generated@@255 $generated@@600))))
 :pattern ( ($generated@@246 $generated@@599 ($generated@@255 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@179) (= (type $generated@@602) $generated@@67)) ($generated@@246 $generated@@601 ($generated@@260 $generated@@602))) (and (= ($generated@@298 ($generated@@398 ($generated@@80 $generated@@179 $generated@@4) $generated@@601)) $generated@@601) ($generated@@140 ($generated@@398 ($generated@@80 $generated@@179 $generated@@4) $generated@@601) ($generated@@260 $generated@@602))))
 :pattern ( ($generated@@246 $generated@@601 ($generated@@260 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@179) (= (type $generated@@604) $generated@@67)) ($generated@@246 $generated@@603 ($generated@@184 $generated@@604))) (and (= ($generated@@298 ($generated@@398 ($generated@@80 $generated@@179 $generated@@2) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@398 ($generated@@80 $generated@@179 $generated@@2) $generated@@603) ($generated@@184 $generated@@604))))
 :pattern ( ($generated@@246 $generated@@603 ($generated@@184 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@179) (= (type $generated@@606) $generated@@67)) ($generated@@246 $generated@@605 ($generated@@520 $generated@@606))) (and (= ($generated@@298 ($generated@@398 ($generated@@285 $generated@@179) $generated@@605)) $generated@@605) ($generated@@140 ($generated@@398 ($generated@@285 $generated@@179) $generated@@605) ($generated@@520 $generated@@606))))
 :pattern ( ($generated@@246 $generated@@605 ($generated@@520 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@179)) ($generated@@246 $generated@@608 ($generated@@137 $generated@@607))) (and (= ($generated@@298 ($generated@@398 $generated@@81 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@398 $generated@@81 $generated@@608) ($generated@@137 $generated@@607))))
 :pattern ( ($generated@@246 $generated@@608 ($generated@@137 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@67) (= (type $generated@@610) $generated@@179)) ($generated@@246 $generated@@610 ($generated@@163 $generated@@609))) (and (= ($generated@@298 ($generated@@398 $generated@@81 $generated@@610)) $generated@@610) ($generated@@140 ($generated@@398 $generated@@81 $generated@@610) ($generated@@163 $generated@@609))))
 :pattern ( ($generated@@246 $generated@@610 ($generated@@163 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@612) $generated@@67)) (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@179) (< 0 ($generated ($generated@@85 $generated@@611 $generated@@614)))) ($generated@@271 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@85 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@78 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@170) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@617) (and ($generated@@168 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@67) ($generated@@78 $generated@@615 ($generated@@169 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@78 $generated@@615 ($generated@@169 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@271 ($generated@@177 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@271 ($generated@@177 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@170) (= (type $generated@@620) $generated@@67)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@621) (and ($generated@@168 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@67) ($generated@@78 $generated@@619 ($generated@@169 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@78 $generated@@619 ($generated@@169 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@271 ($generated@@178 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@271 ($generated@@178 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@179) (= (type $generated@@624) $generated@@179)) (= ($generated@@245 ($generated@@267 $generated@@623) ($generated@@267 $generated@@624)) ($generated@@267 ($generated@@245 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@245 ($generated@@267 $generated@@623) ($generated@@267 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@265 $generated@@625))) ($generated@@267 ($generated@@298 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@265 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@298 ($generated@@267 $generated@@626)) ($generated@@267 ($generated@@298 $generated@@626)))
 :pattern ( ($generated@@298 ($generated@@267 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@286 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@285 $generated@@628)) (= ($generated@@284 $generated@@627) 0)) (= $generated@@627 ($generated@@283 $generated@@628))))
 :pattern ( ($generated@@284 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@80 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@311 ($generated@@86 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@311 $generated@@629) ($generated ($generated@@85 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@311 ($generated@@86 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@2)) ($generated@@78 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@3)) ($generated@@78 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@638) $generated@@4)) ($generated@@78 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@78 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@640) $generated@@476)) ($generated@@78 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@78 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@179)) ($generated@@78 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@285 $generated@@179)) (= (type $generated@@644) $generated@@67)) (= ($generated@@140 $generated@@643 ($generated@@520 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@284 $generated@@643))) ($generated@@246 ($generated@@521 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@521 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@140 $generated@@643 ($generated@@520 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@285 $generated@@179)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@284 $generated@@647))) (< ($generated@@568 ($generated@@398 $generated@@170 ($generated@@521 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@568 ($generated@@398 $generated@@170 ($generated@@521 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@323 $generated@@179 $generated@@179)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@140 $generated@@649 ($generated@@426 $generated@@650 $generated@@651))) (and (and ($generated@@140 ($generated@@321 $generated@@649) ($generated@@255 $generated@@650)) ($generated@@140 ($generated@@366 $generated@@649) ($generated@@255 $generated@@651))) ($generated@@140 ($generated@@397 $generated@@649) ($generated@@255 ($generated@@169 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@140 $generated@@649 ($generated@@426 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@341 $generated@@179 $generated@@179)) (= (type $generated@@653) $generated@@67)) (= (type $generated@@654) $generated@@67)) ($generated@@140 $generated@@652 ($generated@@434 $generated@@653 $generated@@654))) (and (and ($generated@@140 ($generated@@339 $generated@@652) ($generated@@260 $generated@@653)) ($generated@@140 ($generated@@377 $generated@@652) ($generated@@260 $generated@@654))) ($generated@@140 ($generated@@408 $generated@@652) ($generated@@260 ($generated@@169 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@140 $generated@@652 ($generated@@434 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@140 $generated@@655 $generated@@46))
 :pattern ( ($generated@@140 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@140 $generated@@656 $generated@@47))
 :pattern ( ($generated@@140 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@140 $generated@@657 $generated@@44))
 :pattern ( ($generated@@140 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@476) ($generated@@140 $generated@@658 $generated@@45))
 :pattern ( ($generated@@140 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@179) ($generated@@140 $generated@@659 $generated@@48))
 :pattern ( ($generated@@140 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (= (type $generated@@660) ($generated@@191 $generated@@81 $generated@@4)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@664) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@668  (=> (= $generated@@660 ($generated@@190 $generated@@138 $generated@@661 $generated@@60 false)) (=> (and (and ($generated@@155 $generated@@662) ($generated@@663 $generated@@662)) (and (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@81) (=> (and (not (= $generated@@669 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@661 $generated@@669) $generated@@60))) (= ($generated@@85 $generated@@662 $generated@@669) ($generated@@85 $generated@@661 $generated@@669))))
 :pattern ( ($generated@@85 $generated@@662 $generated@@669))
)) ($generated@@148 $generated@@661 $generated@@662))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@664 $generated@@138))) (=> (not (= $generated@@664 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@136 $generated@@664)))) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@136 $generated@@664))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@145 $generated@@664))))))))))))
(let (($generated@@670  (=> (and ($generated@@155 $generated@@661) ($generated@@663 $generated@@661)) (=> (and (and ($generated@@140 $generated@@664 ($generated@@163 $generated@@46)) ($generated@@78 $generated@@664 ($generated@@163 $generated@@46) $generated@@661)) (and (= 1 $generated@@667) (= (ControlFlow 0 5) 2))) $generated@@668))))
$generated@@670)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U Int) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (Int) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@81)) (and (not (= $generated@@147 $generated@@138)) (= ($generated@@139 $generated@@147) ($generated@@137 $generated@@146)))) ($generated@@140 ($generated@@8 ($generated@@145 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@145 $generated@@147) ($generated@@137 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@81)) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@149 ($generated@@137 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@149 ($generated@@137 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@154) $generated@@81)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@138)) (= ($generated@@139 $generated@@154) ($generated@@137 $generated@@152)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@136 $generated@@154) ($generated@@87 ($generated@@85 $generated@@153 $generated@@154) $generated@@60) ($generated@@137 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@157) $generated@@81)) (and (and ($generated@@151 $generated@@156) (and (not (= $generated@@157 $generated@@138)) (= ($generated@@139 $generated@@157) ($generated@@137 $generated@@155)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@156 $generated@@157) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@157)) $generated@@46 $generated@@156))
 :pattern ( ($generated@@145 $generated@@157) ($generated@@87 ($generated@@85 $generated@@156 $generated@@157) $generated@@60) ($generated@@137 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@140 $generated@@158 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@158 ($generated@@79 0)))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@67) (= (type $generated@@162) $generated@@81)) (= (type $generated@@163) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@162 ($generated@@159 $generated@@161) $generated@@163) ($generated@@78 $generated@@162 ($generated@@137 $generated@@161) $generated@@163)))
 :pattern ( ($generated@@78 $generated@@162 ($generated@@159 $generated@@161) $generated@@163))
)))
(assert  (and (= ($generated@@1 $generated@@166) 14) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@67)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@67) (= (type $generated@@170) $generated@@67)) (= (type $generated@@171) $generated@@166)) ($generated@@140 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@140 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 15) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@166) (= (type $generated@@179) $generated@@166)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@67)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@80 $generated@@175 $generated@@2)) (= (type $generated@@184) $generated@@67)) ($generated@@140 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@140 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@81 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@70 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@236) ($generated@@69 $generated@@4))) (= (type $generated@@238) $generated@@81)) (= (type $generated@@239) ($generated@@69 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@166)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@67)) (= (type $generated@@247) $generated@@175)) (= (type $generated@@248) $generated@@175)) (= ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@165 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@165 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@166) (= (type $generated@@250) $generated@@166)) (= ($generated@@172 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@172 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@175 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@175) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@175 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@175) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@175)) (= (type $generated@@271) $generated@@175)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@151 $generated@@272)) (= ($generated@@78 ($generated@@241 $generated@@270 $generated@@271) ($generated@@165 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@241 $generated@@270 $generated@@271) ($generated@@165 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@166) (= ($generated@@164 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@166) ($generated@@164 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@175) (= (type $generated@@278) $generated@@175)) (= $generated@@276 ($generated@@241 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@164 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (= (type ($generated@@287 $generated@@288 $generated@@289)) ($generated@@69 $generated@@175))
 :pattern ( ($generated@@287 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (= (type $generated@@290) ($generated@@69 $generated@@175)) (= ($generated@@75 ($generated@@287 $generated@@290 $generated@@291)) (+ ($generated@@75 $generated@@290) 1)))
 :pattern ( ($generated@@287 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) $generated@@81)) (= ($generated@@140 $generated@@293 ($generated@@159 $generated@@292))  (and ($generated@@140 $generated@@293 ($generated@@137 $generated@@292)) (not (= $generated@@293 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@159 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@175)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@67) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@78 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@267 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@80 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@83 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@80 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@85 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@137 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@159 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@159 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@80 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@85 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@85 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@83 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@80 $generated@@346 $generated@@2)) (= ($generated@@181 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@85 $generated@@345 $generated@@347))) (<= ($generated ($generated@@85 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@85 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@181 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@81)) (= ($generated@@140 $generated@@349 ($generated@@137 $generated@@348))  (or (= $generated@@349 $generated@@138) (= ($generated@@139 $generated@@349) ($generated@@137 $generated@@348)))))
 :pattern ( ($generated@@140 $generated@@349 ($generated@@137 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@80 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@80 $generated@@175 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@140 $generated@@372 ($generated@@180 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@175) (< 0 ($generated ($generated@@85 $generated@@372 $generated@@374)))) ($generated@@242 $generated@@374 $generated@@373))
 :pattern ( ($generated@@85 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@140 $generated@@372 ($generated@@180 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@175 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@251 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@175) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@251 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@175 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@256 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@175) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@256 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@85 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@85 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@80 $generated@@175 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@80 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@175 $generated@@175)) (= (type $generated@@395) $generated@@175)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@85 ($generated@@309 $generated@@394) ($generated@@173 ($generated@@386 $generated@@166 $generated@@395)))) (= ($generated@@85 ($generated@@387 $generated@@394) ($generated@@173 ($generated@@386 $generated@@166 $generated@@395))) ($generated@@174 ($generated@@386 $generated@@166 $generated@@395))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@175 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@175 $generated@@175)) (= (type $generated@@403) $generated@@175)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@402) ($generated@@173 ($generated@@386 $generated@@166 $generated@@403)))) (= ($generated@@85 ($generated@@397 $generated@@402) ($generated@@173 ($generated@@386 $generated@@166 $generated@@403))) ($generated@@174 ($generated@@386 $generated@@166 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@85 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@85 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@85 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@85 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@175 $generated@@175)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@175) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@267 ($generated@@85 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@267 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@175 $generated@@175)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@175) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@267 ($generated@@85 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@267 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 Int) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@69 $generated@@175))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 Int) ($generated@@436 Int) ) (!  (=> (and (and (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@434) $generated@@81)) (and (and ($generated@@151 $generated@@433) (and (not (= $generated@@434 $generated@@138)) (= ($generated@@139 $generated@@434) ($generated@@137 $generated@@432)))) (and (and (<= 0 $generated@@435) (< $generated@@435 ($generated@@136 $generated@@434))) (and (<= 0 $generated@@436) (< $generated@@436 ($generated@@145 $generated@@434)))))) ($generated@@242 ($generated@@87 ($generated@@85 $generated@@433 $generated@@434) ($generated@@287 ($generated@@430 $generated@@435) $generated@@436)) $generated@@432))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@433 $generated@@434) ($generated@@287 ($generated@@430 $generated@@435) $generated@@436)) ($generated@@137 $generated@@432))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@80 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@331 (type $generated@@439))))
(let (($generated@@441 ($generated@@330 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@329 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@328 $generated@@441 $generated@@440)) (= ($generated@@327 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@327 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@331 (type $generated@@442))))
(let (($generated@@444 ($generated@@330 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@329 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@328 $generated@@444 $generated@@443)) (= ($generated@@365 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@365 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@331 (type $generated@@445))))
(let (($generated@@447 ($generated@@330 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@329 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@328 $generated@@447 $generated@@446)) (= ($generated@@396 $generated@@445) ($generated@@437 $generated@@175))))))
 :pattern ( ($generated@@396 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@313 (type $generated@@448))))
(let (($generated@@450 ($generated@@312 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@311 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@310 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@175) (= (type $generated@@452) $generated@@175)) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@448) ($generated@@294 ($generated@@241 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@385 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@331 (type $generated@@453))))
(let (($generated@@455 ($generated@@330 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@329 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@328 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@175) (= (type $generated@@457) $generated@@175)) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@453) ($generated@@294 ($generated@@241 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@396 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@175) ($generated@@242 $generated@@458 $generated@@46)) (and (= ($generated@@294 ($generated@@386 $generated@@2 $generated@@458)) $generated@@458) ($generated@@140 ($generated@@386 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@175) ($generated@@242 $generated@@459 $generated@@47)) (and (= ($generated@@294 ($generated@@386 $generated@@3 $generated@@459)) $generated@@459) ($generated@@140 ($generated@@386 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@175) ($generated@@242 $generated@@460 $generated@@44)) (and (= ($generated@@294 ($generated@@386 $generated@@4 $generated@@460)) $generated@@460) ($generated@@140 ($generated@@386 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@175) ($generated@@242 $generated@@462 $generated@@45)) (and (= ($generated@@294 ($generated@@386 $generated@@461 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@386 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@242 ($generated@@294 $generated@@463) $generated@@464) ($generated@@140 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@242 ($generated@@294 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@81) (<= 0 ($generated@@136 $generated@@465)))
 :pattern ( ($generated@@136 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@81) (<= 0 ($generated@@145 $generated@@466)))
 :pattern ( ($generated@@145 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@83 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@80 $generated@@468 $generated@@2)) (<= 0 ($generated@@299 $generated@@467))))
 :pattern ( ($generated@@299 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@282 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@281 $generated@@470)) (<= 0 ($generated@@280 $generated@@469))))
 :pattern ( ($generated@@280 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@414 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@414 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@76 ($generated@@414 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@422 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@422 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@422 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@76 ($generated@@422 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@175) (= (type $generated@@492) $generated@@175)) (= ($generated@@273 ($generated@@241 $generated@@491 $generated@@492)) $generated@@63))
 :pattern ( ($generated@@241 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@493 ($generated@@165 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@165 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@165 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@165 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@175) (= (type $generated@@502) $generated@@175)) (= ($generated@@173 ($generated@@241 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@241 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@175) (= (type $generated@@504) $generated@@175)) (= ($generated@@174 ($generated@@241 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@241 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@282 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@281 $generated@@175)) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@280 $generated@@511))) ($generated@@267 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@78 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@79 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@79 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@517 ($generated@@251 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@251 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@256 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@256 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@180 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@180 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@180 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@75 ($generated@@430 $generated@@533)) 1)
 :pattern ( ($generated@@430 $generated@@533))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@430 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@430 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@137 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@137 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@539 ($generated@@159 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@159 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@386 $generated@@543 ($generated@@294 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@294 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@311 $generated@@175 $generated@@175)) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) $generated@@67)) (= ($generated@@140 $generated@@544 ($generated@@414 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@175) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@544) $generated@@547))) (and ($generated@@242 ($generated@@85 ($generated@@387 $generated@@544) $generated@@547) $generated@@546) ($generated@@242 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@544) $generated@@547))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@140 $generated@@544 ($generated@@414 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@329 $generated@@175 $generated@@175)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@175) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@548) $generated@@551))) (and ($generated@@242 ($generated@@85 ($generated@@397 $generated@@548) $generated@@551) $generated@@550) ($generated@@242 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@175) (= (type $generated@@555) $generated@@175)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@241 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@241 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@175) (= (type $generated@@557) $generated@@175)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@241 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@241 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 Int) ($generated@@562 Int) ) (!  (=> (and (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@560) $generated@@81)) (=> (and (and (and ($generated@@151 $generated@@559) (and (not (= $generated@@560 $generated@@138)) (= ($generated@@139 $generated@@560) ($generated@@137 $generated@@558)))) (and (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@136 $generated@@560))) (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@145 $generated@@560))))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@559 $generated@@560) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@559 $generated@@560) ($generated@@287 ($generated@@430 $generated@@561) $generated@@562)) $generated@@558 $generated@@559)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@559 $generated@@560) ($generated@@287 ($generated@@430 $generated@@561) $generated@@562)) ($generated@@137 $generated@@558))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@175) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@67)) ($generated@@242 $generated@@563 ($generated@@414 $generated@@564 $generated@@565))) (and (= ($generated@@294 ($generated@@386 ($generated@@311 $generated@@175 $generated@@175) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@386 ($generated@@311 $generated@@175 $generated@@175) $generated@@563) ($generated@@414 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@563 ($generated@@414 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@175) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@242 $generated@@566 ($generated@@422 $generated@@567 $generated@@568))) (and (= ($generated@@294 ($generated@@386 ($generated@@329 $generated@@175 $generated@@175) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@386 ($generated@@329 $generated@@175 $generated@@175) $generated@@566) ($generated@@422 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@422 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@175)) ($generated@@242 $generated@@571 ($generated@@165 $generated@@569 $generated@@570))) (and (= ($generated@@294 ($generated@@386 $generated@@166 $generated@@571)) $generated@@571) ($generated@@140 ($generated@@386 $generated@@166 $generated@@571) ($generated@@165 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@242 $generated@@571 ($generated@@165 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@85 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@85 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@70 (type $generated@@576))))
(= (type ($generated@@574 $generated@@576)) ($generated@@69 $generated@@577)))
 :pattern ( ($generated@@574 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@69 $generated@@175)) (and (= ($generated@@574 ($generated@@287 $generated@@578 $generated@@579)) $generated@@578) (= ($generated@@575 ($generated@@287 $generated@@578 $generated@@579)) $generated@@579)))
 :pattern ( ($generated@@287 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@67)) (and (= ($generated@@76 ($generated@@165 $generated@@580 $generated@@581)) $generated@@64) (= ($generated@@305 ($generated@@165 $generated@@580 $generated@@581)) $generated@@66)))
 :pattern ( ($generated@@165 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@166) (= ($generated@@552 ($generated@@294 $generated@@582)) ($generated@@553 $generated@@582)))
 :pattern ( ($generated@@552 ($generated@@294 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@175) ($generated@@242 $generated@@583 ($generated@@79 0))) (and (= ($generated@@294 ($generated@@386 $generated@@2 $generated@@583)) $generated@@583) ($generated@@140 ($generated@@386 ($generated@@80 $generated@@175 $generated@@4) $generated@@583) ($generated@@79 0))))
 :pattern ( ($generated@@242 $generated@@583 ($generated@@79 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@175) (= (type $generated@@585) $generated@@67)) ($generated@@242 $generated@@584 ($generated@@251 $generated@@585))) (and (= ($generated@@294 ($generated@@386 ($generated@@80 $generated@@175 $generated@@4) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@386 ($generated@@80 $generated@@175 $generated@@4) $generated@@584) ($generated@@251 $generated@@585))))
 :pattern ( ($generated@@242 $generated@@584 ($generated@@251 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@175) (= (type $generated@@587) $generated@@67)) ($generated@@242 $generated@@586 ($generated@@256 $generated@@587))) (and (= ($generated@@294 ($generated@@386 ($generated@@80 $generated@@175 $generated@@4) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@386 ($generated@@80 $generated@@175 $generated@@4) $generated@@586) ($generated@@256 $generated@@587))))
 :pattern ( ($generated@@242 $generated@@586 ($generated@@256 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@175) (= (type $generated@@589) $generated@@67)) ($generated@@242 $generated@@588 ($generated@@180 $generated@@589))) (and (= ($generated@@294 ($generated@@386 ($generated@@80 $generated@@175 $generated@@2) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@386 ($generated@@80 $generated@@175 $generated@@2) $generated@@588) ($generated@@180 $generated@@589))))
 :pattern ( ($generated@@242 $generated@@588 ($generated@@180 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@175) (= (type $generated@@591) $generated@@67)) ($generated@@242 $generated@@590 ($generated@@505 $generated@@591))) (and (= ($generated@@294 ($generated@@386 ($generated@@281 $generated@@175) $generated@@590)) $generated@@590) ($generated@@140 ($generated@@386 ($generated@@281 $generated@@175) $generated@@590) ($generated@@505 $generated@@591))))
 :pattern ( ($generated@@242 $generated@@590 ($generated@@505 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@67) (= (type $generated@@593) $generated@@175)) ($generated@@242 $generated@@593 ($generated@@137 $generated@@592))) (and (= ($generated@@294 ($generated@@386 $generated@@81 $generated@@593)) $generated@@593) ($generated@@140 ($generated@@386 $generated@@81 $generated@@593) ($generated@@137 $generated@@592))))
 :pattern ( ($generated@@242 $generated@@593 ($generated@@137 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@175)) ($generated@@242 $generated@@595 ($generated@@159 $generated@@594))) (and (= ($generated@@294 ($generated@@386 $generated@@81 $generated@@595)) $generated@@595) ($generated@@140 ($generated@@386 $generated@@81 $generated@@595) ($generated@@159 $generated@@594))))
 :pattern ( ($generated@@242 $generated@@595 ($generated@@159 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@175 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@180 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@175) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@267 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@180 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@166) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@151 $generated@@602) (and ($generated@@164 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@165 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@165 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@267 ($generated@@173 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@267 ($generated@@173 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@166) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@151 $generated@@606) (and ($generated@@164 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@165 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@165 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@267 ($generated@@174 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@267 ($generated@@174 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@175) (= (type $generated@@609) $generated@@175)) (= ($generated@@241 ($generated@@263 $generated@@608) ($generated@@263 $generated@@609)) ($generated@@263 ($generated@@241 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@241 ($generated@@263 $generated@@608) ($generated@@263 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@261 $generated@@610))) ($generated@@263 ($generated@@294 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@261 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@294 ($generated@@263 $generated@@611)) ($generated@@263 ($generated@@294 $generated@@611)))
 :pattern ( ($generated@@294 ($generated@@263 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@282 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@281 $generated@@613)) (= ($generated@@280 $generated@@612) 0)) (= $generated@@612 ($generated@@279 $generated@@613))))
 :pattern ( ($generated@@280 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@299 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@299 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@299 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@461)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@175)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@281 $generated@@175)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@505 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@280 $generated@@628))) ($generated@@242 ($generated@@506 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@506 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@505 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@281 $generated@@175)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@280 $generated@@632))) (< ($generated@@553 ($generated@@386 $generated@@166 ($generated@@506 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@553 ($generated@@386 $generated@@166 ($generated@@506 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@311 $generated@@175 $generated@@175)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@414 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@309 $generated@@634) ($generated@@251 $generated@@635)) ($generated@@140 ($generated@@354 $generated@@634) ($generated@@251 $generated@@636))) ($generated@@140 ($generated@@385 $generated@@634) ($generated@@251 ($generated@@165 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@414 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@329 $generated@@175 $generated@@175)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@422 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@327 $generated@@637) ($generated@@256 $generated@@638)) ($generated@@140 ($generated@@365 $generated@@637) ($generated@@256 $generated@@639))) ($generated@@140 ($generated@@396 $generated@@637) ($generated@@256 ($generated@@165 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@422 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@461) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@175) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () Int)
(assert  (and (and (= (type $generated@@645) ($generated@@187 $generated@@81 $generated@@4)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@650  (=> (and (= $generated@@645 ($generated@@186 $generated@@138 $generated@@646 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@651 Int) ($generated@@652 Int) ) (!  (=> true (= ($generated ($generated@@386 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@647) ($generated@@287 ($generated@@430 $generated@@651) $generated@@652)))) ($generated@@261 0)))
 :pattern ( ($generated@@386 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@647) ($generated@@287 ($generated@@430 $generated@@651) $generated@@652))))
)))))
(let (($generated@@653  (=> (and ($generated@@151 $generated@@646) ($generated@@648 $generated@@646)) (=> (and (and ($generated@@140 $generated@@647 ($generated@@159 $generated@@46)) ($generated@@78 $generated@@647 ($generated@@159 $generated@@46) $generated@@646)) (and (= 1 $generated@@649) (= (ControlFlow 0 3) 2))) $generated@@650))))
$generated@@653)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
