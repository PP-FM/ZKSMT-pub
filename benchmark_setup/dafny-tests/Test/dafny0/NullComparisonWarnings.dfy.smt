(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@T T@U T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@70) (= (type $generated@@159) $generated@@70)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 17) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@70)) ($generated@@151 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@151 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@88) (= ($generated@@151 $generated@@176 $generated@@147)  (or (= $generated@@176 $generated@@148) (= ($generated@@174 $generated@@176) $generated@@147))))
 :pattern ( ($generated@@151 $generated@@176 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 18)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@88 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@73 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@88) (= (type $generated@@227) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@228) ($generated@@72 $generated@@4))) (= (type $generated@@230) $generated@@88)) (= (type $generated@@231) ($generated@@72 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@70))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@88) (= (type $generated@@235) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@234 $generated@@233 $generated@@235) ($generated@@85 $generated@@234 $generated@@147 $generated@@235)))
 :pattern ( ($generated@@85 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@155)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@70) (= (type $generated@@241) $generated@@70)) (= (type $generated@@242) $generated@@164)) (= (type $generated@@243) $generated@@164)) (= ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@151 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert (= (type $generated@@244) ($generated@@72 $generated@@88)))
(assert (= ($generated@@80 $generated@@244) 0))
(assert (forall (($generated@@246 T@T) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@72 $generated@@246))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247 $generated@@248))
)))
(assert (= ($generated@@245 $generated@@88 $generated@@64 $generated@@69) $generated@@244))
(assert  (not ($generated@@249 $generated@@244)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@155) (= (type $generated@@251) $generated@@155)) (= ($generated@@161 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@161 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@151 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) ($generated@@0 ($generated@@92 $generated@@254 $generated@@256))) ($generated@@237 $generated@@256 $generated@@255))
 :pattern ( ($generated@@92 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@151 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@151 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@164) ($generated@@0 ($generated@@92 $generated@@259 $generated@@261))) ($generated@@237 $generated@@261 $generated@@260))
 :pattern ( ($generated@@92 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@151 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@164)) (= (type $generated@@271) $generated@@164)) (= (type $generated@@272) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@266 $generated@@272)) (= ($generated@@85 ($generated@@236 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@85 ($generated@@236 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@75)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@155) (= ($generated@@153 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@155) ($generated@@153 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@164) (= (type $generated@@278) $generated@@164)) (= $generated@@276 ($generated@@236 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@153 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 19)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert ($generated@@249 $generated@@60))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@164)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@85 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@294) $generated@@164)) (= (type $generated@@295) $generated@@70)) ($generated@@143 $generated@@292 $generated@@293)) ($generated@@267 $generated@@294 $generated@@295 $generated@@292)) ($generated@@267 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@143 $generated@@292 $generated@@293) ($generated@@267 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@299) $generated@@70)) ($generated@@143 $generated@@296 $generated@@297)) ($generated@@85 $generated@@298 $generated@@299 $generated@@296)) ($generated@@85 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@143 $generated@@296 $generated@@297) ($generated@@85 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@87 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@90 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@87 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@92 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 20)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@92 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@92 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 21)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@87 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@92 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@92 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@344) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@342 $generated@@343 $generated@@344)) (and ($generated@@143 $generated@@343 $generated@@344) (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@73 (type $generated@@346))))
 (=> (and (and (= (type $generated@@345) $generated@@88) (= (type $generated@@346) ($generated@@72 $generated@@347))) (not ($generated@@249 $generated@@346))) (= ($generated@@94 ($generated@@92 $generated@@343 $generated@@345) $generated@@346) ($generated@@94 ($generated@@92 $generated@@344 $generated@@345) $generated@@346))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@344 $generated@@345) $generated@@346))
))))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@90 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@87 $generated@@349 $generated@@2)) (= ($generated@@170 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@92 $generated@@348 $generated@@350))) (<= ($generated ($generated@@92 $generated@@348 $generated@@350)) ($generated@@300 $generated@@348))))
 :pattern ( ($generated@@92 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@170 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@164) ($generated@@237 $generated@@354 $generated@@147)) (and (= ($generated@@287 ($generated@@351 $generated@@88 $generated@@354)) $generated@@354) ($generated@@151 ($generated@@351 $generated@@88 $generated@@354) $generated@@147)))
 :pattern ( ($generated@@237 $generated@@354 $generated@@147))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@164) ($generated@@237 $generated@@355 $generated@@233)) (and (= ($generated@@287 ($generated@@351 $generated@@88 $generated@@355)) $generated@@355) ($generated@@151 ($generated@@351 $generated@@88 $generated@@355) $generated@@233)))
 :pattern ( ($generated@@237 $generated@@355 $generated@@233))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@88) (= ($generated@@151 $generated@@356 $generated@@233)  (and ($generated@@151 $generated@@356 $generated@@147) (not (= $generated@@356 $generated@@148)))))
 :pattern ( ($generated@@151 $generated@@356 $generated@@233))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@310 (type $generated@@357))))
(let (($generated@@359 ($generated@@309 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@308 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@307 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@92 ($generated@@306 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@306 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@310 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@87 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@310 (type $generated@@364))))
(let (($generated@@366 ($generated@@309 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@308 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@307 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@92 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@328 (type $generated@@368))))
(let (($generated@@370 ($generated@@327 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@326 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@325 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@92 ($generated@@324 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@324 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@328 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@328 (type $generated@@375))))
(let (($generated@@377 ($generated@@327 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@326 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@325 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@380) $generated@@70)) (= ($generated@@151 $generated@@379 ($generated@@169 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@379 $generated@@381)))) ($generated@@237 $generated@@381 $generated@@380))
 :pattern ( ($generated@@92 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@151 $generated@@379 ($generated@@169 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) $generated@@88)) (=> (and (and ($generated@@266 $generated@@382) (and (not (= $generated@@383 $generated@@148)) (= ($generated@@174 $generated@@383) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@382 $generated@@383) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@382 $generated@@383) $generated@@244) $generated@@233 $generated@@382)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@382 $generated@@383) $generated@@244))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@384 ($generated@@252 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@164) ($generated@@0 ($generated@@92 $generated@@384 $generated@@387))) ($generated@@267 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@92 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@85 $generated@@384 ($generated@@252 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@388 ($generated@@257 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@164) ($generated@@0 ($generated@@92 $generated@@388 $generated@@391))) ($generated@@267 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@92 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@85 $generated@@388 ($generated@@257 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@92 ($generated@@301 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@92 ($generated@@301 $generated@@393) $generated@@392)))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@310 (type $generated@@397))))
(let (($generated@@399 ($generated@@309 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@87 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@308 $generated@@164 $generated@@164)) (= (type $generated@@401) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@92 ($generated@@306 $generated@@400) ($generated@@162 ($generated@@351 $generated@@155 $generated@@401)))) (= ($generated@@92 ($generated@@395 $generated@@400) ($generated@@162 ($generated@@351 $generated@@155 $generated@@401))) ($generated@@163 ($generated@@351 $generated@@155 $generated@@401))))))
 :pattern ( ($generated@@92 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@328 (type $generated@@405))))
(let (($generated@@407 ($generated@@327 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@326 $generated@@164 $generated@@164)) (= (type $generated@@409) $generated@@164)) (= ($generated@@0 ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@92 ($generated@@324 $generated@@408) ($generated@@162 ($generated@@351 $generated@@155 $generated@@409)))) (= ($generated@@92 ($generated@@403 $generated@@408) ($generated@@162 ($generated@@351 $generated@@155 $generated@@409))) ($generated@@163 ($generated@@351 $generated@@155 $generated@@409))))))
 :pattern ( ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@309 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@92 ($generated@@361 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@92 ($generated@@306 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@92 ($generated@@395 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@92 ($generated@@306 $generated@@410) $generated@@414))
 :pattern ( ($generated@@92 ($generated@@395 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@92 ($generated@@361 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@327 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@326 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@92 ($generated@@372 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@92 ($generated@@324 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@92 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@92 ($generated@@324 $generated@@415) $generated@@419))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@92 ($generated@@372 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@308 $generated@@164 $generated@@164)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@306 $generated@@423) $generated@@427))) (and ($generated@@267 ($generated@@92 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@267 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@92 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@92 ($generated@@306 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@85 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@326 $generated@@164 $generated@@164)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@324 $generated@@431) $generated@@435))) (and ($generated@@267 ($generated@@92 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@267 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@92 ($generated@@324 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@437) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@436 $generated@@438))) (and ($generated@@143 $generated@@436 $generated@@437) ($generated@@143 $generated@@437 $generated@@438))) ($generated@@143 $generated@@436 $generated@@438))
 :pattern ( ($generated@@143 $generated@@436 $generated@@437) ($generated@@143 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@87 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@328 (type $generated@@441))))
(let (($generated@@443 ($generated@@327 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@326 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@325 $generated@@443 $generated@@442)) (= ($generated@@324 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@324 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@328 (type $generated@@444))))
(let (($generated@@446 ($generated@@327 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@326 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@325 $generated@@446 $generated@@445)) (= ($generated@@372 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@372 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (= ($generated@@402 $generated@@447) ($generated@@439 $generated@@164))))))
 :pattern ( ($generated@@402 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@310 (type $generated@@450))))
(let (($generated@@452 ($generated@@309 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@308 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@307 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@164) (= (type $generated@@454) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@394 $generated@@450) ($generated@@287 ($generated@@236 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@394 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@328 (type $generated@@455))))
(let (($generated@@457 ($generated@@327 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@326 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@325 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@164) (= (type $generated@@459) $generated@@164)) ($generated@@0 ($generated@@92 ($generated@@402 $generated@@455) ($generated@@287 ($generated@@236 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@402 $generated@@455))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@76)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@T) ) (!  (=> (and (= (type $generated@@462) $generated@@76) (= (type $generated@@463) $generated@@74)) (and (= ($generated@@460 ($generated@@245 $generated@@464 $generated@@462 $generated@@463)) $generated@@462) (= ($generated@@83 ($generated@@245 $generated@@464 $generated@@462 $generated@@463)) $generated@@463)))
 :pattern ( ($generated@@245 $generated@@464 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@164) ($generated@@237 $generated@@465 $generated@@46)) (and (= ($generated@@287 ($generated@@351 $generated@@2 $generated@@465)) $generated@@465) ($generated@@151 ($generated@@351 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@164) ($generated@@237 $generated@@466 $generated@@47)) (and (= ($generated@@287 ($generated@@351 $generated@@3 $generated@@466)) $generated@@466) ($generated@@151 ($generated@@351 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@164) ($generated@@237 $generated@@467 $generated@@44)) (and (= ($generated@@287 ($generated@@351 $generated@@4 $generated@@467)) $generated@@467) ($generated@@151 ($generated@@351 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 22))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@164) ($generated@@237 $generated@@469 $generated@@45)) (and (= ($generated@@287 ($generated@@351 $generated@@468 $generated@@469)) $generated@@469) ($generated@@151 ($generated@@351 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@237 ($generated@@287 $generated@@470) $generated@@471) ($generated@@151 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@237 ($generated@@287 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@90 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@87 $generated@@473 $generated@@2)) (<= 0 ($generated@@300 $generated@@472))))
 :pattern ( ($generated@@300 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@282 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@281 $generated@@475)) (<= 0 ($generated@@280 $generated@@474))))
 :pattern ( ($generated@@280 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@420 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@81 ($generated@@420 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@420 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@428 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@81 ($generated@@428 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@428 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@164) (= (type $generated@@497) $generated@@164)) (= ($generated@@273 ($generated@@236 $generated@@496 $generated@@497)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@154 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@154 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@154 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@154 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@164) (= (type $generated@@507) $generated@@164)) (= ($generated@@162 ($generated@@236 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@236 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@164) (= (type $generated@@509) $generated@@164)) (= ($generated@@163 ($generated@@236 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@236 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@282 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@281 $generated@@164)) (= (type $generated@@517) $generated@@70)) (= (type $generated@@518) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@280 $generated@@516))) ($generated@@267 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@85 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@86 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@86 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@522 ($generated@@252 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@252 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@81 ($generated@@252 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@257 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@257 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@81 ($generated@@257 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@169 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@169 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@81 ($generated@@169 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@351 $generated@@539 ($generated@@287 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@287 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@308 $generated@@164 $generated@@164)) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) (= ($generated@@151 $generated@@540 ($generated@@420 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@306 $generated@@540) $generated@@543))) (and ($generated@@237 ($generated@@92 ($generated@@395 $generated@@540) $generated@@543) $generated@@542) ($generated@@237 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@92 ($generated@@395 $generated@@540) $generated@@543))
 :pattern ( ($generated@@92 ($generated@@306 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@151 $generated@@540 ($generated@@420 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@326 $generated@@164 $generated@@164)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@151 $generated@@544 ($generated@@428 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) ($generated@@0 ($generated@@92 ($generated@@324 $generated@@544) $generated@@547))) (and ($generated@@237 ($generated@@92 ($generated@@403 $generated@@544) $generated@@547) $generated@@546) ($generated@@237 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@544) $generated@@547))
 :pattern ( ($generated@@92 ($generated@@324 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@151 $generated@@544 ($generated@@428 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@164) (= (type $generated@@551) $generated@@164)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@236 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@164) (= (type $generated@@553) $generated@@164)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@236 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@164) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) ($generated@@237 $generated@@554 ($generated@@420 $generated@@555 $generated@@556))) (and (= ($generated@@287 ($generated@@351 ($generated@@308 $generated@@164 $generated@@164) $generated@@554)) $generated@@554) ($generated@@151 ($generated@@351 ($generated@@308 $generated@@164 $generated@@164) $generated@@554) ($generated@@420 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@420 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@164) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) ($generated@@237 $generated@@557 ($generated@@428 $generated@@558 $generated@@559))) (and (= ($generated@@287 ($generated@@351 ($generated@@326 $generated@@164 $generated@@164) $generated@@557)) $generated@@557) ($generated@@151 ($generated@@351 ($generated@@326 $generated@@164 $generated@@164) $generated@@557) ($generated@@428 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@237 $generated@@557 ($generated@@428 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@70) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@164)) ($generated@@237 $generated@@562 ($generated@@154 $generated@@560 $generated@@561))) (and (= ($generated@@287 ($generated@@351 $generated@@155 $generated@@562)) $generated@@562) ($generated@@151 ($generated@@351 $generated@@155 $generated@@562) ($generated@@154 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@237 $generated@@562 ($generated@@154 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@92 ($generated@@439 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@92 ($generated@@439 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@566) $generated@@88)) (and ($generated@@266 $generated@@565) (and (not (= $generated@@566 $generated@@148)) (= ($generated@@174 $generated@@566) $generated@@147)))) ($generated@@151 ($generated@@94 ($generated@@92 $generated@@565 $generated@@566) $generated@@244) $generated@@233))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@565 $generated@@566) $generated@@244))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@154 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@154 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@155) (= ($generated@@548 ($generated@@287 $generated@@571)) ($generated@@549 $generated@@571)))
 :pattern ( ($generated@@548 ($generated@@287 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@164) ($generated@@237 $generated@@572 ($generated@@86 0))) (and (= ($generated@@287 ($generated@@351 $generated@@2 $generated@@572)) $generated@@572) ($generated@@151 ($generated@@351 ($generated@@87 $generated@@164 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@237 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@164) (= (type $generated@@574) $generated@@70)) ($generated@@237 $generated@@573 ($generated@@252 $generated@@574))) (and (= ($generated@@287 ($generated@@351 ($generated@@87 $generated@@164 $generated@@4) $generated@@573)) $generated@@573) ($generated@@151 ($generated@@351 ($generated@@87 $generated@@164 $generated@@4) $generated@@573) ($generated@@252 $generated@@574))))
 :pattern ( ($generated@@237 $generated@@573 ($generated@@252 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@164) (= (type $generated@@576) $generated@@70)) ($generated@@237 $generated@@575 ($generated@@257 $generated@@576))) (and (= ($generated@@287 ($generated@@351 ($generated@@87 $generated@@164 $generated@@4) $generated@@575)) $generated@@575) ($generated@@151 ($generated@@351 ($generated@@87 $generated@@164 $generated@@4) $generated@@575) ($generated@@257 $generated@@576))))
 :pattern ( ($generated@@237 $generated@@575 ($generated@@257 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@164) (= (type $generated@@578) $generated@@70)) ($generated@@237 $generated@@577 ($generated@@169 $generated@@578))) (and (= ($generated@@287 ($generated@@351 ($generated@@87 $generated@@164 $generated@@2) $generated@@577)) $generated@@577) ($generated@@151 ($generated@@351 ($generated@@87 $generated@@164 $generated@@2) $generated@@577) ($generated@@169 $generated@@578))))
 :pattern ( ($generated@@237 $generated@@577 ($generated@@169 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@164) (= (type $generated@@580) $generated@@70)) ($generated@@237 $generated@@579 ($generated@@510 $generated@@580))) (and (= ($generated@@287 ($generated@@351 ($generated@@281 $generated@@164) $generated@@579)) $generated@@579) ($generated@@151 ($generated@@351 ($generated@@281 $generated@@164) $generated@@579) ($generated@@510 $generated@@580))))
 :pattern ( ($generated@@237 $generated@@579 ($generated@@510 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@266 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@233) $generated@@66))
(assert (= ($generated@@567 $generated@@233) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@169 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@164) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@267 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@169 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@155) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@266 $generated@@592) (and ($generated@@153 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@154 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@154 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@267 ($generated@@162 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@267 ($generated@@162 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@155) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@266 $generated@@596) (and ($generated@@153 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@154 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@154 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@267 ($generated@@163 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@267 ($generated@@163 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@164) (= (type $generated@@599) $generated@@164)) (= ($generated@@236 ($generated@@262 $generated@@598) ($generated@@262 $generated@@599)) ($generated@@262 ($generated@@236 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@236 ($generated@@262 $generated@@598) ($generated@@262 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@287 ($generated@@262 $generated@@600)) ($generated@@262 ($generated@@287 $generated@@600)))
 :pattern ( ($generated@@287 ($generated@@262 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@282 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@281 $generated@@602)) (= ($generated@@280 $generated@@601) 0)) (= $generated@@601 ($generated@@279 $generated@@602))))
 :pattern ( ($generated@@280 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@300 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@300 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@300 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@468)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@164)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@281 $generated@@164)) (= (type $generated@@618) $generated@@70)) (= ($generated@@151 $generated@@617 ($generated@@510 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@280 $generated@@617))) ($generated@@237 ($generated@@511 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@511 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@151 $generated@@617 ($generated@@510 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@281 $generated@@164)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@280 $generated@@621))) (< ($generated@@549 ($generated@@351 $generated@@155 ($generated@@511 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@549 ($generated@@351 $generated@@155 ($generated@@511 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@308 $generated@@164 $generated@@164)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@151 $generated@@623 ($generated@@420 $generated@@624 $generated@@625))) (and (and ($generated@@151 ($generated@@306 $generated@@623) ($generated@@252 $generated@@624)) ($generated@@151 ($generated@@361 $generated@@623) ($generated@@252 $generated@@625))) ($generated@@151 ($generated@@394 $generated@@623) ($generated@@252 ($generated@@154 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@151 $generated@@623 ($generated@@420 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@326 $generated@@164 $generated@@164)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@151 $generated@@626 ($generated@@428 $generated@@627 $generated@@628))) (and (and ($generated@@151 ($generated@@324 $generated@@626) ($generated@@257 $generated@@627)) ($generated@@151 ($generated@@372 $generated@@626) ($generated@@257 $generated@@628))) ($generated@@151 ($generated@@402 $generated@@626) ($generated@@257 ($generated@@154 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@151 $generated@@626 ($generated@@428 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@151 $generated@@629 $generated@@46))
 :pattern ( ($generated@@151 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@151 $generated@@630 $generated@@47))
 :pattern ( ($generated@@151 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@151 $generated@@631 $generated@@44))
 :pattern ( ($generated@@151 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@468) ($generated@@151 $generated@@632 $generated@@45))
 :pattern ( ($generated@@151 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@164) ($generated@@151 $generated@@633 $generated@@48))
 :pattern ( ($generated@@151 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(assert  (and (and (= (type $generated@@634) ($generated@@179 $generated@@88 $generated@@4)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@637) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@639  (=> (and (= $generated@@634 ($generated@@178 $generated@@148 $generated@@635 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@640  (=> (and ($generated@@266 $generated@@635) ($generated@@636 $generated@@635)) (=> (and (and (not (= $generated@@637 $generated@@148)) ($generated@@151 $generated@@637 $generated@@233)) (and (= 0 $generated@@638) (= (ControlFlow 0 3) 2))) $generated@@639))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@T T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@357 (T@U T@U) Bool)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@149) 16) (= (type $generated@@143) ($generated@@72 $generated@@149))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@144 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@150))
))) (= (type $generated@@146) $generated@@88)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@147 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@147 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@154) $generated@@88)) (and ($generated@@145 $generated@@153) (and (not (= $generated@@154 $generated@@146)) (= ($generated@@147 $generated@@154) ($generated@@144 $generated@@152))))) ($generated@@148 ($generated@@94 ($generated@@92 $generated@@153 $generated@@154) $generated@@143) $generated@@152))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@153 $generated@@154) $generated@@143) ($generated@@144 $generated@@152))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@155 $generated@@156 $generated@@157)) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@158) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@157 $generated@@158) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@157 $generated@@158) $generated@@60))
)))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) $generated@@88)) (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@160 ($generated@@144 $generated@@159) $generated@@161)  (or (= $generated@@160 $generated@@146) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@144 $generated@@159) $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@162 $generated@@163 ($generated@@86 0)))
 :pattern ( ($generated@@162 $generated@@163 ($generated@@86 0)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@70) (= (type $generated@@167) $generated@@88)) (= (type $generated@@168) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168) ($generated@@85 $generated@@167 ($generated@@144 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@70) (= (type $generated@@175) $generated@@70)) (= (type $generated@@176) $generated@@171)) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@149)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@149)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@162 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@162 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@88 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@73 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) ($generated@@72 $generated@@4))) (= (type $generated@@242) $generated@@88)) (= (type $generated@@243) ($generated@@72 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@149)) (= (type $generated@@251) $generated@@149)) (= ($generated@@162 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@148 $generated@@250 $generated@@248) ($generated@@148 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@162 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (= ($generated@@80 $generated@@143) 0))
(assert (forall (($generated@@253 T@T) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@72 $generated@@253))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (= ($generated@@252 $generated@@149 $generated@@64 $generated@@69) $generated@@143))
(assert  (not ($generated@@256 $generated@@143)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@171) (= (type $generated@@258) $generated@@171)) (= ($generated@@177 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@177 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@162 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@149) ($generated@@0 ($generated@@92 $generated@@261 $generated@@263))) ($generated@@148 $generated@@263 $generated@@262))
 :pattern ( ($generated@@92 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@162 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@162 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@0 ($generated@@92 $generated@@266 $generated@@268))) ($generated@@148 $generated@@268 $generated@@267))
 :pattern ( ($generated@@92 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@162 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@149)) (= (type $generated@@277) $generated@@149)) (= (type $generated@@278) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@145 $generated@@278)) (= ($generated@@85 ($generated@@245 $generated@@276 $generated@@277) ($generated@@170 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@276 $generated@@277) ($generated@@170 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@75)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@171) (= ($generated@@169 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@171) ($generated@@169 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@149) (= (type $generated@@284) $generated@@149)) (= $generated@@282 ($generated@@245 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@169 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 19)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert ($generated@@256 $generated@@60))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@295) $generated@@88)) (and (and ($generated@@145 $generated@@294) (and (not (= $generated@@295 $generated@@146)) (= ($generated@@147 $generated@@295) ($generated@@144 $generated@@293)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@60)))) ($generated@@273 ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@143) $generated@@293 $generated@@294))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@143) ($generated@@144 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@70) (= (type $generated@@297) $generated@@88)) (= ($generated@@162 $generated@@297 ($generated@@164 $generated@@296))  (and ($generated@@162 $generated@@297 ($generated@@144 $generated@@296)) (not (= $generated@@297 $generated@@146)))))
 :pattern ( ($generated@@162 $generated@@297 ($generated@@164 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@149)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@85 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@305) $generated@@149)) (= (type $generated@@306) $generated@@70)) ($generated@@155 $generated@@303 $generated@@304)) ($generated@@273 $generated@@305 $generated@@306 $generated@@303)) ($generated@@273 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@155 $generated@@303 $generated@@304) ($generated@@273 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@310) $generated@@70)) ($generated@@155 $generated@@307 $generated@@308)) ($generated@@85 $generated@@309 $generated@@310 $generated@@307)) ($generated@@85 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@155 $generated@@307 $generated@@308) ($generated@@85 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@90 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@92 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@77)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@70) (and (= ($generated@@81 ($generated@@144 $generated@@319)) $generated@@65) (= ($generated@@317 ($generated@@144 $generated@@319)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@70) (and (= ($generated@@81 ($generated@@164 $generated@@320)) $generated@@66) (= ($generated@@317 ($generated@@164 $generated@@320)) $generated@@68)))
 :pattern ( ($generated@@164 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 20)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@87 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 21)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@87 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@359) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@357 $generated@@358 $generated@@359)) (and ($generated@@155 $generated@@358 $generated@@359) (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@73 (type $generated@@361))))
 (=> (and (and (= (type $generated@@360) $generated@@88) (= (type $generated@@361) ($generated@@72 $generated@@362))) (not ($generated@@256 $generated@@361))) (= ($generated@@94 ($generated@@92 $generated@@358 $generated@@360) $generated@@361) ($generated@@94 ($generated@@92 $generated@@359 $generated@@360) $generated@@361))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@359 $generated@@360) $generated@@361))
))))
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@90 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@87 $generated@@364 $generated@@2)) (= ($generated@@185 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@92 $generated@@363 $generated@@365))) (<= ($generated ($generated@@92 $generated@@363 $generated@@365)) ($generated@@311 $generated@@363))))
 :pattern ( ($generated@@92 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@185 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@70) (= (type $generated@@367) $generated@@88)) (= ($generated@@162 $generated@@367 ($generated@@144 $generated@@366))  (or (= $generated@@367 $generated@@146) (= ($generated@@147 $generated@@367) ($generated@@144 $generated@@366)))))
 :pattern ( ($generated@@162 $generated@@367 ($generated@@144 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@325 (type $generated@@368))))
(let (($generated@@370 ($generated@@324 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@323 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@322 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@321 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@325 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@325 (type $generated@@375))))
(let (($generated@@377 ($generated@@324 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@323 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@322 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@343 (type $generated@@379))))
(let (($generated@@381 ($generated@@342 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@341 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@340 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@339 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@343 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@343 (type $generated@@386))))
(let (($generated@@388 ($generated@@342 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@341 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@340 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@162 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@149) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@148 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@162 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@393 ($generated@@259 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@149) ($generated@@0 ($generated@@92 $generated@@393 $generated@@396))) ($generated@@273 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@92 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@85 $generated@@393 ($generated@@259 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@397 ($generated@@264 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@149) ($generated@@0 ($generated@@92 $generated@@397 $generated@@400))) ($generated@@273 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@92 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@85 $generated@@397 ($generated@@264 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@92 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@92 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@403 $generated@@406)) ($generated@@87 $generated@@149 $generated@@4))
 :pattern ( ($generated@@403 $generated@@406))
)) (forall (($generated@@407 T@T) ($generated@@408 T@U) ) (! (= (type ($generated@@404 $generated@@407 $generated@@408)) $generated@@407)
 :pattern ( ($generated@@404 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@325 (type $generated@@409))))
(let (($generated@@411 ($generated@@324 (type $generated@@409))))
(= (type ($generated@@405 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@405 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@413) $generated@@149)) (= ($generated@@0 ($generated@@92 ($generated@@403 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@412) ($generated@@178 ($generated@@404 $generated@@171 $generated@@413)))) (= ($generated@@92 ($generated@@405 $generated@@412) ($generated@@178 ($generated@@404 $generated@@171 $generated@@413))) ($generated@@179 ($generated@@404 $generated@@171 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@149 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@343 (type $generated@@417))))
(let (($generated@@419 ($generated@@342 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@421) $generated@@149)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@420) ($generated@@178 ($generated@@404 $generated@@171 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@178 ($generated@@404 $generated@@171 $generated@@421))) ($generated@@179 ($generated@@404 $generated@@171 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@324 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@323 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@92 ($generated@@372 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@92 ($generated@@405 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@422) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@92 ($generated@@372 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@342 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@341 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@435) $generated@@439))) (and ($generated@@273 ($generated@@92 ($generated@@405 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@273 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@443) $generated@@447))) (and ($generated@@273 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@273 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@448 $generated@@450))) (and ($generated@@155 $generated@@448 $generated@@449) ($generated@@155 $generated@@449 $generated@@450))) ($generated@@155 $generated@@448 $generated@@450))
 :pattern ( ($generated@@155 $generated@@448 $generated@@449) ($generated@@155 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@87 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@343 (type $generated@@453))))
(let (($generated@@455 ($generated@@342 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@341 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@340 $generated@@455 $generated@@454)) (= ($generated@@339 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@339 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@343 (type $generated@@456))))
(let (($generated@@458 ($generated@@342 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@341 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@340 $generated@@458 $generated@@457)) (= ($generated@@383 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@383 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@343 (type $generated@@459))))
(let (($generated@@461 ($generated@@342 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@341 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@340 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@149))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@325 (type $generated@@462))))
(let (($generated@@464 ($generated@@324 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@323 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@322 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) ($generated@@0 ($generated@@92 ($generated@@403 $generated@@462) ($generated@@298 ($generated@@245 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@403 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@343 (type $generated@@467))))
(let (($generated@@469 ($generated@@342 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@341 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@340 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@149) (= (type $generated@@471) $generated@@149)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@467) ($generated@@298 ($generated@@245 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@76)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@T) ) (!  (=> (and (= (type $generated@@474) $generated@@76) (= (type $generated@@475) $generated@@74)) (and (= ($generated@@472 ($generated@@252 $generated@@476 $generated@@474 $generated@@475)) $generated@@474) (= ($generated@@83 ($generated@@252 $generated@@476 $generated@@474 $generated@@475)) $generated@@475)))
 :pattern ( ($generated@@252 $generated@@476 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) ($generated@@148 $generated@@477 $generated@@46)) (and (= ($generated@@298 ($generated@@404 $generated@@2 $generated@@477)) $generated@@477) ($generated@@162 ($generated@@404 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@148 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@149) ($generated@@148 $generated@@478 $generated@@47)) (and (= ($generated@@298 ($generated@@404 $generated@@3 $generated@@478)) $generated@@478) ($generated@@162 ($generated@@404 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@148 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) ($generated@@148 $generated@@479 $generated@@44)) (and (= ($generated@@298 ($generated@@404 $generated@@4 $generated@@479)) $generated@@479) ($generated@@162 ($generated@@404 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@148 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 22))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@149) ($generated@@148 $generated@@481 $generated@@45)) (and (= ($generated@@298 ($generated@@404 $generated@@480 $generated@@481)) $generated@@481) ($generated@@162 ($generated@@404 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@148 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@148 ($generated@@298 $generated@@482) $generated@@483) ($generated@@162 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@148 ($generated@@298 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@90 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@87 $generated@@485 $generated@@2)) (<= 0 ($generated@@311 $generated@@484))))
 :pattern ( ($generated@@311 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@288 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@287 $generated@@487)) (<= 0 ($generated@@286 $generated@@486))))
 :pattern ( ($generated@@286 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@432 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@432 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@440 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@440 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@440 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@81 ($generated@@440 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@149) (= (type $generated@@509) $generated@@149)) (= ($generated@@279 ($generated@@245 $generated@@508 $generated@@509)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@170 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@170 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@70) (= (type $generated@@517) $generated@@70)) (= ($generated@@514 ($generated@@170 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@170 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@149) (= (type $generated@@519) $generated@@149)) (= ($generated@@178 ($generated@@245 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@245 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) (= (type $generated@@521) $generated@@149)) (= ($generated@@179 ($generated@@245 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@245 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@288 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@287 $generated@@149)) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@286 $generated@@528))) ($generated@@273 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@85 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@86 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@86 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@259 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@259 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@259 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@264 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@264 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@264 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@184 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@184 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@81 ($generated@@184 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@70)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@81 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@550 ($generated@@144 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@144 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@70) (= ($generated@@553 ($generated@@164 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@164 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@404 $generated@@557 ($generated@@298 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@298 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@162 $generated@@558 ($generated@@432 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@558) $generated@@561))) (and ($generated@@148 ($generated@@92 ($generated@@405 $generated@@558) $generated@@561) $generated@@560) ($generated@@148 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@558) $generated@@561))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@162 $generated@@558 ($generated@@432 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) (= ($generated@@162 $generated@@562 ($generated@@440 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@562) $generated@@565))) (and ($generated@@148 ($generated@@92 ($generated@@415 $generated@@562) $generated@@565) $generated@@564) ($generated@@148 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@162 $generated@@562 ($generated@@440 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) (= (type $generated@@569) $generated@@149)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@245 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@149)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@245 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@245 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@149) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) ($generated@@148 $generated@@572 ($generated@@432 $generated@@573 $generated@@574))) (and (= ($generated@@298 ($generated@@404 ($generated@@323 $generated@@149 $generated@@149) $generated@@572)) $generated@@572) ($generated@@162 ($generated@@404 ($generated@@323 $generated@@149 $generated@@149) $generated@@572) ($generated@@432 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@148 $generated@@572 ($generated@@432 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@70)) ($generated@@148 $generated@@575 ($generated@@440 $generated@@576 $generated@@577))) (and (= ($generated@@298 ($generated@@404 ($generated@@341 $generated@@149 $generated@@149) $generated@@575)) $generated@@575) ($generated@@162 ($generated@@404 ($generated@@341 $generated@@149 $generated@@149) $generated@@575) ($generated@@440 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@148 $generated@@575 ($generated@@440 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@70) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) $generated@@149)) ($generated@@148 $generated@@580 ($generated@@170 $generated@@578 $generated@@579))) (and (= ($generated@@298 ($generated@@404 $generated@@171 $generated@@580)) $generated@@580) ($generated@@162 ($generated@@404 $generated@@171 $generated@@580) ($generated@@170 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@148 $generated@@580 ($generated@@170 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@92 ($generated@@451 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@92 ($generated@@451 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@170 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@317 ($generated@@170 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@170 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@171) (= ($generated@@566 ($generated@@298 $generated@@585)) ($generated@@567 $generated@@585)))
 :pattern ( ($generated@@566 ($generated@@298 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@149) ($generated@@148 $generated@@586 ($generated@@86 0))) (and (= ($generated@@298 ($generated@@404 $generated@@2 $generated@@586)) $generated@@586) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@586) ($generated@@86 0))))
 :pattern ( ($generated@@148 $generated@@586 ($generated@@86 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@149) (= (type $generated@@588) $generated@@70)) ($generated@@148 $generated@@587 ($generated@@259 $generated@@588))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@587)) $generated@@587) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@587) ($generated@@259 $generated@@588))))
 :pattern ( ($generated@@148 $generated@@587 ($generated@@259 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@149) (= (type $generated@@590) $generated@@70)) ($generated@@148 $generated@@589 ($generated@@264 $generated@@590))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@589)) $generated@@589) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@589) ($generated@@264 $generated@@590))))
 :pattern ( ($generated@@148 $generated@@589 ($generated@@264 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@149) (= (type $generated@@592) $generated@@70)) ($generated@@148 $generated@@591 ($generated@@184 $generated@@592))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@2) $generated@@591)) $generated@@591) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@2) $generated@@591) ($generated@@184 $generated@@592))))
 :pattern ( ($generated@@148 $generated@@591 ($generated@@184 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@70)) ($generated@@148 $generated@@593 ($generated@@522 $generated@@594))) (and (= ($generated@@298 ($generated@@404 ($generated@@287 $generated@@149) $generated@@593)) $generated@@593) ($generated@@162 ($generated@@404 ($generated@@287 $generated@@149) $generated@@593) ($generated@@522 $generated@@594))))
 :pattern ( ($generated@@148 $generated@@593 ($generated@@522 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@70) (= (type $generated@@596) $generated@@149)) ($generated@@148 $generated@@596 ($generated@@144 $generated@@595))) (and (= ($generated@@298 ($generated@@404 $generated@@88 $generated@@596)) $generated@@596) ($generated@@162 ($generated@@404 $generated@@88 $generated@@596) ($generated@@144 $generated@@595))))
 :pattern ( ($generated@@148 $generated@@596 ($generated@@144 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@70) (= (type $generated@@598) $generated@@149)) ($generated@@148 $generated@@598 ($generated@@164 $generated@@597))) (and (= ($generated@@298 ($generated@@404 $generated@@88 $generated@@598)) $generated@@598) ($generated@@162 ($generated@@404 $generated@@88 $generated@@598) ($generated@@164 $generated@@597))))
 :pattern ( ($generated@@148 $generated@@598 ($generated@@164 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (=> (and (and (and (= (type $generated@@599) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@600) $generated@@88)) (= (type $generated@@601) ($generated@@72 $generated@@603))) ($generated@@145 ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))) ($generated@@155 $generated@@599 ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@604 ($generated@@184 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@149) (< 0 ($generated ($generated@@92 $generated@@604 $generated@@607)))) ($generated@@273 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@92 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@85 $generated@@604 ($generated@@184 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@171) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@145 $generated@@610) (and ($generated@@169 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@70) ($generated@@85 $generated@@608 ($generated@@170 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 ($generated@@170 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@273 ($generated@@178 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@273 ($generated@@178 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@171) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@145 $generated@@614) (and ($generated@@169 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@70) ($generated@@85 $generated@@612 ($generated@@170 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@85 $generated@@612 ($generated@@170 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@273 ($generated@@179 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@273 ($generated@@179 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@149) (= (type $generated@@617) $generated@@149)) (= ($generated@@245 ($generated@@269 $generated@@616) ($generated@@269 $generated@@617)) ($generated@@269 ($generated@@245 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@245 ($generated@@269 $generated@@616) ($generated@@269 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@298 ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@298 $generated@@618)))
 :pattern ( ($generated@@298 ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@288 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@287 $generated@@620)) (= ($generated@@286 $generated@@619) 0)) (= $generated@@619 ($generated@@285 $generated@@620))))
 :pattern ( ($generated@@286 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@87 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@311 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@311 $generated@@621) ($generated ($generated@@92 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@311 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@2)) ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@3)) ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@4)) ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@632) $generated@@480)) ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@634) $generated@@149)) ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@287 $generated@@149)) (= (type $generated@@636) $generated@@70)) (= ($generated@@162 $generated@@635 ($generated@@522 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@286 $generated@@635))) ($generated@@148 ($generated@@523 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@523 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@162 $generated@@635 ($generated@@522 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@287 $generated@@149)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@286 $generated@@639))) (< ($generated@@567 ($generated@@404 $generated@@171 ($generated@@523 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@567 ($generated@@404 $generated@@171 ($generated@@523 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@162 $generated@@641 ($generated@@432 $generated@@642 $generated@@643))) (and (and ($generated@@162 ($generated@@321 $generated@@641) ($generated@@259 $generated@@642)) ($generated@@162 ($generated@@372 $generated@@641) ($generated@@259 $generated@@643))) ($generated@@162 ($generated@@403 $generated@@641) ($generated@@259 ($generated@@170 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@162 $generated@@641 ($generated@@432 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) $generated@@70)) ($generated@@162 $generated@@644 ($generated@@440 $generated@@645 $generated@@646))) (and (and ($generated@@162 ($generated@@339 $generated@@644) ($generated@@264 $generated@@645)) ($generated@@162 ($generated@@383 $generated@@644) ($generated@@264 $generated@@646))) ($generated@@162 ($generated@@414 $generated@@644) ($generated@@264 ($generated@@170 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@162 $generated@@644 ($generated@@440 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@162 $generated@@647 $generated@@46))
 :pattern ( ($generated@@162 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@162 $generated@@648 $generated@@47))
 :pattern ( ($generated@@162 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@162 $generated@@649 $generated@@44))
 :pattern ( ($generated@@162 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@480) ($generated@@162 $generated@@650 $generated@@45))
 :pattern ( ($generated@@162 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@149) ($generated@@162 $generated@@651 $generated@@48))
 :pattern ( ($generated@@162 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(assert  (and (and (and (and (= (type $generated@@652) ($generated@@191 $generated@@88 $generated@@4)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@655) $generated@@149)) (= (type $generated@@656) $generated@@70)) (= (type $generated@@657) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@659  (=> (and (= $generated@@652 ($generated@@190 $generated@@146 $generated@@653 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@660  (=> (and (and (and ($generated@@145 $generated@@653) ($generated@@654 $generated@@653)) (and ($generated@@148 $generated@@655 $generated@@656) ($generated@@273 $generated@@655 $generated@@656 $generated@@653))) (and (and (not (= $generated@@657 $generated@@146)) ($generated@@162 $generated@@657 ($generated@@164 $generated@@656))) (and (= 0 $generated@@658) (= (ControlFlow 0 3) 2)))) $generated@@659)))
$generated@@660)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@545 (T@T) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (= (type $generated@@141) $generated@@69))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@79 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@82) (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@80 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@69)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@82) (= ($generated@@148 $generated@@173 $generated@@144)  (or (= $generated@@173 $generated@@145) (= ($generated@@171 $generated@@173) $generated@@144))))
 :pattern ( ($generated@@148 $generated@@173 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@82 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@82) (= (type $generated@@224) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@82)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@69))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@231 $generated@@230 $generated@@232) ($generated@@79 $generated@@231 $generated@@144 $generated@@232)))
 :pattern ( ($generated@@79 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@152)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@69) (= (type $generated@@238) $generated@@69)) (= (type $generated@@239) $generated@@161)) (= (type $generated@@240) $generated@@161)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@152) (= (type $generated@@242) $generated@@152)) (= ($generated@@158 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@158 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@148 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@161) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@148 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@161) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@148 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@69) (= (type $generated@@262) $generated@@69)) (= (type $generated@@263) $generated@@161)) (= (type $generated@@264) $generated@@161)) (= (type $generated@@265) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@259 $generated@@265)) (= ($generated@@79 ($generated@@233 $generated@@263 $generated@@264) ($generated@@151 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@79 ($generated@@233 $generated@@263 $generated@@264) ($generated@@151 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@73)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@152) (= ($generated@@150 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@62)))
 :pattern ( ($generated@@150 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@152) ($generated@@150 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@161) (= (type $generated@@271) $generated@@161)) (= $generated@@269 ($generated@@233 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@150 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@2) (= ($generated@@148 $generated@@280 $generated@@141) (<= ($generated@@253 0) ($generated $generated@@280))))
 :pattern ( ($generated@@148 $generated@@280 $generated@@141))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@161)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@69) (= (type $generated@@285) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@260 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@79 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@260 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@288) $generated@@161)) (= (type $generated@@289) $generated@@69)) ($generated@@137 $generated@@286 $generated@@287)) ($generated@@260 $generated@@288 $generated@@289 $generated@@286)) ($generated@@260 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@137 $generated@@286 $generated@@287) ($generated@@260 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@291) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@293) $generated@@69)) ($generated@@137 $generated@@290 $generated@@291)) ($generated@@79 $generated@@292 $generated@@293 $generated@@290)) ($generated@@79 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@137 $generated@@290 $generated@@291) ($generated@@79 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@81 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@84 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@81 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@86 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@81 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@86 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@86 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@81 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@84 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@81 $generated@@337 $generated@@2)) (= ($generated@@167 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@86 $generated@@336 $generated@@338))) (<= ($generated ($generated@@86 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@86 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@167 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@161) ($generated@@234 $generated@@342 $generated@@141)) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@2 $generated@@342) $generated@@141)))
 :pattern ( ($generated@@234 $generated@@342 $generated@@141))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@161) ($generated@@234 $generated@@343 $generated@@144)) (and (= ($generated@@281 ($generated@@339 $generated@@82 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@82 $generated@@343) $generated@@144)))
 :pattern ( ($generated@@234 $generated@@343 $generated@@144))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@161) ($generated@@234 $generated@@344 $generated@@230)) (and (= ($generated@@281 ($generated@@339 $generated@@82 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@82 $generated@@344) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@344 $generated@@230))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@82) (= ($generated@@148 $generated@@345 $generated@@230)  (and ($generated@@148 $generated@@345 $generated@@144) (not (= $generated@@345 $generated@@145)))))
 :pattern ( ($generated@@148 $generated@@345 $generated@@230))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@304 (type $generated@@346))))
(let (($generated@@348 ($generated@@303 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@302 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@301 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@300 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@304 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@81 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(let (($generated@@355 ($generated@@303 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@302 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@301 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(let (($generated@@359 ($generated@@321 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@320 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@319 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@318 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@322 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@81 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(let (($generated@@366 ($generated@@321 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@320 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@319 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@86 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@369) $generated@@69)) (= ($generated@@148 $generated@@368 ($generated@@166 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@368 $generated@@370)))) ($generated@@234 $generated@@370 $generated@@369))
 :pattern ( ($generated@@86 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@148 $generated@@368 ($generated@@166 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@372) $generated@@69)) (= (type $generated@@373) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@371 ($generated@@243 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@161) ($generated@@0 ($generated@@86 $generated@@371 $generated@@374))) ($generated@@260 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@86 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@79 $generated@@371 ($generated@@243 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@376) $generated@@69)) (= (type $generated@@377) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@161) ($generated@@0 ($generated@@86 $generated@@375 $generated@@378))) ($generated@@260 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@86 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@79 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@86 ($generated@@295 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@86 ($generated@@295 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@304 (type $generated@@384))))
(let (($generated@@386 ($generated@@303 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@81 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@302 $generated@@161 $generated@@161)) (= (type $generated@@388) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@86 ($generated@@300 $generated@@387) ($generated@@159 ($generated@@339 $generated@@152 $generated@@388)))) (= ($generated@@86 ($generated@@382 $generated@@387) ($generated@@159 ($generated@@339 $generated@@152 $generated@@388))) ($generated@@160 ($generated@@339 $generated@@152 $generated@@388))))))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@322 (type $generated@@392))))
(let (($generated@@394 ($generated@@321 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@320 $generated@@161 $generated@@161)) (= (type $generated@@396) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@395) ($generated@@159 ($generated@@339 $generated@@152 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@159 ($generated@@339 $generated@@152 $generated@@396))) ($generated@@160 ($generated@@339 $generated@@152 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@303 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@302 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@86 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@86 ($generated@@300 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@86 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@397) $generated@@401))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@321 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@320 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@86 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@86 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@402) $generated@@406))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@86 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@69)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@302 $generated@@161 $generated@@161)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@86 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@79 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@320 $generated@@161 $generated@@161)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@423) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@424) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@425) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@423 $generated@@425))) (and ($generated@@137 $generated@@423 $generated@@424) ($generated@@137 $generated@@424 $generated@@425))) ($generated@@137 $generated@@423 $generated@@425))
 :pattern ( ($generated@@137 $generated@@423 $generated@@424) ($generated@@137 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@81 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@322 (type $generated@@428))))
(let (($generated@@430 ($generated@@321 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@320 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@319 $generated@@430 $generated@@429)) (= ($generated@@318 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@318 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@322 (type $generated@@431))))
(let (($generated@@433 ($generated@@321 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@320 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@319 $generated@@433 $generated@@432)) (= ($generated@@361 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@361 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@322 (type $generated@@434))))
(let (($generated@@436 ($generated@@321 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@320 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@319 $generated@@436 $generated@@435)) (= ($generated@@389 $generated@@434) ($generated@@426 $generated@@161))))))
 :pattern ( ($generated@@389 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@304 (type $generated@@437))))
(let (($generated@@439 ($generated@@303 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@302 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@301 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@161) (= (type $generated@@441) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@381 $generated@@437) ($generated@@281 ($generated@@233 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@381 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@322 (type $generated@@442))))
(let (($generated@@444 ($generated@@321 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@320 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@319 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@161) (= (type $generated@@446) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@442) ($generated@@281 ($generated@@233 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@161) ($generated@@234 $generated@@447 $generated@@46)) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@447)) $generated@@447) ($generated@@148 ($generated@@339 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@161) ($generated@@234 $generated@@448 $generated@@47)) (and (= ($generated@@281 ($generated@@339 $generated@@3 $generated@@448)) $generated@@448) ($generated@@148 ($generated@@339 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@161) ($generated@@234 $generated@@449 $generated@@44)) (and (= ($generated@@281 ($generated@@339 $generated@@4 $generated@@449)) $generated@@449) ($generated@@148 ($generated@@339 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@161) ($generated@@234 $generated@@451 $generated@@45)) (and (= ($generated@@281 ($generated@@339 $generated@@450 $generated@@451)) $generated@@451) ($generated@@148 ($generated@@339 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@69) (= ($generated@@234 ($generated@@281 $generated@@452) $generated@@453) ($generated@@148 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@234 ($generated@@281 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@84 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@81 $generated@@455 $generated@@2)) (<= 0 ($generated@@294 $generated@@454))))
 :pattern ( ($generated@@294 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@275 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@274 $generated@@457)) (<= 0 ($generated@@273 $generated@@456))))
 :pattern ( ($generated@@273 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@69)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@458 ($generated@@407 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@407 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@407 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@77 ($generated@@407 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@415 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@161) (= (type $generated@@479) $generated@@161)) (= ($generated@@266 ($generated@@233 $generated@@478 $generated@@479)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@151 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@151 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@151 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@151 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@161) (= (type $generated@@489) $generated@@161)) (= ($generated@@159 ($generated@@233 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@233 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@161) (= (type $generated@@491) $generated@@161)) (= ($generated@@160 ($generated@@233 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@490 $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@275 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@274 $generated@@161)) (= (type $generated@@499) $generated@@69)) (= (type $generated@@500) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@273 $generated@@498))) ($generated@@260 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@79 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@80 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@80 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@504 ($generated@@243 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@508 ($generated@@248 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@248 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@166 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@339 $generated@@521 ($generated@@281 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@281 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@302 $generated@@161 $generated@@161)) (= (type $generated@@523) $generated@@69)) (= (type $generated@@524) $generated@@69)) (= ($generated@@148 $generated@@522 ($generated@@407 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@522) $generated@@525))) (and ($generated@@234 ($generated@@86 ($generated@@382 $generated@@522) $generated@@525) $generated@@524) ($generated@@234 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@522) $generated@@525))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@148 $generated@@522 ($generated@@407 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@320 $generated@@161 $generated@@161)) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) (= ($generated@@148 $generated@@526 ($generated@@415 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@526) $generated@@529))) (and ($generated@@234 ($generated@@86 ($generated@@390 $generated@@526) $generated@@529) $generated@@528) ($generated@@234 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@526) $generated@@529))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@148 $generated@@526 ($generated@@415 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) (= (type $generated@@533) $generated@@161)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@161) (= (type $generated@@535) $generated@@161)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@233 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@233 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@161) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@234 $generated@@536 ($generated@@407 $generated@@537 $generated@@538))) (and (= ($generated@@281 ($generated@@339 ($generated@@302 $generated@@161 $generated@@161) $generated@@536)) $generated@@536) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@161 $generated@@161) $generated@@536) ($generated@@407 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@536 ($generated@@407 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@234 $generated@@539 ($generated@@415 $generated@@540 $generated@@541))) (and (= ($generated@@281 ($generated@@339 ($generated@@320 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@161 $generated@@161) $generated@@539) ($generated@@415 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@161)) ($generated@@234 $generated@@544 ($generated@@151 $generated@@542 $generated@@543))) (and (= ($generated@@281 ($generated@@339 $generated@@152 $generated@@544)) $generated@@544) ($generated@@148 ($generated@@339 $generated@@152 $generated@@544) ($generated@@151 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@234 $generated@@544 ($generated@@151 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@546 T@T) ) (! (= (type ($generated@@545 $generated@@546)) ($generated@@81 $generated@@546 $generated@@4))
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@86 ($generated@@545 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@86 ($generated@@545 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@86 ($generated@@426 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@86 ($generated@@426 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@74)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@69) (= (type $generated@@554) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@553 $generated@@554)) $generated@@63) (= ($generated@@551 ($generated@@151 $generated@@553 $generated@@554)) $generated@@67)))
 :pattern ( ($generated@@151 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@152) (= ($generated@@530 ($generated@@281 $generated@@555)) ($generated@@531 $generated@@555)))
 :pattern ( ($generated@@530 ($generated@@281 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@161) ($generated@@234 $generated@@556 ($generated@@80 0))) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@556)) $generated@@556) ($generated@@148 ($generated@@339 ($generated@@81 $generated@@161 $generated@@4) $generated@@556) ($generated@@80 0))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@80 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@161) (= (type $generated@@558) $generated@@69)) ($generated@@234 $generated@@557 ($generated@@243 $generated@@558))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@161 $generated@@4) $generated@@557)) $generated@@557) ($generated@@148 ($generated@@339 ($generated@@81 $generated@@161 $generated@@4) $generated@@557) ($generated@@243 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@161) (= (type $generated@@560) $generated@@69)) ($generated@@234 $generated@@559 ($generated@@248 $generated@@560))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@161 $generated@@4) $generated@@559)) $generated@@559) ($generated@@148 ($generated@@339 ($generated@@81 $generated@@161 $generated@@4) $generated@@559) ($generated@@248 $generated@@560))))
 :pattern ( ($generated@@234 $generated@@559 ($generated@@248 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@69)) ($generated@@234 $generated@@561 ($generated@@166 $generated@@562))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@161 $generated@@2) $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@81 $generated@@161 $generated@@2) $generated@@561) ($generated@@166 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@166 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@161) (= (type $generated@@564) $generated@@69)) ($generated@@234 $generated@@563 ($generated@@492 $generated@@564))) (and (= ($generated@@281 ($generated@@339 ($generated@@274 $generated@@161) $generated@@563)) $generated@@563) ($generated@@148 ($generated@@339 ($generated@@274 $generated@@161) $generated@@563) ($generated@@492 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@563 ($generated@@492 $generated@@564)))
)))
(assert (= ($generated@@77 $generated@@141) $generated@@61))
(assert (= ($generated@@551 $generated@@141) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@551 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@230) $generated@@65))
(assert (= ($generated@@551 $generated@@230) $generated@@68))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@566) $generated@@69)) (= (type $generated@@567) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@565 ($generated@@166 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@565 $generated@@568)))) ($generated@@260 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@86 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@79 $generated@@565 ($generated@@166 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@152) (= (type $generated@@570) $generated@@69)) (= (type $generated@@571) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@259 $generated@@571) (and ($generated@@150 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@69) ($generated@@79 $generated@@569 ($generated@@151 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@79 $generated@@569 ($generated@@151 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@260 ($generated@@159 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@260 ($generated@@159 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@152) (= (type $generated@@574) $generated@@69)) (= (type $generated@@575) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@259 $generated@@575) (and ($generated@@150 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@69) ($generated@@79 $generated@@573 ($generated@@151 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@79 $generated@@573 ($generated@@151 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@260 ($generated@@160 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@260 ($generated@@160 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@161) (= (type $generated@@578) $generated@@161)) (= ($generated@@233 ($generated@@255 $generated@@577) ($generated@@255 $generated@@578)) ($generated@@255 ($generated@@233 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@577) ($generated@@255 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@281 ($generated@@8 ($generated@@253 $generated@@579))) ($generated@@255 ($generated@@281 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@281 ($generated@@8 ($generated@@253 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@281 ($generated@@255 $generated@@580)) ($generated@@255 ($generated@@281 $generated@@580)))
 :pattern ( ($generated@@281 ($generated@@255 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@275 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@274 $generated@@582)) (= ($generated@@273 $generated@@581) 0)) (= $generated@@581 ($generated@@272 $generated@@582))))
 :pattern ( ($generated@@273 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@81 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@294 ($generated@@87 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@294 $generated@@583) ($generated ($generated@@86 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@294 ($generated@@87 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@588) $generated@@2)) ($generated@@79 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@79 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@590) $generated@@3)) ($generated@@79 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@79 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@592) $generated@@4)) ($generated@@79 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@79 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@594) $generated@@450)) ($generated@@79 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@79 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@596) $generated@@161)) ($generated@@79 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@79 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@274 $generated@@161)) (= (type $generated@@598) $generated@@69)) (= ($generated@@148 $generated@@597 ($generated@@492 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@273 $generated@@597))) ($generated@@234 ($generated@@493 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@493 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@148 $generated@@597 ($generated@@492 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@274 $generated@@161)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@273 $generated@@601))) (< ($generated@@531 ($generated@@339 $generated@@152 ($generated@@493 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@531 ($generated@@339 $generated@@152 ($generated@@493 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@302 $generated@@161 $generated@@161)) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) $generated@@69)) ($generated@@148 $generated@@603 ($generated@@407 $generated@@604 $generated@@605))) (and (and ($generated@@148 ($generated@@300 $generated@@603) ($generated@@243 $generated@@604)) ($generated@@148 ($generated@@350 $generated@@603) ($generated@@243 $generated@@605))) ($generated@@148 ($generated@@381 $generated@@603) ($generated@@243 ($generated@@151 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@148 $generated@@603 ($generated@@407 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@320 $generated@@161 $generated@@161)) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@148 $generated@@606 ($generated@@415 $generated@@607 $generated@@608))) (and (and ($generated@@148 ($generated@@318 $generated@@606) ($generated@@248 $generated@@607)) ($generated@@148 ($generated@@361 $generated@@606) ($generated@@248 $generated@@608))) ($generated@@148 ($generated@@389 $generated@@606) ($generated@@248 ($generated@@151 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@148 $generated@@606 ($generated@@415 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@148 $generated@@609 $generated@@46))
 :pattern ( ($generated@@148 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@148 $generated@@610 $generated@@47))
 :pattern ( ($generated@@148 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@148 $generated@@611 $generated@@44))
 :pattern ( ($generated@@148 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@450) ($generated@@148 $generated@@612 $generated@@45))
 :pattern ( ($generated@@148 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@161) ($generated@@148 $generated@@613 $generated@@48))
 :pattern ( ($generated@@148 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(assert  (and (and (and (and (and (= (type $generated@@614) ($generated@@176 $generated@@82 $generated@@4)) (= (type $generated@@615) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@616) $generated@@82)) (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@619) $generated@@82)) (= (type $generated@@621) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@623  (=> (= $generated@@614 ($generated@@175 $generated@@145 $generated@@615 $generated@@60 false)) (=> (and (and (not (= $generated@@616 $generated@@145)) (and ($generated@@148 $generated@@616 $generated@@230) ($generated@@79 $generated@@616 $generated@@230 $generated@@615))) (and ($generated@@259 $generated@@617) ($generated@@618 $generated@@617))) (=> (and (and (and (not (= $generated@@619 $generated@@145)) (and ($generated@@148 $generated@@619 $generated@@230) ($generated@@79 $generated@@619 $generated@@230 $generated@@617))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@615 $generated@@619) $generated@@60)))) (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@82) (=> (and (not (= $generated@@624 $generated@@145)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@615 $generated@@624) $generated@@60))) (= ($generated@@86 $generated@@617 $generated@@624) ($generated@@86 $generated@@615 $generated@@624))))
 :pattern ( ($generated@@86 $generated@@617 $generated@@624))
)) ($generated@@137 $generated@@615 $generated@@617))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@148 ($generated@@8 ($generated@@253 0)) $generated@@141)))))))))
(let (($generated@@625  (=> (and ($generated@@259 $generated@@615) ($generated@@618 $generated@@615)) (=> (and (and (=> $generated@@620 (and ($generated@@148 $generated@@621 $generated@@230) ($generated@@79 $generated@@621 $generated@@230 $generated@@615))) true) (and (= 2 $generated@@622) (= (ControlFlow 0 5) 2))) $generated@@623))))
$generated@@625)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 (T@T T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (Int) Int)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@378 (T@U T@U) Bool)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U Int) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 6) (= (type $generated@@44) $generated@@77)) (= (type $generated@@45) $generated@@77)) (= (type $generated@@46) $generated@@77)) (= (type $generated@@47) $generated@@77)) (= (type $generated@@48) $generated@@77)) (= ($generated@@1 $generated@@78) 7)) (= (type $generated@@49) $generated@@78)) (= (type $generated@@50) $generated@@78)) (= (type $generated@@51) $generated@@78)) (= (type $generated@@52) $generated@@78)) (= (type $generated@@53) $generated@@78)) (= (type $generated@@54) $generated@@78)) (= (type $generated@@55) $generated@@78)) (= (type $generated@@56) $generated@@78)) (= (type $generated@@57) $generated@@78)) (= (type $generated@@58) $generated@@78)) (= (type $generated@@59) $generated@@78)) (forall (($generated@@85 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@85)) 8))) (forall (($generated@@86 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@86))
))) (= (type $generated@@60) ($generated@@79 $generated@@4))) (= ($generated@@1 $generated@@81) 9)) (= (type $generated@@61) $generated@@81)) (= (type $generated@@62) $generated@@78)) (= ($generated@@1 $generated@@82) 10)) (= (type $generated@@63) $generated@@82)) (= (type $generated@@64) $generated@@78)) (= ($generated@@1 $generated@@83) 11)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@83)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= ($generated@@1 $generated@@84) 12)) (= (type $generated@@71) $generated@@84)) (= (type $generated@@72) $generated@@84)) (= (type $generated@@73) $generated@@84)) (= (type $generated@@74) $generated@@84)) (= (type $generated@@75) $generated@@81)) (= (type $generated@@76) $generated@@81)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76)
)
(assert (= ($generated@@87 $generated@@60) 0))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@78)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@81)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@80 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@80 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@77)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@156) 16) (= (type $generated@@150) ($generated@@79 $generated@@156))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@151 $generated@@157)) $generated@@77)
 :pattern ( ($generated@@151 $generated@@157))
))) (= (type $generated@@153) $generated@@95)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@154 $generated@@158)) $generated@@77)
 :pattern ( ($generated@@154 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@77) (= (type $generated@@160) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@161) $generated@@95)) (and ($generated@@152 $generated@@160) (and (not (= $generated@@161 $generated@@153)) (= ($generated@@154 $generated@@161) ($generated@@151 $generated@@159))))) ($generated@@155 ($generated@@101 ($generated@@99 $generated@@160 $generated@@161) $generated@@150) $generated@@159))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@160 $generated@@161) $generated@@150) ($generated@@151 $generated@@159))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@164) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@162 $generated@@163 $generated@@164)) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@163 $generated@@165) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@164 $generated@@165) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@164 $generated@@165) $generated@@60))
)))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@77) (= (type $generated@@167) $generated@@95)) (= (type $generated@@168) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@167 ($generated@@151 $generated@@166) $generated@@168)  (or (= $generated@@167 $generated@@153) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@168 $generated@@167) $generated@@60)))))
 :pattern ( ($generated@@92 $generated@@167 ($generated@@151 $generated@@166) $generated@@168))
)))
(assert (= (type $generated@@169) $generated@@77))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@2) (= (type $generated@@171) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@170 $generated@@169 $generated@@171))
 :pattern ( ($generated@@92 $generated@@170 $generated@@169 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@77))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@95) (= (type $generated@@174) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@153) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@92 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@175 $generated@@176 ($generated@@93 0)))
 :pattern ( ($generated@@175 $generated@@176 ($generated@@93 0)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@77)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@77) (= (type $generated@@180) $generated@@95)) (= (type $generated@@181) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@180 ($generated@@177 $generated@@179) $generated@@181) ($generated@@92 $generated@@180 ($generated@@151 $generated@@179) $generated@@181)))
 :pattern ( ($generated@@92 $generated@@180 ($generated@@177 $generated@@179) $generated@@181))
)))
(assert  (and (= ($generated@@1 $generated@@184) 17) (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@77)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@77) (= (type $generated@@188) $generated@@77)) (= (type $generated@@189) $generated@@184)) ($generated@@175 $generated@@189 ($generated@@183 $generated@@187 $generated@@188))) ($generated@@182 $generated@@189))
 :pattern ( ($generated@@182 $generated@@189) ($generated@@175 $generated@@189 ($generated@@183 $generated@@187 $generated@@188)))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@156)
 :pattern ( ($generated@@191 $generated@@193))
)) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@156)
 :pattern ( ($generated@@192 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@184) (= (type $generated@@196) $generated@@184)) true) (= ($generated@@190 $generated@@195 $generated@@196)  (and (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)) (= ($generated@@192 $generated@@195) ($generated@@192 $generated@@196)))))
 :pattern ( ($generated@@190 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@77)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@94 $generated@@156 $generated@@2)) (= (type $generated@@201) $generated@@77)) ($generated@@175 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@175 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@95) (= ($generated@@175 $generated@@202 $generated@@172)  (or (= $generated@@202 $generated@@153) (= ($generated@@154 $generated@@202) $generated@@172))))
 :pattern ( ($generated@@175 $generated@@202 $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 18)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@95 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@80 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@95) (= (type $generated@@253) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@254) ($generated@@79 $generated@@4))) (= (type $generated@@256) $generated@@95)) (= (type $generated@@257) ($generated@@79 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (= (type $generated@@259) $generated@@77))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@95) (= (type $generated@@261) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@260 $generated@@259 $generated@@261) ($generated@@92 $generated@@260 $generated@@172 $generated@@261)))
 :pattern ( ($generated@@92 $generated@@260 $generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@263 $generated@@264)) $generated@@184)
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@77) (= (type $generated@@266) $generated@@77)) (= (type $generated@@267) $generated@@156)) (= (type $generated@@268) $generated@@156)) (= ($generated@@175 ($generated@@262 $generated@@267 $generated@@268) ($generated@@183 $generated@@265 $generated@@266))  (and ($generated@@155 $generated@@267 $generated@@265) ($generated@@155 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@175 ($generated@@262 $generated@@267 $generated@@268) ($generated@@183 $generated@@265 $generated@@266)))
)))
(assert (= (type $generated@@269) ($generated@@79 $generated@@95)))
(assert (= ($generated@@87 $generated@@269) 0))
(assert (forall (($generated@@271 T@T) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@79 $generated@@271))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272 $generated@@273))
)))
(assert (= ($generated@@270 $generated@@95 $generated@@65 $generated@@75) $generated@@269))
(assert  (not ($generated@@274 $generated@@269)))
(assert (= ($generated@@87 $generated@@150) 0))
(assert (= ($generated@@270 $generated@@156 $generated@@68 $generated@@76) $generated@@150))
(assert  (not ($generated@@274 $generated@@150)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@184) (= (type $generated@@276) $generated@@184)) (= ($generated@@190 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@190 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@77)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@94 $generated@@156 $generated@@4)) (= (type $generated@@280) $generated@@77)) (= ($generated@@175 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@156) ($generated@@0 ($generated@@99 $generated@@279 $generated@@281))) ($generated@@155 $generated@@281 $generated@@280))
 :pattern ( ($generated@@99 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@175 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@77)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@94 $generated@@156 $generated@@4)) (= (type $generated@@285) $generated@@77)) (= ($generated@@175 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@156) ($generated@@0 ($generated@@99 $generated@@284 $generated@@286))) ($generated@@155 $generated@@286 $generated@@285))
 :pattern ( ($generated@@99 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@175 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 Int) ) (! (= ($generated@@287 $generated@@288) $generated@@288)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 (type $generated@@290)))
(= (type ($generated@@289 $generated@@290)) $generated@@291))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= ($generated@@289 $generated@@292) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@77) (= (type $generated@@295) $generated@@77)) (= (type $generated@@296) $generated@@156)) (= (type $generated@@297) $generated@@156)) (= (type $generated@@298) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@152 $generated@@298)) (= ($generated@@92 ($generated@@262 $generated@@296 $generated@@297) ($generated@@183 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@92 ($generated@@262 $generated@@296 $generated@@297) ($generated@@183 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@82)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@184) (= ($generated@@182 $generated@@301) (= ($generated@@299 $generated@@301) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@184) ($generated@@182 $generated@@302)) (exists (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (and (and (= (type $generated@@303) $generated@@156) (= (type $generated@@304) $generated@@156)) (= $generated@@302 ($generated@@262 $generated@@303 $generated@@304)))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@182 $generated@@302))
)))
(assert  (and (and (forall (($generated@@309 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@309)) 19)) (forall (($generated@@310 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
))) (forall (($generated@@311 T@T) ) (! (= (type ($generated@@305 $generated@@311)) ($generated@@307 $generated@@311))
 :pattern ( ($generated@@305 $generated@@311))
))))
(assert (forall (($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@312)) 0)
 :pattern ( ($generated@@305 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@2) (= ($generated@@175 $generated@@313 $generated@@169) (<= ($generated@@287 0) ($generated $generated@@313))))
 :pattern ( ($generated@@175 $generated@@313 $generated@@169))
)))
(assert ($generated@@274 $generated@@60))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@77) (= (type $generated@@315) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@316) $generated@@95)) (and (and ($generated@@152 $generated@@315) (and (not (= $generated@@316 $generated@@153)) (= ($generated@@154 $generated@@316) ($generated@@151 $generated@@314)))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@315 $generated@@316) $generated@@60)))) ($generated@@293 ($generated@@101 ($generated@@99 $generated@@315 $generated@@316) $generated@@150) $generated@@314 $generated@@315))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@315 $generated@@316) $generated@@150) ($generated@@151 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@77) (= (type $generated@@318) $generated@@95)) (= ($generated@@175 $generated@@318 ($generated@@177 $generated@@317))  (and ($generated@@175 $generated@@318 ($generated@@151 $generated@@317)) (not (= $generated@@318 $generated@@153)))))
 :pattern ( ($generated@@175 $generated@@318 ($generated@@177 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@156)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@77) (= (type $generated@@323) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@293 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@92 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@293 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@324) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@325) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@326) $generated@@156)) (= (type $generated@@327) $generated@@77)) ($generated@@162 $generated@@324 $generated@@325)) ($generated@@293 $generated@@326 $generated@@327 $generated@@324)) ($generated@@293 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@162 $generated@@324 $generated@@325) ($generated@@293 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@328) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@329) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@331) $generated@@77)) ($generated@@162 $generated@@328 $generated@@329)) ($generated@@92 $generated@@330 $generated@@331 $generated@@328)) ($generated@@92 $generated@@330 $generated@@331 $generated@@329))
 :pattern ( ($generated@@162 $generated@@328 $generated@@329) ($generated@@92 $generated@@330 $generated@@331 $generated@@328))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@94 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@97 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@94 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@99 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@84)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@77) (and (= ($generated@@88 ($generated@@151 $generated@@340)) $generated@@69) (= ($generated@@338 ($generated@@151 $generated@@340)) $generated@@74)))
 :pattern ( ($generated@@151 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@77) (and (= ($generated@@88 ($generated@@177 $generated@@341)) $generated@@70) (= ($generated@@338 ($generated@@177 $generated@@341)) $generated@@74)))
 :pattern ( ($generated@@177 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 20)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@94 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 21)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@94 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@380) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@378 $generated@@379 $generated@@380)) (and ($generated@@162 $generated@@379 $generated@@380) (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@80 (type $generated@@382))))
 (=> (and (and (= (type $generated@@381) $generated@@95) (= (type $generated@@382) ($generated@@79 $generated@@383))) (not ($generated@@274 $generated@@382))) (= ($generated@@101 ($generated@@99 $generated@@379 $generated@@381) $generated@@382) ($generated@@101 ($generated@@99 $generated@@380 $generated@@381) $generated@@382))))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@380 $generated@@381) $generated@@382))
))))
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@97 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@94 $generated@@385 $generated@@2)) (= ($generated@@198 $generated@@384) (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@385) (and (<= 0 ($generated ($generated@@99 $generated@@384 $generated@@386))) (<= ($generated ($generated@@99 $generated@@384 $generated@@386)) ($generated@@332 $generated@@384))))
 :pattern ( ($generated@@99 $generated@@384 $generated@@386))
)))))
 :pattern ( ($generated@@198 $generated@@384))
)))
(assert (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) ($generated@@155 $generated@@390 $generated@@169)) (and (= ($generated@@319 ($generated@@387 $generated@@2 $generated@@390)) $generated@@390) ($generated@@175 ($generated@@387 $generated@@2 $generated@@390) $generated@@169)))
 :pattern ( ($generated@@155 $generated@@390 $generated@@169))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@156) ($generated@@155 $generated@@391 $generated@@172)) (and (= ($generated@@319 ($generated@@387 $generated@@95 $generated@@391)) $generated@@391) ($generated@@175 ($generated@@387 $generated@@95 $generated@@391) $generated@@172)))
 :pattern ( ($generated@@155 $generated@@391 $generated@@172))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@156) ($generated@@155 $generated@@392 $generated@@259)) (and (= ($generated@@319 ($generated@@387 $generated@@95 $generated@@392)) $generated@@392) ($generated@@175 ($generated@@387 $generated@@95 $generated@@392) $generated@@259)))
 :pattern ( ($generated@@155 $generated@@392 $generated@@259))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@77) (= (type $generated@@394) $generated@@95)) (= ($generated@@175 $generated@@394 ($generated@@151 $generated@@393))  (or (= $generated@@394 $generated@@153) (= ($generated@@154 $generated@@394) ($generated@@151 $generated@@393)))))
 :pattern ( ($generated@@175 $generated@@394 ($generated@@151 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@95) (= ($generated@@175 $generated@@395 $generated@@259)  (and ($generated@@175 $generated@@395 $generated@@172) (not (= $generated@@395 $generated@@153)))))
 :pattern ( ($generated@@175 $generated@@395 $generated@@259))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@346 (type $generated@@396))))
(let (($generated@@398 ($generated@@345 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@344 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@343 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@342 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@346 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@94 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@346 (type $generated@@403))))
(let (($generated@@405 ($generated@@345 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@344 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@343 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@99 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@364 (type $generated@@407))))
(let (($generated@@409 ($generated@@363 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@362 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@361 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@360 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@364 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@94 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@364 (type $generated@@414))))
(let (($generated@@416 ($generated@@363 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@362 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@361 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@99 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@94 $generated@@156 $generated@@2)) (= (type $generated@@419) $generated@@77)) (= ($generated@@175 $generated@@418 ($generated@@197 $generated@@419)) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@156) (< 0 ($generated ($generated@@99 $generated@@418 $generated@@420)))) ($generated@@155 $generated@@420 $generated@@419))
 :pattern ( ($generated@@99 $generated@@418 $generated@@420))
))))
 :pattern ( ($generated@@175 $generated@@418 ($generated@@197 $generated@@419)))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@422) $generated@@95)) (=> (and (and ($generated@@152 $generated@@421) (and (not (= $generated@@422 $generated@@153)) (= ($generated@@154 $generated@@422) $generated@@172))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@421 $generated@@422) $generated@@60))) ($generated@@92 ($generated@@101 ($generated@@99 $generated@@421 $generated@@422) $generated@@269) $generated@@259 $generated@@421)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@421 $generated@@422) $generated@@269))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@94 $generated@@156 $generated@@4)) (= (type $generated@@424) $generated@@77)) (= (type $generated@@425) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@423 ($generated@@277 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@156) ($generated@@0 ($generated@@99 $generated@@423 $generated@@426))) ($generated@@293 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@99 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@92 $generated@@423 ($generated@@277 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@94 $generated@@156 $generated@@4)) (= (type $generated@@428) $generated@@77)) (= (type $generated@@429) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@282 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@99 $generated@@427 $generated@@430))) ($generated@@293 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@99 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@282 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@99 ($generated@@333 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@99 ($generated@@333 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@94 $generated@@156 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@346 (type $generated@@436))))
(let (($generated@@438 ($generated@@345 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@94 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@344 $generated@@156 $generated@@156)) (= (type $generated@@440) $generated@@156)) (= ($generated@@0 ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@439) ($generated@@191 ($generated@@387 $generated@@184 $generated@@440)))) (= ($generated@@99 ($generated@@434 $generated@@439) ($generated@@191 ($generated@@387 $generated@@184 $generated@@440))) ($generated@@192 ($generated@@387 $generated@@184 $generated@@440))))))
 :pattern ( ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@94 $generated@@156 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@364 (type $generated@@444))))
(let (($generated@@446 ($generated@@363 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@362 $generated@@156 $generated@@156)) (= (type $generated@@448) $generated@@156)) (= ($generated@@0 ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@447) ($generated@@191 ($generated@@387 $generated@@184 $generated@@448)))) (= ($generated@@99 ($generated@@442 $generated@@447) ($generated@@191 ($generated@@387 $generated@@184 $generated@@448))) ($generated@@192 ($generated@@387 $generated@@184 $generated@@448))))))
 :pattern ( ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@345 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@344 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@99 ($generated@@400 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@449) $generated@@453))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@99 ($generated@@400 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@363 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@362 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@99 ($generated@@411 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@454) $generated@@458))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@77)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@344 $generated@@156 $generated@@156)) (= (type $generated@@463) $generated@@77)) (= (type $generated@@464) $generated@@77)) (= (type $generated@@465) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@156) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))) (and ($generated@@293 ($generated@@99 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@293 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@77)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@362 $generated@@156 $generated@@156)) (= (type $generated@@471) $generated@@77)) (= (type $generated@@472) $generated@@77)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@156) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))) (and ($generated@@293 ($generated@@99 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@293 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@475) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@476) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@477) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@475 $generated@@477))) (and ($generated@@162 $generated@@475 $generated@@476) ($generated@@162 $generated@@476 $generated@@477))) ($generated@@162 $generated@@475 $generated@@477))
 :pattern ( ($generated@@162 $generated@@475 $generated@@476) ($generated@@162 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@94 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@364 (type $generated@@480))))
(let (($generated@@482 ($generated@@363 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@362 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@361 $generated@@482 $generated@@481)) (= ($generated@@360 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@360 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@364 (type $generated@@483))))
(let (($generated@@485 ($generated@@363 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@362 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@361 $generated@@485 $generated@@484)) (= ($generated@@411 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@411 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@364 (type $generated@@486))))
(let (($generated@@488 ($generated@@363 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@362 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@361 $generated@@488 $generated@@487)) (= ($generated@@441 $generated@@486) ($generated@@478 $generated@@156))))))
 :pattern ( ($generated@@441 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@346 (type $generated@@489))))
(let (($generated@@491 ($generated@@345 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@344 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@343 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@156) (= (type $generated@@493) $generated@@156)) ($generated@@0 ($generated@@99 ($generated@@433 $generated@@489) ($generated@@319 ($generated@@262 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@433 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@364 (type $generated@@494))))
(let (($generated@@496 ($generated@@363 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@362 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@361 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@156) (= (type $generated@@498) $generated@@156)) ($generated@@0 ($generated@@99 ($generated@@441 $generated@@494) ($generated@@319 ($generated@@262 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@441 $generated@@494))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@83)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@T) ) (!  (=> (and (= (type $generated@@501) $generated@@83) (= (type $generated@@502) $generated@@81)) (and (= ($generated@@499 ($generated@@270 $generated@@503 $generated@@501 $generated@@502)) $generated@@501) (= ($generated@@90 ($generated@@270 $generated@@503 $generated@@501 $generated@@502)) $generated@@502)))
 :pattern ( ($generated@@270 $generated@@503 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@156) ($generated@@155 $generated@@504 $generated@@46)) (and (= ($generated@@319 ($generated@@387 $generated@@2 $generated@@504)) $generated@@504) ($generated@@175 ($generated@@387 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@155 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@156) ($generated@@155 $generated@@505 $generated@@47)) (and (= ($generated@@319 ($generated@@387 $generated@@3 $generated@@505)) $generated@@505) ($generated@@175 ($generated@@387 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@155 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@156) ($generated@@155 $generated@@506 $generated@@44)) (and (= ($generated@@319 ($generated@@387 $generated@@4 $generated@@506)) $generated@@506) ($generated@@175 ($generated@@387 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@155 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 22))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@156) ($generated@@155 $generated@@508 $generated@@45)) (and (= ($generated@@319 ($generated@@387 $generated@@507 $generated@@508)) $generated@@508) ($generated@@175 ($generated@@387 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@155 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@77) (= ($generated@@155 ($generated@@319 $generated@@509) $generated@@510) ($generated@@175 $generated@@509 $generated@@510)))
 :pattern ( ($generated@@155 ($generated@@319 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@97 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@94 $generated@@512 $generated@@2)) (<= 0 ($generated@@332 $generated@@511))))
 :pattern ( ($generated@@332 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@308 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@307 $generated@@514)) (<= 0 ($generated@@306 $generated@@513))))
 :pattern ( ($generated@@306 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@77)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@77) (= (type $generated@@518) $generated@@77)) (= ($generated@@515 ($generated@@459 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@77)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@77) (= (type $generated@@522) $generated@@77)) (= ($generated@@519 ($generated@@459 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@459 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@77) (= (type $generated@@524) $generated@@77)) (= ($generated@@88 ($generated@@459 $generated@@523 $generated@@524)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@77)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@77) (= (type $generated@@528) $generated@@77)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@77)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@77) (= (type $generated@@532) $generated@@77)) (= ($generated@@529 ($generated@@467 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@77) (= (type $generated@@534) $generated@@77)) (= ($generated@@88 ($generated@@467 $generated@@533 $generated@@534)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@156) (= (type $generated@@536) $generated@@156)) (= ($generated@@299 ($generated@@262 $generated@@535 $generated@@536)) $generated@@63))
 :pattern ( ($generated@@262 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@77)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@77) (= (type $generated@@540) $generated@@77)) (= ($generated@@537 ($generated@@183 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@183 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@77)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@77) (= (type $generated@@544) $generated@@77)) (= ($generated@@541 ($generated@@183 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@183 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@156) (= (type $generated@@546) $generated@@156)) (= ($generated@@191 ($generated@@262 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@262 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@156) (= (type $generated@@548) $generated@@156)) (= ($generated@@192 ($generated@@262 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@262 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (= (type ($generated@@549 $generated@@551)) $generated@@77)
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (! (let (($generated@@554 ($generated@@308 (type $generated@@552))))
(= (type ($generated@@550 $generated@@552 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@307 $generated@@156)) (= (type $generated@@556) $generated@@77)) (= (type $generated@@557) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@555 ($generated@@549 $generated@@556) $generated@@557) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 ($generated@@306 $generated@@555))) ($generated@@293 ($generated@@550 $generated@@555 $generated@@558) $generated@@556 $generated@@557))
 :pattern ( ($generated@@550 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@92 $generated@@555 ($generated@@549 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@559 ($generated@@93 $generated@@560)) $generated@@560)
 :pattern ( ($generated@@93 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@77)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@77) (= ($generated@@561 ($generated@@277 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@277 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@77) (= ($generated@@88 ($generated@@277 $generated@@564)) $generated@@54))
 :pattern ( ($generated@@277 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@77)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@77) (= ($generated@@565 ($generated@@282 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@282 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@77) (= ($generated@@88 ($generated@@282 $generated@@568)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@77) (= ($generated@@569 ($generated@@197 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@197 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@77) (= ($generated@@88 ($generated@@197 $generated@@572)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@77)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@77) (= ($generated@@573 ($generated@@549 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@549 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@77) (= ($generated@@88 ($generated@@549 $generated@@576)) $generated@@57))
 :pattern ( ($generated@@549 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@77)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@77) (= ($generated@@577 ($generated@@151 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@151 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@77)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@77) (= ($generated@@580 ($generated@@177 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@177 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@387 $generated@@584 ($generated@@319 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@319 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@344 $generated@@156 $generated@@156)) (= (type $generated@@586) $generated@@77)) (= (type $generated@@587) $generated@@77)) (= ($generated@@175 $generated@@585 ($generated@@459 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@156) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@585) $generated@@588))) (and ($generated@@155 ($generated@@99 ($generated@@434 $generated@@585) $generated@@588) $generated@@587) ($generated@@155 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@585) $generated@@588))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@175 $generated@@585 ($generated@@459 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@362 $generated@@156 $generated@@156)) (= (type $generated@@590) $generated@@77)) (= (type $generated@@591) $generated@@77)) (= ($generated@@175 $generated@@589 ($generated@@467 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@156) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@589) $generated@@592))) (and ($generated@@155 ($generated@@99 ($generated@@442 $generated@@589) $generated@@592) $generated@@591) ($generated@@155 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@589) $generated@@592))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@175 $generated@@589 ($generated@@467 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@156) (= (type $generated@@596) $generated@@156)) (< ($generated@@593 $generated@@595) ($generated@@594 ($generated@@262 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@262 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@156) (= (type $generated@@598) $generated@@156)) (< ($generated@@593 $generated@@598) ($generated@@594 ($generated@@262 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@262 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@156) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) $generated@@77)) ($generated@@155 $generated@@599 ($generated@@459 $generated@@600 $generated@@601))) (and (= ($generated@@319 ($generated@@387 ($generated@@344 $generated@@156 $generated@@156) $generated@@599)) $generated@@599) ($generated@@175 ($generated@@387 ($generated@@344 $generated@@156 $generated@@156) $generated@@599) ($generated@@459 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@155 $generated@@599 ($generated@@459 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@156) (= (type $generated@@603) $generated@@77)) (= (type $generated@@604) $generated@@77)) ($generated@@155 $generated@@602 ($generated@@467 $generated@@603 $generated@@604))) (and (= ($generated@@319 ($generated@@387 ($generated@@362 $generated@@156 $generated@@156) $generated@@602)) $generated@@602) ($generated@@175 ($generated@@387 ($generated@@362 $generated@@156 $generated@@156) $generated@@602) ($generated@@467 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@155 $generated@@602 ($generated@@467 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@77) (= (type $generated@@606) $generated@@77)) (= (type $generated@@607) $generated@@156)) ($generated@@155 $generated@@607 ($generated@@183 $generated@@605 $generated@@606))) (and (= ($generated@@319 ($generated@@387 $generated@@184 $generated@@607)) $generated@@607) ($generated@@175 ($generated@@387 $generated@@184 $generated@@607) ($generated@@183 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@155 $generated@@607 ($generated@@183 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@99 ($generated@@478 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@99 ($generated@@478 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@611) $generated@@95)) (and ($generated@@152 $generated@@610) (and (not (= $generated@@611 $generated@@153)) (= ($generated@@154 $generated@@611) $generated@@172)))) ($generated@@175 ($generated@@101 ($generated@@99 $generated@@610 $generated@@611) $generated@@269) $generated@@259))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@610 $generated@@611) $generated@@269))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@77) (= (type $generated@@613) $generated@@77)) (and (= ($generated@@88 ($generated@@183 $generated@@612 $generated@@613)) $generated@@64) (= ($generated@@338 ($generated@@183 $generated@@612 $generated@@613)) $generated@@72)))
 :pattern ( ($generated@@183 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@184) (= ($generated@@593 ($generated@@319 $generated@@614)) ($generated@@594 $generated@@614)))
 :pattern ( ($generated@@593 ($generated@@319 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@156) ($generated@@155 $generated@@615 ($generated@@93 0))) (and (= ($generated@@319 ($generated@@387 $generated@@2 $generated@@615)) $generated@@615) ($generated@@175 ($generated@@387 ($generated@@94 $generated@@156 $generated@@4) $generated@@615) ($generated@@93 0))))
 :pattern ( ($generated@@155 $generated@@615 ($generated@@93 0)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@156) (= (type $generated@@617) $generated@@77)) ($generated@@155 $generated@@616 ($generated@@277 $generated@@617))) (and (= ($generated@@319 ($generated@@387 ($generated@@94 $generated@@156 $generated@@4) $generated@@616)) $generated@@616) ($generated@@175 ($generated@@387 ($generated@@94 $generated@@156 $generated@@4) $generated@@616) ($generated@@277 $generated@@617))))
 :pattern ( ($generated@@155 $generated@@616 ($generated@@277 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@156) (= (type $generated@@619) $generated@@77)) ($generated@@155 $generated@@618 ($generated@@282 $generated@@619))) (and (= ($generated@@319 ($generated@@387 ($generated@@94 $generated@@156 $generated@@4) $generated@@618)) $generated@@618) ($generated@@175 ($generated@@387 ($generated@@94 $generated@@156 $generated@@4) $generated@@618) ($generated@@282 $generated@@619))))
 :pattern ( ($generated@@155 $generated@@618 ($generated@@282 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@156) (= (type $generated@@621) $generated@@77)) ($generated@@155 $generated@@620 ($generated@@197 $generated@@621))) (and (= ($generated@@319 ($generated@@387 ($generated@@94 $generated@@156 $generated@@2) $generated@@620)) $generated@@620) ($generated@@175 ($generated@@387 ($generated@@94 $generated@@156 $generated@@2) $generated@@620) ($generated@@197 $generated@@621))))
 :pattern ( ($generated@@155 $generated@@620 ($generated@@197 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@156) (= (type $generated@@623) $generated@@77)) ($generated@@155 $generated@@622 ($generated@@549 $generated@@623))) (and (= ($generated@@319 ($generated@@387 ($generated@@307 $generated@@156) $generated@@622)) $generated@@622) ($generated@@175 ($generated@@387 ($generated@@307 $generated@@156) $generated@@622) ($generated@@549 $generated@@623))))
 :pattern ( ($generated@@155 $generated@@622 ($generated@@549 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@77) (= (type $generated@@625) $generated@@156)) ($generated@@155 $generated@@625 ($generated@@151 $generated@@624))) (and (= ($generated@@319 ($generated@@387 $generated@@95 $generated@@625)) $generated@@625) ($generated@@175 ($generated@@387 $generated@@95 $generated@@625) ($generated@@151 $generated@@624))))
 :pattern ( ($generated@@155 $generated@@625 ($generated@@151 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@77) (= (type $generated@@627) $generated@@156)) ($generated@@155 $generated@@627 ($generated@@177 $generated@@626))) (and (= ($generated@@319 ($generated@@387 $generated@@95 $generated@@627)) $generated@@627) ($generated@@175 ($generated@@387 $generated@@95 $generated@@627) ($generated@@177 $generated@@626))))
 :pattern ( ($generated@@155 $generated@@627 ($generated@@177 $generated@@626)))
)))
(assert (= ($generated@@88 $generated@@169) $generated@@62))
(assert (= ($generated@@338 $generated@@169) $generated@@71))
(assert (= ($generated@@88 $generated@@172) $generated@@66))
(assert (= ($generated@@338 $generated@@172) $generated@@73))
(assert (= ($generated@@88 $generated@@259) $generated@@67))
(assert (= ($generated@@338 $generated@@259) $generated@@73))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@94 $generated@@156 $generated@@2)) (= (type $generated@@629) $generated@@77)) (= (type $generated@@630) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@628 ($generated@@197 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@156) (< 0 ($generated ($generated@@99 $generated@@628 $generated@@631)))) ($generated@@293 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@99 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@92 $generated@@628 ($generated@@197 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@184) (= (type $generated@@633) $generated@@77)) (= (type $generated@@634) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@152 $generated@@634) (and ($generated@@182 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@77) ($generated@@92 $generated@@632 ($generated@@183 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@92 $generated@@632 ($generated@@183 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@293 ($generated@@191 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@293 ($generated@@191 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@184) (= (type $generated@@637) $generated@@77)) (= (type $generated@@638) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@152 $generated@@638) (and ($generated@@182 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@77) ($generated@@92 $generated@@636 ($generated@@183 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@92 $generated@@636 ($generated@@183 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@293 ($generated@@192 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@293 ($generated@@192 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@156) (= (type $generated@@641) $generated@@156)) (= ($generated@@262 ($generated@@289 $generated@@640) ($generated@@289 $generated@@641)) ($generated@@289 ($generated@@262 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@262 ($generated@@289 $generated@@640) ($generated@@289 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@287 $generated@@642))) ($generated@@289 ($generated@@319 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@287 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@319 ($generated@@289 $generated@@643)) ($generated@@289 ($generated@@319 $generated@@643)))
 :pattern ( ($generated@@319 ($generated@@289 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@308 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@307 $generated@@645)) (= ($generated@@306 $generated@@644) 0)) (= $generated@@644 ($generated@@305 $generated@@645))))
 :pattern ( ($generated@@306 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@94 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@332 ($generated@@100 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@332 $generated@@646) ($generated ($generated@@99 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@332 ($generated@@100 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@651) $generated@@2)) ($generated@@92 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@92 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@653) $generated@@3)) ($generated@@92 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@92 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@655) $generated@@4)) ($generated@@92 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@92 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@657) $generated@@507)) ($generated@@92 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@92 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@659) $generated@@156)) ($generated@@92 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@92 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@307 $generated@@156)) (= (type $generated@@661) $generated@@77)) (= ($generated@@175 $generated@@660 ($generated@@549 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@306 $generated@@660))) ($generated@@155 ($generated@@550 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@550 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@175 $generated@@660 ($generated@@549 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@307 $generated@@156)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@306 $generated@@664))) (< ($generated@@594 ($generated@@387 $generated@@184 ($generated@@550 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@594 ($generated@@387 $generated@@184 ($generated@@550 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@344 $generated@@156 $generated@@156)) (= (type $generated@@667) $generated@@77)) (= (type $generated@@668) $generated@@77)) ($generated@@175 $generated@@666 ($generated@@459 $generated@@667 $generated@@668))) (and (and ($generated@@175 ($generated@@342 $generated@@666) ($generated@@277 $generated@@667)) ($generated@@175 ($generated@@400 $generated@@666) ($generated@@277 $generated@@668))) ($generated@@175 ($generated@@433 $generated@@666) ($generated@@277 ($generated@@183 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@175 $generated@@666 ($generated@@459 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@362 $generated@@156 $generated@@156)) (= (type $generated@@670) $generated@@77)) (= (type $generated@@671) $generated@@77)) ($generated@@175 $generated@@669 ($generated@@467 $generated@@670 $generated@@671))) (and (and ($generated@@175 ($generated@@360 $generated@@669) ($generated@@282 $generated@@670)) ($generated@@175 ($generated@@411 $generated@@669) ($generated@@282 $generated@@671))) ($generated@@175 ($generated@@441 $generated@@669) ($generated@@282 ($generated@@183 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@175 $generated@@669 ($generated@@467 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@175 $generated@@672 $generated@@46))
 :pattern ( ($generated@@175 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@175 $generated@@673 $generated@@47))
 :pattern ( ($generated@@175 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@175 $generated@@674 $generated@@44))
 :pattern ( ($generated@@175 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@507) ($generated@@175 $generated@@675 $generated@@45))
 :pattern ( ($generated@@175 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@156) ($generated@@175 $generated@@676 $generated@@48))
 :pattern ( ($generated@@175 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Bool)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 (T@U) Bool)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Bool)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Bool)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Bool)
(declare-fun $generated@@702 () Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Bool)
(declare-fun $generated@@705 () Bool)
(declare-fun $generated@@706 () Bool)
(declare-fun $generated@@707 () Bool)
(declare-fun $generated@@708 () Bool)
(declare-fun $generated@@709 () Bool)
(declare-fun $generated@@710 () Bool)
(declare-fun $generated@@711 () Bool)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () Int)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () Bool)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Bool)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () Bool)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@713) $generated@@95) (= (type $generated@@683) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@714) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@715) $generated@@95)) (= (type $generated@@690) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@680) ($generated@@94 $generated@@156 $generated@@4))) (= (type $generated@@681) $generated@@95)) (= (type $generated@@682) $generated@@77)) (= (type $generated@@684) $generated@@77)) (= (type $generated@@685) $generated@@156)) (= (type $generated@@686) $generated@@95)) (= (type $generated@@687) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@689) $generated@@95)) (= (type $generated@@691) $generated@@95)) (= (type $generated@@692) $generated@@77)) (= (type $generated@@693) $generated@@77)) (= (type $generated@@694) $generated@@156)) (= (type $generated@@695) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@696) $generated@@95)) (= (type $generated@@698) $generated@@95)) (= (type $generated@@700) $generated@@95)) (= (type $generated@@703) $generated@@95)) (= (type $generated@@717) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@718) ($generated@@205 $generated@@95 $generated@@4))) (= (type $generated@@720) $generated@@95)) (= (type $generated@@721) $generated@@95)) (= (type $generated@@724) $generated@@95)) (= (type $generated@@727) $generated@@95)) (= (type $generated@@729) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@731 true))
(let (($generated@@732  (=> (and (< ($generated@@287 0) $generated@@677) (= (ControlFlow 0 23) 21)) $generated@@731)))
(let (($generated@@733  (=> (and (<= $generated@@677 ($generated@@287 0)) (= (ControlFlow 0 22) 21)) $generated@@731)))
(let (($generated@@734  (=> (not $generated@@678) (and (=> (= (ControlFlow 0 24) 22) $generated@@733) (=> (= (ControlFlow 0 24) 23) $generated@@732)))))
(let (($generated@@735  (=> (= $generated@@679 (forall (($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@736) $generated@@95) ($generated@@175 $generated@@736 $generated@@259)) ($generated@@0 ($generated@@99 $generated@@680 ($generated@@319 $generated@@736)))) (not (= $generated@@736 $generated@@153)))
 :pattern ( ($generated@@99 $generated@@680 ($generated@@319 $generated@@736)))
))) (=> (and (not (= $generated@@681 $generated@@153)) (and ($generated@@175 $generated@@681 ($generated@@177 $generated@@682)) ($generated@@92 $generated@@681 ($generated@@177 $generated@@682) $generated@@683))) (=> (and (and (and (= $generated@@684 $generated@@172) (= $generated@@685 ($generated@@319 $generated@@686))) (and ($generated@@152 $generated@@687) ($generated@@688 $generated@@687))) (and (and (not (= $generated@@689 $generated@@153)) (and ($generated@@175 $generated@@689 ($generated@@177 $generated@@684)) ($generated@@92 $generated@@689 ($generated@@177 $generated@@684) $generated@@687))) (not ($generated@@0 ($generated@@101 ($generated@@99 $generated@@690 $generated@@689) $generated@@60))))) (=> (and (and (and (and (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@95) (=> (and (not (= $generated@@737 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@690 $generated@@737) $generated@@60))) (= ($generated@@99 $generated@@687 $generated@@737) ($generated@@99 $generated@@690 $generated@@737))))
 :pattern ( ($generated@@99 $generated@@687 $generated@@737))
)) ($generated@@162 $generated@@690 $generated@@687)) (and (not (= $generated@@691 $generated@@153)) (and ($generated@@175 $generated@@691 ($generated@@177 $generated@@692)) ($generated@@92 $generated@@691 ($generated@@177 $generated@@692) $generated@@683)))) (and (and (= $generated@@693 $generated@@259) (= $generated@@694 ($generated@@319 $generated@@686))) (and ($generated@@152 $generated@@695) ($generated@@688 $generated@@695)))) (and (and (and (not (= $generated@@696 $generated@@153)) (and ($generated@@175 $generated@@696 ($generated@@177 $generated@@693)) ($generated@@92 $generated@@696 ($generated@@177 $generated@@693) $generated@@695))) (not ($generated@@0 ($generated@@101 ($generated@@99 $generated@@687 $generated@@696) $generated@@60)))) (and (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@95) (=> (and (not (= $generated@@738 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@687 $generated@@738) $generated@@60))) (= ($generated@@99 $generated@@695 $generated@@738) ($generated@@99 $generated@@687 $generated@@738))))
 :pattern ( ($generated@@99 $generated@@695 $generated@@738))
)) ($generated@@162 $generated@@687 $generated@@695)))) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@689 $generated@@153))) (=> (not (= $generated@@689 $generated@@153)) (=> (= $generated@@697 (not (= $generated@@153 ($generated@@387 $generated@@95 ($generated@@101 ($generated@@99 $generated@@695 $generated@@689) $generated@@150))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) true) (=> (= (ControlFlow 0 7) (- 0 6)) (not (= $generated@@696 $generated@@153))))))))))))))
(let (($generated@@739  (=> (and (not ($generated@@0 ($generated@@99 $generated@@680 ($generated@@319 $generated@@698)))) (= (ControlFlow 0 13) 7)) $generated@@735)))
(let (($generated@@740  (=> (and ($generated@@0 ($generated@@99 $generated@@680 ($generated@@319 $generated@@698))) (= (ControlFlow 0 12) 7)) $generated@@735)))
(let (($generated@@741  (=> (and ($generated@@175 $generated@@698 $generated@@259) ($generated@@92 $generated@@698 $generated@@259 $generated@@690)) (and (=> (= (ControlFlow 0 14) 12) $generated@@740) (=> (= (ControlFlow 0 14) 13) $generated@@739)))))
(let (($generated@@742  (=> (and (not (and ($generated@@175 $generated@@698 $generated@@259) ($generated@@92 $generated@@698 $generated@@259 $generated@@690))) (= (ControlFlow 0 11) 7)) $generated@@735)))
(let (($generated@@743  (=> (and (= $generated@@677 0) (= $generated@@699 (= $generated@@700 $generated@@153))) (and (=> (= (ControlFlow 0 15) (- 0 19)) $generated@@701) (=> $generated@@701 (=> (= $generated@@702 (= $generated@@703 $generated@@153)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (not (= $generated@@686 $generated@@153))) (=> (not (= $generated@@686 $generated@@153)) (=> (and (= $generated@@704 (= ($generated@@101 ($generated@@99 $generated@@690 $generated@@686) $generated@@269) $generated@@153)) (= $generated@@705 (not (= $generated@@700 $generated@@153)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) $generated@@701) (=> $generated@@701 (=> (= $generated@@706 (not (= $generated@@703 $generated@@153))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (not (= $generated@@686 $generated@@153))) (=> (not (= $generated@@686 $generated@@153)) (=> (= $generated@@707 (not (= ($generated@@101 ($generated@@99 $generated@@690 $generated@@686) $generated@@269) $generated@@153))) (=> (and (and (= $generated@@708 (= $generated@@153 $generated@@700)) (= $generated@@709 (= $generated@@700 $generated@@153))) (and (= $generated@@710 ($generated@@0 ($generated@@99 $generated@@680 ($generated@@319 $generated@@153)))) (= $generated@@711  (not ($generated@@0 ($generated@@99 $generated@@680 ($generated@@319 $generated@@153))))))) (and (=> (= (ControlFlow 0 15) 14) $generated@@741) (=> (= (ControlFlow 0 15) 11) $generated@@742))))))))))))))))))
(let (($generated@@744  (=> (and (not (= $generated@@677 0)) (= $generated@@712 (ite (<= $generated@@677 ($generated@@287 0)) (- 0 $generated@@677) (- $generated@@677 0)))) (=> (and (and (not (= $generated@@713 $generated@@153)) (and ($generated@@175 $generated@@713 $generated@@259) ($generated@@92 $generated@@713 $generated@@259 $generated@@683))) (and ($generated@@152 $generated@@714) ($generated@@688 $generated@@714))) (=> (and (and (and (not (= $generated@@715 $generated@@153)) (and ($generated@@175 $generated@@715 $generated@@259) ($generated@@92 $generated@@715 $generated@@259 $generated@@714))) (not ($generated@@0 ($generated@@101 ($generated@@99 $generated@@690 $generated@@715) $generated@@60)))) (and (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@95) (=> (and (not (= $generated@@745 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@690 $generated@@745) $generated@@60))) (= ($generated@@99 $generated@@714 $generated@@745) ($generated@@99 $generated@@690 $generated@@745))))
 :pattern ( ($generated@@99 $generated@@714 $generated@@745))
)) ($generated@@162 $generated@@690 $generated@@714))) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@175 ($generated@@8 (- $generated@@677 1)) $generated@@169)) (=> ($generated@@175 ($generated@@8 (- $generated@@677 1)) $generated@@169) (=> (= $generated@@716 (- $generated@@677 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@712) (= (ite (<= $generated@@716 ($generated@@287 0)) (- 0 $generated@@716) (- $generated@@716 0)) $generated@@712))) (=> (or (<= 0 $generated@@712) (= (ite (<= $generated@@716 ($generated@@287 0)) (- 0 $generated@@716) (- $generated@@716 0)) $generated@@712)) (=> (= (ControlFlow 0 3) (- 0 2)) (< (ite (<= $generated@@716 ($generated@@287 0)) (- 0 $generated@@716) (- $generated@@716 0)) $generated@@712))))))))))))
(let (($generated@@746  (=> $generated@@678 (and (=> (= (ControlFlow 0 20) 15) $generated@@743) (=> (= (ControlFlow 0 20) 3) $generated@@744)))))
(let (($generated@@747  (and (=> (= (ControlFlow 0 25) 24) $generated@@734) (=> (= (ControlFlow 0 25) 20) $generated@@746))))
(let (($generated@@748 true))
(let (($generated@@749  (=> (and (and ($generated@@152 $generated@@690) ($generated@@688 $generated@@690)) (and (=> $generated@@701 (and ($generated@@175 $generated@@703 $generated@@259) ($generated@@92 $generated@@703 $generated@@259 $generated@@690))) (<= ($generated@@287 0) $generated@@677))) (=> (and (and (and (and (not false) $generated@@701) true) (and (forall (($generated@@750 T@U) ) (!  (=> (= (type $generated@@750) $generated@@95) (=> (and (not (= $generated@@750 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@683 $generated@@750) $generated@@60))) (= ($generated@@99 $generated@@690 $generated@@750) ($generated@@99 $generated@@717 $generated@@750))))
 :pattern ( ($generated@@99 $generated@@690 $generated@@750))
)) ($generated@@162 $generated@@717 $generated@@690))) (and (and (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (! (let (($generated@@753 ($generated@@80 (type $generated@@752))))
 (=> (and (and (= (type $generated@@751) $generated@@95) (= (type $generated@@752) ($generated@@79 $generated@@753))) (and (not (= $generated@@751 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@717 $generated@@751) $generated@@60)))) (or (= ($generated@@101 ($generated@@99 $generated@@690 $generated@@751) $generated@@752) ($generated@@101 ($generated@@99 $generated@@717 $generated@@751) $generated@@752)) ($generated@@0 ($generated@@203 $generated@@718 $generated@@751 $generated@@752)))))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@690 $generated@@751) $generated@@752))
)) (=> true $generated@@701)) (and (<= (ite (<= $generated@@677 ($generated@@287 0)) (- 0 $generated@@677) (- $generated@@677 0)) $generated@@719) (=> (= (ite (<= $generated@@677 ($generated@@287 0)) (- 0 $generated@@677) (- $generated@@677 0)) $generated@@719) true)))) (and (=> (= (ControlFlow 0 26) 1) $generated@@748) (=> (= (ControlFlow 0 26) 25) $generated@@747))))))
(let (($generated@@754  (=> (= $generated@@718 ($generated@@204 $generated@@153 $generated@@683 $generated@@60 false)) (=> (and (and (not (= $generated@@720 $generated@@153)) (and ($generated@@175 $generated@@720 $generated@@259) ($generated@@92 $generated@@720 $generated@@259 $generated@@683))) (and ($generated@@152 $generated@@717) ($generated@@688 $generated@@717))) (=> (and (and (and (not (= $generated@@721 $generated@@153)) (and ($generated@@175 $generated@@721 $generated@@259) ($generated@@92 $generated@@721 $generated@@259 $generated@@717))) (not ($generated@@0 ($generated@@101 ($generated@@99 $generated@@683 $generated@@721) $generated@@60)))) (and (and (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@95) (=> (and (not (= $generated@@755 $generated@@153)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@683 $generated@@755) $generated@@60))) (= ($generated@@99 $generated@@717 $generated@@755) ($generated@@99 $generated@@683 $generated@@755))))
 :pattern ( ($generated@@99 $generated@@717 $generated@@755))
)) ($generated@@162 $generated@@683 $generated@@717)) (and (= $generated@@719 (ite (<= $generated@@722 ($generated@@287 0)) (- 0 $generated@@722) (- $generated@@722 0))) (= (ControlFlow 0 27) 26)))) $generated@@749)))))
(let (($generated@@756  (=> (and (and ($generated@@152 $generated@@683) ($generated@@688 $generated@@683)) (and ($generated@@175 $generated@@700 $generated@@259) ($generated@@92 $generated@@700 $generated@@259 $generated@@683))) (=> (and (and (and (and ($generated@@175 $generated@@686 $generated@@259) ($generated@@92 $generated@@686 $generated@@259 $generated@@683)) (<= ($generated@@287 0) $generated@@722)) (and (and ($generated@@175 $generated@@680 ($generated@@277 $generated@@259)) ($generated@@92 $generated@@680 ($generated@@277 $generated@@259) $generated@@683)) (and (=> $generated@@723 (and ($generated@@175 $generated@@724 $generated@@259) ($generated@@92 $generated@@724 $generated@@259 $generated@@683))) true))) (and (and (and (<= ($generated@@287 0) $generated@@725) true) (and (=> $generated@@726 (and ($generated@@175 $generated@@727 ($generated@@177 $generated@@172)) ($generated@@92 $generated@@727 ($generated@@177 $generated@@172) $generated@@683))) true)) (and (and (=> $generated@@728 (and ($generated@@175 $generated@@729 ($generated@@177 $generated@@259)) ($generated@@92 $generated@@729 ($generated@@177 $generated@@259) $generated@@683))) true) (and (= 1 $generated@@730) (= (ControlFlow 0 28) 27))))) $generated@@754))))
$generated@@756))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
