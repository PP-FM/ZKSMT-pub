(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U Int) T@U)
(declare-fun $generated@@173 (T@U Int T@U) T@U)
(declare-fun $generated@@174 (T@U) Int)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (forall (($generated@@175 T@U) ($generated@@176 Int) ) (! (let (($generated@@177 ($generated@@135 (type $generated@@175))))
(= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
)) (forall (($generated@@178 T@U) ($generated@@179 Int) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(= (type ($generated@@173 $generated@@178 $generated@@179 $generated@@180)) ($generated@@134 $generated@@181)))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 T@U) ($generated@@185 Int) ) (! (let (($generated@@186 (type $generated@@184)))
 (=> (= (type $generated@@182) ($generated@@134 $generated@@186)) (=> (and (<= 0 $generated@@185) (< $generated@@185 ($generated@@174 $generated@@182))) (and (=> (= $generated@@183 $generated@@185) (= ($generated@@172 ($generated@@173 $generated@@182 $generated@@183 $generated@@184) $generated@@185) $generated@@184)) (=> (not (= $generated@@183 $generated@@185)) (= ($generated@@172 ($generated@@173 $generated@@182 $generated@@183 $generated@@184) $generated@@185) ($generated@@172 $generated@@182 $generated@@185)))))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@182 $generated@@183 $generated@@184) $generated@@185))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@77 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@67 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@77) (= (type $generated@@237) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@238) ($generated@@66 $generated@@4))) (= (type $generated@@240) $generated@@77)) (= (type $generated@@241) ($generated@@66 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@149)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@64) (= (type $generated@@248) $generated@@64)) (= (type $generated@@249) $generated@@158)) (= (type $generated@@250) $generated@@158)) (= ($generated@@145 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@145 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@149) (= (type $generated@@252) $generated@@149)) (= ($generated@@155 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@155 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@158) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@158) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@64)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@134 $generated@@158)) (= (type $generated@@272) $generated@@158)) (= (type $generated@@273) $generated@@64)) (and ($generated@@145 $generated@@271 ($generated@@269 $generated@@273)) ($generated@@244 $generated@@272 $generated@@273))) ($generated@@145 ($generated@@133 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@158)) (= (type $generated@@279) $generated@@158)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@243 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@243 $generated@@278 $generated@@279) ($generated@@148 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@149) (= ($generated@@147 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@149) ($generated@@147 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@158) (= (type $generated@@286) $generated@@158)) (= $generated@@284 ($generated@@243 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@147 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@174 ($generated@@163 $generated@@287)) 0)
 :pattern ( ($generated@@163 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@134 $generated@@290)) (= ($generated@@174 ($generated@@133 $generated@@288 $generated@@289)) (+ 1 ($generated@@174 $generated@@288)))))
 :pattern ( ($generated@@133 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@158)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@275 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@168 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@168 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 Int) ($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
 (=> (= (type $generated@@341) ($generated@@134 $generated@@344)) (and (=> (= $generated@@342 ($generated@@174 $generated@@341)) (= ($generated@@172 ($generated@@133 $generated@@341 $generated@@343) $generated@@342) $generated@@343)) (=> (not (= $generated@@342 ($generated@@174 $generated@@341))) (= ($generated@@172 ($generated@@133 $generated@@341 $generated@@343) $generated@@342) ($generated@@172 $generated@@341 $generated@@342))))))
 :pattern ( ($generated@@172 ($generated@@133 $generated@@341 $generated@@343) $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@306 (type $generated@@345))))
(let (($generated@@347 ($generated@@305 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@304 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@303 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@302 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@306 (type $generated@@352))))
(let (($generated@@354 ($generated@@305 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@304 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@303 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@324 (type $generated@@356))))
(let (($generated@@358 ($generated@@323 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@322 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@321 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@320 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@76 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@324 (type $generated@@363))))
(let (($generated@@365 ($generated@@323 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@322 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@321 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@368) $generated@@64)) (= ($generated@@145 $generated@@367 ($generated@@167 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@367 $generated@@369)))) ($generated@@244 $generated@@369 $generated@@368))
 :pattern ( ($generated@@81 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@145 $generated@@367 ($generated@@167 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
 (=> (= (type $generated@@370) ($generated@@134 $generated@@372)) (= ($generated@@132 $generated@@370 $generated@@371) (exists (($generated@@373 Int) ) (!  (and (and (<= 0 $generated@@373) (< $generated@@373 ($generated@@174 $generated@@370))) (= ($generated@@172 $generated@@370 $generated@@373) $generated@@371))
 :pattern ( ($generated@@172 $generated@@370 $generated@@373))
)))))
 :pattern ( ($generated@@132 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@374 ($generated@@253 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@158) ($generated@@0 ($generated@@81 $generated@@374 $generated@@377))) ($generated@@275 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@81 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@374 ($generated@@253 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@258 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@158) ($generated@@0 ($generated@@81 $generated@@378 $generated@@381))) ($generated@@275 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@81 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@258 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@81 ($generated@@297 $generated@@383) $generated@@382)))
)))
(assert  (and (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@384 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@384 $generated@@387))
)) (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@385 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@385 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@306 (type $generated@@390))))
(let (($generated@@392 ($generated@@305 (type $generated@@390))))
(= (type ($generated@@386 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@386 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@304 $generated@@158 $generated@@158)) (= (type $generated@@394) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@393) ($generated@@156 ($generated@@385 $generated@@149 $generated@@394)))) (= ($generated@@81 ($generated@@386 $generated@@393) ($generated@@156 ($generated@@385 $generated@@149 $generated@@394))) ($generated@@157 ($generated@@385 $generated@@149 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@324 (type $generated@@398))))
(let (($generated@@400 ($generated@@323 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@322 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@401) ($generated@@156 ($generated@@385 $generated@@149 $generated@@402)))) (= ($generated@@81 ($generated@@396 $generated@@401) ($generated@@156 ($generated@@385 $generated@@149 $generated@@402))) ($generated@@157 ($generated@@385 $generated@@149 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@305 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@304 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@323 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@322 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@304 $generated@@158 $generated@@158)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@416) $generated@@420))) (and ($generated@@275 ($generated@@81 ($generated@@386 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@275 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@322 $generated@@158 $generated@@158)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@424) $generated@@428))) (and ($generated@@275 ($generated@@81 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@275 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@76 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@324 (type $generated@@431))))
(let (($generated@@433 ($generated@@323 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@322 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@321 $generated@@433 $generated@@432)) (= ($generated@@320 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@320 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@324 (type $generated@@434))))
(let (($generated@@436 ($generated@@323 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@322 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@321 $generated@@436 $generated@@435)) (= ($generated@@360 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@360 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@324 (type $generated@@437))))
(let (($generated@@439 ($generated@@323 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@322 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@321 $generated@@439 $generated@@438)) (= ($generated@@395 $generated@@437) ($generated@@429 $generated@@158))))))
 :pattern ( ($generated@@395 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@306 (type $generated@@440))))
(let (($generated@@442 ($generated@@305 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@304 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@303 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@158) (= (type $generated@@444) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@440) ($generated@@291 ($generated@@243 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@324 (type $generated@@445))))
(let (($generated@@447 ($generated@@323 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@322 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@321 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@158) (= (type $generated@@449) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@395 $generated@@445) ($generated@@291 ($generated@@243 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@395 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@244 $generated@@450 $generated@@46)) (and (= ($generated@@291 ($generated@@385 $generated@@2 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@385 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@244 $generated@@451 $generated@@47)) (and (= ($generated@@291 ($generated@@385 $generated@@3 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@385 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@158) ($generated@@244 $generated@@452 $generated@@44)) (and (= ($generated@@291 ($generated@@385 $generated@@4 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@385 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@158) ($generated@@244 $generated@@454 $generated@@45)) (and (= ($generated@@291 ($generated@@385 $generated@@453 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@385 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@64) (= ($generated@@244 ($generated@@291 $generated@@455) $generated@@456) ($generated@@145 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@244 ($generated@@291 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@79 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@76 $generated@@458 $generated@@2)) (<= 0 ($generated@@296 $generated@@457))))
 :pattern ( ($generated@@296 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@135 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@134 $generated@@460)) (<= 0 ($generated@@174 $generated@@459))))
 :pattern ( ($generated@@174 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@413 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@413 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@413 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@421 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@421 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@421 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@281 ($generated@@243 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@148 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@148 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@148 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@148 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@158) (= (type $generated@@492) $generated@@158)) (= ($generated@@156 ($generated@@243 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@243 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@158) (= (type $generated@@494) $generated@@158)) (= ($generated@@157 ($generated@@243 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@243 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@134 $generated@@158)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@495 ($generated@@269 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@174 $generated@@495))) ($generated@@275 ($generated@@172 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@172 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@74 $generated@@495 ($generated@@269 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@75 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@75 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@253 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@253 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@258 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@258 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@167 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@167 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@269 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@269 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@269 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@269 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@385 $generated@@518 ($generated@@291 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@291 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@304 $generated@@158 $generated@@158)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@145 $generated@@519 ($generated@@413 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@519) $generated@@522))) (and ($generated@@244 ($generated@@81 ($generated@@386 $generated@@519) $generated@@522) $generated@@521) ($generated@@244 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@413 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@322 $generated@@158 $generated@@158)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@145 $generated@@523 ($generated@@421 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@523) $generated@@526))) (and ($generated@@244 ($generated@@81 ($generated@@396 $generated@@523) $generated@@526) $generated@@525) ($generated@@244 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@523) $generated@@526))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@421 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@158) (= (type $generated@@530) $generated@@158)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@243 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@243 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@243 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@243 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@244 $generated@@533 ($generated@@413 $generated@@534 $generated@@535))) (and (= ($generated@@291 ($generated@@385 ($generated@@304 $generated@@158 $generated@@158) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@385 ($generated@@304 $generated@@158 $generated@@158) $generated@@533) ($generated@@413 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@244 $generated@@533 ($generated@@413 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@244 $generated@@536 ($generated@@421 $generated@@537 $generated@@538))) (and (= ($generated@@291 ($generated@@385 ($generated@@322 $generated@@158 $generated@@158) $generated@@536)) $generated@@536) ($generated@@145 ($generated@@385 ($generated@@322 $generated@@158 $generated@@158) $generated@@536) ($generated@@421 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@244 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@158)) ($generated@@244 $generated@@541 ($generated@@148 $generated@@539 $generated@@540))) (and (= ($generated@@291 ($generated@@385 $generated@@149 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@385 $generated@@149 $generated@@541) ($generated@@148 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@244 $generated@@541 ($generated@@148 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@81 ($generated@@429 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@81 ($generated@@429 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 Int) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@547)) (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@174 $generated@@544))) (= ($generated@@174 ($generated@@173 $generated@@544 $generated@@545 $generated@@546)) ($generated@@174 $generated@@544)))))
 :pattern ( ($generated@@174 ($generated@@173 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@69)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@148 $generated@@550 $generated@@551)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@550 $generated@@551))
)))
(assert  (and (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@135 (type $generated@@554))))
(= (type ($generated@@552 $generated@@554)) ($generated@@134 $generated@@555)))
 :pattern ( ($generated@@552 $generated@@554))
)) (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@135 (type $generated@@556))))
(= (type ($generated@@553 $generated@@556)) $generated@@557))
 :pattern ( ($generated@@553 $generated@@556))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (=> (= (type $generated@@558) ($generated@@134 $generated@@560)) (and (= ($generated@@552 ($generated@@133 $generated@@558 $generated@@559)) $generated@@558) (= ($generated@@553 ($generated@@133 $generated@@558 $generated@@559)) $generated@@559))))
 :pattern ( ($generated@@133 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@149) (= ($generated@@527 ($generated@@291 $generated@@561)) ($generated@@528 $generated@@561)))
 :pattern ( ($generated@@527 ($generated@@291 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) ($generated@@244 $generated@@562 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@385 $generated@@2 $generated@@562)) $generated@@562) ($generated@@145 ($generated@@385 ($generated@@76 $generated@@158 $generated@@4) $generated@@562) ($generated@@75 0))))
 :pattern ( ($generated@@244 $generated@@562 ($generated@@75 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@158) (= (type $generated@@564) $generated@@64)) ($generated@@244 $generated@@563 ($generated@@253 $generated@@564))) (and (= ($generated@@291 ($generated@@385 ($generated@@76 $generated@@158 $generated@@4) $generated@@563)) $generated@@563) ($generated@@145 ($generated@@385 ($generated@@76 $generated@@158 $generated@@4) $generated@@563) ($generated@@253 $generated@@564))))
 :pattern ( ($generated@@244 $generated@@563 ($generated@@253 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@158) (= (type $generated@@566) $generated@@64)) ($generated@@244 $generated@@565 ($generated@@258 $generated@@566))) (and (= ($generated@@291 ($generated@@385 ($generated@@76 $generated@@158 $generated@@4) $generated@@565)) $generated@@565) ($generated@@145 ($generated@@385 ($generated@@76 $generated@@158 $generated@@4) $generated@@565) ($generated@@258 $generated@@566))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@258 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@158) (= (type $generated@@568) $generated@@64)) ($generated@@244 $generated@@567 ($generated@@167 $generated@@568))) (and (= ($generated@@291 ($generated@@385 ($generated@@76 $generated@@158 $generated@@2) $generated@@567)) $generated@@567) ($generated@@145 ($generated@@385 ($generated@@76 $generated@@158 $generated@@2) $generated@@567) ($generated@@167 $generated@@568))))
 :pattern ( ($generated@@244 $generated@@567 ($generated@@167 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@64)) ($generated@@244 $generated@@569 ($generated@@269 $generated@@570))) (and (= ($generated@@291 ($generated@@385 ($generated@@134 $generated@@158) $generated@@569)) $generated@@569) ($generated@@145 ($generated@@385 ($generated@@134 $generated@@158) $generated@@569) ($generated@@269 $generated@@570))))
 :pattern ( ($generated@@244 $generated@@569 ($generated@@269 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@571 ($generated@@167 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@571 $generated@@574)))) ($generated@@275 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@81 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@74 $generated@@571 ($generated@@167 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@577) (and ($generated@@147 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@64) ($generated@@74 $generated@@575 ($generated@@148 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@74 $generated@@575 ($generated@@148 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@275 ($generated@@156 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@275 ($generated@@156 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@149) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@581) (and ($generated@@147 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@64) ($generated@@74 $generated@@579 ($generated@@148 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@148 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@275 ($generated@@157 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@275 ($generated@@157 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@158) (= (type $generated@@584) $generated@@158)) (= ($generated@@243 ($generated@@265 $generated@@583) ($generated@@265 $generated@@584)) ($generated@@265 ($generated@@243 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@583) ($generated@@265 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@263 $generated@@585))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@263 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@586)) ($generated@@265 ($generated@@291 $generated@@586)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@135 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@134 $generated@@588)) (= ($generated@@174 $generated@@587) 0)) (= $generated@@587 ($generated@@163 $generated@@588))))
 :pattern ( ($generated@@174 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@76 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@296 ($generated@@82 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@296 $generated@@589) ($generated ($generated@@81 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@2)) ($generated@@74 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@3)) ($generated@@74 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@4)) ($generated@@74 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@453)) ($generated@@74 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@158)) ($generated@@74 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@134 $generated@@158)) (= (type $generated@@604) $generated@@64)) (= ($generated@@145 $generated@@603 ($generated@@269 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@174 $generated@@603))) ($generated@@244 ($generated@@172 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@172 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@269 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@174 $generated@@607))) (< ($generated@@528 ($generated@@385 $generated@@149 ($generated@@172 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@528 ($generated@@385 $generated@@149 ($generated@@172 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@304 $generated@@158 $generated@@158)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@145 $generated@@609 ($generated@@413 $generated@@610 $generated@@611))) (and (and ($generated@@145 ($generated@@302 $generated@@609) ($generated@@253 $generated@@610)) ($generated@@145 ($generated@@349 $generated@@609) ($generated@@253 $generated@@611))) ($generated@@145 ($generated@@384 $generated@@609) ($generated@@253 ($generated@@148 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@145 $generated@@609 ($generated@@413 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@322 $generated@@158 $generated@@158)) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) ($generated@@145 $generated@@612 ($generated@@421 $generated@@613 $generated@@614))) (and (and ($generated@@145 ($generated@@320 $generated@@612) ($generated@@258 $generated@@613)) ($generated@@145 ($generated@@360 $generated@@612) ($generated@@258 $generated@@614))) ($generated@@145 ($generated@@395 $generated@@612) ($generated@@258 ($generated@@148 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@145 $generated@@612 ($generated@@421 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@145 $generated@@615 $generated@@46))
 :pattern ( ($generated@@145 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@145 $generated@@616 $generated@@47))
 :pattern ( ($generated@@145 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@145 $generated@@617 $generated@@44))
 :pattern ( ($generated@@145 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@453) ($generated@@145 $generated@@618 $generated@@45))
 :pattern ( ($generated@@145 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@158) ($generated@@145 $generated@@619 $generated@@48))
 :pattern ( ($generated@@145 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Int)
(assert  (and (and (and (and (and (= (type $generated@@620) ($generated@@134 $generated@@158)) (= (type $generated@@621) ($generated@@189 $generated@@77 $generated@@4))) (= (type $generated@@622) $generated@@77)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@624) ($generated@@134 $generated@@158))) (= (type $generated@@626) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@628  (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 ($generated@@263 2)) (< ($generated@@263 2) ($generated@@174 $generated@@620)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated ($generated@@385 $generated@@2 ($generated@@172 $generated@@620 ($generated@@263 2)))) ($generated@@263 3))) (=> (= ($generated ($generated@@385 $generated@@2 ($generated@@172 $generated@@620 ($generated@@263 2)))) ($generated@@263 3)) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@132 $generated@@620 ($generated@@291 ($generated@@8 3)))))))))
(let (($generated@@629  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@132 $generated@@620 ($generated@@291 ($generated@@8 3))))))
(let (($generated@@630  (=> (and (= $generated@@621 ($generated@@188 $generated@@622 $generated@@623 $generated@@60 false)) (= $generated@@624 ($generated@@265 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@291 ($generated@@8 ($generated@@263 1)))) ($generated@@291 ($generated@@8 ($generated@@263 2)))) ($generated@@291 ($generated@@8 ($generated@@263 3)))) ($generated@@291 ($generated@@8 ($generated@@263 4))))))) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@132 $generated@@624 ($generated@@291 ($generated@@8 3)))) (=> ($generated@@132 $generated@@624 ($generated@@291 ($generated@@8 3))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 ($generated@@263 0)) (< ($generated@@263 0) ($generated@@174 $generated@@624)))) (=> (and (<= 0 ($generated@@263 0)) (< ($generated@@263 0) ($generated@@174 $generated@@624))) (=> (= $generated@@620 ($generated@@173 $generated@@624 ($generated@@263 0) ($generated@@291 ($generated@@8 ($generated@@263 1))))) (and (=> (= (ControlFlow 0 7) 2) $generated@@629) (=> (= (ControlFlow 0 7) 4) $generated@@628))))))))))
(let (($generated@@631  (=> (and ($generated@@274 $generated@@623) ($generated@@625 $generated@@623)) (=> (and (and (and ($generated@@145 $generated@@626 ($generated@@269 $generated@@46)) ($generated@@74 $generated@@626 ($generated@@269 $generated@@46) $generated@@623)) true) (and (= 0 $generated@@627) (= (ControlFlow 0 10) 7))) $generated@@630))))
$generated@@631)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
