(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U) Bool)
(declare-fun $generated@@155 (Int) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@T) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@197 (T@U Int) T@U)
(declare-fun $generated@@198 (T@U Int T@U) T@U)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@T T@U T@U) T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 (T@U Int) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U T@U T@U) T@U)
(declare-fun $generated@@296 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@373 (T@U) Int)
(declare-fun $generated@@374 (T@T) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@T) T@U)
(declare-fun $generated@@399 (T@T T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@415 (T@U T@U) Bool)
(declare-fun $generated@@432 (T@T T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@513 (T@U T@U) T@U)
(declare-fun $generated@@521 (T@U T@U) T@U)
(declare-fun $generated@@535 (T@T) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 () T@T)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@662 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(declare-fun $generated@@693 (Int Int) Int)
(declare-fun $generated@@696 (T@U) T@U)
(declare-fun $generated@@724 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@99 ($generated@@92 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@100 ($generated@@92 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@92 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@100 (type $generated@@109))))
(= (type ($generated@@89 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@89 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@101 $generated@@112 $generated@@113 $generated@@114)) ($generated@@92 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@101 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@100 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@89 ($generated@@101 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@89 ($generated@@101 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@89 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@89 ($generated@@101 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@89 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@76 (type $generated@@130))))
(= (type ($generated@@88 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@88 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@94) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@94)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@76 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@88 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@88 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@88 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@88 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@88 $generated@@144 $generated@@146)))
 :weight 0
)))) (= (type $generated@@90) ($generated@@75 $generated@@2))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@91 $generated@@147 $generated@@148)) $generated@@73)
 :pattern ( ($generated@@91 $generated@@147 $generated@@148))
))) (= (type $generated@@96) $generated@@93)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@97 $generated@@149)) $generated@@73)
 :pattern ( ($generated@@97 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@150) $generated@@73) (= (type $generated@@151) $generated@@73)) (= (type $generated@@152) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@153) $generated@@93)) (and ($generated@@95 $generated@@152) (and (not (= $generated@@153 $generated@@96)) (= ($generated@@97 $generated@@153) ($generated@@91 $generated@@150 $generated@@151))))) ($generated@@98 ($generated@@88 ($generated@@89 $generated@@152 $generated@@153) $generated@@90) $generated@@46))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@152 $generated@@153) $generated@@90) ($generated@@91 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@156 Int) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@73)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@154 $generated@@157 ($generated@@155 0) $generated@@158))
 :pattern ( ($generated@@154 $generated@@157 ($generated@@155 0) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@161) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@159 $generated@@160 $generated@@161)) (forall (($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@93) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@160 $generated@@162) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@161 $generated@@162) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@161 $generated@@162) $generated@@60))
)))
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (= (type $generated@@163) $generated@@73))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@93) (= (type $generated@@165) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@164 $generated@@163 $generated@@165)  (or (= $generated@@164 $generated@@96) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@165 $generated@@164) $generated@@60)))))
 :pattern ( ($generated@@154 $generated@@164 $generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@98 $generated@@166 ($generated@@155 0)))
 :pattern ( ($generated@@98 $generated@@166 ($generated@@155 0)))
)))
(assert  (and (= ($generated@@1 $generated@@169) 16) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@73)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@73) (= (type $generated@@173) $generated@@73)) (= (type $generated@@174) $generated@@169)) ($generated@@98 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@98 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 17) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert  (and (and (forall (($generated@@187 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@187)) 18)) (forall (($generated@@188 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
))) (forall (($generated@@189 T@T) ) (! (= (type ($generated@@184 $generated@@189)) ($generated@@185 $generated@@189))
 :pattern ( ($generated@@184 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
 (not ($generated@@183 ($generated@@184 $generated@@191) $generated@@190)))
 :pattern ( (let (($generated@@191 (type $generated@@190)))
($generated@@183 ($generated@@184 $generated@@191) $generated@@190)))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@73)
 :pattern ( ($generated@@192 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@92 $generated@@178 $generated@@2)) (= (type $generated@@196) $generated@@73)) ($generated@@98 $generated@@195 ($generated@@192 $generated@@196))) ($generated@@193 $generated@@195))
 :pattern ( ($generated@@98 $generated@@195 ($generated@@192 $generated@@196)))
)))
(assert  (and (forall (($generated@@200 T@U) ($generated@@201 Int) ) (! (let (($generated@@202 ($generated@@186 (type $generated@@200))))
(= (type ($generated@@197 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@197 $generated@@200 $generated@@201))
)) (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(= (type ($generated@@198 $generated@@203 $generated@@204 $generated@@205)) ($generated@@185 $generated@@206)))
 :pattern ( ($generated@@198 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ($generated@@210 Int) ) (! (let (($generated@@211 (type $generated@@209)))
 (=> (= (type $generated@@207) ($generated@@185 $generated@@211)) (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@199 $generated@@207))) (and (=> (= $generated@@208 $generated@@210) (= ($generated@@197 ($generated@@198 $generated@@207 $generated@@208 $generated@@209) $generated@@210) $generated@@209)) (=> (not (= $generated@@208 $generated@@210)) (= ($generated@@197 ($generated@@198 $generated@@207 $generated@@208 $generated@@209) $generated@@210) ($generated@@197 $generated@@207 $generated@@210)))))))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@207 $generated@@208 $generated@@209) $generated@@210))
)))
(assert (= (type $generated@@212) $generated@@73))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@93) (= (type $generated@@214) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@213 $generated@@212 $generated@@214) ($generated@@154 $generated@@213 $generated@@163 $generated@@214)))
 :pattern ( ($generated@@154 $generated@@213 $generated@@212 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@169)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@73) (= (type $generated@@220) $generated@@73)) (= (type $generated@@221) $generated@@178)) (= (type $generated@@222) $generated@@178)) (= ($generated@@98 ($generated@@215 $generated@@221 $generated@@222) ($generated@@168 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@98 ($generated@@215 $generated@@221 $generated@@222) ($generated@@168 $generated@@219 $generated@@220)))
)))
(assert (= ($generated@@83 $generated@@90) 0))
(assert (forall (($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@75 $generated@@224))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226))
)))
(assert (= ($generated@@223 $generated@@2 $generated@@66 $generated@@72) $generated@@90))
(assert  (not ($generated@@227 $generated@@90)))
(assert (forall (($generated@@229 T@U) ($generated@@230 Int) ) (! (let (($generated@@231 ($generated@@186 (type $generated@@229))))
(= (type ($generated@@228 $generated@@229 $generated@@230)) ($generated@@185 $generated@@231)))
 :pattern ( ($generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ($generated@@234 T@U) ($generated@@235 Int) ) (! (let (($generated@@236 (type $generated@@234)))
 (=> (= (type $generated@@232) ($generated@@185 $generated@@236)) (=> (and (and (<= 0 $generated@@235) (<= $generated@@235 $generated@@233)) (< $generated@@233 ($generated@@199 $generated@@232))) (= ($generated@@228 ($generated@@198 $generated@@232 $generated@@233 $generated@@234) $generated@@235) ($generated@@198 ($generated@@228 $generated@@232 $generated@@235) (- $generated@@233 $generated@@235) $generated@@234)))))
 :pattern ( ($generated@@228 ($generated@@198 $generated@@232 $generated@@233 $generated@@234) $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@169) (= (type $generated@@238) $generated@@169)) (= ($generated@@175 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@175 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 Int) ) (! (let (($generated@@241 ($generated@@186 (type $generated@@239))))
 (=> (and (= (type $generated@@239) ($generated@@185 $generated@@241)) (= $generated@@240 0)) (= ($generated@@228 $generated@@239 $generated@@240) $generated@@239)))
 :pattern ( ($generated@@228 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@73)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@92 $generated@@178 $generated@@4)) (= (type $generated@@245) $generated@@73)) (= ($generated@@98 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@178) ($generated@@0 ($generated@@89 $generated@@244 $generated@@246))) ($generated@@216 $generated@@246 $generated@@245))
 :pattern ( ($generated@@89 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@98 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@73)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@92 $generated@@178 $generated@@4)) (= (type $generated@@250) $generated@@73)) (= ($generated@@98 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@178) ($generated@@0 ($generated@@89 $generated@@249 $generated@@251))) ($generated@@216 $generated@@251 $generated@@250))
 :pattern ( ($generated@@89 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@98 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ) (! (let (($generated@@261 ($generated@@186 (type $generated@@259))))
(= (type ($generated@@258 $generated@@259 $generated@@260)) ($generated@@185 $generated@@261)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@186 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@185 $generated@@265)) (=> (and (and (<= 0 $generated@@264) (< $generated@@264 $generated@@263)) (< $generated@@264 ($generated@@199 $generated@@262))) (= ($generated@@197 ($generated@@258 $generated@@262 $generated@@263) $generated@@264) ($generated@@197 $generated@@262 $generated@@264)))))
 :weight 25
 :pattern ( ($generated@@197 ($generated@@258 $generated@@262 $generated@@263) $generated@@264))
 :pattern ( ($generated@@197 $generated@@262 $generated@@264) ($generated@@258 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@73) (= (type $generated@@268) $generated@@73)) (= (type $generated@@269) $generated@@178)) (= (type $generated@@270) $generated@@178)) (= (type $generated@@271) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@95 $generated@@271)) (= ($generated@@154 ($generated@@215 $generated@@269 $generated@@270) ($generated@@168 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@154 ($generated@@215 $generated@@269 $generated@@270) ($generated@@168 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 Int) ) (! (let (($generated@@274 ($generated@@186 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@185 $generated@@274)) (=> (and (<= 0 $generated@@273) (<= $generated@@273 ($generated@@199 $generated@@272))) (= ($generated@@199 ($generated@@228 $generated@@272 $generated@@273)) (- ($generated@@199 $generated@@272) $generated@@273)))))
 :pattern ( ($generated@@199 ($generated@@228 $generated@@272 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@78)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@169) (= ($generated@@167 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@64)))
 :pattern ( ($generated@@167 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ) (! (let (($generated@@281 ($generated@@186 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@185 $generated@@281)) (=> (and (<= 0 $generated@@280) (< $generated@@280 ($generated@@199 $generated@@279))) (< ($generated@@278 ($generated@@258 $generated@@279 $generated@@280)) ($generated@@278 $generated@@279)))))
 :pattern ( ($generated@@278 ($generated@@258 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@169) ($generated@@167 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@178) (= (type $generated@@284) $generated@@178)) (= $generated@@282 ($generated@@215 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@167 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@199 ($generated@@184 $generated@@285)) 0)
 :pattern ( ($generated@@184 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 Int) ) (! (let (($generated@@288 ($generated@@186 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@185 $generated@@288)) (=> (and (< 0 $generated@@287) (<= $generated@@287 ($generated@@199 $generated@@286))) (< ($generated@@278 ($generated@@228 $generated@@286 $generated@@287)) ($generated@@278 $generated@@286)))))
 :pattern ( ($generated@@278 ($generated@@228 $generated@@286 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@289 $generated@@290 $generated@@291)) $generated@@73)
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@73) (= (type $generated@@293) $generated@@73)) (= (type $generated@@294) $generated@@93)) (= ($generated@@98 $generated@@294 ($generated@@289 $generated@@292 $generated@@293))  (and ($generated@@98 $generated@@294 ($generated@@91 $generated@@292 $generated@@293)) (not (= $generated@@294 $generated@@96)))))
 :pattern ( ($generated@@98 $generated@@294 ($generated@@289 $generated@@292 $generated@@293)))
)))
(assert ($generated@@227 $generated@@60))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@298 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@298 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@295 $generated@@308 $generated@@309 $generated@@310)) $generated@@311))
 :pattern ( ($generated@@295 $generated@@308 $generated@@309 $generated@@310))
))) (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 (type $generated@@315)))
(let (($generated@@317 (type $generated@@313)))
(= (type ($generated@@301 $generated@@312 $generated@@313 $generated@@314 $generated@@315)) ($generated@@298 $generated@@317 $generated@@316))))
 :pattern ( ($generated@@301 $generated@@312 $generated@@313 $generated@@314 $generated@@315))
))) (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@300 (type $generated@@318))))
 (=> (= (type $generated@@321) $generated@@322) (= ($generated@@295 ($generated@@301 $generated@@318 $generated@@319 $generated@@320 $generated@@321) $generated@@319 $generated@@320) $generated@@321)))
 :weight 0
))) (and (and (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (or (= $generated@@325 $generated@@327) (= ($generated@@295 ($generated@@301 $generated@@324 $generated@@325 $generated@@326 $generated@@323) $generated@@327 $generated@@328) ($generated@@295 $generated@@324 $generated@@327 $generated@@328)))
 :weight 0
)) (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (or (= $generated@@332 $generated@@334) (= ($generated@@295 ($generated@@301 $generated@@330 $generated@@331 $generated@@332 $generated@@329) $generated@@333 $generated@@334) ($generated@@295 $generated@@330 $generated@@333 $generated@@334)))
 :weight 0
))) (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (or true (= ($generated@@295 ($generated@@301 $generated@@336 $generated@@337 $generated@@338 $generated@@335) $generated@@339 $generated@@340) ($generated@@295 $generated@@336 $generated@@339 $generated@@340)))
 :weight 0
)))) (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (! (= (type ($generated@@296 $generated@@341 $generated@@342 $generated@@343 $generated@@344 $generated@@345)) ($generated@@298 $generated@@93 $generated@@4))
 :pattern ( ($generated@@296 $generated@@341 $generated@@342 $generated@@343 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (= (type ($generated@@297 $generated@@346)) $generated@@178)
 :pattern ( ($generated@@297 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@76 (type $generated@@353))))
 (=> (and (and (and (and (and (and (= (type $generated@@347) $generated@@93) (= (type $generated@@348) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@349) ($generated@@75 $generated@@4))) (= (type $generated@@350) $generated@@93)) (= (type $generated@@351) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@352) $generated@@93)) (= (type $generated@@353) ($generated@@75 $generated@@354))) (= ($generated@@0 ($generated@@295 ($generated@@296 $generated@@347 $generated@@348 $generated@@349 $generated@@350 $generated@@351) $generated@@352 $generated@@353))  (=> (and (not (= $generated@@352 $generated@@347)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@348 $generated@@352) $generated@@349))) (or (= $generated@@352 $generated@@350) ($generated@@0 ($generated@@89 $generated@@351 ($generated@@297 $generated@@352))))))))
 :pattern ( ($generated@@295 ($generated@@296 $generated@@347 $generated@@348 $generated@@349 $generated@@350 $generated@@351) $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@73) (= (type $generated@@357) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@266 ($generated@@297 $generated@@355) $generated@@356 $generated@@357) ($generated@@154 $generated@@355 $generated@@356 $generated@@357)))
 :pattern ( ($generated@@266 ($generated@@297 $generated@@355) $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@358) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@359) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@360) $generated@@178)) (= (type $generated@@361) $generated@@73)) ($generated@@159 $generated@@358 $generated@@359)) ($generated@@266 $generated@@360 $generated@@361 $generated@@358)) ($generated@@266 $generated@@360 $generated@@361 $generated@@359))
 :pattern ( ($generated@@159 $generated@@358 $generated@@359) ($generated@@266 $generated@@360 $generated@@361 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@362) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@363) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@365) $generated@@73)) ($generated@@159 $generated@@362 $generated@@363)) ($generated@@154 $generated@@364 $generated@@365 $generated@@362)) ($generated@@154 $generated@@364 $generated@@365 $generated@@363))
 :pattern ( ($generated@@159 $generated@@362 $generated@@363) ($generated@@154 $generated@@364 $generated@@365 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) $generated@@73) (= (type $generated@@367) $generated@@73)) (= (type $generated@@368) $generated@@93)) (= ($generated@@98 $generated@@368 ($generated@@91 $generated@@366 $generated@@367))  (or (= $generated@@368 $generated@@96) (= ($generated@@97 $generated@@368) ($generated@@91 $generated@@366 $generated@@367)))))
 :pattern ( ($generated@@98 $generated@@368 ($generated@@91 $generated@@366 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 Int) ) (! (let (($generated@@372 ($generated@@186 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@185 $generated@@372)) (=> (and (and (<= 0 $generated@@370) (<= 0 $generated@@371)) (< $generated@@371 (- ($generated@@199 $generated@@369) $generated@@370))) (= ($generated@@197 ($generated@@228 $generated@@369 $generated@@370) $generated@@371) ($generated@@197 $generated@@369 (+ $generated@@371 $generated@@370))))))
 :weight 25
 :pattern ( ($generated@@197 ($generated@@228 $generated@@369 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ) (! (= (type ($generated@@374 $generated@@375)) ($generated@@92 $generated@@375 $generated@@2))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@99 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@92 $generated@@377 $generated@@2)) (and (= (= ($generated@@373 $generated@@376) 0) (= $generated@@376 ($generated@@374 $generated@@377))) (=> (not (= ($generated@@373 $generated@@376) 0)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (< 0 ($generated ($generated@@89 $generated@@376 $generated@@378))))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 20)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@92 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@89 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@89 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert  (and (and (and (and (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (= ($generated@@1 ($generated@@399 $generated@@402 $generated@@403)) 21)) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= ($generated@@400 ($generated@@399 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@399 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@401 ($generated@@399 $generated@@406 $generated@@407)) $generated@@407)
 :pattern ( ($generated@@399 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@400 (type $generated@@408))))
(= (type ($generated@@397 $generated@@408)) ($generated@@92 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@408))
))) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= (type ($generated@@398 $generated@@410 $generated@@411)) ($generated@@399 $generated@@410 $generated@@411))
 :pattern ( ($generated@@398 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@T) ) (! (let (($generated@@414 (type $generated@@412)))
 (not ($generated@@0 ($generated@@89 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412))))
 :pattern ( (let (($generated@@414 (type $generated@@412)))
($generated@@89 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@417) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@415 $generated@@416 $generated@@417)) (and ($generated@@159 $generated@@416 $generated@@417) (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@76 (type $generated@@419))))
 (=> (and (and (= (type $generated@@418) $generated@@93) (= (type $generated@@419) ($generated@@75 $generated@@420))) (not ($generated@@227 $generated@@419))) (= ($generated@@88 ($generated@@89 $generated@@416 $generated@@418) $generated@@419) ($generated@@88 ($generated@@89 $generated@@417 $generated@@418) $generated@@419))))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@417 $generated@@418) $generated@@419))
))))
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@73) (= (type $generated@@422) $generated@@73)) (= (type $generated@@423) $generated@@93)) (= (type $generated@@424) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@423 ($generated@@91 $generated@@421 $generated@@422) $generated@@424)  (or (= $generated@@423 $generated@@96) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@424 $generated@@423) $generated@@60)))))
 :pattern ( ($generated@@154 $generated@@423 ($generated@@91 $generated@@421 $generated@@422) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) $generated@@73) (= (type $generated@@426) $generated@@73)) (= (type $generated@@427) $generated@@93)) (= (type $generated@@428) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@427 ($generated@@289 $generated@@425 $generated@@426) $generated@@428) ($generated@@154 $generated@@427 ($generated@@91 $generated@@425 $generated@@426) $generated@@428)))
 :pattern ( ($generated@@154 $generated@@427 ($generated@@289 $generated@@425 $generated@@426) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@99 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@92 $generated@@430 $generated@@2)) (= ($generated@@193 $generated@@429) (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@430) (and (<= 0 ($generated ($generated@@89 $generated@@429 $generated@@431))) (<= ($generated ($generated@@89 $generated@@429 $generated@@431)) ($generated@@373 $generated@@429))))
 :pattern ( ($generated@@89 $generated@@429 $generated@@431))
)))))
 :pattern ( ($generated@@193 $generated@@429))
)))
(assert (forall (($generated@@433 T@T) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@433)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@178) ($generated@@216 $generated@@435 $generated@@163)) (and (= ($generated@@297 ($generated@@432 $generated@@93 $generated@@435)) $generated@@435) ($generated@@98 ($generated@@432 $generated@@93 $generated@@435) $generated@@163)))
 :pattern ( ($generated@@216 $generated@@435 $generated@@163))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@178) ($generated@@216 $generated@@436 $generated@@212)) (and (= ($generated@@297 ($generated@@432 $generated@@93 $generated@@436)) $generated@@436) ($generated@@98 ($generated@@432 $generated@@93 $generated@@436) $generated@@212)))
 :pattern ( ($generated@@216 $generated@@436 $generated@@212))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@93) (= ($generated@@98 $generated@@437 $generated@@212)  (and ($generated@@98 $generated@@437 $generated@@163) (not (= $generated@@437 $generated@@96)))))
 :pattern ( ($generated@@98 $generated@@437 $generated@@212))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@383 (type $generated@@438))))
(let (($generated@@440 ($generated@@382 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@381 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@380 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@89 ($generated@@379 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@379 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@383 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@92 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@383 (type $generated@@445))))
(let (($generated@@447 ($generated@@382 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@381 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@380 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@89 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@401 (type $generated@@449))))
(let (($generated@@451 ($generated@@400 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@399 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@398 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) ($generated@@0 ($generated@@89 ($generated@@397 $generated@@449) $generated@@452)))
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@401 (type $generated@@454))))
(= (type ($generated@@453 $generated@@454)) ($generated@@92 $generated@@455 $generated@@4)))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@401 (type $generated@@456))))
(let (($generated@@458 ($generated@@400 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@399 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@398 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@457) ($generated@@0 ($generated@@89 ($generated@@453 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@453 $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) ($generated@@92 $generated@@178 $generated@@2)) (= (type $generated@@461) $generated@@73)) (= ($generated@@98 $generated@@460 ($generated@@192 $generated@@461)) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@178) (< 0 ($generated ($generated@@89 $generated@@460 $generated@@462)))) ($generated@@216 $generated@@462 $generated@@461))
 :pattern ( ($generated@@89 $generated@@460 $generated@@462))
))))
 :pattern ( ($generated@@98 $generated@@460 ($generated@@192 $generated@@461)))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 Int) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (=> (= (type $generated@@463) ($generated@@185 $generated@@466)) (= ($generated@@183 ($generated@@258 $generated@@463 $generated@@464) $generated@@465) (exists (($generated@@467 Int) ) (!  (and (and (and (<= 0 $generated@@467) (< $generated@@467 $generated@@464)) (< $generated@@467 ($generated@@199 $generated@@463))) (= ($generated@@197 $generated@@463 $generated@@467) $generated@@465))
 :pattern ( ($generated@@197 $generated@@463 $generated@@467))
)))))
 :pattern ( ($generated@@183 ($generated@@258 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
 (=> (= (type $generated@@468) ($generated@@185 $generated@@470)) (= ($generated@@183 $generated@@468 $generated@@469) (exists (($generated@@471 Int) ) (!  (and (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@199 $generated@@468))) (= ($generated@@197 $generated@@468 $generated@@471) $generated@@469))
 :pattern ( ($generated@@197 $generated@@468 $generated@@471))
)))))
 :pattern ( ($generated@@183 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 Int) ($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 (type $generated@@474)))
 (=> (= (type $generated@@472) ($generated@@185 $generated@@476)) (=> (and (and (<= 0 $generated@@473) (< $generated@@473 $generated@@475)) (<= $generated@@475 ($generated@@199 $generated@@472))) (= ($generated@@228 ($generated@@198 $generated@@472 $generated@@473 $generated@@474) $generated@@475) ($generated@@228 $generated@@472 $generated@@475)))))
 :pattern ( ($generated@@228 ($generated@@198 $generated@@472 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@92 $generated@@178 $generated@@4)) (= (type $generated@@478) $generated@@73)) (= (type $generated@@479) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@477 ($generated@@242 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@178) ($generated@@0 ($generated@@89 $generated@@477 $generated@@480))) ($generated@@266 $generated@@480 $generated@@478 $generated@@479))
 :pattern ( ($generated@@89 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@154 $generated@@477 ($generated@@242 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@92 $generated@@178 $generated@@4)) (= (type $generated@@482) $generated@@73)) (= (type $generated@@483) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@481 ($generated@@247 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@178) ($generated@@0 ($generated@@89 $generated@@481 $generated@@484))) ($generated@@266 $generated@@484 $generated@@482 $generated@@483))
 :pattern ( ($generated@@89 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@154 $generated@@481 ($generated@@247 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated ($generated@@89 ($generated@@374 $generated@@486) $generated@@485)) 0))
 :pattern ( (let (($generated@@486 (type $generated@@485)))
($generated@@89 ($generated@@374 $generated@@486) $generated@@485)))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) ($generated@@92 $generated@@178 $generated@@4))
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@383 (type $generated@@490))))
(let (($generated@@492 ($generated@@382 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490)) ($generated@@92 $generated@@492 $generated@@491))))
 :pattern ( ($generated@@488 $generated@@490))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) ($generated@@381 $generated@@178 $generated@@178)) (= (type $generated@@494) $generated@@178)) (= ($generated@@0 ($generated@@89 ($generated@@487 $generated@@493) $generated@@494))  (and ($generated@@0 ($generated@@89 ($generated@@379 $generated@@493) ($generated@@176 ($generated@@432 $generated@@169 $generated@@494)))) (= ($generated@@89 ($generated@@488 $generated@@493) ($generated@@176 ($generated@@432 $generated@@169 $generated@@494))) ($generated@@177 ($generated@@432 $generated@@169 $generated@@494))))))
 :pattern ( ($generated@@89 ($generated@@487 $generated@@493) $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) ($generated@@92 $generated@@178 $generated@@4))
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@401 (type $generated@@498))))
(let (($generated@@500 ($generated@@400 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498)) ($generated@@92 $generated@@500 $generated@@499))))
 :pattern ( ($generated@@496 $generated@@498))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) ($generated@@399 $generated@@178 $generated@@178)) (= (type $generated@@502) $generated@@178)) (= ($generated@@0 ($generated@@89 ($generated@@495 $generated@@501) $generated@@502))  (and ($generated@@0 ($generated@@89 ($generated@@397 $generated@@501) ($generated@@176 ($generated@@432 $generated@@169 $generated@@502)))) (= ($generated@@89 ($generated@@496 $generated@@501) ($generated@@176 ($generated@@432 $generated@@169 $generated@@502))) ($generated@@177 ($generated@@432 $generated@@169 $generated@@502))))))
 :pattern ( ($generated@@89 ($generated@@495 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(let (($generated@@506 ($generated@@382 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@381 $generated@@506 $generated@@505)) (= ($generated@@0 ($generated@@89 ($generated@@442 $generated@@503) $generated@@504)) (exists (($generated@@507 T@U) ) (!  (and (= (type $generated@@507) $generated@@506) (and ($generated@@0 ($generated@@89 ($generated@@379 $generated@@503) $generated@@507)) (= $generated@@504 ($generated@@89 ($generated@@488 $generated@@503) $generated@@507))))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@503) $generated@@507))
 :pattern ( ($generated@@89 ($generated@@488 $generated@@503) $generated@@507))
))))))
 :pattern ( ($generated@@89 ($generated@@442 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(let (($generated@@511 ($generated@@400 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@399 $generated@@511 $generated@@510)) (= ($generated@@0 ($generated@@89 ($generated@@453 $generated@@508) $generated@@509)) (exists (($generated@@512 T@U) ) (!  (and (= (type $generated@@512) $generated@@511) (and ($generated@@0 ($generated@@89 ($generated@@397 $generated@@508) $generated@@512)) (= $generated@@509 ($generated@@89 ($generated@@496 $generated@@508) $generated@@512))))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@508) $generated@@512))
 :pattern ( ($generated@@89 ($generated@@496 $generated@@508) $generated@@512))
))))))
 :pattern ( ($generated@@89 ($generated@@453 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@514 $generated@@515)) $generated@@73)
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) ($generated@@381 $generated@@178 $generated@@178)) (= (type $generated@@517) $generated@@73)) (= (type $generated@@518) $generated@@73)) (= (type $generated@@519) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@178) ($generated@@0 ($generated@@89 ($generated@@379 $generated@@516) $generated@@520))) (and ($generated@@266 ($generated@@89 ($generated@@488 $generated@@516) $generated@@520) $generated@@518 $generated@@519) ($generated@@266 $generated@@520 $generated@@517 $generated@@519)))
 :pattern ( ($generated@@89 ($generated@@488 $generated@@516) $generated@@520))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@516) $generated@@520))
))))
 :pattern ( ($generated@@154 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) ($generated@@399 $generated@@178 $generated@@178)) (= (type $generated@@525) $generated@@73)) (= (type $generated@@526) $generated@@73)) (= (type $generated@@527) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@178) ($generated@@0 ($generated@@89 ($generated@@397 $generated@@524) $generated@@528))) (and ($generated@@266 ($generated@@89 ($generated@@496 $generated@@524) $generated@@528) $generated@@526 $generated@@527) ($generated@@266 $generated@@528 $generated@@525 $generated@@527)))
 :pattern ( ($generated@@89 ($generated@@496 $generated@@524) $generated@@528))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@524) $generated@@528))
))))
 :pattern ( ($generated@@154 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@186 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@185 $generated@@531)) (=> (and (<= 0 $generated@@530) (<= $generated@@530 ($generated@@199 $generated@@529))) (= ($generated@@199 ($generated@@258 $generated@@529 $generated@@530)) $generated@@530))))
 :pattern ( ($generated@@199 ($generated@@258 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@532) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@533) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@534) ($generated@@92 $generated@@93 $generated@@94))) (not (= $generated@@532 $generated@@534))) (and ($generated@@159 $generated@@532 $generated@@533) ($generated@@159 $generated@@533 $generated@@534))) ($generated@@159 $generated@@532 $generated@@534))
 :pattern ( ($generated@@159 $generated@@532 $generated@@533) ($generated@@159 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@T) ) (! (= (type ($generated@@535 $generated@@536)) ($generated@@92 $generated@@536 $generated@@4))
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@401 (type $generated@@537))))
(let (($generated@@539 ($generated@@400 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@399 $generated@@539 $generated@@538)) (= (= $generated@@537 ($generated@@398 $generated@@539 $generated@@538)) (= ($generated@@397 $generated@@537) ($generated@@535 $generated@@539))))))
 :pattern ( ($generated@@397 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@401 (type $generated@@540))))
(let (($generated@@542 ($generated@@400 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@399 $generated@@542 $generated@@541)) (= (= $generated@@540 ($generated@@398 $generated@@542 $generated@@541)) (= ($generated@@453 $generated@@540) ($generated@@535 $generated@@541))))))
 :pattern ( ($generated@@453 $generated@@540))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@401 (type $generated@@543))))
(let (($generated@@545 ($generated@@400 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@399 $generated@@545 $generated@@544)) (= (= $generated@@543 ($generated@@398 $generated@@545 $generated@@544)) (= ($generated@@495 $generated@@543) ($generated@@535 $generated@@178))))))
 :pattern ( ($generated@@495 $generated@@543))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@383 (type $generated@@546))))
(let (($generated@@548 ($generated@@382 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@381 $generated@@548 $generated@@547)) (or (= $generated@@546 ($generated@@380 $generated@@548 $generated@@547)) (exists (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (and (and (= (type $generated@@549) $generated@@178) (= (type $generated@@550) $generated@@178)) ($generated@@0 ($generated@@89 ($generated@@487 $generated@@546) ($generated@@297 ($generated@@215 $generated@@549 $generated@@550)))))
 :no-pattern (type $generated@@549)
 :no-pattern (type $generated@@550)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
))))))
 :pattern ( ($generated@@487 $generated@@546))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@401 (type $generated@@551))))
(let (($generated@@553 ($generated@@400 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@399 $generated@@553 $generated@@552)) (or (= $generated@@551 ($generated@@398 $generated@@553 $generated@@552)) (exists (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (and (and (= (type $generated@@554) $generated@@178) (= (type $generated@@555) $generated@@178)) ($generated@@0 ($generated@@89 ($generated@@495 $generated@@551) ($generated@@297 ($generated@@215 $generated@@554 $generated@@555)))))
 :no-pattern (type $generated@@554)
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@495 $generated@@551))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@79)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@T) ) (!  (=> (and (= (type $generated@@558) $generated@@79) (= (type $generated@@559) $generated@@77)) (and (= ($generated@@556 ($generated@@223 $generated@@560 $generated@@558 $generated@@559)) $generated@@558) (= ($generated@@86 ($generated@@223 $generated@@560 $generated@@558 $generated@@559)) $generated@@559)))
 :pattern ( ($generated@@223 $generated@@560 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@178) ($generated@@216 $generated@@561 $generated@@46)) (and (= ($generated@@297 ($generated@@432 $generated@@2 $generated@@561)) $generated@@561) ($generated@@98 ($generated@@432 $generated@@2 $generated@@561) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@561 $generated@@46))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@178) ($generated@@216 $generated@@562 $generated@@47)) (and (= ($generated@@297 ($generated@@432 $generated@@3 $generated@@562)) $generated@@562) ($generated@@98 ($generated@@432 $generated@@3 $generated@@562) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@562 $generated@@47))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@178) ($generated@@216 $generated@@563 $generated@@44)) (and (= ($generated@@297 ($generated@@432 $generated@@4 $generated@@563)) $generated@@563) ($generated@@98 ($generated@@432 $generated@@4 $generated@@563) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@563 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@564) 22))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@178) ($generated@@216 $generated@@565 $generated@@45)) (and (= ($generated@@297 ($generated@@432 $generated@@564 $generated@@565)) $generated@@565) ($generated@@98 ($generated@@432 $generated@@564 $generated@@565) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@565 $generated@@45))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@73) (= ($generated@@216 ($generated@@297 $generated@@566) $generated@@567) ($generated@@98 $generated@@566 $generated@@567)))
 :pattern ( ($generated@@216 ($generated@@297 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ($generated@@570 T@U) ($generated@@571 Int) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (= (type $generated@@568) ($generated@@185 $generated@@572)) (=> (and (<= $generated@@571 $generated@@569) (< $generated@@569 ($generated@@199 $generated@@568))) (= ($generated@@258 ($generated@@198 $generated@@568 $generated@@569 $generated@@570) $generated@@571) ($generated@@258 $generated@@568 $generated@@571)))))
 :pattern ( ($generated@@258 ($generated@@198 $generated@@568 $generated@@569 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@99 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@92 $generated@@574 $generated@@2)) (<= 0 ($generated@@373 $generated@@573))))
 :pattern ( ($generated@@373 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@186 (type $generated@@575))))
 (=> (= (type $generated@@575) ($generated@@185 $generated@@576)) (<= 0 ($generated@@199 $generated@@575))))
 :pattern ( ($generated@@199 $generated@@575))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@73)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@73) (= (type $generated@@580) $generated@@73)) (= ($generated@@577 ($generated@@513 $generated@@579 $generated@@580)) $generated@@579))
 :pattern ( ($generated@@513 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@73) (= (type $generated@@584) $generated@@73)) (= ($generated@@581 ($generated@@513 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@513 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@73) (= (type $generated@@586) $generated@@73)) (= ($generated@@84 ($generated@@513 $generated@@585 $generated@@586)) $generated@@58))
 :pattern ( ($generated@@513 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@73)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@73) (= (type $generated@@590) $generated@@73)) (= ($generated@@587 ($generated@@521 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@521 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@73)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@73) (= (type $generated@@594) $generated@@73)) (= ($generated@@591 ($generated@@521 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@521 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@73) (= (type $generated@@596) $generated@@73)) (= ($generated@@84 ($generated@@521 $generated@@595 $generated@@596)) $generated@@59))
 :pattern ( ($generated@@521 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@178) (= (type $generated@@598) $generated@@178)) (= ($generated@@275 ($generated@@215 $generated@@597 $generated@@598)) $generated@@64))
 :pattern ( ($generated@@215 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@73)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@73) (= (type $generated@@602) $generated@@73)) (= ($generated@@599 ($generated@@168 $generated@@601 $generated@@602)) $generated@@601))
 :pattern ( ($generated@@168 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@73)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@73) (= (type $generated@@606) $generated@@73)) (= ($generated@@603 ($generated@@168 $generated@@605 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@168 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@178) (= (type $generated@@608) $generated@@178)) (= ($generated@@176 ($generated@@215 $generated@@607 $generated@@608)) $generated@@607))
 :pattern ( ($generated@@215 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@178) (= (type $generated@@610) $generated@@178)) (= ($generated@@177 ($generated@@215 $generated@@609 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@215 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@73)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@73) (= (type $generated@@614) $generated@@73)) (= ($generated@@611 ($generated@@91 $generated@@613 $generated@@614)) $generated@@613))
 :pattern ( ($generated@@91 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@73)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@73) (= (type $generated@@618) $generated@@73)) (= ($generated@@615 ($generated@@91 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@91 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@73)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@73) (= (type $generated@@622) $generated@@73)) (= ($generated@@619 ($generated@@289 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@289 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@73)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@73) (= (type $generated@@626) $generated@@73)) (= ($generated@@623 ($generated@@289 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@289 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@93) ($generated@@98 $generated@@627 $generated@@163))
 :pattern ( ($generated@@98 $generated@@627 $generated@@163))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@73)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@185 $generated@@178)) (= (type $generated@@631) $generated@@73)) (= (type $generated@@632) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@630 ($generated@@628 $generated@@631) $generated@@632) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@199 $generated@@630))) ($generated@@266 ($generated@@197 $generated@@630 $generated@@633) $generated@@631 $generated@@632))
 :pattern ( ($generated@@197 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@154 $generated@@630 ($generated@@628 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@634 ($generated@@155 $generated@@635)) $generated@@635)
 :pattern ( ($generated@@155 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@73)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@73) (= ($generated@@636 ($generated@@242 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@242 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@73) (= ($generated@@84 ($generated@@242 $generated@@639)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@73)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@73) (= ($generated@@640 ($generated@@247 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@247 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@73) (= ($generated@@84 ($generated@@247 $generated@@643)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@73)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@73) (= ($generated@@644 ($generated@@192 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@192 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@73) (= ($generated@@84 ($generated@@192 $generated@@647)) $generated@@56))
 :pattern ( ($generated@@192 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@73)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@73) (= ($generated@@648 ($generated@@628 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@628 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@73) (= ($generated@@84 ($generated@@628 $generated@@651)) $generated@@57))
 :pattern ( ($generated@@628 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
(= ($generated@@432 $generated@@653 ($generated@@297 $generated@@652)) $generated@@652))
 :pattern ( ($generated@@297 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@381 $generated@@178 $generated@@178)) (= (type $generated@@655) $generated@@73)) (= (type $generated@@656) $generated@@73)) (= ($generated@@98 $generated@@654 ($generated@@513 $generated@@655 $generated@@656)) (forall (($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@178) ($generated@@0 ($generated@@89 ($generated@@379 $generated@@654) $generated@@657))) (and ($generated@@216 ($generated@@89 ($generated@@488 $generated@@654) $generated@@657) $generated@@656) ($generated@@216 $generated@@657 $generated@@655)))
 :pattern ( ($generated@@89 ($generated@@488 $generated@@654) $generated@@657))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@654) $generated@@657))
))))
 :pattern ( ($generated@@98 $generated@@654 ($generated@@513 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@658) ($generated@@399 $generated@@178 $generated@@178)) (= (type $generated@@659) $generated@@73)) (= (type $generated@@660) $generated@@73)) (= ($generated@@98 $generated@@658 ($generated@@521 $generated@@659 $generated@@660)) (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@178) ($generated@@0 ($generated@@89 ($generated@@397 $generated@@658) $generated@@661))) (and ($generated@@216 ($generated@@89 ($generated@@496 $generated@@658) $generated@@661) $generated@@660) ($generated@@216 $generated@@661 $generated@@659)))
 :pattern ( ($generated@@89 ($generated@@496 $generated@@658) $generated@@661))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@658) $generated@@661))
))))
 :pattern ( ($generated@@98 $generated@@658 ($generated@@521 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@178) (= (type $generated@@665) $generated@@178)) (< ($generated@@662 $generated@@664) ($generated@@663 ($generated@@215 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@215 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@178) (= (type $generated@@667) $generated@@178)) (< ($generated@@662 $generated@@667) ($generated@@663 ($generated@@215 $generated@@666 $generated@@667))))
 :pattern ( ($generated@@215 $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) $generated@@178) (= (type $generated@@669) $generated@@73)) (= (type $generated@@670) $generated@@73)) ($generated@@216 $generated@@668 ($generated@@513 $generated@@669 $generated@@670))) (and (= ($generated@@297 ($generated@@432 ($generated@@381 $generated@@178 $generated@@178) $generated@@668)) $generated@@668) ($generated@@98 ($generated@@432 ($generated@@381 $generated@@178 $generated@@178) $generated@@668) ($generated@@513 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@216 $generated@@668 ($generated@@513 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@178) (= (type $generated@@672) $generated@@73)) (= (type $generated@@673) $generated@@73)) ($generated@@216 $generated@@671 ($generated@@521 $generated@@672 $generated@@673))) (and (= ($generated@@297 ($generated@@432 ($generated@@399 $generated@@178 $generated@@178) $generated@@671)) $generated@@671) ($generated@@98 ($generated@@432 ($generated@@399 $generated@@178 $generated@@178) $generated@@671) ($generated@@521 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@216 $generated@@671 ($generated@@521 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@73) (= (type $generated@@675) $generated@@73)) (= (type $generated@@676) $generated@@178)) ($generated@@216 $generated@@676 ($generated@@168 $generated@@674 $generated@@675))) (and (= ($generated@@297 ($generated@@432 $generated@@169 $generated@@676)) $generated@@676) ($generated@@98 ($generated@@432 $generated@@169 $generated@@676) ($generated@@168 $generated@@674 $generated@@675))))
 :pattern ( ($generated@@216 $generated@@676 ($generated@@168 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@73) (= (type $generated@@678) $generated@@73)) (= (type $generated@@679) $generated@@178)) ($generated@@216 $generated@@679 ($generated@@91 $generated@@677 $generated@@678))) (and (= ($generated@@297 ($generated@@432 $generated@@93 $generated@@679)) $generated@@679) ($generated@@98 ($generated@@432 $generated@@93 $generated@@679) ($generated@@91 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@216 $generated@@679 ($generated@@91 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@73) (= (type $generated@@681) $generated@@73)) (= (type $generated@@682) $generated@@178)) ($generated@@216 $generated@@682 ($generated@@289 $generated@@680 $generated@@681))) (and (= ($generated@@297 ($generated@@432 $generated@@93 $generated@@682)) $generated@@682) ($generated@@98 ($generated@@432 $generated@@93 $generated@@682) ($generated@@289 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@216 $generated@@682 ($generated@@289 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@683)))
 (not ($generated@@0 ($generated@@89 ($generated@@535 $generated@@684) $generated@@683))))
 :pattern ( (let (($generated@@684 (type $generated@@683)))
($generated@@89 ($generated@@535 $generated@@684) $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@685) $generated@@73) (= (type $generated@@686) $generated@@73)) (= (type $generated@@687) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@688) $generated@@93)) (and (and ($generated@@95 $generated@@687) (and (not (= $generated@@688 $generated@@96)) (= ($generated@@97 $generated@@688) ($generated@@91 $generated@@685 $generated@@686)))) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@687 $generated@@688) $generated@@60)))) ($generated@@154 ($generated@@88 ($generated@@89 $generated@@687 $generated@@688) $generated@@90) $generated@@46 $generated@@687))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@687 $generated@@688) $generated@@90) ($generated@@91 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 Int) ($generated@@691 T@U) ) (! (let (($generated@@692 (type $generated@@691)))
 (=> (= (type $generated@@689) ($generated@@185 $generated@@692)) (=> (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@199 $generated@@689))) (= ($generated@@199 ($generated@@198 $generated@@689 $generated@@690 $generated@@691)) ($generated@@199 $generated@@689)))))
 :pattern ( ($generated@@199 ($generated@@198 $generated@@689 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@694 Int) ($generated@@695 Int) ) (! (= ($generated@@693 $generated@@694 $generated@@695) (mod $generated@@694 $generated@@695))
 :pattern ( ($generated@@693 $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ) (! (= (type ($generated@@696 $generated@@697)) $generated@@80)
 :pattern ( ($generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@73) (= (type $generated@@699) $generated@@73)) (and (= ($generated@@84 ($generated@@168 $generated@@698 $generated@@699)) $generated@@65) (= ($generated@@696 ($generated@@168 $generated@@698 $generated@@699)) $generated@@70)))
 :pattern ( ($generated@@168 $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@73) (= (type $generated@@701) $generated@@73)) (and (= ($generated@@84 ($generated@@91 $generated@@700 $generated@@701)) $generated@@67) (= ($generated@@696 ($generated@@91 $generated@@700 $generated@@701)) $generated@@71)))
 :pattern ( ($generated@@91 $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@73) (= (type $generated@@703) $generated@@73)) (and (= ($generated@@84 ($generated@@289 $generated@@702 $generated@@703)) $generated@@68) (= ($generated@@696 ($generated@@289 $generated@@702 $generated@@703)) $generated@@71)))
 :pattern ( ($generated@@289 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@169) (= ($generated@@662 ($generated@@297 $generated@@704)) ($generated@@663 $generated@@704)))
 :pattern ( ($generated@@662 ($generated@@297 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (=> (= (type $generated@@705) ($generated@@185 $generated@@708)) (= ($generated@@183 ($generated@@228 $generated@@705 $generated@@706) $generated@@707) (exists (($generated@@709 Int) ) (!  (and (and (and (<= 0 $generated@@706) (<= $generated@@706 $generated@@709)) (< $generated@@709 ($generated@@199 $generated@@705))) (= ($generated@@197 $generated@@705 $generated@@709) $generated@@707))
 :pattern ( ($generated@@197 $generated@@705 $generated@@709))
)))))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@705 $generated@@706) $generated@@707))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@178) ($generated@@216 $generated@@710 ($generated@@155 0))) (and (= ($generated@@297 ($generated@@432 $generated@@2 $generated@@710)) $generated@@710) ($generated@@98 ($generated@@432 ($generated@@92 $generated@@178 $generated@@4) $generated@@710) ($generated@@155 0))))
 :pattern ( ($generated@@216 $generated@@710 ($generated@@155 0)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@178) (= (type $generated@@712) $generated@@73)) ($generated@@216 $generated@@711 ($generated@@242 $generated@@712))) (and (= ($generated@@297 ($generated@@432 ($generated@@92 $generated@@178 $generated@@4) $generated@@711)) $generated@@711) ($generated@@98 ($generated@@432 ($generated@@92 $generated@@178 $generated@@4) $generated@@711) ($generated@@242 $generated@@712))))
 :pattern ( ($generated@@216 $generated@@711 ($generated@@242 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@178) (= (type $generated@@714) $generated@@73)) ($generated@@216 $generated@@713 ($generated@@247 $generated@@714))) (and (= ($generated@@297 ($generated@@432 ($generated@@92 $generated@@178 $generated@@4) $generated@@713)) $generated@@713) ($generated@@98 ($generated@@432 ($generated@@92 $generated@@178 $generated@@4) $generated@@713) ($generated@@247 $generated@@714))))
 :pattern ( ($generated@@216 $generated@@713 ($generated@@247 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@178) (= (type $generated@@716) $generated@@73)) ($generated@@216 $generated@@715 ($generated@@192 $generated@@716))) (and (= ($generated@@297 ($generated@@432 ($generated@@92 $generated@@178 $generated@@2) $generated@@715)) $generated@@715) ($generated@@98 ($generated@@432 ($generated@@92 $generated@@178 $generated@@2) $generated@@715) ($generated@@192 $generated@@716))))
 :pattern ( ($generated@@216 $generated@@715 ($generated@@192 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@178) (= (type $generated@@718) $generated@@73)) ($generated@@216 $generated@@717 ($generated@@628 $generated@@718))) (and (= ($generated@@297 ($generated@@432 ($generated@@185 $generated@@178) $generated@@717)) $generated@@717) ($generated@@98 ($generated@@432 ($generated@@185 $generated@@178) $generated@@717) ($generated@@628 $generated@@718))))
 :pattern ( ($generated@@216 $generated@@717 ($generated@@628 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 (type $generated@@722)))
 (=> (and (and (and (= (type $generated@@719) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@720) $generated@@93)) (= (type $generated@@721) ($generated@@75 $generated@@723))) ($generated@@95 ($generated@@101 $generated@@719 $generated@@720 ($generated@@102 ($generated@@89 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))) ($generated@@159 $generated@@719 ($generated@@101 $generated@@719 $generated@@720 ($generated@@102 ($generated@@89 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@101 $generated@@719 $generated@@720 ($generated@@102 ($generated@@89 $generated@@719 $generated@@720) $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (! (let (($generated@@727 ($generated@@99 (type $generated@@725))))
 (=> (and (= (type $generated@@725) ($generated@@92 $generated@@727 $generated@@4)) (= (type $generated@@726) ($generated@@92 $generated@@727 $generated@@4))) (= ($generated@@724 $generated@@725 $generated@@726) (forall (($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@727) ($generated@@0 ($generated@@89 $generated@@725 $generated@@728))) ($generated@@0 ($generated@@89 $generated@@726 $generated@@728)))
 :pattern ( ($generated@@89 $generated@@725 $generated@@728))
 :pattern ( ($generated@@89 $generated@@726 $generated@@728))
)))))
 :pattern ( ($generated@@724 $generated@@725 $generated@@726))
)))
(assert (= ($generated@@84 $generated@@163) $generated@@62))
(assert (= ($generated@@696 $generated@@163) $generated@@69))
(assert (= ($generated@@84 $generated@@212) $generated@@63))
(assert (= ($generated@@696 $generated@@212) $generated@@69))
(assert (forall (($generated@@729 T@U) ($generated@@730 Int) ($generated@@731 Int) ) (! (let (($generated@@732 ($generated@@186 (type $generated@@729))))
 (=> (= (type $generated@@729) ($generated@@185 $generated@@732)) (=> (and (and (<= 0 $generated@@730) (<= $generated@@730 $generated@@731)) (< $generated@@731 ($generated@@199 $generated@@729))) (= ($generated@@197 ($generated@@228 $generated@@729 $generated@@730) (- $generated@@731 $generated@@730)) ($generated@@197 $generated@@729 $generated@@731)))))
 :weight 25
 :pattern ( ($generated@@197 $generated@@729 $generated@@731) ($generated@@228 $generated@@729 $generated@@730))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@733) ($generated@@92 $generated@@178 $generated@@2)) (= (type $generated@@734) $generated@@73)) (= (type $generated@@735) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@154 $generated@@733 ($generated@@192 $generated@@734) $generated@@735) (forall (($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@178) (< 0 ($generated ($generated@@89 $generated@@733 $generated@@736)))) ($generated@@266 $generated@@736 $generated@@734 $generated@@735))
 :pattern ( ($generated@@89 $generated@@733 $generated@@736))
))))
 :pattern ( ($generated@@154 $generated@@733 ($generated@@192 $generated@@734) $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 Int) ($generated@@739 Int) ) (! (let (($generated@@740 ($generated@@186 (type $generated@@737))))
 (=> (= (type $generated@@737) ($generated@@185 $generated@@740)) (=> (and (and (<= 0 $generated@@738) (<= 0 $generated@@739)) (<= (+ $generated@@738 $generated@@739) ($generated@@199 $generated@@737))) (= ($generated@@228 ($generated@@228 $generated@@737 $generated@@738) $generated@@739) ($generated@@228 $generated@@737 (+ $generated@@738 $generated@@739))))))
 :pattern ( ($generated@@228 ($generated@@228 $generated@@737 $generated@@738) $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (and (= (type $generated@@741) $generated@@169) (= (type $generated@@742) $generated@@73)) (= (type $generated@@743) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@95 $generated@@743) (and ($generated@@167 $generated@@741) (exists (($generated@@744 T@U) ) (!  (and (= (type $generated@@744) $generated@@73) ($generated@@154 $generated@@741 ($generated@@168 $generated@@742 $generated@@744) $generated@@743))
 :pattern ( ($generated@@154 $generated@@741 ($generated@@168 $generated@@742 $generated@@744) $generated@@743))
))))) ($generated@@266 ($generated@@176 $generated@@741) $generated@@742 $generated@@743))
 :pattern ( ($generated@@266 ($generated@@176 $generated@@741) $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (and (= (type $generated@@745) $generated@@169) (= (type $generated@@746) $generated@@73)) (= (type $generated@@747) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@95 $generated@@747) (and ($generated@@167 $generated@@745) (exists (($generated@@748 T@U) ) (!  (and (= (type $generated@@748) $generated@@73) ($generated@@154 $generated@@745 ($generated@@168 $generated@@748 $generated@@746) $generated@@747))
 :pattern ( ($generated@@154 $generated@@745 ($generated@@168 $generated@@748 $generated@@746) $generated@@747))
))))) ($generated@@266 ($generated@@177 $generated@@745) $generated@@746 $generated@@747))
 :pattern ( ($generated@@266 ($generated@@177 $generated@@745) $generated@@746 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@178) (= (type $generated@@750) $generated@@178)) (= ($generated@@215 ($generated@@254 $generated@@749) ($generated@@254 $generated@@750)) ($generated@@254 ($generated@@215 $generated@@749 $generated@@750))))
 :pattern ( ($generated@@215 ($generated@@254 $generated@@749) ($generated@@254 $generated@@750)))
)))
(assert (forall (($generated@@751 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@252 $generated@@751))) ($generated@@254 ($generated@@297 ($generated@@8 $generated@@751))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@252 $generated@@751))))
)))
(assert (forall (($generated@@752 T@U) ) (! (= ($generated@@297 ($generated@@254 $generated@@752)) ($generated@@254 ($generated@@297 $generated@@752)))
 :pattern ( ($generated@@297 ($generated@@254 $generated@@752)))
)))
(assert (forall (($generated@@753 T@U) ) (! (let (($generated@@754 ($generated@@186 (type $generated@@753))))
 (=> (and (= (type $generated@@753) ($generated@@185 $generated@@754)) (= ($generated@@199 $generated@@753) 0)) (= $generated@@753 ($generated@@184 $generated@@754))))
 :pattern ( ($generated@@199 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 Int) ) (! (let (($generated@@757 ($generated@@186 (type $generated@@755))))
 (=> (and (= (type $generated@@755) ($generated@@185 $generated@@757)) (= $generated@@756 0)) (= ($generated@@258 $generated@@755 $generated@@756) ($generated@@184 $generated@@757))))
 :pattern ( ($generated@@258 $generated@@755 $generated@@756))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (! (let (($generated@@761 (type $generated@@759)))
 (=> (and (and (= (type $generated@@758) ($generated@@92 $generated@@761 $generated@@2)) (= (type $generated@@760) $generated@@2)) (<= 0 ($generated $generated@@760))) (= ($generated@@373 ($generated@@101 $generated@@758 $generated@@759 $generated@@760)) (+ (- ($generated@@373 $generated@@758) ($generated ($generated@@89 $generated@@758 $generated@@759))) ($generated $generated@@760)))))
 :pattern ( ($generated@@373 ($generated@@101 $generated@@758 $generated@@759 $generated@@760)))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@763) $generated@@2)) ($generated@@154 $generated@@763 $generated@@46 $generated@@762))
 :pattern ( ($generated@@154 $generated@@763 $generated@@46 $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@764) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@765) $generated@@3)) ($generated@@154 $generated@@765 $generated@@47 $generated@@764))
 :pattern ( ($generated@@154 $generated@@765 $generated@@47 $generated@@764))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ) (!  (=> (and (= (type $generated@@766) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@767) $generated@@4)) ($generated@@154 $generated@@767 $generated@@44 $generated@@766))
 :pattern ( ($generated@@154 $generated@@767 $generated@@44 $generated@@766))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (= (type $generated@@768) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@769) $generated@@564)) ($generated@@154 $generated@@769 $generated@@45 $generated@@768))
 :pattern ( ($generated@@154 $generated@@769 $generated@@45 $generated@@768))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@770) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@771) $generated@@178)) ($generated@@154 $generated@@771 $generated@@48 $generated@@770))
 :pattern ( ($generated@@154 $generated@@771 $generated@@48 $generated@@770))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 Int) ($generated@@774 T@U) ($generated@@775 Int) ) (! (let (($generated@@776 (type $generated@@774)))
 (=> (= (type $generated@@772) ($generated@@185 $generated@@776)) (=> (and (and (<= 0 $generated@@773) (< $generated@@773 $generated@@775)) (<= $generated@@775 ($generated@@199 $generated@@772))) (= ($generated@@258 ($generated@@198 $generated@@772 $generated@@773 $generated@@774) $generated@@775) ($generated@@198 ($generated@@258 $generated@@772 $generated@@775) $generated@@773 $generated@@774)))))
 :pattern ( ($generated@@258 ($generated@@198 $generated@@772 $generated@@773 $generated@@774) $generated@@775))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (= (type $generated@@777) ($generated@@185 $generated@@178)) (= (type $generated@@778) $generated@@73)) (= ($generated@@98 $generated@@777 ($generated@@628 $generated@@778)) (forall (($generated@@779 Int) ) (!  (=> (and (<= 0 $generated@@779) (< $generated@@779 ($generated@@199 $generated@@777))) ($generated@@216 ($generated@@197 $generated@@777 $generated@@779) $generated@@778))
 :pattern ( ($generated@@197 $generated@@777 $generated@@779))
))))
 :pattern ( ($generated@@98 $generated@@777 ($generated@@628 $generated@@778)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 Int) ) (!  (=> (= (type $generated@@780) ($generated@@185 $generated@@178)) (=> (and (<= 0 $generated@@781) (< $generated@@781 ($generated@@199 $generated@@780))) (< ($generated@@663 ($generated@@432 $generated@@169 ($generated@@197 $generated@@780 $generated@@781))) ($generated@@278 $generated@@780))))
 :pattern ( ($generated@@663 ($generated@@432 $generated@@169 ($generated@@197 $generated@@780 $generated@@781))))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) ($generated@@381 $generated@@178 $generated@@178)) (= (type $generated@@783) $generated@@73)) (= (type $generated@@784) $generated@@73)) ($generated@@98 $generated@@782 ($generated@@513 $generated@@783 $generated@@784))) (and (and ($generated@@98 ($generated@@379 $generated@@782) ($generated@@242 $generated@@783)) ($generated@@98 ($generated@@442 $generated@@782) ($generated@@242 $generated@@784))) ($generated@@98 ($generated@@487 $generated@@782) ($generated@@242 ($generated@@168 $generated@@783 $generated@@784)))))
 :pattern ( ($generated@@98 $generated@@782 ($generated@@513 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (and (= (type $generated@@785) ($generated@@399 $generated@@178 $generated@@178)) (= (type $generated@@786) $generated@@73)) (= (type $generated@@787) $generated@@73)) ($generated@@98 $generated@@785 ($generated@@521 $generated@@786 $generated@@787))) (and (and ($generated@@98 ($generated@@397 $generated@@785) ($generated@@247 $generated@@786)) ($generated@@98 ($generated@@453 $generated@@785) ($generated@@247 $generated@@787))) ($generated@@98 ($generated@@495 $generated@@785) ($generated@@247 ($generated@@168 $generated@@786 $generated@@787)))))
 :pattern ( ($generated@@98 $generated@@785 ($generated@@521 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ) (!  (=> (= (type $generated@@788) $generated@@2) ($generated@@98 $generated@@788 $generated@@46))
 :pattern ( ($generated@@98 $generated@@788 $generated@@46))
)))
(assert (forall (($generated@@789 T@U) ) (!  (=> (= (type $generated@@789) $generated@@3) ($generated@@98 $generated@@789 $generated@@47))
 :pattern ( ($generated@@98 $generated@@789 $generated@@47))
)))
(assert (forall (($generated@@790 T@U) ) (!  (=> (= (type $generated@@790) $generated@@4) ($generated@@98 $generated@@790 $generated@@44))
 :pattern ( ($generated@@98 $generated@@790 $generated@@44))
)))
(assert (forall (($generated@@791 T@U) ) (!  (=> (= (type $generated@@791) $generated@@564) ($generated@@98 $generated@@791 $generated@@45))
 :pattern ( ($generated@@98 $generated@@791 $generated@@45))
)))
(assert (forall (($generated@@792 T@U) ) (!  (=> (= (type $generated@@792) $generated@@178) ($generated@@98 $generated@@792 $generated@@48))
 :pattern ( ($generated@@98 $generated@@792 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () Bool)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () T@U)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 () Int)
(declare-fun $generated@@801 () Bool)
(declare-fun $generated@@802 () Bool)
(declare-fun $generated@@803 () T@U)
(declare-fun $generated@@804 () T@U)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () Bool)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 (T@U) Bool)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () Bool)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () Bool)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () Bool)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () T@U)
(declare-fun $generated@@834 () T@U)
(declare-fun $generated@@835 () T@U)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 () Int)
(declare-fun $generated@@839 () T@U)
(declare-fun $generated@@840 () Int)
(declare-fun $generated@@841 () T@U)
(declare-fun $generated@@842 () Int)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () T@U)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () Int)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () Bool)
(declare-fun $generated@@849 () Int)
(declare-fun $generated@@850 () T@U)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () T@U)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@798) ($generated@@185 $generated@@178)) (= (type $generated@@799) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@794) $generated@@93)) (= (type $generated@@803) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@804) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@805) ($generated@@298 $generated@@93 $generated@@4))) (= (type $generated@@807) $generated@@93)) (= (type $generated@@808) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@809) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@810) ($generated@@185 $generated@@178))) (= (type $generated@@811) $generated@@73)) (= (type $generated@@812) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@814) $generated@@93)) (= (type $generated@@815) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@816) ($generated@@185 $generated@@178))) (= (type $generated@@817) $generated@@73)) (= (type $generated@@819) $generated@@93)) (= (type $generated@@820) $generated@@73)) (= (type $generated@@822) $generated@@93)) (= (type $generated@@823) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@824) ($generated@@185 $generated@@178))) (= (type $generated@@825) $generated@@73)) (= (type $generated@@826) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@827) $generated@@93)) (= (type $generated@@828) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@829) ($generated@@185 $generated@@178))) (= (type $generated@@831) $generated@@93)) (= (type $generated@@832) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@833) ($generated@@185 $generated@@178))) (= (type $generated@@834) $generated@@73)) (= (type $generated@@835) $generated@@93)) (= (type $generated@@836) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@837) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@841) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@839) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@795) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@793) $generated@@93)) (= (type $generated@@797) $generated@@93)) (= (type $generated@@843) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@844) ($generated@@185 $generated@@178))) (= (type $generated@@845) $generated@@93)) (= (type $generated@@847) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@850) $generated@@93)) (= (type $generated@@851) ($generated@@92 $generated@@178 $generated@@4))) (= (type $generated@@852) ($generated@@185 $generated@@178))) (= (type $generated@@853) $generated@@93)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 47) (let (($generated@@855  (and (=> (= (ControlFlow 0 37) (- 0 38)) (= $generated@@793 $generated@@793)) (=> (= $generated@@793 $generated@@793) (=> (= (ControlFlow 0 37) (- 0 36)) (not (= $generated@@96 $generated@@794)))))))
(let (($generated@@856  (=> (<= 100 ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90))) (and (=> (= (ControlFlow 0 39) (- 0 40)) $generated@@796) (=> $generated@@796 (=> (and (= $generated@@793 $generated@@797) (= (ControlFlow 0 39) 37)) $generated@@855))))))
(let (($generated@@857  (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> (not (= ($generated@@432 $generated@@93 ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) $generated@@96)) (not ($generated@@183 ($generated@@258 ($generated@@198 ($generated@@228 ($generated@@228 ($generated@@258 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) ($generated@@252 2)) ($generated@@252 1)) ($generated@@252 5) ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) ($generated@@252 10)) ($generated@@297 $generated@@96))))) (=> (=> (not (= ($generated@@432 $generated@@93 ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) $generated@@96)) (not ($generated@@183 ($generated@@258 ($generated@@198 ($generated@@228 ($generated@@228 ($generated@@258 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) ($generated@@252 2)) ($generated@@252 1)) ($generated@@252 5) ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) ($generated@@252 10)) ($generated@@297 $generated@@96)))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@800) (= (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) $generated@@800))) (=> (or (<= 0 $generated@@800) (= (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) $generated@@800)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) $generated@@800)) (=> (< (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) $generated@@800) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@801 (<= ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)) ($generated@@252 100))))))))))))
(let (($generated@@858  (=> (and (= ($generated@@432 $generated@@93 ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) $generated@@96) (= (ControlFlow 0 15) 4)) $generated@@857)))
(let (($generated@@859  (=> (not (= ($generated@@432 $generated@@93 ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))) $generated@@96)) (and (=> (= (ControlFlow 0 8) (- 0 14)) (and (<= 0 ($generated@@252 2)) (<= ($generated@@252 2) ($generated@@199 $generated@@798)))) (and (=> (= (ControlFlow 0 8) (- 0 13)) (and (<= ($generated@@252 2) ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) (<= ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)) ($generated@@199 $generated@@798)))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (and (<= 0 ($generated@@252 1)) (<= ($generated@@252 1) ($generated@@199 ($generated@@228 ($generated@@258 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) ($generated@@252 2)))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (and (<= 0 ($generated@@252 5)) (< ($generated@@252 5) ($generated@@199 ($generated@@228 ($generated@@228 ($generated@@258 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) ($generated@@252 2)) ($generated@@252 1)))))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) (< ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)) ($generated@@199 $generated@@798)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 ($generated@@252 10)) (<= ($generated@@252 10) ($generated@@199 ($generated@@198 ($generated@@228 ($generated@@228 ($generated@@258 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) ($generated@@252 2)) ($generated@@252 1)) ($generated@@252 5) ($generated@@197 $generated@@798 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)))))))) (=> (= (ControlFlow 0 8) 4) $generated@@857))))))))))
(let (($generated@@860  (=> (= $generated@@802 ($generated@@0 ($generated@@254 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 16) (- 0 28)) (forall (($generated@@861 T@U) ($generated@@862 T@U) ) (! (let (($generated@@863 ($generated@@76 (type $generated@@862))))
 (=> (and (= (type $generated@@861) $generated@@93) (= (type $generated@@862) ($generated@@75 $generated@@863))) (=> (and (and (not (= $generated@@861 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@803 $generated@@861) $generated@@60))) (or (= $generated@@861 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@861))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@861 $generated@@862)))))
 :no-pattern (type $generated@@861)
 :no-pattern (type $generated@@862)
 :no-pattern ($generated $generated@@861)
 :no-pattern ($generated@@0 $generated@@861)
 :no-pattern ($generated $generated@@862)
 :no-pattern ($generated@@0 $generated@@862)
))) (=> (forall (($generated@@864 T@U) ($generated@@865 T@U) ) (! (let (($generated@@866 ($generated@@76 (type $generated@@865))))
 (=> (and (= (type $generated@@864) $generated@@93) (= (type $generated@@865) ($generated@@75 $generated@@866))) (=> (and (and (not (= $generated@@864 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@803 $generated@@864) $generated@@60))) (or (= $generated@@864 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@864))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@864 $generated@@865)))))
 :no-pattern (type $generated@@864)
 :no-pattern (type $generated@@865)
 :no-pattern ($generated $generated@@864)
 :no-pattern ($generated@@0 $generated@@864)
 :no-pattern ($generated $generated@@865)
 :no-pattern ($generated@@0 $generated@@865)
)) (and (=> (= (ControlFlow 0 16) (- 0 27)) (or (and (not $generated@@802) $generated@@806) (and (= $generated@@802 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804)))))) (=> (or (and (not $generated@@802) $generated@@806) (and (= $generated@@802 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804))))) (=> (and ($generated@@98 $generated@@807 $generated@@212) ($generated@@154 $generated@@807 $generated@@212 $generated@@808)) (=> (and (and ($generated@@98 $generated@@809 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@809 ($generated@@242 $generated@@46) $generated@@808)) (and ($generated@@98 $generated@@810 ($generated@@628 ($generated@@91 $generated@@44 $generated@@811))) ($generated@@154 $generated@@810 ($generated@@628 ($generated@@91 $generated@@44 $generated@@811)) $generated@@808))) (and (=> (= (ControlFlow 0 16) (- 0 26)) $generated@@802) (=> $generated@@802 (=> (and ($generated@@95 $generated@@812) ($generated@@813 $generated@@812)) (=> (and (and ($generated@@98 $generated@@814 $generated@@212) ($generated@@154 $generated@@814 $generated@@212 $generated@@812)) (and ($generated@@98 $generated@@815 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@815 ($generated@@242 $generated@@46) $generated@@812))) (=> (and (and (and ($generated@@98 $generated@@816 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817))) ($generated@@154 $generated@@816 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817)) $generated@@812)) (and (= $generated@@814 $generated@@814) (not (= $generated@@96 $generated@@794)))) (and (and (forall (($generated@@867 T@U) ) (!  (=> (= (type $generated@@867) $generated@@93) (=> (and (not (= $generated@@867 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@803 $generated@@867) $generated@@60))) (or (= ($generated@@89 $generated@@812 $generated@@867) ($generated@@89 $generated@@803 $generated@@867)) (or (= $generated@@867 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@867)))))))
 :pattern ( ($generated@@89 $generated@@812 $generated@@867))
)) ($generated@@159 $generated@@803 $generated@@812)) (and (=> $generated@@818 (and ($generated@@98 $generated@@819 ($generated@@289 $generated@@820 $generated@@817)) ($generated@@154 $generated@@819 ($generated@@289 $generated@@820 $generated@@817) $generated@@812))) (= $generated@@821 ($generated@@0 ($generated@@254 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 16) (- 0 25)) (forall (($generated@@868 T@U) ($generated@@869 T@U) ) (! (let (($generated@@870 ($generated@@76 (type $generated@@869))))
 (=> (and (= (type $generated@@868) $generated@@93) (= (type $generated@@869) ($generated@@75 $generated@@870))) (=> (and (and (not (= $generated@@868 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@812 $generated@@868) $generated@@60))) (or (= $generated@@868 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@868))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@868 $generated@@869)))))
 :no-pattern (type $generated@@868)
 :no-pattern (type $generated@@869)
 :no-pattern ($generated $generated@@868)
 :no-pattern ($generated@@0 $generated@@868)
 :no-pattern ($generated $generated@@869)
 :no-pattern ($generated@@0 $generated@@869)
))) (=> (forall (($generated@@871 T@U) ($generated@@872 T@U) ) (! (let (($generated@@873 ($generated@@76 (type $generated@@872))))
 (=> (and (= (type $generated@@871) $generated@@93) (= (type $generated@@872) ($generated@@75 $generated@@873))) (=> (and (and (not (= $generated@@871 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@812 $generated@@871) $generated@@60))) (or (= $generated@@871 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@871))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@871 $generated@@872)))))
 :no-pattern (type $generated@@871)
 :no-pattern (type $generated@@872)
 :no-pattern ($generated $generated@@871)
 :no-pattern ($generated@@0 $generated@@871)
 :no-pattern ($generated $generated@@872)
 :no-pattern ($generated@@0 $generated@@872)
)) (and (=> (= (ControlFlow 0 16) (- 0 24)) (or (and (not $generated@@821) $generated@@806) (and (= $generated@@821 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804)))))) (=> (or (and (not $generated@@821) $generated@@806) (and (= $generated@@821 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804))))) (=> (and ($generated@@98 $generated@@822 $generated@@212) ($generated@@154 $generated@@822 $generated@@212 $generated@@808)) (=> (and (and ($generated@@98 $generated@@823 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@823 ($generated@@242 $generated@@46) $generated@@808)) (and ($generated@@98 $generated@@824 ($generated@@628 ($generated@@91 $generated@@44 $generated@@825))) ($generated@@154 $generated@@824 ($generated@@628 ($generated@@91 $generated@@44 $generated@@825)) $generated@@808))) (and (=> (= (ControlFlow 0 16) (- 0 23)) $generated@@821) (=> $generated@@821 (=> (and (and ($generated@@95 $generated@@826) ($generated@@813 $generated@@826)) (and ($generated@@98 $generated@@827 $generated@@212) ($generated@@154 $generated@@827 $generated@@212 $generated@@826))) (=> (and (and (and ($generated@@98 $generated@@828 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@828 ($generated@@242 $generated@@46) $generated@@826)) (and ($generated@@98 $generated@@829 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817))) ($generated@@154 $generated@@829 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817)) $generated@@826))) (and (and (= $generated@@827 $generated@@827) (not (= $generated@@96 $generated@@794))) (and (forall (($generated@@874 T@U) ) (!  (=> (= (type $generated@@874) $generated@@93) (=> (and (not (= $generated@@874 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@812 $generated@@874) $generated@@60))) (or (= ($generated@@89 $generated@@826 $generated@@874) ($generated@@89 $generated@@812 $generated@@874)) (or (= $generated@@874 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@874)))))))
 :pattern ( ($generated@@89 $generated@@826 $generated@@874))
)) ($generated@@159 $generated@@812 $generated@@826)))) (and (=> (= (ControlFlow 0 16) (- 0 22)) $generated@@818) (=> $generated@@818 (and (=> (= (ControlFlow 0 16) (- 0 21)) (not (= $generated@@819 $generated@@96))) (=> (not (= $generated@@819 $generated@@96)) (=> (= $generated@@830 ($generated@@0 ($generated@@254 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 16) (- 0 20)) (forall (($generated@@875 T@U) ($generated@@876 T@U) ) (! (let (($generated@@877 ($generated@@76 (type $generated@@876))))
 (=> (and (= (type $generated@@875) $generated@@93) (= (type $generated@@876) ($generated@@75 $generated@@877))) (=> (and (and (not (= $generated@@875 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@826 $generated@@875) $generated@@60))) (or (= $generated@@875 $generated@@819) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@875))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@875 $generated@@876)))))
 :no-pattern (type $generated@@875)
 :no-pattern (type $generated@@876)
 :no-pattern ($generated $generated@@875)
 :no-pattern ($generated@@0 $generated@@875)
 :no-pattern ($generated $generated@@876)
 :no-pattern ($generated@@0 $generated@@876)
))) (=> (forall (($generated@@878 T@U) ($generated@@879 T@U) ) (! (let (($generated@@880 ($generated@@76 (type $generated@@879))))
 (=> (and (= (type $generated@@878) $generated@@93) (= (type $generated@@879) ($generated@@75 $generated@@880))) (=> (and (and (not (= $generated@@878 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@826 $generated@@878) $generated@@60))) (or (= $generated@@878 $generated@@819) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@878))))) ($generated@@0 ($generated@@295 $generated@@805 $generated@@878 $generated@@879)))))
 :no-pattern (type $generated@@878)
 :no-pattern (type $generated@@879)
 :no-pattern ($generated $generated@@878)
 :no-pattern ($generated@@0 $generated@@878)
 :no-pattern ($generated $generated@@879)
 :no-pattern ($generated@@0 $generated@@879)
)) (and (=> (= (ControlFlow 0 16) (- 0 19)) (or (and (not $generated@@830) $generated@@806) (and (= $generated@@830 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804)))))) (=> (or (and (not $generated@@830) $generated@@806) (and (= $generated@@830 $generated@@806) (and ($generated@@724 $generated@@804 $generated@@804) (not ($generated@@724 $generated@@804 $generated@@804))))) (=> (and ($generated@@98 $generated@@831 $generated@@212) ($generated@@154 $generated@@831 $generated@@212 $generated@@808)) (=> (and (and ($generated@@98 $generated@@832 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@832 ($generated@@242 $generated@@46) $generated@@808)) (and ($generated@@98 $generated@@833 ($generated@@628 ($generated@@91 $generated@@44 $generated@@834))) ($generated@@154 $generated@@833 ($generated@@628 ($generated@@91 $generated@@44 $generated@@834)) $generated@@808))) (and (=> (= (ControlFlow 0 16) (- 0 18)) $generated@@830) (=> $generated@@830 (=> (and (and ($generated@@95 $generated@@799) ($generated@@813 $generated@@799)) (and ($generated@@98 $generated@@835 $generated@@212) ($generated@@154 $generated@@835 $generated@@212 $generated@@799))) (=> (and (and (and ($generated@@98 $generated@@836 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@836 ($generated@@242 $generated@@46) $generated@@799)) (and ($generated@@98 $generated@@798 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817))) ($generated@@154 $generated@@798 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817)) $generated@@799))) (and (and (= $generated@@835 $generated@@835) (not (= $generated@@96 $generated@@819))) (and (forall (($generated@@881 T@U) ) (!  (=> (= (type $generated@@881) $generated@@93) (=> (and (not (= $generated@@881 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@826 $generated@@881) $generated@@60))) (or (= ($generated@@89 $generated@@799 $generated@@881) ($generated@@89 $generated@@826 $generated@@881)) (or (= $generated@@881 $generated@@819) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@881)))))))
 :pattern ( ($generated@@89 $generated@@799 $generated@@881))
)) ($generated@@159 $generated@@826 $generated@@799)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90))) (< ($generated ($generated@@88 ($generated@@89 $generated@@799 $generated@@794) $generated@@90)) ($generated@@199 $generated@@798)))) (and (=> (= (ControlFlow 0 16) 8) $generated@@859) (=> (= (ControlFlow 0 16) 15) $generated@@858))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@882  (=> (not (= ($generated@@693 ($generated ($generated@@88 ($generated@@89 $generated@@837 $generated@@794) $generated@@90)) ($generated@@252 20)) ($generated@@252 3))) (and (=> (= (ControlFlow 0 31) (- 0 32)) ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90))) (=> ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90)) (=> (= $generated@@838 (+ ($generated ($generated@@88 ($generated@@89 $generated@@837 $generated@@794) $generated@@90)) 0)) (=> (and (and (= $generated@@839 ($generated@@101 $generated@@837 $generated@@794 ($generated@@102 ($generated@@89 $generated@@837 $generated@@794) $generated@@90 ($generated@@8 $generated@@838)))) ($generated@@95 $generated@@839)) (and (= $generated@@803 $generated@@839) (= (ControlFlow 0 31) 16))) $generated@@860)))))))
(let (($generated@@883  (=> (= ($generated@@693 ($generated ($generated@@88 ($generated@@89 $generated@@837 $generated@@794) $generated@@90)) ($generated@@252 20)) ($generated@@252 3)) (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90))) (=> ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90)) (=> (= $generated@@840 (+ ($generated ($generated@@88 ($generated@@89 $generated@@837 $generated@@794) $generated@@90)) 1)) (=> (and (and (= $generated@@841 ($generated@@101 $generated@@837 $generated@@794 ($generated@@102 ($generated@@89 $generated@@837 $generated@@794) $generated@@90 ($generated@@8 $generated@@840)))) ($generated@@95 $generated@@841)) (and (= $generated@@803 $generated@@841) (= (ControlFlow 0 29) 16))) $generated@@860)))))))
(let (($generated@@884  (=> (and (< ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90)) 100) (= $generated@@800 (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90))))) (and (=> (= (ControlFlow 0 33) (- 0 35)) ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90))) (=> ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90)) (=> (= $generated@@842 (+ ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90)) 17)) (=> (and (= $generated@@837 ($generated@@101 $generated@@795 $generated@@794 ($generated@@102 ($generated@@89 $generated@@795 $generated@@794) $generated@@90 ($generated@@8 $generated@@842)))) ($generated@@95 $generated@@837)) (and (=> (= (ControlFlow 0 33) (- 0 34)) (not (= ($generated@@252 20) 0))) (=> (not (= ($generated@@252 20) 0)) (and (=> (= (ControlFlow 0 33) 29) $generated@@883) (=> (= (ControlFlow 0 33) 31) $generated@@882)))))))))))
(let (($generated@@885  (=> $generated@@801 (and (=> (= (ControlFlow 0 41) 39) $generated@@856) (=> (= (ControlFlow 0 41) 33) $generated@@884)))))
(let (($generated@@886 true))
(let (($generated@@887  (and (=> (= (ControlFlow 0 42) 2) $generated@@886) (=> (= (ControlFlow 0 42) 41) $generated@@885))))
(let (($generated@@888 true))
(let (($generated@@889  (=> (and (and (and ($generated@@95 $generated@@795) ($generated@@813 $generated@@795)) (=> $generated@@796 (and ($generated@@98 $generated@@797 $generated@@212) ($generated@@154 $generated@@797 $generated@@212 $generated@@795)))) (and ($generated@@98 $generated@@843 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@843 ($generated@@242 $generated@@46) $generated@@795))) (=> (and (and (and (and ($generated@@98 $generated@@844 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817))) ($generated@@154 $generated@@844 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817)) $generated@@795)) (=> $generated@@818 (and ($generated@@98 $generated@@845 ($generated@@289 $generated@@820 $generated@@817)) ($generated@@154 $generated@@845 ($generated@@289 $generated@@820 $generated@@817) $generated@@795)))) (and (not false) (= $generated@@846 12))) (and (and (and (=> $generated@@801 true) (=> $generated@@801 (<= ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90)) ($generated@@252 100)))) (and (forall (($generated@@890 T@U) ) (!  (=> (= (type $generated@@890) $generated@@93) (=> (and (not (= $generated@@890 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@808 $generated@@890) $generated@@60))) (or (= ($generated@@89 $generated@@795 $generated@@890) ($generated@@89 $generated@@847 $generated@@890)) (or (= $generated@@890 $generated@@794) ($generated@@0 ($generated@@89 $generated@@804 ($generated@@297 $generated@@890)))))))
 :pattern ( ($generated@@89 $generated@@795 $generated@@890))
)) ($generated@@159 $generated@@847 $generated@@795))) (and (and (forall (($generated@@891 T@U) ($generated@@892 T@U) ) (! (let (($generated@@893 ($generated@@76 (type $generated@@892))))
 (=> (and (and (= (type $generated@@891) $generated@@93) (= (type $generated@@892) ($generated@@75 $generated@@893))) (and (not (= $generated@@891 $generated@@96)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@847 $generated@@891) $generated@@60)))) (or (= ($generated@@88 ($generated@@89 $generated@@795 $generated@@891) $generated@@892) ($generated@@88 ($generated@@89 $generated@@847 $generated@@891) $generated@@892)) ($generated@@0 ($generated@@295 $generated@@805 $generated@@891 $generated@@892)))))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@795 $generated@@891) $generated@@892))
)) (=> $generated@@848 $generated@@796)) (and (<= (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90))) $generated@@849) (=> (= (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@795 $generated@@794) $generated@@90))) $generated@@849) true))))) (and (=> (= (ControlFlow 0 43) 1) $generated@@888) (=> (= (ControlFlow 0 43) 42) $generated@@887))))))
(let (($generated@@894  (=> (= $generated@@805 ($generated@@296 $generated@@96 $generated@@808 $generated@@60 $generated@@794 $generated@@804)) (and (=> (= (ControlFlow 0 44) (- 0 46)) ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90))) (=> ($generated@@0 ($generated@@295 $generated@@805 $generated@@794 $generated@@90)) (=> (and (and (= $generated@@846 ($generated@@252 12)) (= $generated@@847 ($generated@@101 $generated@@808 $generated@@794 ($generated@@102 ($generated@@89 $generated@@808 $generated@@794) $generated@@90 ($generated@@8 $generated@@846))))) (and ($generated@@95 $generated@@847) (= $generated@@849 (- 100 ($generated ($generated@@88 ($generated@@89 $generated@@847 $generated@@794) $generated@@90)))))) (and (=> (= (ControlFlow 0 44) (- 0 45)) (=> $generated@@801 (<= ($generated ($generated@@88 ($generated@@89 $generated@@847 $generated@@794) $generated@@90)) ($generated@@252 100)))) (=> (=> $generated@@801 (<= ($generated ($generated@@88 ($generated@@89 $generated@@847 $generated@@794) $generated@@90)) ($generated@@252 100))) (=> (= (ControlFlow 0 44) 43) $generated@@889)))))))))
(let (($generated@@895  (=> (and (and ($generated@@95 $generated@@808) ($generated@@813 $generated@@808)) (and (not (= $generated@@794 $generated@@96)) (and ($generated@@98 $generated@@794 ($generated@@289 $generated@@820 $generated@@817)) ($generated@@154 $generated@@794 ($generated@@289 $generated@@820 $generated@@817) $generated@@808)))) (=> (and (and (and (and ($generated@@98 $generated@@804 ($generated@@242 $generated@@212)) ($generated@@154 $generated@@804 ($generated@@242 $generated@@212) $generated@@808)) (=> $generated@@848 (and ($generated@@98 $generated@@850 $generated@@212) ($generated@@154 $generated@@850 $generated@@212 $generated@@808)))) (and (and ($generated@@98 $generated@@851 ($generated@@242 $generated@@46)) ($generated@@154 $generated@@851 ($generated@@242 $generated@@46) $generated@@808)) (and ($generated@@98 $generated@@852 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817))) ($generated@@154 $generated@@852 ($generated@@628 ($generated@@91 $generated@@44 $generated@@817)) $generated@@808)))) (and (and (and (=> $generated@@818 (and ($generated@@98 $generated@@853 ($generated@@289 $generated@@820 $generated@@817)) ($generated@@154 $generated@@853 ($generated@@289 $generated@@820 $generated@@817) $generated@@808))) true) (= 1 $generated@@854)) (and $generated@@806 (= (ControlFlow 0 47) 44)))) $generated@@894))))
$generated@@895)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 39) (- 40))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 27))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () Int)
(assert  (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@165  (=> (and (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (= (ControlFlow 0 2) (- 0 1))) (< $generated@@161 8))))
(let (($generated@@166  (=> (and (and ($generated@@162 $generated@@159) ($generated@@163 $generated@@159)) (and (= 0 $generated@@164) (= (ControlFlow 0 3) 2))) $generated@@165)))
$generated@@166)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 7)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 8))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 10)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 11))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@45)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (!  (=> (<= 0 $generated@@170) (and ($generated@@167 ($generated@@166 $generated@@170)) (= ($generated@@168 ($generated@@166 $generated@@170)) $generated@@170)))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@45) (= (type $generated@@172) $generated@@45)) (or (or ($generated@@44 $generated@@171 $generated@@172) (= $generated@@171 $generated@@172)) ($generated@@44 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@45) (<= 0 ($generated@@168 $generated@@173)))
 :pattern ( ($generated@@168 $generated@@173))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@45)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= ($generated@@175 $generated@@180 ($generated@@174 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@174 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@45) (= (type $generated@@182) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@181 $generated@@182) (not (= $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) (not ($generated@@167 $generated@@182))) ($generated@@44 $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) ($generated@@167 $generated@@182)) (= ($generated@@44 $generated@@181 $generated@@182) (< ($generated@@168 $generated@@181) ($generated@@168 $generated@@182))))) (=> (and ($generated@@44 $generated@@181 $generated@@182) ($generated@@167 $generated@@182)) ($generated@@167 $generated@@181))))
 :pattern ( ($generated@@44 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@45) ($generated@@167 $generated@@183)) (= $generated@@183 ($generated@@166 ($generated@@168 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@183))
 :pattern ( ($generated@@167 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@174 ($generated@@162 $generated@@184)) ($generated@@162 ($generated@@174 $generated@@184)))
 :pattern ( ($generated@@174 ($generated@@162 $generated@@184)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(assert  (and (and (and (and (and (= (type $generated@@185) $generated@@45) (= (type $generated@@187) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@189) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@190) ($generated@@62 $generated@@52 $generated@@4))) (= (type $generated@@191) $generated@@52)) (= (type $generated@@192) ($generated@@55 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@194  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@162 ($generated@@11 true))))))
(let (($generated@@195  (=> (<= ($generated@@168 $generated@@185) 0) (=> (and (and (and ($generated@@186 $generated@@187) ($generated@@188 $generated@@187)) (= $generated@@189 $generated@@187)) (and (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@45) ($generated@@44 $generated@@196 $generated@@185)) ($generated@@0 ($generated@@162 ($generated@@11 true))))
 :no-pattern (type $generated@@196)
 :no-pattern ($generated $generated@@196)
 :no-pattern ($generated@@0 $generated@@196)
)) (= (ControlFlow 0 4) 2))) $generated@@194))))
(let (($generated@@197  (=> (and (< 0 ($generated@@168 $generated@@185)) (= (ControlFlow 0 3) 2)) $generated@@194)))
(let (($generated@@198  (=> (= $generated@@190 ($generated@@50 $generated@@191 $generated@@189 $generated@@192 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@197) (=> (= (ControlFlow 0 5) 4) $generated@@195)))))
(let (($generated@@199  (=> (and (and ($generated@@186 $generated@@189) ($generated@@188 $generated@@189)) (and (= 1 $generated@@193) (= (ControlFlow 0 6) 5))) $generated@@198)))
$generated@@199))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
