(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U Int) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@T T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 () T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@141)) 15))) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@135 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@135 $generated@@142))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@143))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@134) (= (type $generated@@145) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@145) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@145 ($generated@@139 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@138 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 17) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@138 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@138 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@136)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@136)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@134) (= (type $generated@@170) ($generated@@135 $generated@@136))) (or ($generated@@168 $generated@@170) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@170 ($generated@@139 ($generated@@139 $generated@@46)))))) true)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 18)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@149)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@136)) (= (type $generated@@246) $generated@@136)) (= ($generated@@138 ($generated@@239 $generated@@245 $generated@@246) ($generated@@148 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@138 ($generated@@239 $generated@@245 $generated@@246) ($generated@@148 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) (= (type $generated@@248) $generated@@149)) (= ($generated@@155 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@155 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@136) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@138 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@138 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@135 $generated@@268)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) ($generated@@135 $generated@@136)) (= (type $generated@@270) $generated@@136)) (= (type $generated@@271) $generated@@64)) (and ($generated@@138 $generated@@269 ($generated@@139 $generated@@271)) ($generated@@240 $generated@@270 $generated@@271))) ($generated@@138 ($generated@@265 $generated@@269 $generated@@270) ($generated@@139 $generated@@271)))
 :pattern ( ($generated@@138 ($generated@@265 $generated@@269 $generated@@270) ($generated@@139 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@136)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@278)) (= ($generated@@74 ($generated@@239 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@74 ($generated@@239 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@149) (= ($generated@@147 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 Int) ) (! (let (($generated@@287 ($generated@@140 (type $generated@@285))))
(= (type ($generated@@284 $generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@140 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@135 $generated@@290)) (= (type $generated@@289) ($generated@@135 $generated@@290))) (= ($generated@@282 $generated@@288 $generated@@289)  (and (= ($generated@@283 $generated@@288) ($generated@@283 $generated@@289)) (forall (($generated@@291 Int) ) (!  (=> (and (<= 0 $generated@@291) (< $generated@@291 ($generated@@283 $generated@@288))) (= ($generated@@284 $generated@@288 $generated@@291) ($generated@@284 $generated@@289 $generated@@291)))
 :pattern ( ($generated@@284 $generated@@288 $generated@@291))
 :pattern ( ($generated@@284 $generated@@289 $generated@@291))
))))))
 :pattern ( ($generated@@282 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@149) ($generated@@147 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@136) (= (type $generated@@294) $generated@@136)) (= $generated@@292 ($generated@@239 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@147 $generated@@292))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@135 $generated@@296))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@283 ($generated@@295 $generated@@297)) 0)
 :pattern ( ($generated@@295 $generated@@297))
)))
(assert  (and (forall (($generated@@300 T@U) ) (! (= (type ($generated@@298 $generated@@300)) $generated@@134)
 :pattern ( ($generated@@298 $generated@@300))
)) (forall (($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@301)) $generated@@136)
 :pattern ( ($generated@@299 $generated@@301))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@134) (= (type $generated@@303) ($generated@@135 $generated@@136))) (or ($generated@@168 $generated@@303) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@303 ($generated@@139 ($generated@@139 $generated@@46)))))) (and (=> ($generated@@282 $generated@@303 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@137 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))) (= ($generated@@167 ($generated@@298 $generated@@302) $generated@@303) (ite ($generated@@282 $generated@@303 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@133 $generated@@302 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))) 0))))
 :pattern ( ($generated@@167 ($generated@@298 $generated@@302) $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
 (=> (= (type $generated@@304) ($generated@@135 $generated@@306)) (= ($generated@@283 ($generated@@265 $generated@@304 $generated@@305)) (+ 1 ($generated@@283 $generated@@304)))))
 :pattern ( ($generated@@265 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@64) (= (type $generated@@309) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@273 ($generated@@299 $generated@@307) $generated@@308 $generated@@309) ($generated@@74 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@273 ($generated@@299 $generated@@307) $generated@@308 $generated@@309))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@134) (= (type $generated@@311) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@311) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@311 ($generated@@139 $generated@@46))))) (and (=> ($generated@@282 $generated@@311 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@168 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))))) (= ($generated@@133 ($generated@@298 $generated@@310) $generated@@311) (ite ($generated@@282 $generated@@311 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@167 $generated@@310 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))))) 0))))
 :pattern ( ($generated@@133 ($generated@@298 $generated@@310) $generated@@311))
))))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@76 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@81 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@163 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@163 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@357) ($generated@@135 $generated@@360)) (and (=> (= $generated@@358 ($generated@@283 $generated@@357)) (= ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358) $generated@@359)) (=> (not (= $generated@@358 ($generated@@283 $generated@@357))) (= ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358) ($generated@@284 $generated@@357 $generated@@358))))))
 :pattern ( ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@322 (type $generated@@368))))
(let (($generated@@370 ($generated@@321 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@320 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@319 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@340 (type $generated@@372))))
(let (($generated@@374 ($generated@@339 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@338 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@337 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@336 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@76 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@384) $generated@@64)) (= ($generated@@138 $generated@@383 ($generated@@162 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@383 $generated@@385)))) ($generated@@240 $generated@@385 $generated@@384))
 :pattern ( ($generated@@81 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@138 $generated@@383 ($generated@@162 $generated@@384)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@134) (= (type $generated@@387) ($generated@@135 $generated@@136))) (or ($generated@@168 ($generated@@261 $generated@@387)) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@387 ($generated@@139 ($generated@@139 $generated@@46)))))) (and (=> ($generated@@282 $generated@@387 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@137 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))) (= ($generated@@167 ($generated@@298 $generated@@386) ($generated@@261 $generated@@387)) (ite ($generated@@282 $generated@@387 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@133 ($generated@@298 $generated@@386) ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))) 0))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@298 $generated@@386) ($generated@@261 $generated@@387)))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@134) (= (type $generated@@389) ($generated@@135 $generated@@136))) (or ($generated@@137 ($generated@@261 $generated@@389)) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@389 ($generated@@139 $generated@@46))))) (and (=> ($generated@@282 $generated@@389 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@168 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))))) (= ($generated@@133 ($generated@@298 $generated@@388) ($generated@@261 $generated@@389)) (ite ($generated@@282 $generated@@389 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@167 ($generated@@298 $generated@@388) ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@298 $generated@@388) ($generated@@261 $generated@@389)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@249 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@136) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@273 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@249 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@254 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@136) ($generated@@0 ($generated@@81 $generated@@394 $generated@@397))) ($generated@@273 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@81 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@254 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@81 ($generated@@313 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@81 ($generated@@313 $generated@@399) $generated@@398)))
)))
(assert  (and (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@400 $generated@@403)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@400 $generated@@403))
)) (forall (($generated@@404 T@T) ($generated@@405 T@U) ) (! (= (type ($generated@@401 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@401 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@322 (type $generated@@406))))
(let (($generated@@408 ($generated@@321 (type $generated@@406))))
(= (type ($generated@@402 $generated@@406)) ($generated@@76 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@402 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@410) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@409) ($generated@@156 ($generated@@401 $generated@@149 $generated@@410)))) (= ($generated@@81 ($generated@@402 $generated@@409) ($generated@@156 ($generated@@401 $generated@@149 $generated@@410))) ($generated@@157 ($generated@@401 $generated@@149 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@340 (type $generated@@414))))
(let (($generated@@416 ($generated@@339 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@76 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@418) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@417) ($generated@@156 ($generated@@401 $generated@@149 $generated@@418)))) (= ($generated@@81 ($generated@@412 $generated@@417) ($generated@@156 ($generated@@401 $generated@@149 $generated@@418))) ($generated@@157 ($generated@@401 $generated@@149 $generated@@418))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@321 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@320 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@81 ($generated@@402 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@339 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@338 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@81 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@432) $generated@@436))) (and ($generated@@273 ($generated@@81 ($generated@@402 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@273 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) $generated@@64)) (= (type $generated@@443) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@440) $generated@@444))) (and ($generated@@273 ($generated@@81 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@273 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@140 (type $generated@@445))))
 (=> (and (and (= (type $generated@@445) ($generated@@135 $generated@@447)) (= (type $generated@@446) ($generated@@135 $generated@@447))) ($generated@@282 $generated@@445 $generated@@446)) (= $generated@@445 $generated@@446)))
 :pattern ( ($generated@@282 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@76 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@340 (type $generated@@450))))
(let (($generated@@452 ($generated@@339 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@338 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@337 $generated@@452 $generated@@451)) (= ($generated@@336 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@336 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@340 (type $generated@@453))))
(let (($generated@@455 ($generated@@339 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@338 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@337 $generated@@455 $generated@@454)) (= ($generated@@376 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@376 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@340 (type $generated@@456))))
(let (($generated@@458 ($generated@@339 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@338 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@337 $generated@@458 $generated@@457)) (= ($generated@@411 $generated@@456) ($generated@@448 $generated@@136))))))
 :pattern ( ($generated@@411 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@322 (type $generated@@459))))
(let (($generated@@461 ($generated@@321 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@320 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@319 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@136) (= (type $generated@@463) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@459) ($generated@@299 ($generated@@239 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@400 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@340 (type $generated@@464))))
(let (($generated@@466 ($generated@@339 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@338 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@337 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@136) (= (type $generated@@468) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@464) ($generated@@299 ($generated@@239 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@411 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@240 $generated@@469 $generated@@46)) (and (= ($generated@@299 ($generated@@401 $generated@@2 $generated@@469)) $generated@@469) ($generated@@138 ($generated@@401 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@136) ($generated@@240 $generated@@470 $generated@@47)) (and (= ($generated@@299 ($generated@@401 $generated@@3 $generated@@470)) $generated@@470) ($generated@@138 ($generated@@401 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@136) ($generated@@240 $generated@@471 $generated@@44)) (and (= ($generated@@299 ($generated@@401 $generated@@4 $generated@@471)) $generated@@471) ($generated@@138 ($generated@@401 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 21))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@136) ($generated@@240 $generated@@473 $generated@@45)) (and (= ($generated@@299 ($generated@@401 $generated@@472 $generated@@473)) $generated@@473) ($generated@@138 ($generated@@401 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@240 ($generated@@299 $generated@@474) $generated@@475) ($generated@@138 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@240 ($generated@@299 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@79 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@76 $generated@@477 $generated@@2)) (<= 0 ($generated@@312 $generated@@476))))
 :pattern ( ($generated@@312 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@140 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@135 $generated@@479)) (<= 0 ($generated@@283 $generated@@478))))
 :pattern ( ($generated@@283 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@429 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@429 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@429 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@429 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@72 ($generated@@429 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@437 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@437 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@437 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@437 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@72 ($generated@@437 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@136) (= (type $generated@@501) $generated@@136)) (= ($generated@@279 ($generated@@239 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@502 ($generated@@148 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@148 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@148 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@148 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@136) (= (type $generated@@511) $generated@@136)) (= ($generated@@156 ($generated@@239 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@239 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@136) (= (type $generated@@513) $generated@@136)) (= ($generated@@157 ($generated@@239 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@239 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@134)
 :pattern ( ($generated@@514 $generated@@516))
)) (= (type $generated@@515) $generated@@134)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@134) (= (type $generated@@518) ($generated@@135 $generated@@136))) (= ($generated@@133 $generated@@517 $generated@@518) ($generated@@133 $generated@@515 $generated@@518)))
 :pattern ( ($generated@@133 ($generated@@514 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@134) (= (type $generated@@520) ($generated@@135 $generated@@136))) (= ($generated@@167 $generated@@519 $generated@@520) ($generated@@167 $generated@@515 $generated@@520)))
 :pattern ( ($generated@@167 ($generated@@514 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@135 $generated@@136)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@139 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@283 $generated@@521))) ($generated@@273 ($generated@@284 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@284 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@139 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@75 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@75 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@249 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@249 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@254 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@254 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@162 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@139 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@139 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@139 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@139 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@401 $generated@@544 ($generated@@299 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@299 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) (= ($generated@@138 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@545) $generated@@548))) (and ($generated@@240 ($generated@@81 ($generated@@402 $generated@@545) $generated@@548) $generated@@547) ($generated@@240 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@545) $generated@@548))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@138 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@138 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@549) $generated@@552))) (and ($generated@@240 ($generated@@81 ($generated@@412 $generated@@549) $generated@@552) $generated@@551) ($generated@@240 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@549) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@138 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@136)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@239 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@239 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@136) (= (type $generated@@558) $generated@@136)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@239 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@239 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@134) (= (type $generated@@560) ($generated@@135 $generated@@136))) (= ($generated@@133 ($generated@@298 $generated@@559) $generated@@560) ($generated@@133 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@133 ($generated@@298 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@134) (= (type $generated@@562) ($generated@@135 $generated@@136))) (= ($generated@@167 ($generated@@298 $generated@@561) $generated@@562) ($generated@@167 $generated@@561 $generated@@562)))
 :pattern ( ($generated@@167 ($generated@@298 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@240 $generated@@563 ($generated@@429 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@401 ($generated@@320 $generated@@136 $generated@@136) $generated@@563)) $generated@@563) ($generated@@138 ($generated@@401 ($generated@@320 $generated@@136 $generated@@136) $generated@@563) ($generated@@429 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@429 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@240 $generated@@566 ($generated@@437 $generated@@567 $generated@@568))) (and (= ($generated@@299 ($generated@@401 ($generated@@338 $generated@@136 $generated@@136) $generated@@566)) $generated@@566) ($generated@@138 ($generated@@401 ($generated@@338 $generated@@136 $generated@@136) $generated@@566) ($generated@@437 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@437 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@136)) ($generated@@240 $generated@@571 ($generated@@148 $generated@@569 $generated@@570))) (and (= ($generated@@299 ($generated@@401 $generated@@149 $generated@@571)) $generated@@571) ($generated@@138 ($generated@@401 $generated@@149 $generated@@571) ($generated@@148 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@571 ($generated@@148 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@81 ($generated@@448 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@81 ($generated@@448 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@69)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@64) (= (type $generated@@577) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@148 $generated@@576 $generated@@577)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@576 $generated@@577))
)))
(assert  (and (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@140 (type $generated@@580))))
(= (type ($generated@@578 $generated@@580)) ($generated@@135 $generated@@581)))
 :pattern ( ($generated@@578 $generated@@580))
)) (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@140 (type $generated@@582))))
(= (type ($generated@@579 $generated@@582)) $generated@@583))
 :pattern ( ($generated@@579 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (=> (= (type $generated@@584) ($generated@@135 $generated@@586)) (and (= ($generated@@578 ($generated@@265 $generated@@584 $generated@@585)) $generated@@584) (= ($generated@@579 ($generated@@265 $generated@@584 $generated@@585)) $generated@@585))))
 :pattern ( ($generated@@265 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@149) (= ($generated@@553 ($generated@@299 $generated@@587)) ($generated@@554 $generated@@587)))
 :pattern ( ($generated@@553 ($generated@@299 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@136) ($generated@@240 $generated@@588 ($generated@@75 0))) (and (= ($generated@@299 ($generated@@401 $generated@@2 $generated@@588)) $generated@@588) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@588) ($generated@@75 0))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@75 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@136) (= (type $generated@@590) $generated@@64)) ($generated@@240 $generated@@589 ($generated@@249 $generated@@590))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@589)) $generated@@589) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@589) ($generated@@249 $generated@@590))))
 :pattern ( ($generated@@240 $generated@@589 ($generated@@249 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@136) (= (type $generated@@592) $generated@@64)) ($generated@@240 $generated@@591 ($generated@@254 $generated@@592))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@591)) $generated@@591) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@591) ($generated@@254 $generated@@592))))
 :pattern ( ($generated@@240 $generated@@591 ($generated@@254 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@136) (= (type $generated@@594) $generated@@64)) ($generated@@240 $generated@@593 ($generated@@162 $generated@@594))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@2) $generated@@593)) $generated@@593) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@2) $generated@@593) ($generated@@162 $generated@@594))))
 :pattern ( ($generated@@240 $generated@@593 ($generated@@162 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@136) (= (type $generated@@596) $generated@@64)) ($generated@@240 $generated@@595 ($generated@@139 $generated@@596))) (and (= ($generated@@299 ($generated@@401 ($generated@@135 $generated@@136) $generated@@595)) $generated@@595) ($generated@@138 ($generated@@401 ($generated@@135 $generated@@136) $generated@@595) ($generated@@139 $generated@@596))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@139 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@597 ($generated@@162 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@597 $generated@@600)))) ($generated@@273 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@81 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@74 $generated@@597 ($generated@@162 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@149) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@603) (and ($generated@@147 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@64) ($generated@@74 $generated@@601 ($generated@@148 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@74 $generated@@601 ($generated@@148 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@273 ($generated@@156 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@273 ($generated@@156 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@149) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@607) (and ($generated@@147 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@64) ($generated@@74 $generated@@605 ($generated@@148 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@74 $generated@@605 ($generated@@148 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@273 ($generated@@157 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@273 ($generated@@157 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@136) (= (type $generated@@610) $generated@@136)) (= ($generated@@239 ($generated@@261 $generated@@609) ($generated@@261 $generated@@610)) ($generated@@261 ($generated@@239 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@609) ($generated@@261 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@611))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@612)) ($generated@@261 ($generated@@299 $generated@@612)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@140 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@135 $generated@@614)) (= ($generated@@283 $generated@@613) 0)) (= $generated@@613 ($generated@@295 $generated@@614))))
 :pattern ( ($generated@@283 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@76 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@312 ($generated@@82 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@312 $generated@@615) ($generated ($generated@@81 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@312 ($generated@@82 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@2)) ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@3)) ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@4)) ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@472)) ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@628) $generated@@136)) ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@135 $generated@@136)) (= (type $generated@@630) $generated@@64)) (= ($generated@@138 $generated@@629 ($generated@@139 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@283 $generated@@629))) ($generated@@240 ($generated@@284 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@284 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@138 $generated@@629 ($generated@@139 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@283 $generated@@633))) (< ($generated@@554 ($generated@@401 $generated@@149 ($generated@@284 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@554 ($generated@@401 $generated@@149 ($generated@@284 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) $generated@@64)) ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637))) (and (and ($generated@@138 ($generated@@318 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@138 ($generated@@365 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@138 ($generated@@400 $generated@@635) ($generated@@249 ($generated@@148 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640))) (and (and ($generated@@138 ($generated@@336 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@138 ($generated@@376 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@138 ($generated@@411 $generated@@638) ($generated@@254 ($generated@@148 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@138 $generated@@641 $generated@@46))
 :pattern ( ($generated@@138 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@138 $generated@@642 $generated@@47))
 :pattern ( ($generated@@138 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@138 $generated@@643 $generated@@44))
 :pattern ( ($generated@@138 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@472) ($generated@@138 $generated@@644 $generated@@45))
 :pattern ( ($generated@@138 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@136) ($generated@@138 $generated@@645 $generated@@48))
 :pattern ( ($generated@@138 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@646) ($generated@@135 $generated@@136)) (= (type $generated@@647) ($generated@@135 $generated@@136))) (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@649) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@650) $generated@@77)) (= (type $generated@@651) ($generated@@173 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@653 true))
(let (($generated@@654  (=> (and (and ($generated@@282 $generated@@646 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) (= $generated@@647 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))))) (and ($generated@@74 $generated@@647 ($generated@@139 ($generated@@139 $generated@@46)) $generated@@648) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@632 $generated@@647) ($generated@@632 $generated@@646)))))
(let (($generated@@655  (=> (= $generated@@649 ($generated@@227 $generated@@650 $generated@@648 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@654) (=> (= (ControlFlow 0 5) 4) $generated@@653)))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@172 $generated@@650 $generated@@648 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@656) (=> (= (ControlFlow 0 6) 5) $generated@@655)))))
(let (($generated@@658  (=> (and (and (and ($generated@@272 $generated@@648) ($generated@@652 $generated@@648)) ($generated@@138 $generated@@646 ($generated@@139 $generated@@46))) (and (= 0 $generated@@132) (= (ControlFlow 0 7) 6))) $generated@@657)))
$generated@@658)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U Int) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@T T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 () T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@141)) 15))) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@135 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@135 $generated@@142))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@143))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@134) (= (type $generated@@145) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@145) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@145 ($generated@@139 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@138 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 17) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@138 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@138 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@136)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@136)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@134) (= (type $generated@@170) ($generated@@135 $generated@@136))) (or ($generated@@168 $generated@@170) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@170 ($generated@@139 ($generated@@139 $generated@@46)))))) true)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 18)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@149)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@136)) (= (type $generated@@246) $generated@@136)) (= ($generated@@138 ($generated@@239 $generated@@245 $generated@@246) ($generated@@148 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@138 ($generated@@239 $generated@@245 $generated@@246) ($generated@@148 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) (= (type $generated@@248) $generated@@149)) (= ($generated@@155 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@155 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@136) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@138 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@138 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@135 $generated@@268)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) ($generated@@135 $generated@@136)) (= (type $generated@@270) $generated@@136)) (= (type $generated@@271) $generated@@64)) (and ($generated@@138 $generated@@269 ($generated@@139 $generated@@271)) ($generated@@240 $generated@@270 $generated@@271))) ($generated@@138 ($generated@@265 $generated@@269 $generated@@270) ($generated@@139 $generated@@271)))
 :pattern ( ($generated@@138 ($generated@@265 $generated@@269 $generated@@270) ($generated@@139 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@136)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@278)) (= ($generated@@74 ($generated@@239 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@74 ($generated@@239 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@149) (= ($generated@@147 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 Int) ) (! (let (($generated@@287 ($generated@@140 (type $generated@@285))))
(= (type ($generated@@284 $generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@140 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@135 $generated@@290)) (= (type $generated@@289) ($generated@@135 $generated@@290))) (= ($generated@@282 $generated@@288 $generated@@289)  (and (= ($generated@@283 $generated@@288) ($generated@@283 $generated@@289)) (forall (($generated@@291 Int) ) (!  (=> (and (<= 0 $generated@@291) (< $generated@@291 ($generated@@283 $generated@@288))) (= ($generated@@284 $generated@@288 $generated@@291) ($generated@@284 $generated@@289 $generated@@291)))
 :pattern ( ($generated@@284 $generated@@288 $generated@@291))
 :pattern ( ($generated@@284 $generated@@289 $generated@@291))
))))))
 :pattern ( ($generated@@282 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@149) ($generated@@147 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@136) (= (type $generated@@294) $generated@@136)) (= $generated@@292 ($generated@@239 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@147 $generated@@292))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@135 $generated@@296))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@283 ($generated@@295 $generated@@297)) 0)
 :pattern ( ($generated@@295 $generated@@297))
)))
(assert  (and (forall (($generated@@300 T@U) ) (! (= (type ($generated@@298 $generated@@300)) $generated@@134)
 :pattern ( ($generated@@298 $generated@@300))
)) (forall (($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@301)) $generated@@136)
 :pattern ( ($generated@@299 $generated@@301))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@134) (= (type $generated@@303) ($generated@@135 $generated@@136))) (or ($generated@@168 $generated@@303) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@303 ($generated@@139 ($generated@@139 $generated@@46)))))) (and (=> ($generated@@282 $generated@@303 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@137 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))) (= ($generated@@167 ($generated@@298 $generated@@302) $generated@@303) (ite ($generated@@282 $generated@@303 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@133 $generated@@302 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))) 0))))
 :pattern ( ($generated@@167 ($generated@@298 $generated@@302) $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
 (=> (= (type $generated@@304) ($generated@@135 $generated@@306)) (= ($generated@@283 ($generated@@265 $generated@@304 $generated@@305)) (+ 1 ($generated@@283 $generated@@304)))))
 :pattern ( ($generated@@265 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@64) (= (type $generated@@309) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@273 ($generated@@299 $generated@@307) $generated@@308 $generated@@309) ($generated@@74 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@273 ($generated@@299 $generated@@307) $generated@@308 $generated@@309))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@134) (= (type $generated@@311) ($generated@@135 $generated@@136))) (or ($generated@@137 $generated@@311) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@311 ($generated@@139 $generated@@46))))) (and (=> ($generated@@282 $generated@@311 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@168 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))))) (= ($generated@@133 ($generated@@298 $generated@@310) $generated@@311) (ite ($generated@@282 $generated@@311 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@167 $generated@@310 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))))) 0))))
 :pattern ( ($generated@@133 ($generated@@298 $generated@@310) $generated@@311))
))))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@76 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@81 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@163 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@163 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@357) ($generated@@135 $generated@@360)) (and (=> (= $generated@@358 ($generated@@283 $generated@@357)) (= ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358) $generated@@359)) (=> (not (= $generated@@358 ($generated@@283 $generated@@357))) (= ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358) ($generated@@284 $generated@@357 $generated@@358))))))
 :pattern ( ($generated@@284 ($generated@@265 $generated@@357 $generated@@359) $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@322 (type $generated@@368))))
(let (($generated@@370 ($generated@@321 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@320 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@319 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@340 (type $generated@@372))))
(let (($generated@@374 ($generated@@339 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@338 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@337 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@336 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@76 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@384) $generated@@64)) (= ($generated@@138 $generated@@383 ($generated@@162 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@383 $generated@@385)))) ($generated@@240 $generated@@385 $generated@@384))
 :pattern ( ($generated@@81 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@138 $generated@@383 ($generated@@162 $generated@@384)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@134) (= (type $generated@@387) ($generated@@135 $generated@@136))) (or ($generated@@168 ($generated@@261 $generated@@387)) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@387 ($generated@@139 ($generated@@139 $generated@@46)))))) (and (=> ($generated@@282 $generated@@387 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@137 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))) (= ($generated@@167 ($generated@@298 $generated@@386) ($generated@@261 $generated@@387)) (ite ($generated@@282 $generated@@387 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) ($generated@@133 ($generated@@298 $generated@@386) ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))) 0))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@298 $generated@@386) ($generated@@261 $generated@@387)))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@134) (= (type $generated@@389) ($generated@@135 $generated@@136))) (or ($generated@@137 ($generated@@261 $generated@@389)) (and (not (= 0 $generated@@132)) ($generated@@138 $generated@@389 ($generated@@139 $generated@@46))))) (and (=> ($generated@@282 $generated@@389 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@168 ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))))) (= ($generated@@133 ($generated@@298 $generated@@388) ($generated@@261 $generated@@389)) (ite ($generated@@282 $generated@@389 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))) ($generated@@167 ($generated@@298 $generated@@388) ($generated@@261 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@298 $generated@@388) ($generated@@261 $generated@@389)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@249 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@136) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@273 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@249 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@254 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@136) ($generated@@0 ($generated@@81 $generated@@394 $generated@@397))) ($generated@@273 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@81 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@254 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@81 ($generated@@313 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@81 ($generated@@313 $generated@@399) $generated@@398)))
)))
(assert  (and (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@400 $generated@@403)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@400 $generated@@403))
)) (forall (($generated@@404 T@T) ($generated@@405 T@U) ) (! (= (type ($generated@@401 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@401 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@322 (type $generated@@406))))
(let (($generated@@408 ($generated@@321 (type $generated@@406))))
(= (type ($generated@@402 $generated@@406)) ($generated@@76 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@402 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@410) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@409) ($generated@@156 ($generated@@401 $generated@@149 $generated@@410)))) (= ($generated@@81 ($generated@@402 $generated@@409) ($generated@@156 ($generated@@401 $generated@@149 $generated@@410))) ($generated@@157 ($generated@@401 $generated@@149 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@340 (type $generated@@414))))
(let (($generated@@416 ($generated@@339 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@76 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@418) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@417) ($generated@@156 ($generated@@401 $generated@@149 $generated@@418)))) (= ($generated@@81 ($generated@@412 $generated@@417) ($generated@@156 ($generated@@401 $generated@@149 $generated@@418))) ($generated@@157 ($generated@@401 $generated@@149 $generated@@418))))))
 :pattern ( ($generated@@81 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@321 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@320 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@81 ($generated@@402 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@339 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@338 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@81 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@432) $generated@@436))) (and ($generated@@273 ($generated@@81 ($generated@@402 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@273 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) $generated@@64)) (= (type $generated@@443) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@440) $generated@@444))) (and ($generated@@273 ($generated@@81 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@273 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@74 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@140 (type $generated@@445))))
 (=> (and (and (= (type $generated@@445) ($generated@@135 $generated@@447)) (= (type $generated@@446) ($generated@@135 $generated@@447))) ($generated@@282 $generated@@445 $generated@@446)) (= $generated@@445 $generated@@446)))
 :pattern ( ($generated@@282 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@76 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@340 (type $generated@@450))))
(let (($generated@@452 ($generated@@339 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@338 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@337 $generated@@452 $generated@@451)) (= ($generated@@336 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@336 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@340 (type $generated@@453))))
(let (($generated@@455 ($generated@@339 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@338 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@337 $generated@@455 $generated@@454)) (= ($generated@@376 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@376 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@340 (type $generated@@456))))
(let (($generated@@458 ($generated@@339 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@338 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@337 $generated@@458 $generated@@457)) (= ($generated@@411 $generated@@456) ($generated@@448 $generated@@136))))))
 :pattern ( ($generated@@411 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@322 (type $generated@@459))))
(let (($generated@@461 ($generated@@321 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@320 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@319 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@136) (= (type $generated@@463) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@459) ($generated@@299 ($generated@@239 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@400 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@340 (type $generated@@464))))
(let (($generated@@466 ($generated@@339 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@338 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@337 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@136) (= (type $generated@@468) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@411 $generated@@464) ($generated@@299 ($generated@@239 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@411 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@240 $generated@@469 $generated@@46)) (and (= ($generated@@299 ($generated@@401 $generated@@2 $generated@@469)) $generated@@469) ($generated@@138 ($generated@@401 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@136) ($generated@@240 $generated@@470 $generated@@47)) (and (= ($generated@@299 ($generated@@401 $generated@@3 $generated@@470)) $generated@@470) ($generated@@138 ($generated@@401 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@136) ($generated@@240 $generated@@471 $generated@@44)) (and (= ($generated@@299 ($generated@@401 $generated@@4 $generated@@471)) $generated@@471) ($generated@@138 ($generated@@401 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 21))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@136) ($generated@@240 $generated@@473 $generated@@45)) (and (= ($generated@@299 ($generated@@401 $generated@@472 $generated@@473)) $generated@@473) ($generated@@138 ($generated@@401 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@240 ($generated@@299 $generated@@474) $generated@@475) ($generated@@138 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@240 ($generated@@299 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@79 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@76 $generated@@477 $generated@@2)) (<= 0 ($generated@@312 $generated@@476))))
 :pattern ( ($generated@@312 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@140 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@135 $generated@@479)) (<= 0 ($generated@@283 $generated@@478))))
 :pattern ( ($generated@@283 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@429 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@429 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@429 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@429 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@72 ($generated@@429 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@437 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@437 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@437 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@437 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@72 ($generated@@437 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@136) (= (type $generated@@501) $generated@@136)) (= ($generated@@279 ($generated@@239 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@502 ($generated@@148 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@148 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@148 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@148 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@136) (= (type $generated@@511) $generated@@136)) (= ($generated@@156 ($generated@@239 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@239 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@136) (= (type $generated@@513) $generated@@136)) (= ($generated@@157 ($generated@@239 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@239 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@134)
 :pattern ( ($generated@@514 $generated@@516))
)) (= (type $generated@@515) $generated@@134)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@134) (= (type $generated@@518) ($generated@@135 $generated@@136))) (= ($generated@@133 $generated@@517 $generated@@518) ($generated@@133 $generated@@515 $generated@@518)))
 :pattern ( ($generated@@133 ($generated@@514 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@134) (= (type $generated@@520) ($generated@@135 $generated@@136))) (= ($generated@@167 $generated@@519 $generated@@520) ($generated@@167 $generated@@515 $generated@@520)))
 :pattern ( ($generated@@167 ($generated@@514 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@135 $generated@@136)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@139 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@283 $generated@@521))) ($generated@@273 ($generated@@284 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@284 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@139 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@75 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@75 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@249 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@249 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@254 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@254 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@162 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@139 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@139 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@139 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@139 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@401 $generated@@544 ($generated@@299 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@299 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) (= ($generated@@138 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@545) $generated@@548))) (and ($generated@@240 ($generated@@81 ($generated@@402 $generated@@545) $generated@@548) $generated@@547) ($generated@@240 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@81 ($generated@@402 $generated@@545) $generated@@548))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@138 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@138 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@549) $generated@@552))) (and ($generated@@240 ($generated@@81 ($generated@@412 $generated@@549) $generated@@552) $generated@@551) ($generated@@240 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@549) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@138 $generated@@549 ($generated@@437 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@136)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@239 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@239 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@136) (= (type $generated@@558) $generated@@136)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@239 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@239 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@134) (= (type $generated@@560) ($generated@@135 $generated@@136))) (= ($generated@@133 ($generated@@298 $generated@@559) $generated@@560) ($generated@@133 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@133 ($generated@@298 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@134) (= (type $generated@@562) ($generated@@135 $generated@@136))) (= ($generated@@167 ($generated@@298 $generated@@561) $generated@@562) ($generated@@167 $generated@@561 $generated@@562)))
 :pattern ( ($generated@@167 ($generated@@298 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@240 $generated@@563 ($generated@@429 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@401 ($generated@@320 $generated@@136 $generated@@136) $generated@@563)) $generated@@563) ($generated@@138 ($generated@@401 ($generated@@320 $generated@@136 $generated@@136) $generated@@563) ($generated@@429 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@429 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@240 $generated@@566 ($generated@@437 $generated@@567 $generated@@568))) (and (= ($generated@@299 ($generated@@401 ($generated@@338 $generated@@136 $generated@@136) $generated@@566)) $generated@@566) ($generated@@138 ($generated@@401 ($generated@@338 $generated@@136 $generated@@136) $generated@@566) ($generated@@437 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@566 ($generated@@437 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@136)) ($generated@@240 $generated@@571 ($generated@@148 $generated@@569 $generated@@570))) (and (= ($generated@@299 ($generated@@401 $generated@@149 $generated@@571)) $generated@@571) ($generated@@138 ($generated@@401 $generated@@149 $generated@@571) ($generated@@148 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@571 ($generated@@148 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@81 ($generated@@448 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@81 ($generated@@448 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@69)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@64) (= (type $generated@@577) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@148 $generated@@576 $generated@@577)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@576 $generated@@577))
)))
(assert  (and (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@140 (type $generated@@580))))
(= (type ($generated@@578 $generated@@580)) ($generated@@135 $generated@@581)))
 :pattern ( ($generated@@578 $generated@@580))
)) (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@140 (type $generated@@582))))
(= (type ($generated@@579 $generated@@582)) $generated@@583))
 :pattern ( ($generated@@579 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (=> (= (type $generated@@584) ($generated@@135 $generated@@586)) (and (= ($generated@@578 ($generated@@265 $generated@@584 $generated@@585)) $generated@@584) (= ($generated@@579 ($generated@@265 $generated@@584 $generated@@585)) $generated@@585))))
 :pattern ( ($generated@@265 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@149) (= ($generated@@553 ($generated@@299 $generated@@587)) ($generated@@554 $generated@@587)))
 :pattern ( ($generated@@553 ($generated@@299 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@136) ($generated@@240 $generated@@588 ($generated@@75 0))) (and (= ($generated@@299 ($generated@@401 $generated@@2 $generated@@588)) $generated@@588) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@588) ($generated@@75 0))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@75 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@136) (= (type $generated@@590) $generated@@64)) ($generated@@240 $generated@@589 ($generated@@249 $generated@@590))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@589)) $generated@@589) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@589) ($generated@@249 $generated@@590))))
 :pattern ( ($generated@@240 $generated@@589 ($generated@@249 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@136) (= (type $generated@@592) $generated@@64)) ($generated@@240 $generated@@591 ($generated@@254 $generated@@592))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@591)) $generated@@591) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@4) $generated@@591) ($generated@@254 $generated@@592))))
 :pattern ( ($generated@@240 $generated@@591 ($generated@@254 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@136) (= (type $generated@@594) $generated@@64)) ($generated@@240 $generated@@593 ($generated@@162 $generated@@594))) (and (= ($generated@@299 ($generated@@401 ($generated@@76 $generated@@136 $generated@@2) $generated@@593)) $generated@@593) ($generated@@138 ($generated@@401 ($generated@@76 $generated@@136 $generated@@2) $generated@@593) ($generated@@162 $generated@@594))))
 :pattern ( ($generated@@240 $generated@@593 ($generated@@162 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@136) (= (type $generated@@596) $generated@@64)) ($generated@@240 $generated@@595 ($generated@@139 $generated@@596))) (and (= ($generated@@299 ($generated@@401 ($generated@@135 $generated@@136) $generated@@595)) $generated@@595) ($generated@@138 ($generated@@401 ($generated@@135 $generated@@136) $generated@@595) ($generated@@139 $generated@@596))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@139 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@597 ($generated@@162 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@597 $generated@@600)))) ($generated@@273 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@81 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@74 $generated@@597 ($generated@@162 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@149) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@603) (and ($generated@@147 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@64) ($generated@@74 $generated@@601 ($generated@@148 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@74 $generated@@601 ($generated@@148 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@273 ($generated@@156 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@273 ($generated@@156 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@149) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@607) (and ($generated@@147 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@64) ($generated@@74 $generated@@605 ($generated@@148 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@74 $generated@@605 ($generated@@148 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@273 ($generated@@157 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@273 ($generated@@157 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@136) (= (type $generated@@610) $generated@@136)) (= ($generated@@239 ($generated@@261 $generated@@609) ($generated@@261 $generated@@610)) ($generated@@261 ($generated@@239 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@609) ($generated@@261 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@611))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@612)) ($generated@@261 ($generated@@299 $generated@@612)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@140 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@135 $generated@@614)) (= ($generated@@283 $generated@@613) 0)) (= $generated@@613 ($generated@@295 $generated@@614))))
 :pattern ( ($generated@@283 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@76 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@312 ($generated@@82 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@312 $generated@@615) ($generated ($generated@@81 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@312 ($generated@@82 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@2)) ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@3)) ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@4)) ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@472)) ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@628) $generated@@136)) ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@74 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@135 $generated@@136)) (= (type $generated@@630) $generated@@64)) (= ($generated@@138 $generated@@629 ($generated@@139 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@283 $generated@@629))) ($generated@@240 ($generated@@284 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@284 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@138 $generated@@629 ($generated@@139 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@283 $generated@@633))) (< ($generated@@554 ($generated@@401 $generated@@149 ($generated@@284 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@554 ($generated@@401 $generated@@149 ($generated@@284 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) $generated@@64)) ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637))) (and (and ($generated@@138 ($generated@@318 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@138 ($generated@@365 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@138 ($generated@@400 $generated@@635) ($generated@@249 ($generated@@148 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640))) (and (and ($generated@@138 ($generated@@336 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@138 ($generated@@376 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@138 ($generated@@411 $generated@@638) ($generated@@254 ($generated@@148 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@138 $generated@@641 $generated@@46))
 :pattern ( ($generated@@138 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@138 $generated@@642 $generated@@47))
 :pattern ( ($generated@@138 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@138 $generated@@643 $generated@@44))
 :pattern ( ($generated@@138 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@472) ($generated@@138 $generated@@644 $generated@@45))
 :pattern ( ($generated@@138 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@136) ($generated@@138 $generated@@645 $generated@@48))
 :pattern ( ($generated@@138 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@646) ($generated@@135 $generated@@136)) (= (type $generated@@647) ($generated@@135 $generated@@136))) (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@649) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@650) $generated@@77)) (= (type $generated@@651) ($generated@@173 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@653 true))
(let (($generated@@654  (=> (and (and ($generated@@282 $generated@@646 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2)))))))) (= $generated@@647 ($generated@@261 ($generated@@265 ($generated@@265 ($generated@@295 $generated@@136) ($generated@@299 ($generated@@8 ($generated@@259 1)))) ($generated@@299 ($generated@@8 ($generated@@259 2))))))) (and ($generated@@74 $generated@@647 ($generated@@139 $generated@@46) $generated@@648) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@632 $generated@@647) ($generated@@632 $generated@@646)))))
(let (($generated@@655  (=> (= $generated@@649 ($generated@@227 $generated@@650 $generated@@648 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@654) (=> (= (ControlFlow 0 5) 4) $generated@@653)))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@172 $generated@@650 $generated@@648 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@656) (=> (= (ControlFlow 0 6) 5) $generated@@655)))))
(let (($generated@@658  (=> (and (and (and ($generated@@272 $generated@@648) ($generated@@652 $generated@@648)) ($generated@@138 $generated@@646 ($generated@@139 ($generated@@139 $generated@@46)))) (and (= 0 $generated@@132) (= (ControlFlow 0 7) 6))) $generated@@657)))
$generated@@658)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Int)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@T T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@273 (T@U T@U) Int)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 () T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@618 (T@U) Int)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@80 $generated@@99)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@99))
))) (forall (($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(= (type ($generated@@81 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@81 $generated@@100))
))) (= (type $generated@@86) $generated@@68)) (forall (($generated@@102 T@U) ) (! (= (type ($generated@@89 $generated@@102)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@102))
))) (forall (($generated@@103 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@103)) 13))) (forall (($generated@@104 T@T) ) (! (= ($generated@@98 ($generated@@97 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@97 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(= (type ($generated@@90 $generated@@105 $generated@@106)) ($generated@@97 $generated@@107)))
 :pattern ( ($generated@@90 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@T) ) (! (= (type ($generated@@91 $generated@@108)) ($generated@@97 $generated@@108))
 :pattern ( ($generated@@91 $generated@@108))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@109 T@U) ) (! (= (type ($generated@@93 $generated@@109)) $generated@@92)
 :pattern ( ($generated@@93 $generated@@109))
))) (= (type $generated@@94) $generated@@83)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (= (type $generated@@110) $generated@@82) (= (type $generated@@111) $generated@@83)) (or ($generated@@84 ($generated@@81 $generated@@111)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@111 $generated@@86)))) (and (and ($generated@@87 ($generated@@81 $generated@@111)) (=> ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)) (ite ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 ($generated@@80 $generated@@110) ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@1 ($generated@@114 $generated@@123 $generated@@124)) 15)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@114 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@114 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@118 (type $generated@@129))))
(= (type ($generated@@119 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@119 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@133)))
(= (type ($generated@@120 $generated@@132 $generated@@133 $generated@@134)) ($generated@@114 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@120 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@137))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@119 ($generated@@120 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@119 ($generated@@120 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@119 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@119 $generated@@146 $generated@@148)))
 :weight 0
)))) (= ($generated@@1 $generated@@115) 16)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@71 (type $generated@@150))))
(= (type ($generated@@121 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@121 $generated@@149 $generated@@150))
))) (= ($generated@@1 $generated@@116) 17)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@122 $generated@@152 $generated@@153 $generated@@154)) $generated@@116)
 :pattern ( ($generated@@122 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@71 (type $generated@@156))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@121 ($generated@@122 $generated@@155 $generated@@156 $generated@@157) $generated@@156) $generated@@157)))
 :weight 0
))) (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@121 ($generated@@122 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@121 $generated@@160 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or true (= ($generated@@121 ($generated@@122 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@121 $generated@@164 $generated@@166)))
 :weight 0
)))) (forall (($generated@@167 Int) ) (! (= (type ($generated@@113 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@113 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@2) (= (type $generated@@169) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
 :pattern ( ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
)))
(assert  (and (forall (($generated@@174 T@U) ($generated@@175 Int) ) (! (let (($generated@@176 ($generated@@98 (type $generated@@174))))
(= (type ($generated@@170 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@170 $generated@@174 $generated@@175))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@173 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@173 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@171 $generated@@179))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@179 $generated@@180))) ($generated@@172 ($generated@@89 $generated@@179)))))
 :pattern ( ($generated@@170 $generated@@179 $generated@@180) ($generated@@89 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@2) ($generated@@85 $generated@@181 ($generated@@113 0)))
 :pattern ( ($generated@@85 $generated@@181 ($generated@@113 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@82) (= (type $generated@@183) $generated@@83)) (or ($generated@@84 $generated@@183) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@183 $generated@@86)))) true)
 :pattern ( ($generated@@79 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@68) (= (type $generated@@189) $generated@@68)) (= (type $generated@@190) $generated@@83)) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@92)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@92)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@83) (= (type $generated@@197) $generated@@83)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (= ($generated@@198 $generated@@94) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@85 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@85 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@115) (= (type $generated@@255) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@115)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@71 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@115) (= (type $generated@@267) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@268) ($generated@@70 $generated@@4))) (= (type $generated@@270) $generated@@115)) (= (type $generated@@271) ($generated@@70 $generated@@272))) (= ($generated@@0 ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@278) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@278 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@273 $generated@@277 $generated@@278))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@82) (= (type $generated@@280) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@280) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@280 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@96 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284)) $generated@@83)
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@92)) (= (type $generated@@288) $generated@@92)) (= ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286))  (and ($generated@@282 $generated@@287 $generated@@285) ($generated@@282 $generated@@288 $generated@@286))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286)))
)))
(assert ($generated@@85 $generated@@94 $generated@@86))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@114 $generated@@115 $generated@@116)) ($generated@@289 $generated@@290)) ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
 :pattern ( ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@83) (= (type $generated@@292) $generated@@83)) (= ($generated@@191 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@191 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (= (type $generated@@294) $generated@@83)) (= ($generated@@88 $generated@@293 $generated@@294) (= $generated@@293 $generated@@294)))
 :pattern ( ($generated@@88 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@298) $generated@@68)) (= ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@92) ($generated@@0 ($generated@@119 $generated@@297 $generated@@299))) ($generated@@282 $generated@@299 $generated@@298))
 :pattern ( ($generated@@119 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@92) ($generated@@0 ($generated@@119 $generated@@302 $generated@@304))) ($generated@@282 $generated@@304 $generated@@303))
 :pattern ( ($generated@@119 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@81 $generated@@307) $generated@@307)
 :pattern ( ($generated@@81 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@97 $generated@@92)) (= (type $generated@@309) $generated@@92)) (= (type $generated@@310) $generated@@68)) (and ($generated@@85 $generated@@308 ($generated@@275 $generated@@310)) ($generated@@282 $generated@@309 $generated@@310))) ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
 :pattern ( ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@83) (= (type $generated@@313) $generated@@83)) (and ($generated@@311 $generated@@312) ($generated@@311 $generated@@313))) (= ($generated@@88 $generated@@312 $generated@@313) true))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@312))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) $generated@@68)) (= (type $generated@@317) $generated@@92)) (= (type $generated@@318) $generated@@92)) (= (type $generated@@319) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@319)) (= ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@83) (= ($generated@@184 $generated@@320) (= ($generated@@198 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@83) (= ($generated@@311 $generated@@321) (= ($generated@@198 $generated@@321) $generated@@63)))
 :pattern ( ($generated@@311 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@83) (= ($generated@@322 $generated@@323) (= ($generated@@198 $generated@@323) $generated@@65)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@98 (type $generated@@325))))
 (=> (and (= (type $generated@@325) ($generated@@97 $generated@@327)) (= (type $generated@@326) ($generated@@97 $generated@@327))) (= ($generated@@324 $generated@@325 $generated@@326)  (and (= ($generated@@171 $generated@@325) ($generated@@171 $generated@@326)) (forall (($generated@@328 Int) ) (!  (=> (and (<= 0 $generated@@328) (< $generated@@328 ($generated@@171 $generated@@325))) (= ($generated@@170 $generated@@325 $generated@@328) ($generated@@170 $generated@@326 $generated@@328)))
 :pattern ( ($generated@@170 $generated@@325 $generated@@328))
 :pattern ( ($generated@@170 $generated@@326 $generated@@328))
))))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (= (type $generated@@329) $generated@@82) (= (type $generated@@330) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@330) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@330 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@329) $generated@@330) (ite ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 $generated@@329 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@329) $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@83) ($generated@@184 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@92) (= (type $generated@@333) $generated@@92)) (= $generated@@331 ($generated@@281 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@184 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@171 ($generated@@91 $generated@@334)) 0)
 :pattern ( ($generated@@91 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@83) ($generated@@311 $generated@@335)) (= $generated@@335 $generated@@94))
 :pattern ( ($generated@@311 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@83) ($generated@@322 $generated@@336)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) ($generated@@97 $generated@@92)) (= $generated@@336 ($generated@@89 $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
)))
 :pattern ( ($generated@@322 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
 (=> (= (type $generated@@338) ($generated@@97 $generated@@340)) (= ($generated@@171 ($generated@@90 $generated@@338 $generated@@339)) (+ 1 ($generated@@171 $generated@@338)))))
 :pattern ( ($generated@@90 $generated@@338 $generated@@339))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@82) (= (type $generated@@342) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@342) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@342 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@341) $generated@@342) (ite ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 $generated@@341 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@341) $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@68) (= (type $generated@@345) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345) ($generated@@112 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@114 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@117 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@114 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@119 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@114 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@114 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@117 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@114 $generated@@389 $generated@@2)) (= ($generated@@201 $generated@@388) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@389) (and (<= 0 ($generated ($generated@@119 $generated@@388 $generated@@390))) (<= ($generated ($generated@@119 $generated@@388 $generated@@390)) ($generated@@346 $generated@@388))))
 :pattern ( ($generated@@119 $generated@@388 $generated@@390))
)))))
 :pattern ( ($generated@@201 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@92) ($generated@@282 $generated@@391 $generated@@86)) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@391)) $generated@@391) ($generated@@85 ($generated@@173 $generated@@83 $generated@@391) $generated@@86)))
 :pattern ( ($generated@@282 $generated@@391 $generated@@86))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 Int) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@395)) (and (=> (= $generated@@393 ($generated@@171 $generated@@392)) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) $generated@@394)) (=> (not (= $generated@@393 ($generated@@171 $generated@@392))) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) ($generated@@170 $generated@@392 $generated@@393))))))
 :pattern ( ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@92))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@398) $generated@@83) (= (type $generated@@399) $generated@@83)) (and ($generated@@322 $generated@@398) ($generated@@322 $generated@@399))) (= ($generated@@88 $generated@@398 $generated@@399) ($generated@@324 ($generated@@396 $generated@@398) ($generated@@396 $generated@@399))))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@398))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@352 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@356 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@114 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@356 (type $generated@@407))))
(let (($generated@@409 ($generated@@355 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@354 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@353 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@119 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@374 (type $generated@@411))))
(let (($generated@@413 ($generated@@373 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@372 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@371 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@370 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@374 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@114 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@374 (type $generated@@418))))
(let (($generated@@420 ($generated@@373 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@372 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@371 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@119 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@82) (= (type $generated@@423) ($generated@@97 $generated@@92))) (or ($generated@@95 ($generated@@81 $generated@@423)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@423 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)) (ite ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 ($generated@@80 $generated@@422) ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@425) $generated@@68)) (= ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@424 $generated@@426)))) ($generated@@282 $generated@@426 $generated@@425))
 :pattern ( ($generated@@119 $generated@@424 $generated@@426))
))))
 :pattern ( ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) $generated@@82) (= (type $generated@@428) ($generated@@97 $generated@@92))) (or ($generated@@274 ($generated@@81 $generated@@428)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@428 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)) (ite ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 ($generated@@80 $generated@@427) ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)))
))))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@83) ($generated@@87 $generated@@429)) (or ($generated@@311 $generated@@429) ($generated@@322 $generated@@429)))
 :pattern ( ($generated@@87 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) ($generated@@97 $generated@@92)) (= ($generated@@85 ($generated@@89 $generated@@430) $generated@@86) ($generated@@85 $generated@@430 ($generated@@275 $generated@@86))))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@430) $generated@@86))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@92) ($generated@@0 ($generated@@119 $generated@@431 $generated@@434))) ($generated@@314 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@119 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@92) ($generated@@0 ($generated@@119 $generated@@435 $generated@@438))) ($generated@@314 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@119 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@119 ($generated@@347 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@119 ($generated@@347 $generated@@440) $generated@@439)))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@356 (type $generated@@444))))
(let (($generated@@446 ($generated@@355 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@114 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@448) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448)))) (= ($generated@@119 ($generated@@442 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@448))))))
 :pattern ( ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@374 (type $generated@@452))))
(let (($generated@@454 ($generated@@373 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@114 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@456) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456)))) (= ($generated@@119 ($generated@@450 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@456))))))
 :pattern ( ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@355 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@354 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@119 ($generated@@404 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@457) $generated@@461))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@119 ($generated@@404 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@373 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@372 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@119 ($generated@@415 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@462) $generated@@466))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@119 ($generated@@415 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))) (and ($generated@@314 ($generated@@119 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@314 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))) (and ($generated@@314 ($generated@@119 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@314 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@98 (type $generated@@483))))
 (=> (and (and (= (type $generated@@483) ($generated@@97 $generated@@485)) (= (type $generated@@484) ($generated@@97 $generated@@485))) ($generated@@324 $generated@@483 $generated@@484)) (= $generated@@483 $generated@@484)))
 :pattern ( ($generated@@324 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@85 $generated@@486 $generated@@86)) (or ($generated@@311 $generated@@486) ($generated@@322 $generated@@486)))
 :pattern ( ($generated@@322 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
 :pattern ( ($generated@@311 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@114 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@374 (type $generated@@489))))
(let (($generated@@491 ($generated@@373 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@372 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@371 $generated@@491 $generated@@490)) (= ($generated@@370 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@370 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@374 (type $generated@@492))))
(let (($generated@@494 ($generated@@373 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@372 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@371 $generated@@494 $generated@@493)) (= ($generated@@415 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@415 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@374 (type $generated@@495))))
(let (($generated@@497 ($generated@@373 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@372 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@371 $generated@@497 $generated@@496)) (= ($generated@@449 $generated@@495) ($generated@@487 $generated@@92))))))
 :pattern ( ($generated@@449 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@356 (type $generated@@498))))
(let (($generated@@500 ($generated@@355 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@354 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@353 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@92) (= (type $generated@@502) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@441 $generated@@498) ($generated@@93 ($generated@@281 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@441 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@374 (type $generated@@503))))
(let (($generated@@505 ($generated@@373 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@372 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@371 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@92) (= (type $generated@@507) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@449 $generated@@503) ($generated@@93 ($generated@@281 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@449 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@92) ($generated@@282 $generated@@508 $generated@@46)) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@508)) $generated@@508) ($generated@@85 ($generated@@173 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@282 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@92) ($generated@@282 $generated@@509 $generated@@47)) (and (= ($generated@@93 ($generated@@173 $generated@@3 $generated@@509)) $generated@@509) ($generated@@85 ($generated@@173 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@282 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@92) ($generated@@282 $generated@@510 $generated@@44)) (and (= ($generated@@93 ($generated@@173 $generated@@4 $generated@@510)) $generated@@510) ($generated@@85 ($generated@@173 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@282 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 21))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@92) ($generated@@282 $generated@@512 $generated@@45)) (and (= ($generated@@93 ($generated@@173 $generated@@511 $generated@@512)) $generated@@512) ($generated@@85 ($generated@@173 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@282 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@282 ($generated@@93 $generated@@513) $generated@@514) ($generated@@85 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@282 ($generated@@93 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@117 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@114 $generated@@516 $generated@@2)) (<= 0 ($generated@@346 $generated@@515))))
 :pattern ( ($generated@@346 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@98 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@97 $generated@@518)) (<= 0 ($generated@@171 $generated@@517))))
 :pattern ( ($generated@@171 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@97 $generated@@92)) (= (type $generated@@520) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@520)) (= ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520) ($generated@@112 $generated@@519 ($generated@@275 $generated@@86) $generated@@520)))
 :pattern ( ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@467 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@467 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@76 ($generated@@467 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@475 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@475 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@475 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@475 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@76 ($generated@@475 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@92) (= (type $generated@@542) $generated@@92)) (= ($generated@@198 ($generated@@281 $generated@@541 $generated@@542)) $generated@@61))
 :pattern ( ($generated@@281 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@185 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@185 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@185 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@185 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@92) (= (type $generated@@552) $generated@@92)) (= ($generated@@192 ($generated@@281 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@281 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@92) (= (type $generated@@554) $generated@@92)) (= ($generated@@193 ($generated@@281 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@281 $generated@@553 $generated@@554))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@82)
 :pattern ( ($generated@@555 $generated@@557))
)) (= (type $generated@@556) $generated@@82)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@82) (= (type $generated@@559) ($generated@@97 $generated@@92))) (= ($generated@@273 $generated@@558 $generated@@559) ($generated@@273 $generated@@556 $generated@@559)))
 :pattern ( ($generated@@273 ($generated@@555 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@82) (= (type $generated@@561) $generated@@83)) (= ($generated@@79 $generated@@560 $generated@@561) ($generated@@79 $generated@@556 $generated@@561)))
 :pattern ( ($generated@@79 ($generated@@555 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@82) (= (type $generated@@563) ($generated@@97 $generated@@92))) (= ($generated@@96 $generated@@562 $generated@@563) ($generated@@96 $generated@@556 $generated@@563)))
 :pattern ( ($generated@@96 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@97 $generated@@92)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@171 $generated@@564))) ($generated@@314 ($generated@@170 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@170 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@113 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@113 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@295 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@295 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@295 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@300 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@300 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@300 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@200 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@200 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@200 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@275 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@275 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@275 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@275 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) ($generated@@97 $generated@@92)) (= ($generated@@198 ($generated@@89 $generated@@586)) $generated@@65))
 :pattern ( ($generated@@89 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) ($generated@@97 $generated@@92)) (= ($generated@@396 ($generated@@89 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@89 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@173 $generated@@589 ($generated@@93 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@93 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) (= ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))) (and ($generated@@282 ($generated@@119 ($generated@@442 $generated@@590) $generated@@593) $generated@@592) ($generated@@282 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@590) $generated@@593))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))) (and ($generated@@282 ($generated@@119 ($generated@@450 $generated@@594) $generated@@597) $generated@@596) ($generated@@282 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@594) $generated@@597))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@92) (= (type $generated@@600) $generated@@92)) (< ($generated@@598 $generated@@599) ($generated@@172 ($generated@@281 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@281 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@92) (= (type $generated@@602) $generated@@92)) (< ($generated@@598 $generated@@602) ($generated@@172 ($generated@@281 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@281 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@82) (= (type $generated@@604) ($generated@@97 $generated@@92))) (= ($generated@@273 ($generated@@80 $generated@@603) $generated@@604) ($generated@@273 $generated@@603 $generated@@604)))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@82) (= (type $generated@@606) $generated@@83)) (= ($generated@@79 ($generated@@80 $generated@@605) $generated@@606) ($generated@@79 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@82) (= (type $generated@@608) ($generated@@97 $generated@@92))) (= ($generated@@96 ($generated@@80 $generated@@607) $generated@@608) ($generated@@96 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@92) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@68)) ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611))) (and (= ($generated@@93 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609)) $generated@@609) ($generated@@85 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609) ($generated@@467 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@92) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@68)) ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614))) (and (= ($generated@@93 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612)) $generated@@612) ($generated@@85 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612) ($generated@@475 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@92)) ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616))) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@617)) $generated@@617) ($generated@@85 ($generated@@173 $generated@@83 $generated@@617) ($generated@@185 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) ($generated@@97 $generated@@92)) (< ($generated@@618 $generated@@619) ($generated@@172 ($generated@@89 $generated@@619))))
 :pattern ( ($generated@@89 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@119 ($generated@@487 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@119 ($generated@@487 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@73)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) $generated@@68)) (and (= ($generated@@76 ($generated@@185 $generated@@624 $generated@@625)) $generated@@62) (= ($generated@@622 ($generated@@185 $generated@@624 $generated@@625)) $generated@@66)))
 :pattern ( ($generated@@185 $generated@@624 $generated@@625))
)))
(assert  (and (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@98 (type $generated@@628))))
(= (type ($generated@@626 $generated@@628)) ($generated@@97 $generated@@629)))
 :pattern ( ($generated@@626 $generated@@628))
)) (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@98 (type $generated@@630))))
(= (type ($generated@@627 $generated@@630)) $generated@@631))
 :pattern ( ($generated@@627 $generated@@630))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
 (=> (= (type $generated@@632) ($generated@@97 $generated@@634)) (and (= ($generated@@626 ($generated@@90 $generated@@632 $generated@@633)) $generated@@632) (= ($generated@@627 ($generated@@90 $generated@@632 $generated@@633)) $generated@@633))))
 :pattern ( ($generated@@90 $generated@@632 $generated@@633))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@82) (= (type $generated@@636) $generated@@83)) (or ($generated@@84 $generated@@636) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@636 $generated@@86)))) (and (and ($generated@@87 $generated@@636) (=> ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@635) $generated@@636) (ite ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 $generated@@635 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@635) $generated@@636))
))))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@83) (= ($generated@@598 ($generated@@93 $generated@@637)) ($generated@@172 $generated@@637)))
 :pattern ( ($generated@@598 ($generated@@93 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@92) ($generated@@282 $generated@@638 ($generated@@113 0))) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@638)) $generated@@638) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@638) ($generated@@113 0))))
 :pattern ( ($generated@@282 $generated@@638 ($generated@@113 0)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@92) (= (type $generated@@640) $generated@@68)) ($generated@@282 $generated@@639 ($generated@@295 $generated@@640))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639)) $generated@@639) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639) ($generated@@295 $generated@@640))))
 :pattern ( ($generated@@282 $generated@@639 ($generated@@295 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@92) (= (type $generated@@642) $generated@@68)) ($generated@@282 $generated@@641 ($generated@@300 $generated@@642))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641)) $generated@@641) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641) ($generated@@300 $generated@@642))))
 :pattern ( ($generated@@282 $generated@@641 ($generated@@300 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@92) (= (type $generated@@644) $generated@@68)) ($generated@@282 $generated@@643 ($generated@@200 $generated@@644))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643)) $generated@@643) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643) ($generated@@200 $generated@@644))))
 :pattern ( ($generated@@282 $generated@@643 ($generated@@200 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@92) (= (type $generated@@646) $generated@@68)) ($generated@@282 $generated@@645 ($generated@@275 $generated@@646))) (and (= ($generated@@93 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645)) $generated@@645) ($generated@@85 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645) ($generated@@275 $generated@@646))))
 :pattern ( ($generated@@282 $generated@@645 ($generated@@275 $generated@@646)))
)))
(assert (= ($generated@@76 $generated@@86) $generated@@64))
(assert (= ($generated@@622 $generated@@86) $generated@@67))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@647 $generated@@650)))) ($generated@@314 $generated@@650 $generated@@648 $generated@@649))
 :pattern ( ($generated@@119 $generated@@647 $generated@@650))
))))
 :pattern ( ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649))
)))
(assert (= $generated@@94 ($generated@@81 $generated@@94)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@83) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@653) (and ($generated@@184 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@68) ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
))))) ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@83) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@657) (and ($generated@@184 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@68) ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
 :pattern ( ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
))))) ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@92) (= (type $generated@@660) $generated@@92)) (= ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)) ($generated@@81 ($generated@@281 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))) ($generated@@81 ($generated@@93 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@97 $generated@@92)) (= ($generated@@89 ($generated@@81 $generated@@662)) ($generated@@81 ($generated@@89 $generated@@662))))
 :pattern ( ($generated@@89 ($generated@@81 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@93 ($generated@@81 $generated@@663)) ($generated@@81 ($generated@@93 $generated@@663)))
 :pattern ( ($generated@@93 ($generated@@81 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@98 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@97 $generated@@665)) (= ($generated@@171 $generated@@664) 0)) (= $generated@@664 ($generated@@91 $generated@@665))))
 :pattern ( ($generated@@171 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@114 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@346 $generated@@666) ($generated ($generated@@119 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@83) (= (type $generated@@671) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@671) (and ($generated@@322 $generated@@670) ($generated@@112 $generated@@670 $generated@@86 $generated@@671)))) ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
 :pattern ( ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@673) $generated@@2)) ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
 :pattern ( ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@675) $generated@@3)) ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
 :pattern ( ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@677) $generated@@4)) ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
 :pattern ( ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@679) $generated@@511)) ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
 :pattern ( ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@681) $generated@@92)) ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
 :pattern ( ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@97 $generated@@92)) (= (type $generated@@683) $generated@@68)) (= ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@171 $generated@@682))) ($generated@@282 ($generated@@170 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@170 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@171 $generated@@685))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))) ($generated@@618 $generated@@685))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@68)) ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689))) (and (and ($generated@@85 ($generated@@352 $generated@@687) ($generated@@295 $generated@@688)) ($generated@@85 ($generated@@404 $generated@@687) ($generated@@295 $generated@@689))) ($generated@@85 ($generated@@441 $generated@@687) ($generated@@295 ($generated@@185 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) $generated@@68)) ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692))) (and (and ($generated@@85 ($generated@@370 $generated@@690) ($generated@@300 $generated@@691)) ($generated@@85 ($generated@@415 $generated@@690) ($generated@@300 $generated@@692))) ($generated@@85 ($generated@@449 $generated@@690) ($generated@@300 ($generated@@185 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@85 $generated@@693 $generated@@46))
 :pattern ( ($generated@@85 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@85 $generated@@694 $generated@@47))
 :pattern ( ($generated@@85 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@85 $generated@@695 $generated@@44))
 :pattern ( ($generated@@85 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@511) ($generated@@85 $generated@@696 $generated@@45))
 :pattern ( ($generated@@85 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@92) ($generated@@85 $generated@@697 $generated@@48))
 :pattern ( ($generated@@85 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@698) ($generated@@97 $generated@@92)) (= (type $generated@@699) $generated@@83)) (= (type $generated@@700) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@701) ($generated@@207 $generated@@115 $generated@@4))) (= (type $generated@@702) $generated@@115)) (= (type $generated@@703) ($generated@@207 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@705 true))
(let (($generated@@706  (=> (and (and ($generated@@324 $generated@@698 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) (= $generated@@699 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (and ($generated@@112 $generated@@699 $generated@@86 $generated@@700) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@172 $generated@@699) ($generated@@618 $generated@@698)))))
(let (($generated@@707  (=> (= $generated@@701 ($generated@@261 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@706) (=> (= (ControlFlow 0 5) 4) $generated@@705)))))
(let (($generated@@708 true))
(let (($generated@@709  (=> (= $generated@@703 ($generated@@206 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@708) (=> (= (ControlFlow 0 6) 5) $generated@@707)))))
(let (($generated@@710  (=> (and (and (and ($generated@@289 $generated@@700) ($generated@@704 $generated@@700)) ($generated@@85 $generated@@698 ($generated@@275 $generated@@86))) (and (= 1 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@709)))
$generated@@710)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Int)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@T T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@273 (T@U T@U) Int)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 () T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@618 (T@U) Int)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@80 $generated@@99)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@99))
))) (forall (($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(= (type ($generated@@81 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@81 $generated@@100))
))) (= (type $generated@@86) $generated@@68)) (forall (($generated@@102 T@U) ) (! (= (type ($generated@@89 $generated@@102)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@102))
))) (forall (($generated@@103 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@103)) 13))) (forall (($generated@@104 T@T) ) (! (= ($generated@@98 ($generated@@97 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@97 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(= (type ($generated@@90 $generated@@105 $generated@@106)) ($generated@@97 $generated@@107)))
 :pattern ( ($generated@@90 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@T) ) (! (= (type ($generated@@91 $generated@@108)) ($generated@@97 $generated@@108))
 :pattern ( ($generated@@91 $generated@@108))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@109 T@U) ) (! (= (type ($generated@@93 $generated@@109)) $generated@@92)
 :pattern ( ($generated@@93 $generated@@109))
))) (= (type $generated@@94) $generated@@83)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (= (type $generated@@110) $generated@@82) (= (type $generated@@111) $generated@@83)) (or ($generated@@84 ($generated@@81 $generated@@111)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@111 $generated@@86)))) (and (and ($generated@@87 ($generated@@81 $generated@@111)) (=> ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)) (ite ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 ($generated@@80 $generated@@110) ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@1 ($generated@@114 $generated@@123 $generated@@124)) 15)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@114 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@114 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@118 (type $generated@@129))))
(= (type ($generated@@119 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@119 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@133)))
(= (type ($generated@@120 $generated@@132 $generated@@133 $generated@@134)) ($generated@@114 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@120 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@137))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@119 ($generated@@120 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@119 ($generated@@120 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@119 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@119 $generated@@146 $generated@@148)))
 :weight 0
)))) (= ($generated@@1 $generated@@115) 16)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@71 (type $generated@@150))))
(= (type ($generated@@121 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@121 $generated@@149 $generated@@150))
))) (= ($generated@@1 $generated@@116) 17)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@122 $generated@@152 $generated@@153 $generated@@154)) $generated@@116)
 :pattern ( ($generated@@122 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@71 (type $generated@@156))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@121 ($generated@@122 $generated@@155 $generated@@156 $generated@@157) $generated@@156) $generated@@157)))
 :weight 0
))) (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@121 ($generated@@122 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@121 $generated@@160 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or true (= ($generated@@121 ($generated@@122 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@121 $generated@@164 $generated@@166)))
 :weight 0
)))) (forall (($generated@@167 Int) ) (! (= (type ($generated@@113 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@113 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@2) (= (type $generated@@169) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
 :pattern ( ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
)))
(assert  (and (forall (($generated@@174 T@U) ($generated@@175 Int) ) (! (let (($generated@@176 ($generated@@98 (type $generated@@174))))
(= (type ($generated@@170 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@170 $generated@@174 $generated@@175))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@173 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@173 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@171 $generated@@179))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@179 $generated@@180))) ($generated@@172 ($generated@@89 $generated@@179)))))
 :pattern ( ($generated@@170 $generated@@179 $generated@@180) ($generated@@89 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@2) ($generated@@85 $generated@@181 ($generated@@113 0)))
 :pattern ( ($generated@@85 $generated@@181 ($generated@@113 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@82) (= (type $generated@@183) $generated@@83)) (or ($generated@@84 $generated@@183) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@183 $generated@@86)))) true)
 :pattern ( ($generated@@79 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@68) (= (type $generated@@189) $generated@@68)) (= (type $generated@@190) $generated@@83)) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@92)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@92)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@83) (= (type $generated@@197) $generated@@83)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (= ($generated@@198 $generated@@94) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@85 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@85 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@115) (= (type $generated@@255) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@115)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@71 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@115) (= (type $generated@@267) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@268) ($generated@@70 $generated@@4))) (= (type $generated@@270) $generated@@115)) (= (type $generated@@271) ($generated@@70 $generated@@272))) (= ($generated@@0 ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@278) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@278 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@273 $generated@@277 $generated@@278))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@82) (= (type $generated@@280) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@280) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@280 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@96 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284)) $generated@@83)
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@92)) (= (type $generated@@288) $generated@@92)) (= ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286))  (and ($generated@@282 $generated@@287 $generated@@285) ($generated@@282 $generated@@288 $generated@@286))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286)))
)))
(assert ($generated@@85 $generated@@94 $generated@@86))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@114 $generated@@115 $generated@@116)) ($generated@@289 $generated@@290)) ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
 :pattern ( ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@83) (= (type $generated@@292) $generated@@83)) (= ($generated@@191 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@191 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (= (type $generated@@294) $generated@@83)) (= ($generated@@88 $generated@@293 $generated@@294) (= $generated@@293 $generated@@294)))
 :pattern ( ($generated@@88 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@298) $generated@@68)) (= ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@92) ($generated@@0 ($generated@@119 $generated@@297 $generated@@299))) ($generated@@282 $generated@@299 $generated@@298))
 :pattern ( ($generated@@119 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@92) ($generated@@0 ($generated@@119 $generated@@302 $generated@@304))) ($generated@@282 $generated@@304 $generated@@303))
 :pattern ( ($generated@@119 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@81 $generated@@307) $generated@@307)
 :pattern ( ($generated@@81 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@97 $generated@@92)) (= (type $generated@@309) $generated@@92)) (= (type $generated@@310) $generated@@68)) (and ($generated@@85 $generated@@308 ($generated@@275 $generated@@310)) ($generated@@282 $generated@@309 $generated@@310))) ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
 :pattern ( ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@83) (= (type $generated@@313) $generated@@83)) (and ($generated@@311 $generated@@312) ($generated@@311 $generated@@313))) (= ($generated@@88 $generated@@312 $generated@@313) true))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@312))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) $generated@@68)) (= (type $generated@@317) $generated@@92)) (= (type $generated@@318) $generated@@92)) (= (type $generated@@319) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@319)) (= ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@83) (= ($generated@@184 $generated@@320) (= ($generated@@198 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@83) (= ($generated@@311 $generated@@321) (= ($generated@@198 $generated@@321) $generated@@63)))
 :pattern ( ($generated@@311 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@83) (= ($generated@@322 $generated@@323) (= ($generated@@198 $generated@@323) $generated@@65)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@98 (type $generated@@325))))
 (=> (and (= (type $generated@@325) ($generated@@97 $generated@@327)) (= (type $generated@@326) ($generated@@97 $generated@@327))) (= ($generated@@324 $generated@@325 $generated@@326)  (and (= ($generated@@171 $generated@@325) ($generated@@171 $generated@@326)) (forall (($generated@@328 Int) ) (!  (=> (and (<= 0 $generated@@328) (< $generated@@328 ($generated@@171 $generated@@325))) (= ($generated@@170 $generated@@325 $generated@@328) ($generated@@170 $generated@@326 $generated@@328)))
 :pattern ( ($generated@@170 $generated@@325 $generated@@328))
 :pattern ( ($generated@@170 $generated@@326 $generated@@328))
))))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (= (type $generated@@329) $generated@@82) (= (type $generated@@330) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@330) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@330 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@329) $generated@@330) (ite ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 $generated@@329 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@329) $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@83) ($generated@@184 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@92) (= (type $generated@@333) $generated@@92)) (= $generated@@331 ($generated@@281 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@184 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@171 ($generated@@91 $generated@@334)) 0)
 :pattern ( ($generated@@91 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@83) ($generated@@311 $generated@@335)) (= $generated@@335 $generated@@94))
 :pattern ( ($generated@@311 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@83) ($generated@@322 $generated@@336)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) ($generated@@97 $generated@@92)) (= $generated@@336 ($generated@@89 $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
)))
 :pattern ( ($generated@@322 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
 (=> (= (type $generated@@338) ($generated@@97 $generated@@340)) (= ($generated@@171 ($generated@@90 $generated@@338 $generated@@339)) (+ 1 ($generated@@171 $generated@@338)))))
 :pattern ( ($generated@@90 $generated@@338 $generated@@339))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@82) (= (type $generated@@342) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@342) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@342 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@341) $generated@@342) (ite ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 $generated@@341 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@341) $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@68) (= (type $generated@@345) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345) ($generated@@112 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@114 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@117 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@114 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@119 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@114 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@114 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@117 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@114 $generated@@389 $generated@@2)) (= ($generated@@201 $generated@@388) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@389) (and (<= 0 ($generated ($generated@@119 $generated@@388 $generated@@390))) (<= ($generated ($generated@@119 $generated@@388 $generated@@390)) ($generated@@346 $generated@@388))))
 :pattern ( ($generated@@119 $generated@@388 $generated@@390))
)))))
 :pattern ( ($generated@@201 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@92) ($generated@@282 $generated@@391 $generated@@86)) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@391)) $generated@@391) ($generated@@85 ($generated@@173 $generated@@83 $generated@@391) $generated@@86)))
 :pattern ( ($generated@@282 $generated@@391 $generated@@86))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 Int) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@395)) (and (=> (= $generated@@393 ($generated@@171 $generated@@392)) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) $generated@@394)) (=> (not (= $generated@@393 ($generated@@171 $generated@@392))) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) ($generated@@170 $generated@@392 $generated@@393))))))
 :pattern ( ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@92))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@398) $generated@@83) (= (type $generated@@399) $generated@@83)) (and ($generated@@322 $generated@@398) ($generated@@322 $generated@@399))) (= ($generated@@88 $generated@@398 $generated@@399) ($generated@@324 ($generated@@396 $generated@@398) ($generated@@396 $generated@@399))))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@398))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@352 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@356 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@114 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@356 (type $generated@@407))))
(let (($generated@@409 ($generated@@355 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@354 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@353 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@119 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@374 (type $generated@@411))))
(let (($generated@@413 ($generated@@373 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@372 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@371 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@370 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@374 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@114 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@374 (type $generated@@418))))
(let (($generated@@420 ($generated@@373 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@372 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@371 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@119 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@82) (= (type $generated@@423) ($generated@@97 $generated@@92))) (or ($generated@@95 ($generated@@81 $generated@@423)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@423 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)) (ite ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 ($generated@@80 $generated@@422) ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@425) $generated@@68)) (= ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@424 $generated@@426)))) ($generated@@282 $generated@@426 $generated@@425))
 :pattern ( ($generated@@119 $generated@@424 $generated@@426))
))))
 :pattern ( ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) $generated@@82) (= (type $generated@@428) ($generated@@97 $generated@@92))) (or ($generated@@274 ($generated@@81 $generated@@428)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@428 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)) (ite ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 ($generated@@80 $generated@@427) ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)))
))))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@83) ($generated@@87 $generated@@429)) (or ($generated@@311 $generated@@429) ($generated@@322 $generated@@429)))
 :pattern ( ($generated@@87 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) ($generated@@97 $generated@@92)) (= ($generated@@85 ($generated@@89 $generated@@430) $generated@@86) ($generated@@85 $generated@@430 ($generated@@275 $generated@@86))))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@430) $generated@@86))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@92) ($generated@@0 ($generated@@119 $generated@@431 $generated@@434))) ($generated@@314 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@119 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@92) ($generated@@0 ($generated@@119 $generated@@435 $generated@@438))) ($generated@@314 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@119 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@119 ($generated@@347 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@119 ($generated@@347 $generated@@440) $generated@@439)))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@356 (type $generated@@444))))
(let (($generated@@446 ($generated@@355 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@114 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@448) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448)))) (= ($generated@@119 ($generated@@442 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@448))))))
 :pattern ( ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@374 (type $generated@@452))))
(let (($generated@@454 ($generated@@373 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@114 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@456) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456)))) (= ($generated@@119 ($generated@@450 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@456))))))
 :pattern ( ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@355 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@354 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@119 ($generated@@404 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@457) $generated@@461))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@119 ($generated@@404 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@373 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@372 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@119 ($generated@@415 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@462) $generated@@466))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@119 ($generated@@415 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))) (and ($generated@@314 ($generated@@119 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@314 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))) (and ($generated@@314 ($generated@@119 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@314 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@98 (type $generated@@483))))
 (=> (and (and (= (type $generated@@483) ($generated@@97 $generated@@485)) (= (type $generated@@484) ($generated@@97 $generated@@485))) ($generated@@324 $generated@@483 $generated@@484)) (= $generated@@483 $generated@@484)))
 :pattern ( ($generated@@324 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@85 $generated@@486 $generated@@86)) (or ($generated@@311 $generated@@486) ($generated@@322 $generated@@486)))
 :pattern ( ($generated@@322 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
 :pattern ( ($generated@@311 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@114 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@374 (type $generated@@489))))
(let (($generated@@491 ($generated@@373 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@372 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@371 $generated@@491 $generated@@490)) (= ($generated@@370 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@370 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@374 (type $generated@@492))))
(let (($generated@@494 ($generated@@373 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@372 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@371 $generated@@494 $generated@@493)) (= ($generated@@415 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@415 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@374 (type $generated@@495))))
(let (($generated@@497 ($generated@@373 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@372 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@371 $generated@@497 $generated@@496)) (= ($generated@@449 $generated@@495) ($generated@@487 $generated@@92))))))
 :pattern ( ($generated@@449 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@356 (type $generated@@498))))
(let (($generated@@500 ($generated@@355 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@354 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@353 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@92) (= (type $generated@@502) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@441 $generated@@498) ($generated@@93 ($generated@@281 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@441 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@374 (type $generated@@503))))
(let (($generated@@505 ($generated@@373 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@372 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@371 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@92) (= (type $generated@@507) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@449 $generated@@503) ($generated@@93 ($generated@@281 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@449 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@92) ($generated@@282 $generated@@508 $generated@@46)) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@508)) $generated@@508) ($generated@@85 ($generated@@173 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@282 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@92) ($generated@@282 $generated@@509 $generated@@47)) (and (= ($generated@@93 ($generated@@173 $generated@@3 $generated@@509)) $generated@@509) ($generated@@85 ($generated@@173 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@282 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@92) ($generated@@282 $generated@@510 $generated@@44)) (and (= ($generated@@93 ($generated@@173 $generated@@4 $generated@@510)) $generated@@510) ($generated@@85 ($generated@@173 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@282 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 21))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@92) ($generated@@282 $generated@@512 $generated@@45)) (and (= ($generated@@93 ($generated@@173 $generated@@511 $generated@@512)) $generated@@512) ($generated@@85 ($generated@@173 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@282 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@282 ($generated@@93 $generated@@513) $generated@@514) ($generated@@85 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@282 ($generated@@93 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@117 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@114 $generated@@516 $generated@@2)) (<= 0 ($generated@@346 $generated@@515))))
 :pattern ( ($generated@@346 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@98 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@97 $generated@@518)) (<= 0 ($generated@@171 $generated@@517))))
 :pattern ( ($generated@@171 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@97 $generated@@92)) (= (type $generated@@520) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@520)) (= ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520) ($generated@@112 $generated@@519 ($generated@@275 $generated@@86) $generated@@520)))
 :pattern ( ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@467 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@467 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@76 ($generated@@467 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@475 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@475 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@475 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@475 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@76 ($generated@@475 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@92) (= (type $generated@@542) $generated@@92)) (= ($generated@@198 ($generated@@281 $generated@@541 $generated@@542)) $generated@@61))
 :pattern ( ($generated@@281 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@185 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@185 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@185 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@185 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@92) (= (type $generated@@552) $generated@@92)) (= ($generated@@192 ($generated@@281 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@281 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@92) (= (type $generated@@554) $generated@@92)) (= ($generated@@193 ($generated@@281 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@281 $generated@@553 $generated@@554))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@82)
 :pattern ( ($generated@@555 $generated@@557))
)) (= (type $generated@@556) $generated@@82)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@82) (= (type $generated@@559) ($generated@@97 $generated@@92))) (= ($generated@@273 $generated@@558 $generated@@559) ($generated@@273 $generated@@556 $generated@@559)))
 :pattern ( ($generated@@273 ($generated@@555 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@82) (= (type $generated@@561) $generated@@83)) (= ($generated@@79 $generated@@560 $generated@@561) ($generated@@79 $generated@@556 $generated@@561)))
 :pattern ( ($generated@@79 ($generated@@555 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@82) (= (type $generated@@563) ($generated@@97 $generated@@92))) (= ($generated@@96 $generated@@562 $generated@@563) ($generated@@96 $generated@@556 $generated@@563)))
 :pattern ( ($generated@@96 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@97 $generated@@92)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@171 $generated@@564))) ($generated@@314 ($generated@@170 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@170 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@113 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@113 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@295 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@295 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@295 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@300 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@300 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@300 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@200 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@200 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@200 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@275 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@275 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@275 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@275 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) ($generated@@97 $generated@@92)) (= ($generated@@198 ($generated@@89 $generated@@586)) $generated@@65))
 :pattern ( ($generated@@89 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) ($generated@@97 $generated@@92)) (= ($generated@@396 ($generated@@89 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@89 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@173 $generated@@589 ($generated@@93 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@93 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) (= ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))) (and ($generated@@282 ($generated@@119 ($generated@@442 $generated@@590) $generated@@593) $generated@@592) ($generated@@282 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@590) $generated@@593))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))) (and ($generated@@282 ($generated@@119 ($generated@@450 $generated@@594) $generated@@597) $generated@@596) ($generated@@282 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@594) $generated@@597))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@92) (= (type $generated@@600) $generated@@92)) (< ($generated@@598 $generated@@599) ($generated@@172 ($generated@@281 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@281 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@92) (= (type $generated@@602) $generated@@92)) (< ($generated@@598 $generated@@602) ($generated@@172 ($generated@@281 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@281 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@82) (= (type $generated@@604) ($generated@@97 $generated@@92))) (= ($generated@@273 ($generated@@80 $generated@@603) $generated@@604) ($generated@@273 $generated@@603 $generated@@604)))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@82) (= (type $generated@@606) $generated@@83)) (= ($generated@@79 ($generated@@80 $generated@@605) $generated@@606) ($generated@@79 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@82) (= (type $generated@@608) ($generated@@97 $generated@@92))) (= ($generated@@96 ($generated@@80 $generated@@607) $generated@@608) ($generated@@96 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@92) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@68)) ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611))) (and (= ($generated@@93 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609)) $generated@@609) ($generated@@85 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609) ($generated@@467 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@92) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@68)) ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614))) (and (= ($generated@@93 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612)) $generated@@612) ($generated@@85 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612) ($generated@@475 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@92)) ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616))) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@617)) $generated@@617) ($generated@@85 ($generated@@173 $generated@@83 $generated@@617) ($generated@@185 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) ($generated@@97 $generated@@92)) (< ($generated@@618 $generated@@619) ($generated@@172 ($generated@@89 $generated@@619))))
 :pattern ( ($generated@@89 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@119 ($generated@@487 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@119 ($generated@@487 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@73)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) $generated@@68)) (and (= ($generated@@76 ($generated@@185 $generated@@624 $generated@@625)) $generated@@62) (= ($generated@@622 ($generated@@185 $generated@@624 $generated@@625)) $generated@@66)))
 :pattern ( ($generated@@185 $generated@@624 $generated@@625))
)))
(assert  (and (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@98 (type $generated@@628))))
(= (type ($generated@@626 $generated@@628)) ($generated@@97 $generated@@629)))
 :pattern ( ($generated@@626 $generated@@628))
)) (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@98 (type $generated@@630))))
(= (type ($generated@@627 $generated@@630)) $generated@@631))
 :pattern ( ($generated@@627 $generated@@630))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
 (=> (= (type $generated@@632) ($generated@@97 $generated@@634)) (and (= ($generated@@626 ($generated@@90 $generated@@632 $generated@@633)) $generated@@632) (= ($generated@@627 ($generated@@90 $generated@@632 $generated@@633)) $generated@@633))))
 :pattern ( ($generated@@90 $generated@@632 $generated@@633))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@82) (= (type $generated@@636) $generated@@83)) (or ($generated@@84 $generated@@636) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@636 $generated@@86)))) (and (and ($generated@@87 $generated@@636) (=> ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@635) $generated@@636) (ite ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 $generated@@635 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@635) $generated@@636))
))))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@83) (= ($generated@@598 ($generated@@93 $generated@@637)) ($generated@@172 $generated@@637)))
 :pattern ( ($generated@@598 ($generated@@93 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@92) ($generated@@282 $generated@@638 ($generated@@113 0))) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@638)) $generated@@638) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@638) ($generated@@113 0))))
 :pattern ( ($generated@@282 $generated@@638 ($generated@@113 0)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@92) (= (type $generated@@640) $generated@@68)) ($generated@@282 $generated@@639 ($generated@@295 $generated@@640))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639)) $generated@@639) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639) ($generated@@295 $generated@@640))))
 :pattern ( ($generated@@282 $generated@@639 ($generated@@295 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@92) (= (type $generated@@642) $generated@@68)) ($generated@@282 $generated@@641 ($generated@@300 $generated@@642))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641)) $generated@@641) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641) ($generated@@300 $generated@@642))))
 :pattern ( ($generated@@282 $generated@@641 ($generated@@300 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@92) (= (type $generated@@644) $generated@@68)) ($generated@@282 $generated@@643 ($generated@@200 $generated@@644))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643)) $generated@@643) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643) ($generated@@200 $generated@@644))))
 :pattern ( ($generated@@282 $generated@@643 ($generated@@200 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@92) (= (type $generated@@646) $generated@@68)) ($generated@@282 $generated@@645 ($generated@@275 $generated@@646))) (and (= ($generated@@93 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645)) $generated@@645) ($generated@@85 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645) ($generated@@275 $generated@@646))))
 :pattern ( ($generated@@282 $generated@@645 ($generated@@275 $generated@@646)))
)))
(assert (= ($generated@@76 $generated@@86) $generated@@64))
(assert (= ($generated@@622 $generated@@86) $generated@@67))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@647 $generated@@650)))) ($generated@@314 $generated@@650 $generated@@648 $generated@@649))
 :pattern ( ($generated@@119 $generated@@647 $generated@@650))
))))
 :pattern ( ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649))
)))
(assert (= $generated@@94 ($generated@@81 $generated@@94)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@83) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@653) (and ($generated@@184 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@68) ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
))))) ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@83) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@657) (and ($generated@@184 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@68) ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
 :pattern ( ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
))))) ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@92) (= (type $generated@@660) $generated@@92)) (= ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)) ($generated@@81 ($generated@@281 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))) ($generated@@81 ($generated@@93 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@97 $generated@@92)) (= ($generated@@89 ($generated@@81 $generated@@662)) ($generated@@81 ($generated@@89 $generated@@662))))
 :pattern ( ($generated@@89 ($generated@@81 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@93 ($generated@@81 $generated@@663)) ($generated@@81 ($generated@@93 $generated@@663)))
 :pattern ( ($generated@@93 ($generated@@81 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@98 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@97 $generated@@665)) (= ($generated@@171 $generated@@664) 0)) (= $generated@@664 ($generated@@91 $generated@@665))))
 :pattern ( ($generated@@171 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@114 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@346 $generated@@666) ($generated ($generated@@119 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@83) (= (type $generated@@671) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@671) (and ($generated@@322 $generated@@670) ($generated@@112 $generated@@670 $generated@@86 $generated@@671)))) ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
 :pattern ( ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@673) $generated@@2)) ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
 :pattern ( ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@675) $generated@@3)) ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
 :pattern ( ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@677) $generated@@4)) ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
 :pattern ( ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@679) $generated@@511)) ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
 :pattern ( ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@681) $generated@@92)) ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
 :pattern ( ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@97 $generated@@92)) (= (type $generated@@683) $generated@@68)) (= ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@171 $generated@@682))) ($generated@@282 ($generated@@170 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@170 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@171 $generated@@685))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))) ($generated@@618 $generated@@685))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@68)) ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689))) (and (and ($generated@@85 ($generated@@352 $generated@@687) ($generated@@295 $generated@@688)) ($generated@@85 ($generated@@404 $generated@@687) ($generated@@295 $generated@@689))) ($generated@@85 ($generated@@441 $generated@@687) ($generated@@295 ($generated@@185 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) $generated@@68)) ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692))) (and (and ($generated@@85 ($generated@@370 $generated@@690) ($generated@@300 $generated@@691)) ($generated@@85 ($generated@@415 $generated@@690) ($generated@@300 $generated@@692))) ($generated@@85 ($generated@@449 $generated@@690) ($generated@@300 ($generated@@185 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@85 $generated@@693 $generated@@46))
 :pattern ( ($generated@@85 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@85 $generated@@694 $generated@@47))
 :pattern ( ($generated@@85 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@85 $generated@@695 $generated@@44))
 :pattern ( ($generated@@85 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@511) ($generated@@85 $generated@@696 $generated@@45))
 :pattern ( ($generated@@85 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@92) ($generated@@85 $generated@@697 $generated@@48))
 :pattern ( ($generated@@85 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@698) $generated@@83) (= (type $generated@@699) ($generated@@97 $generated@@92))) (= (type $generated@@700) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@701) ($generated@@207 $generated@@115 $generated@@4))) (= (type $generated@@702) $generated@@115)) (= (type $generated@@703) ($generated@@207 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@705 true))
(let (($generated@@706  (=> (and (and ($generated@@88 $generated@@698 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) (= $generated@@699 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) (and ($generated@@112 $generated@@699 ($generated@@275 $generated@@86) $generated@@700) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@618 $generated@@699) ($generated@@172 $generated@@698)))))
(let (($generated@@707  (=> (= $generated@@701 ($generated@@261 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@706) (=> (= (ControlFlow 0 5) 4) $generated@@705)))))
(let (($generated@@708 true))
(let (($generated@@709  (=> (= $generated@@703 ($generated@@206 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@708) (=> (= (ControlFlow 0 6) 5) $generated@@707)))))
(let (($generated@@710  (=> (and (and (and ($generated@@289 $generated@@700) ($generated@@704 $generated@@700)) ($generated@@85 $generated@@698 $generated@@86)) (and (= 1 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@709)))
$generated@@710)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Int)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@T T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@273 (T@U T@U) Int)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 () T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@618 (T@U) Int)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@80 $generated@@99)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@99))
))) (forall (($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(= (type ($generated@@81 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@81 $generated@@100))
))) (= (type $generated@@86) $generated@@68)) (forall (($generated@@102 T@U) ) (! (= (type ($generated@@89 $generated@@102)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@102))
))) (forall (($generated@@103 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@103)) 13))) (forall (($generated@@104 T@T) ) (! (= ($generated@@98 ($generated@@97 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@97 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(= (type ($generated@@90 $generated@@105 $generated@@106)) ($generated@@97 $generated@@107)))
 :pattern ( ($generated@@90 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@T) ) (! (= (type ($generated@@91 $generated@@108)) ($generated@@97 $generated@@108))
 :pattern ( ($generated@@91 $generated@@108))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@109 T@U) ) (! (= (type ($generated@@93 $generated@@109)) $generated@@92)
 :pattern ( ($generated@@93 $generated@@109))
))) (= (type $generated@@94) $generated@@83)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (= (type $generated@@110) $generated@@82) (= (type $generated@@111) $generated@@83)) (or ($generated@@84 ($generated@@81 $generated@@111)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@111 $generated@@86)))) (and (and ($generated@@87 ($generated@@81 $generated@@111)) (=> ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)) (ite ($generated@@88 $generated@@111 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 ($generated@@80 $generated@@110) ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@110) ($generated@@81 $generated@@111)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@1 ($generated@@114 $generated@@123 $generated@@124)) 15)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@114 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@114 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@118 (type $generated@@129))))
(= (type ($generated@@119 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@119 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@133)))
(= (type ($generated@@120 $generated@@132 $generated@@133 $generated@@134)) ($generated@@114 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@120 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@118 (type $generated@@137))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@119 ($generated@@120 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@119 ($generated@@120 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@119 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@119 $generated@@146 $generated@@148)))
 :weight 0
)))) (= ($generated@@1 $generated@@115) 16)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@71 (type $generated@@150))))
(= (type ($generated@@121 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@121 $generated@@149 $generated@@150))
))) (= ($generated@@1 $generated@@116) 17)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@122 $generated@@152 $generated@@153 $generated@@154)) $generated@@116)
 :pattern ( ($generated@@122 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@71 (type $generated@@156))))
 (=> (= (type $generated@@157) $generated@@158) (= ($generated@@121 ($generated@@122 $generated@@155 $generated@@156 $generated@@157) $generated@@156) $generated@@157)))
 :weight 0
))) (and (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@121 ($generated@@122 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@121 $generated@@160 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or true (= ($generated@@121 ($generated@@122 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@121 $generated@@164 $generated@@166)))
 :weight 0
)))) (forall (($generated@@167 Int) ) (! (= (type ($generated@@113 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@113 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@2) (= (type $generated@@169) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
 :pattern ( ($generated@@112 $generated@@168 ($generated@@113 0) $generated@@169))
)))
(assert  (and (forall (($generated@@174 T@U) ($generated@@175 Int) ) (! (let (($generated@@176 ($generated@@98 (type $generated@@174))))
(= (type ($generated@@170 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@170 $generated@@174 $generated@@175))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@173 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@173 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (= (type $generated@@179) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@171 $generated@@179))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@179 $generated@@180))) ($generated@@172 ($generated@@89 $generated@@179)))))
 :pattern ( ($generated@@170 $generated@@179 $generated@@180) ($generated@@89 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@2) ($generated@@85 $generated@@181 ($generated@@113 0)))
 :pattern ( ($generated@@85 $generated@@181 ($generated@@113 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@82) (= (type $generated@@183) $generated@@83)) (or ($generated@@84 $generated@@183) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@183 $generated@@86)))) true)
 :pattern ( ($generated@@79 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@68) (= (type $generated@@189) $generated@@68)) (= (type $generated@@190) $generated@@83)) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@85 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@92)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@92)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@83) (= (type $generated@@197) $generated@@83)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (= ($generated@@198 $generated@@94) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@85 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@85 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@115) (= (type $generated@@255) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@115)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@207 $generated@@115 $generated@@4))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@71 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@115) (= (type $generated@@267) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@268) ($generated@@70 $generated@@4))) (= (type $generated@@270) $generated@@115)) (= (type $generated@@271) ($generated@@70 $generated@@272))) (= ($generated@@0 ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@121 ($generated@@119 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@82) (= (type $generated@@278) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@278) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@278 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@273 $generated@@277 $generated@@278))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@82) (= (type $generated@@280) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@280) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@280 ($generated@@275 $generated@@86))))) true)
 :pattern ( ($generated@@96 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284)) $generated@@83)
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@92)) (= (type $generated@@288) $generated@@92)) (= ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286))  (and ($generated@@282 $generated@@287 $generated@@285) ($generated@@282 $generated@@288 $generated@@286))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@287 $generated@@288) ($generated@@185 $generated@@285 $generated@@286)))
)))
(assert ($generated@@85 $generated@@94 $generated@@86))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@114 $generated@@115 $generated@@116)) ($generated@@289 $generated@@290)) ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
 :pattern ( ($generated@@112 $generated@@94 $generated@@86 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@83) (= (type $generated@@292) $generated@@83)) (= ($generated@@191 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@191 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@83) (= (type $generated@@294) $generated@@83)) (= ($generated@@88 $generated@@293 $generated@@294) (= $generated@@293 $generated@@294)))
 :pattern ( ($generated@@88 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@298) $generated@@68)) (= ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@92) ($generated@@0 ($generated@@119 $generated@@297 $generated@@299))) ($generated@@282 $generated@@299 $generated@@298))
 :pattern ( ($generated@@119 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@85 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@92) ($generated@@0 ($generated@@119 $generated@@302 $generated@@304))) ($generated@@282 $generated@@304 $generated@@303))
 :pattern ( ($generated@@119 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@85 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (= ($generated@@81 $generated@@307) $generated@@307)
 :pattern ( ($generated@@81 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) ($generated@@97 $generated@@92)) (= (type $generated@@309) $generated@@92)) (= (type $generated@@310) $generated@@68)) (and ($generated@@85 $generated@@308 ($generated@@275 $generated@@310)) ($generated@@282 $generated@@309 $generated@@310))) ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
 :pattern ( ($generated@@85 ($generated@@90 $generated@@308 $generated@@309) ($generated@@275 $generated@@310)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@83) (= (type $generated@@313) $generated@@83)) (and ($generated@@311 $generated@@312) ($generated@@311 $generated@@313))) (= ($generated@@88 $generated@@312 $generated@@313) true))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@312))
 :pattern ( ($generated@@88 $generated@@312 $generated@@313) ($generated@@311 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) $generated@@68)) (= (type $generated@@317) $generated@@92)) (= (type $generated@@318) $generated@@92)) (= (type $generated@@319) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@319)) (= ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@112 ($generated@@281 $generated@@317 $generated@@318) ($generated@@185 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@83) (= ($generated@@184 $generated@@320) (= ($generated@@198 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@83) (= ($generated@@311 $generated@@321) (= ($generated@@198 $generated@@321) $generated@@63)))
 :pattern ( ($generated@@311 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@83) (= ($generated@@322 $generated@@323) (= ($generated@@198 $generated@@323) $generated@@65)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@98 (type $generated@@325))))
 (=> (and (= (type $generated@@325) ($generated@@97 $generated@@327)) (= (type $generated@@326) ($generated@@97 $generated@@327))) (= ($generated@@324 $generated@@325 $generated@@326)  (and (= ($generated@@171 $generated@@325) ($generated@@171 $generated@@326)) (forall (($generated@@328 Int) ) (!  (=> (and (<= 0 $generated@@328) (< $generated@@328 ($generated@@171 $generated@@325))) (= ($generated@@170 $generated@@325 $generated@@328) ($generated@@170 $generated@@326 $generated@@328)))
 :pattern ( ($generated@@170 $generated@@325 $generated@@328))
 :pattern ( ($generated@@170 $generated@@326 $generated@@328))
))))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (= (type $generated@@329) $generated@@82) (= (type $generated@@330) ($generated@@97 $generated@@92))) (or ($generated@@95 $generated@@330) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@330 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@329) $generated@@330) (ite ($generated@@324 $generated@@330 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 $generated@@329 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@329) $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@83) ($generated@@184 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@92) (= (type $generated@@333) $generated@@92)) (= $generated@@331 ($generated@@281 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@184 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@171 ($generated@@91 $generated@@334)) 0)
 :pattern ( ($generated@@91 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@83) ($generated@@311 $generated@@335)) (= $generated@@335 $generated@@94))
 :pattern ( ($generated@@311 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@83) ($generated@@322 $generated@@336)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) ($generated@@97 $generated@@92)) (= $generated@@336 ($generated@@89 $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
)))
 :pattern ( ($generated@@322 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
 (=> (= (type $generated@@338) ($generated@@97 $generated@@340)) (= ($generated@@171 ($generated@@90 $generated@@338 $generated@@339)) (+ 1 ($generated@@171 $generated@@338)))))
 :pattern ( ($generated@@90 $generated@@338 $generated@@339))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@82) (= (type $generated@@342) ($generated@@97 $generated@@92))) (or ($generated@@274 $generated@@342) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@342 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@341) $generated@@342) (ite ($generated@@324 $generated@@342 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 $generated@@341 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@341) $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@68) (= (type $generated@@345) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345) ($generated@@112 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@314 ($generated@@93 $generated@@343) $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@114 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@117 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@114 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@119 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@114 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@119 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@114 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@119 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@117 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@114 $generated@@389 $generated@@2)) (= ($generated@@201 $generated@@388) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@389) (and (<= 0 ($generated ($generated@@119 $generated@@388 $generated@@390))) (<= ($generated ($generated@@119 $generated@@388 $generated@@390)) ($generated@@346 $generated@@388))))
 :pattern ( ($generated@@119 $generated@@388 $generated@@390))
)))))
 :pattern ( ($generated@@201 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@92) ($generated@@282 $generated@@391 $generated@@86)) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@391)) $generated@@391) ($generated@@85 ($generated@@173 $generated@@83 $generated@@391) $generated@@86)))
 :pattern ( ($generated@@282 $generated@@391 $generated@@86))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 Int) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@395)) (and (=> (= $generated@@393 ($generated@@171 $generated@@392)) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) $generated@@394)) (=> (not (= $generated@@393 ($generated@@171 $generated@@392))) (= ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393) ($generated@@170 $generated@@392 $generated@@393))))))
 :pattern ( ($generated@@170 ($generated@@90 $generated@@392 $generated@@394) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@92))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@398) $generated@@83) (= (type $generated@@399) $generated@@83)) (and ($generated@@322 $generated@@398) ($generated@@322 $generated@@399))) (= ($generated@@88 $generated@@398 $generated@@399) ($generated@@324 ($generated@@396 $generated@@398) ($generated@@396 $generated@@399))))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@398))
 :pattern ( ($generated@@88 $generated@@398 $generated@@399) ($generated@@322 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@352 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@356 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@114 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@356 (type $generated@@407))))
(let (($generated@@409 ($generated@@355 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@354 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@353 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@119 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@374 (type $generated@@411))))
(let (($generated@@413 ($generated@@373 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@372 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@371 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@370 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@374 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@114 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@374 (type $generated@@418))))
(let (($generated@@420 ($generated@@373 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@372 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@371 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@119 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@82) (= (type $generated@@423) ($generated@@97 $generated@@92))) (or ($generated@@95 ($generated@@81 $generated@@423)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@423 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@274 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (= ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)) (ite ($generated@@324 $generated@@423 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) ($generated@@273 ($generated@@80 $generated@@422) ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))))) 0))))
 :weight 3
 :pattern ( ($generated@@96 ($generated@@80 $generated@@422) ($generated@@81 $generated@@423)))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@425) $generated@@68)) (= ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@424 $generated@@426)))) ($generated@@282 $generated@@426 $generated@@425))
 :pattern ( ($generated@@119 $generated@@424 $generated@@426))
))))
 :pattern ( ($generated@@85 $generated@@424 ($generated@@200 $generated@@425)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) $generated@@82) (= (type $generated@@428) ($generated@@97 $generated@@92))) (or ($generated@@274 ($generated@@81 $generated@@428)) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@428 ($generated@@275 $generated@@86))))) (and (=> ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@84 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))))) (= ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)) (ite ($generated@@324 $generated@@428 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))) ($generated@@79 ($generated@@80 $generated@@427) ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) 0))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@80 $generated@@427) ($generated@@81 $generated@@428)))
))))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@83) ($generated@@87 $generated@@429)) (or ($generated@@311 $generated@@429) ($generated@@322 $generated@@429)))
 :pattern ( ($generated@@87 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) ($generated@@97 $generated@@92)) (= ($generated@@85 ($generated@@89 $generated@@430) $generated@@86) ($generated@@85 $generated@@430 ($generated@@275 $generated@@86))))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@430) $generated@@86))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@92) ($generated@@0 ($generated@@119 $generated@@431 $generated@@434))) ($generated@@314 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@119 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@112 $generated@@431 ($generated@@295 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@114 $generated@@92 $generated@@4)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@92) ($generated@@0 ($generated@@119 $generated@@435 $generated@@438))) ($generated@@314 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@119 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@112 $generated@@435 ($generated@@300 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@119 ($generated@@347 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@119 ($generated@@347 $generated@@440) $generated@@439)))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@356 (type $generated@@444))))
(let (($generated@@446 ($generated@@355 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@114 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@448) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448)))) (= ($generated@@119 ($generated@@442 $generated@@447) ($generated@@192 ($generated@@173 $generated@@83 $generated@@448))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@448))))))
 :pattern ( ($generated@@119 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@114 $generated@@92 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@374 (type $generated@@452))))
(let (($generated@@454 ($generated@@373 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@114 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@456) $generated@@92)) (= ($generated@@0 ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456)))) (= ($generated@@119 ($generated@@450 $generated@@455) ($generated@@192 ($generated@@173 $generated@@83 $generated@@456))) ($generated@@193 ($generated@@173 $generated@@83 $generated@@456))))))
 :pattern ( ($generated@@119 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@355 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@354 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@119 ($generated@@404 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@119 ($generated@@352 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@457) $generated@@461))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@119 ($generated@@404 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@373 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@372 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@119 ($generated@@415 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@119 ($generated@@370 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@462) $generated@@466))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@119 ($generated@@415 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))) (and ($generated@@314 ($generated@@119 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@314 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@112 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))) (and ($generated@@314 ($generated@@119 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@314 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@112 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@98 (type $generated@@483))))
 (=> (and (and (= (type $generated@@483) ($generated@@97 $generated@@485)) (= (type $generated@@484) ($generated@@97 $generated@@485))) ($generated@@324 $generated@@483 $generated@@484)) (= $generated@@483 $generated@@484)))
 :pattern ( ($generated@@324 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@85 $generated@@486 $generated@@86)) (or ($generated@@311 $generated@@486) ($generated@@322 $generated@@486)))
 :pattern ( ($generated@@322 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
 :pattern ( ($generated@@311 $generated@@486) ($generated@@85 $generated@@486 $generated@@86))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@114 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@374 (type $generated@@489))))
(let (($generated@@491 ($generated@@373 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@372 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@371 $generated@@491 $generated@@490)) (= ($generated@@370 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@370 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@374 (type $generated@@492))))
(let (($generated@@494 ($generated@@373 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@372 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@371 $generated@@494 $generated@@493)) (= ($generated@@415 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@415 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@374 (type $generated@@495))))
(let (($generated@@497 ($generated@@373 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@372 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@371 $generated@@497 $generated@@496)) (= ($generated@@449 $generated@@495) ($generated@@487 $generated@@92))))))
 :pattern ( ($generated@@449 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@356 (type $generated@@498))))
(let (($generated@@500 ($generated@@355 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@354 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@353 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@92) (= (type $generated@@502) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@441 $generated@@498) ($generated@@93 ($generated@@281 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@441 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@374 (type $generated@@503))))
(let (($generated@@505 ($generated@@373 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@372 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@371 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@92) (= (type $generated@@507) $generated@@92)) ($generated@@0 ($generated@@119 ($generated@@449 $generated@@503) ($generated@@93 ($generated@@281 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@449 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@92) ($generated@@282 $generated@@508 $generated@@46)) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@508)) $generated@@508) ($generated@@85 ($generated@@173 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@282 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@92) ($generated@@282 $generated@@509 $generated@@47)) (and (= ($generated@@93 ($generated@@173 $generated@@3 $generated@@509)) $generated@@509) ($generated@@85 ($generated@@173 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@282 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@92) ($generated@@282 $generated@@510 $generated@@44)) (and (= ($generated@@93 ($generated@@173 $generated@@4 $generated@@510)) $generated@@510) ($generated@@85 ($generated@@173 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@282 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 21))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@92) ($generated@@282 $generated@@512 $generated@@45)) (and (= ($generated@@93 ($generated@@173 $generated@@511 $generated@@512)) $generated@@512) ($generated@@85 ($generated@@173 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@282 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@282 ($generated@@93 $generated@@513) $generated@@514) ($generated@@85 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@282 ($generated@@93 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@117 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@114 $generated@@516 $generated@@2)) (<= 0 ($generated@@346 $generated@@515))))
 :pattern ( ($generated@@346 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@98 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@97 $generated@@518)) (<= 0 ($generated@@171 $generated@@517))))
 :pattern ( ($generated@@171 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@97 $generated@@92)) (= (type $generated@@520) ($generated@@114 $generated@@115 $generated@@116))) ($generated@@289 $generated@@520)) (= ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520) ($generated@@112 $generated@@519 ($generated@@275 $generated@@86) $generated@@520)))
 :pattern ( ($generated@@112 ($generated@@89 $generated@@519) $generated@@86 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@467 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@467 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@76 ($generated@@467 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@475 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@475 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@475 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@475 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@76 ($generated@@475 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@92) (= (type $generated@@542) $generated@@92)) (= ($generated@@198 ($generated@@281 $generated@@541 $generated@@542)) $generated@@61))
 :pattern ( ($generated@@281 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@185 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@185 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@185 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@185 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@92) (= (type $generated@@552) $generated@@92)) (= ($generated@@192 ($generated@@281 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@281 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@92) (= (type $generated@@554) $generated@@92)) (= ($generated@@193 ($generated@@281 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@281 $generated@@553 $generated@@554))
)))
(assert  (and (forall (($generated@@557 T@U) ) (! (= (type ($generated@@555 $generated@@557)) $generated@@82)
 :pattern ( ($generated@@555 $generated@@557))
)) (= (type $generated@@556) $generated@@82)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@82) (= (type $generated@@559) ($generated@@97 $generated@@92))) (= ($generated@@273 $generated@@558 $generated@@559) ($generated@@273 $generated@@556 $generated@@559)))
 :pattern ( ($generated@@273 ($generated@@555 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@82) (= (type $generated@@561) $generated@@83)) (= ($generated@@79 $generated@@560 $generated@@561) ($generated@@79 $generated@@556 $generated@@561)))
 :pattern ( ($generated@@79 ($generated@@555 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@82) (= (type $generated@@563) ($generated@@97 $generated@@92))) (= ($generated@@96 $generated@@562 $generated@@563) ($generated@@96 $generated@@556 $generated@@563)))
 :pattern ( ($generated@@96 ($generated@@555 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@97 $generated@@92)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@171 $generated@@564))) ($generated@@314 ($generated@@170 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@170 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@112 $generated@@564 ($generated@@275 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@113 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@113 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@295 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@295 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@295 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@300 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@300 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@300 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@200 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@200 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@200 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@275 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@275 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@275 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@275 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) ($generated@@97 $generated@@92)) (= ($generated@@198 ($generated@@89 $generated@@586)) $generated@@65))
 :pattern ( ($generated@@89 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) ($generated@@97 $generated@@92)) (= ($generated@@396 ($generated@@89 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@89 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
(= ($generated@@173 $generated@@589 ($generated@@93 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@93 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) (= ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))) (and ($generated@@282 ($generated@@119 ($generated@@442 $generated@@590) $generated@@593) $generated@@592) ($generated@@282 $generated@@593 $generated@@591)))
 :pattern ( ($generated@@119 ($generated@@442 $generated@@590) $generated@@593))
 :pattern ( ($generated@@119 ($generated@@352 $generated@@590) $generated@@593))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@467 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@92) ($generated@@0 ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))) (and ($generated@@282 ($generated@@119 ($generated@@450 $generated@@594) $generated@@597) $generated@@596) ($generated@@282 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@119 ($generated@@450 $generated@@594) $generated@@597))
 :pattern ( ($generated@@119 ($generated@@370 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@475 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@92) (= (type $generated@@600) $generated@@92)) (< ($generated@@598 $generated@@599) ($generated@@172 ($generated@@281 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@281 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@92) (= (type $generated@@602) $generated@@92)) (< ($generated@@598 $generated@@602) ($generated@@172 ($generated@@281 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@281 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@82) (= (type $generated@@604) ($generated@@97 $generated@@92))) (= ($generated@@273 ($generated@@80 $generated@@603) $generated@@604) ($generated@@273 $generated@@603 $generated@@604)))
 :pattern ( ($generated@@273 ($generated@@80 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@82) (= (type $generated@@606) $generated@@83)) (= ($generated@@79 ($generated@@80 $generated@@605) $generated@@606) ($generated@@79 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@82) (= (type $generated@@608) ($generated@@97 $generated@@92))) (= ($generated@@96 ($generated@@80 $generated@@607) $generated@@608) ($generated@@96 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@96 ($generated@@80 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@92) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@68)) ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611))) (and (= ($generated@@93 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609)) $generated@@609) ($generated@@85 ($generated@@173 ($generated@@354 $generated@@92 $generated@@92) $generated@@609) ($generated@@467 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@282 $generated@@609 ($generated@@467 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@92) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@68)) ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614))) (and (= ($generated@@93 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612)) $generated@@612) ($generated@@85 ($generated@@173 ($generated@@372 $generated@@92 $generated@@92) $generated@@612) ($generated@@475 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@282 $generated@@612 ($generated@@475 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@92)) ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616))) (and (= ($generated@@93 ($generated@@173 $generated@@83 $generated@@617)) $generated@@617) ($generated@@85 ($generated@@173 $generated@@83 $generated@@617) ($generated@@185 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@282 $generated@@617 ($generated@@185 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) ($generated@@97 $generated@@92)) (< ($generated@@618 $generated@@619) ($generated@@172 ($generated@@89 $generated@@619))))
 :pattern ( ($generated@@89 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@119 ($generated@@487 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@119 ($generated@@487 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@73)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) $generated@@68)) (and (= ($generated@@76 ($generated@@185 $generated@@624 $generated@@625)) $generated@@62) (= ($generated@@622 ($generated@@185 $generated@@624 $generated@@625)) $generated@@66)))
 :pattern ( ($generated@@185 $generated@@624 $generated@@625))
)))
(assert  (and (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@98 (type $generated@@628))))
(= (type ($generated@@626 $generated@@628)) ($generated@@97 $generated@@629)))
 :pattern ( ($generated@@626 $generated@@628))
)) (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@98 (type $generated@@630))))
(= (type ($generated@@627 $generated@@630)) $generated@@631))
 :pattern ( ($generated@@627 $generated@@630))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
 (=> (= (type $generated@@632) ($generated@@97 $generated@@634)) (and (= ($generated@@626 ($generated@@90 $generated@@632 $generated@@633)) $generated@@632) (= ($generated@@627 ($generated@@90 $generated@@632 $generated@@633)) $generated@@633))))
 :pattern ( ($generated@@90 $generated@@632 $generated@@633))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@82) (= (type $generated@@636) $generated@@83)) (or ($generated@@84 $generated@@636) (and (not (= 1 $generated@@78)) ($generated@@85 $generated@@636 $generated@@86)))) (and (and ($generated@@87 $generated@@636) (=> ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@95 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))) (= ($generated@@79 ($generated@@80 $generated@@635) $generated@@636) (ite ($generated@@88 $generated@@636 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))))) ($generated@@96 $generated@@635 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))) 0))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@635) $generated@@636))
))))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@83) (= ($generated@@598 ($generated@@93 $generated@@637)) ($generated@@172 $generated@@637)))
 :pattern ( ($generated@@598 ($generated@@93 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@92) ($generated@@282 $generated@@638 ($generated@@113 0))) (and (= ($generated@@93 ($generated@@173 $generated@@2 $generated@@638)) $generated@@638) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@638) ($generated@@113 0))))
 :pattern ( ($generated@@282 $generated@@638 ($generated@@113 0)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@92) (= (type $generated@@640) $generated@@68)) ($generated@@282 $generated@@639 ($generated@@295 $generated@@640))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639)) $generated@@639) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@639) ($generated@@295 $generated@@640))))
 :pattern ( ($generated@@282 $generated@@639 ($generated@@295 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@92) (= (type $generated@@642) $generated@@68)) ($generated@@282 $generated@@641 ($generated@@300 $generated@@642))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641)) $generated@@641) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@4) $generated@@641) ($generated@@300 $generated@@642))))
 :pattern ( ($generated@@282 $generated@@641 ($generated@@300 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@92) (= (type $generated@@644) $generated@@68)) ($generated@@282 $generated@@643 ($generated@@200 $generated@@644))) (and (= ($generated@@93 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643)) $generated@@643) ($generated@@85 ($generated@@173 ($generated@@114 $generated@@92 $generated@@2) $generated@@643) ($generated@@200 $generated@@644))))
 :pattern ( ($generated@@282 $generated@@643 ($generated@@200 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@92) (= (type $generated@@646) $generated@@68)) ($generated@@282 $generated@@645 ($generated@@275 $generated@@646))) (and (= ($generated@@93 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645)) $generated@@645) ($generated@@85 ($generated@@173 ($generated@@97 $generated@@92) $generated@@645) ($generated@@275 $generated@@646))))
 :pattern ( ($generated@@282 $generated@@645 ($generated@@275 $generated@@646)))
)))
(assert (= ($generated@@76 $generated@@86) $generated@@64))
(assert (= ($generated@@622 $generated@@86) $generated@@67))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@114 $generated@@92 $generated@@2)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) ($generated@@114 $generated@@115 $generated@@116))) (= ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649) (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@92) (< 0 ($generated ($generated@@119 $generated@@647 $generated@@650)))) ($generated@@314 $generated@@650 $generated@@648 $generated@@649))
 :pattern ( ($generated@@119 $generated@@647 $generated@@650))
))))
 :pattern ( ($generated@@112 $generated@@647 ($generated@@200 $generated@@648) $generated@@649))
)))
(assert (= $generated@@94 ($generated@@81 $generated@@94)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@83) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@653) (and ($generated@@184 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@68) ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@112 $generated@@651 ($generated@@185 $generated@@652 $generated@@654) $generated@@653))
))))) ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@314 ($generated@@192 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@83) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@657) (and ($generated@@184 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@68) ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
 :pattern ( ($generated@@112 $generated@@655 ($generated@@185 $generated@@658 $generated@@656) $generated@@657))
))))) ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@314 ($generated@@193 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@92) (= (type $generated@@660) $generated@@92)) (= ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)) ($generated@@81 ($generated@@281 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@281 ($generated@@81 $generated@@659) ($generated@@81 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))) ($generated@@81 ($generated@@93 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@93 ($generated@@8 ($generated@@305 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@97 $generated@@92)) (= ($generated@@89 ($generated@@81 $generated@@662)) ($generated@@81 ($generated@@89 $generated@@662))))
 :pattern ( ($generated@@89 ($generated@@81 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@93 ($generated@@81 $generated@@663)) ($generated@@81 ($generated@@93 $generated@@663)))
 :pattern ( ($generated@@93 ($generated@@81 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@98 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@97 $generated@@665)) (= ($generated@@171 $generated@@664) 0)) (= $generated@@664 ($generated@@91 $generated@@665))))
 :pattern ( ($generated@@171 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@114 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@346 $generated@@666) ($generated ($generated@@119 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@346 ($generated@@120 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@83) (= (type $generated@@671) ($generated@@114 $generated@@115 $generated@@116))) (and ($generated@@289 $generated@@671) (and ($generated@@322 $generated@@670) ($generated@@112 $generated@@670 $generated@@86 $generated@@671)))) ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
 :pattern ( ($generated@@112 ($generated@@396 $generated@@670) ($generated@@275 $generated@@86) $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@673) $generated@@2)) ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
 :pattern ( ($generated@@112 $generated@@673 $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@675) $generated@@3)) ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
 :pattern ( ($generated@@112 $generated@@675 $generated@@47 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@677) $generated@@4)) ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
 :pattern ( ($generated@@112 $generated@@677 $generated@@44 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@679) $generated@@511)) ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
 :pattern ( ($generated@@112 $generated@@679 $generated@@45 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@114 $generated@@115 $generated@@116)) (= (type $generated@@681) $generated@@92)) ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
 :pattern ( ($generated@@112 $generated@@681 $generated@@48 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@97 $generated@@92)) (= (type $generated@@683) $generated@@68)) (= ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@171 $generated@@682))) ($generated@@282 ($generated@@170 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@170 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@85 $generated@@682 ($generated@@275 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@97 $generated@@92)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@171 $generated@@685))) (< ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))) ($generated@@618 $generated@@685))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@83 ($generated@@170 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@354 $generated@@92 $generated@@92)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@68)) ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689))) (and (and ($generated@@85 ($generated@@352 $generated@@687) ($generated@@295 $generated@@688)) ($generated@@85 ($generated@@404 $generated@@687) ($generated@@295 $generated@@689))) ($generated@@85 ($generated@@441 $generated@@687) ($generated@@295 ($generated@@185 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@85 $generated@@687 ($generated@@467 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@372 $generated@@92 $generated@@92)) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) $generated@@68)) ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692))) (and (and ($generated@@85 ($generated@@370 $generated@@690) ($generated@@300 $generated@@691)) ($generated@@85 ($generated@@415 $generated@@690) ($generated@@300 $generated@@692))) ($generated@@85 ($generated@@449 $generated@@690) ($generated@@300 ($generated@@185 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@85 $generated@@690 ($generated@@475 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@85 $generated@@693 $generated@@46))
 :pattern ( ($generated@@85 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@85 $generated@@694 $generated@@47))
 :pattern ( ($generated@@85 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@85 $generated@@695 $generated@@44))
 :pattern ( ($generated@@85 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@511) ($generated@@85 $generated@@696 $generated@@45))
 :pattern ( ($generated@@85 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@92) ($generated@@85 $generated@@697 $generated@@48))
 :pattern ( ($generated@@85 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@698) ($generated@@97 $generated@@92)) (= (type $generated@@699) ($generated@@97 $generated@@92))) (= (type $generated@@700) ($generated@@114 $generated@@115 $generated@@116))) (= (type $generated@@701) ($generated@@207 $generated@@115 $generated@@4))) (= (type $generated@@702) $generated@@115)) (= (type $generated@@703) ($generated@@207 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@705 true))
(let (($generated@@706  (=> (and (and ($generated@@324 $generated@@698 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94)))) (= $generated@@699 ($generated@@81 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 ($generated@@89 ($generated@@81 ($generated@@90 ($generated@@90 ($generated@@91 $generated@@92) ($generated@@93 ($generated@@81 $generated@@94))) ($generated@@93 ($generated@@81 $generated@@94))))))))))) (and ($generated@@112 $generated@@699 ($generated@@275 $generated@@86) $generated@@700) (= (ControlFlow 0 3) (- 0 2)))) (< ($generated@@618 $generated@@699) ($generated@@618 $generated@@698)))))
(let (($generated@@707  (=> (= $generated@@701 ($generated@@261 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@706) (=> (= (ControlFlow 0 5) 4) $generated@@705)))))
(let (($generated@@708 true))
(let (($generated@@709  (=> (= $generated@@703 ($generated@@206 $generated@@702 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@708) (=> (= (ControlFlow 0 6) 5) $generated@@707)))))
(let (($generated@@710  (=> (and (and (and ($generated@@289 $generated@@700) ($generated@@704 $generated@@700)) ($generated@@85 $generated@@698 ($generated@@275 $generated@@86))) (and (= 1 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@709)))
$generated@@710)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
