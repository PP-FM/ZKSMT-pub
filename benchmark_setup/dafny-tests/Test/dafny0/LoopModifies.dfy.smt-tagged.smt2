(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@172)) (= (type $generated@@266) $generated@@172)) (= (type $generated@@267) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@267)) (= ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@71)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@163) (= ($generated@@161 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@161 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@172) (= (type $generated@@273) $generated@@172)) (= $generated@@271 ($generated@@238 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@161 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) $generated@@80)) (= ($generated@@139 $generated@@283 ($generated@@156 $generated@@282))  (and ($generated@@139 $generated@@283 ($generated@@136 $generated@@282)) (not (= $generated@@283 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@283 ($generated@@156 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@172)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@77 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@172)) (= (type $generated@@292) $generated@@67)) ($generated@@144 $generated@@289 $generated@@290)) ($generated@@262 $generated@@291 $generated@@292 $generated@@289)) ($generated@@262 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@144 $generated@@289 $generated@@290) ($generated@@262 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@296) $generated@@67)) ($generated@@144 $generated@@293 $generated@@294)) ($generated@@77 $generated@@295 $generated@@296 $generated@@293)) ($generated@@77 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@144 $generated@@293 $generated@@294) ($generated@@77 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@79 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@82 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@79 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@84 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@136 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@306)) $generated@@62) (= ($generated@@303 ($generated@@156 $generated@@306)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@178 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@297 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@178 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@80)) (= ($generated@@139 $generated@@347 ($generated@@136 $generated@@346))  (or (= $generated@@347 $generated@@137) (= ($generated@@138 $generated@@347) ($generated@@136 $generated@@346)))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@136 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@329 (type $generated@@359))))
(let (($generated@@361 ($generated@@328 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@327 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@326 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@325 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@79 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@371) $generated@@67)) (= ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@370 $generated@@372)))) ($generated@@239 $generated@@372 $generated@@371))
 :pattern ( ($generated@@84 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) ($generated@@0 ($generated@@84 $generated@@373 $generated@@376))) ($generated@@262 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@84 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@262 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@84 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@84 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@79 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@393) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393)))) (= ($generated@@84 ($generated@@385 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@393))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@401) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401)))) (= ($generated@@84 ($generated@@395 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@401))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@262 ($generated@@84 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@262 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@262 ($generated@@84 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@262 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@428 $generated@@430))) (and ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))) ($generated@@144 $generated@@428 $generated@@430))
 :pattern ( ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@79 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@329 (type $generated@@433))))
(let (($generated@@435 ($generated@@328 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@327 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@326 $generated@@435 $generated@@434)) (= ($generated@@325 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@325 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@329 (type $generated@@436))))
(let (($generated@@438 ($generated@@328 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@327 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@326 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@329 (type $generated@@439))))
(let (($generated@@441 ($generated@@328 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@327 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@326 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@172))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(let (($generated@@444 ($generated@@310 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@309 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@308 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@172) (= (type $generated@@446) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@442) ($generated@@284 ($generated@@238 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@329 (type $generated@@447))))
(let (($generated@@449 ($generated@@328 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@327 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@326 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@172) (= (type $generated@@451) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@238 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@172) ($generated@@239 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@139 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@172) ($generated@@239 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@139 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@67) (= ($generated@@239 ($generated@@284 $generated@@457) $generated@@458) ($generated@@139 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@239 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@80) (<= 0 ($generated@@135 $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@82 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@79 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@277 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@276 $generated@@463)) (<= 0 ($generated@@275 $generated@@462))))
 :pattern ( ($generated@@275 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@75 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@172) (= (type $generated@@485) $generated@@172)) (= ($generated@@268 ($generated@@238 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@162 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@162 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@162 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@162 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) (= (type $generated@@495) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@277 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@276 $generated@@172)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@275 $generated@@504))) ($generated@@262 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@78 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@78 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@248 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@248 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@253 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@253 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@177 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@177 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@136 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@136 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@156 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@156 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@384 $generated@@533 ($generated@@284 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@284 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@239 ($generated@@84 ($generated@@385 $generated@@534) $generated@@537) $generated@@536) ($generated@@239 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@534) $generated@@537))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@239 ($generated@@84 ($generated@@395 $generated@@538) $generated@@541) $generated@@540) ($generated@@239 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@172) (= (type $generated@@545) $generated@@172)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@238 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@284 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548)) $generated@@548) ($generated@@139 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@172) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@172)) ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555))) (and (= ($generated@@284 ($generated@@384 $generated@@163 $generated@@556)) $generated@@556) ($generated@@139 ($generated@@384 $generated@@163 $generated@@556) ($generated@@162 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@84 ($generated@@431 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@84 ($generated@@431 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@303 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@542 ($generated@@284 $generated@@561)) ($generated@@543 $generated@@561)))
 :pattern ( ($generated@@542 ($generated@@284 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@239 $generated@@562 ($generated@@78 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@239 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@253 $generated@@566))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@253 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@253 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@498 $generated@@570))) (and (= ($generated@@284 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569) ($generated@@498 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@498 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@239 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@384 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@239 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@384 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@262 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)) ($generated@@258 ($generated@@238 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@589)) ($generated@@258 ($generated@@284 $generated@@589)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@277 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@276 $generated@@591)) (= ($generated@@275 $generated@@590) 0)) (= $generated@@590 ($generated@@274 $generated@@591))))
 :pattern ( ($generated@@275 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@297 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@455)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@276 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@275 $generated@@606))) ($generated@@239 ($generated@@499 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@499 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@276 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@275 $generated@@610))) (< ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@307 $generated@@612) ($generated@@248 $generated@@613)) ($generated@@139 ($generated@@352 $generated@@612) ($generated@@248 $generated@@614))) ($generated@@139 ($generated@@383 $generated@@612) ($generated@@248 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@325 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@139 ($generated@@363 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@139 ($generated@@394 $generated@@615) ($generated@@253 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@455) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@183 $generated@@137 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@265 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)) ($generated@@261 ($generated@@239 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@611)) ($generated@@261 ($generated@@287 $generated@@611)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@280 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@279 $generated@@613)) (= ($generated@@278 $generated@@612) 0)) (= $generated@@612 ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@278 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@300 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@464)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@279 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@278 $generated@@628))) ($generated@@240 ($generated@@508 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@508 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@278 $generated@@632))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@310 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@140 ($generated@@355 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@140 ($generated@@386 $generated@@634) ($generated@@249 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@328 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@140 ($generated@@366 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@140 ($generated@@397 $generated@@637) ($generated@@254 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@464) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () Int)
(assert  (and (and (= (type $generated@@645) ($generated@@185 $generated@@81 $generated@@4)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@650  (=> (= $generated@@645 ($generated@@184 $generated@@138 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@647))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 0))))))))))))
(let (($generated@@651  (=> (and ($generated@@152 $generated@@646) ($generated@@648 $generated@@646)) (=> (and (and (and ($generated@@140 $generated@@647 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@647 ($generated@@157 $generated@@46) $generated@@646)) (= 1 $generated@@649)) (and (> ($generated@@136 $generated@@647) 0) (= (ControlFlow 0 5) 2))) $generated@@650))))
$generated@@651)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@172)) (= (type $generated@@266) $generated@@172)) (= (type $generated@@267) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@267)) (= ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@71)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@163) (= ($generated@@161 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@161 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@172) (= (type $generated@@273) $generated@@172)) (= $generated@@271 ($generated@@238 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@161 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) $generated@@80)) (= ($generated@@139 $generated@@283 ($generated@@156 $generated@@282))  (and ($generated@@139 $generated@@283 ($generated@@136 $generated@@282)) (not (= $generated@@283 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@283 ($generated@@156 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@172)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@77 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@172)) (= (type $generated@@292) $generated@@67)) ($generated@@144 $generated@@289 $generated@@290)) ($generated@@262 $generated@@291 $generated@@292 $generated@@289)) ($generated@@262 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@144 $generated@@289 $generated@@290) ($generated@@262 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@296) $generated@@67)) ($generated@@144 $generated@@293 $generated@@294)) ($generated@@77 $generated@@295 $generated@@296 $generated@@293)) ($generated@@77 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@144 $generated@@293 $generated@@294) ($generated@@77 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@79 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@82 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@79 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@84 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@136 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@306)) $generated@@62) (= ($generated@@303 ($generated@@156 $generated@@306)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@178 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@297 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@178 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@80)) (= ($generated@@139 $generated@@347 ($generated@@136 $generated@@346))  (or (= $generated@@347 $generated@@137) (= ($generated@@138 $generated@@347) ($generated@@136 $generated@@346)))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@136 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@329 (type $generated@@359))))
(let (($generated@@361 ($generated@@328 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@327 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@326 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@325 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@79 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@371) $generated@@67)) (= ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@370 $generated@@372)))) ($generated@@239 $generated@@372 $generated@@371))
 :pattern ( ($generated@@84 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) ($generated@@0 ($generated@@84 $generated@@373 $generated@@376))) ($generated@@262 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@84 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@262 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@84 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@84 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@79 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@393) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393)))) (= ($generated@@84 ($generated@@385 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@393))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@401) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401)))) (= ($generated@@84 ($generated@@395 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@401))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@262 ($generated@@84 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@262 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@262 ($generated@@84 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@262 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@428 $generated@@430))) (and ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))) ($generated@@144 $generated@@428 $generated@@430))
 :pattern ( ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@79 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@329 (type $generated@@433))))
(let (($generated@@435 ($generated@@328 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@327 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@326 $generated@@435 $generated@@434)) (= ($generated@@325 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@325 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@329 (type $generated@@436))))
(let (($generated@@438 ($generated@@328 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@327 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@326 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@329 (type $generated@@439))))
(let (($generated@@441 ($generated@@328 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@327 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@326 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@172))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(let (($generated@@444 ($generated@@310 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@309 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@308 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@172) (= (type $generated@@446) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@442) ($generated@@284 ($generated@@238 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@329 (type $generated@@447))))
(let (($generated@@449 ($generated@@328 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@327 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@326 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@172) (= (type $generated@@451) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@238 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@172) ($generated@@239 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@139 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@172) ($generated@@239 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@139 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@67) (= ($generated@@239 ($generated@@284 $generated@@457) $generated@@458) ($generated@@139 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@239 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@80) (<= 0 ($generated@@135 $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@82 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@79 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@277 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@276 $generated@@463)) (<= 0 ($generated@@275 $generated@@462))))
 :pattern ( ($generated@@275 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@75 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@172) (= (type $generated@@485) $generated@@172)) (= ($generated@@268 ($generated@@238 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@162 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@162 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@162 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@162 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) (= (type $generated@@495) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@277 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@276 $generated@@172)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@275 $generated@@504))) ($generated@@262 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@78 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@78 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@248 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@248 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@253 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@253 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@177 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@177 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@136 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@136 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@156 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@156 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@384 $generated@@533 ($generated@@284 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@284 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@239 ($generated@@84 ($generated@@385 $generated@@534) $generated@@537) $generated@@536) ($generated@@239 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@534) $generated@@537))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@239 ($generated@@84 ($generated@@395 $generated@@538) $generated@@541) $generated@@540) ($generated@@239 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@172) (= (type $generated@@545) $generated@@172)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@238 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@284 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548)) $generated@@548) ($generated@@139 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@172) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@172)) ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555))) (and (= ($generated@@284 ($generated@@384 $generated@@163 $generated@@556)) $generated@@556) ($generated@@139 ($generated@@384 $generated@@163 $generated@@556) ($generated@@162 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@84 ($generated@@431 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@84 ($generated@@431 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@303 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@542 ($generated@@284 $generated@@561)) ($generated@@543 $generated@@561)))
 :pattern ( ($generated@@542 ($generated@@284 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@239 $generated@@562 ($generated@@78 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@239 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@253 $generated@@566))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@253 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@253 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@498 $generated@@570))) (and (= ($generated@@284 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569) ($generated@@498 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@498 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@239 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@384 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@239 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@384 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@262 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)) ($generated@@258 ($generated@@238 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@589)) ($generated@@258 ($generated@@284 $generated@@589)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@277 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@276 $generated@@591)) (= ($generated@@275 $generated@@590) 0)) (= $generated@@590 ($generated@@274 $generated@@591))))
 :pattern ( ($generated@@275 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@297 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@455)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@276 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@275 $generated@@606))) ($generated@@239 ($generated@@499 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@499 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@276 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@275 $generated@@610))) (< ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@307 $generated@@612) ($generated@@248 $generated@@613)) ($generated@@139 ($generated@@352 $generated@@612) ($generated@@248 $generated@@614))) ($generated@@139 ($generated@@383 $generated@@612) ($generated@@248 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@325 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@139 ($generated@@363 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@139 ($generated@@394 $generated@@615) ($generated@@253 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@455) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@183 $generated@@137 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@265 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)) ($generated@@261 ($generated@@239 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@611)) ($generated@@261 ($generated@@287 $generated@@611)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@280 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@279 $generated@@613)) (= ($generated@@278 $generated@@612) 0)) (= $generated@@612 ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@278 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@300 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@464)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@279 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@278 $generated@@628))) ($generated@@240 ($generated@@508 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@508 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@278 $generated@@632))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@310 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@140 ($generated@@355 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@140 ($generated@@386 $generated@@634) ($generated@@249 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@328 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@140 ($generated@@366 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@140 ($generated@@397 $generated@@637) ($generated@@254 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@464) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Bool)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@658 true))
(let (($generated@@659  (=> (and (< $generated@@645 ($generated@@259 0)) (= (ControlFlow 0 14) 12)) $generated@@658)))
(let (($generated@@660  (=> (and (<= ($generated@@259 0) $generated@@645) (= (ControlFlow 0 13) 12)) $generated@@658)))
(let (($generated@@661  (=> (not $generated@@646) (and (=> (= (ControlFlow 0 15) 13) $generated@@660) (=> (= (ControlFlow 0 15) 14) $generated@@659)))))
(let (($generated@@662  (=> (and (< $generated@@645 10) (= $generated@@647 (- 10 $generated@@645))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@648)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@648))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@183 $generated@@649 $generated@@648 ($generated@@434 ($generated@@259 0))))) (=> ($generated@@0 ($generated@@183 $generated@@649 $generated@@648 ($generated@@434 ($generated@@259 0)))) (=> (= $generated@@650 ($generated@@86 $generated@@651 $generated@@648 ($generated@@88 ($generated@@85 $generated@@651 $generated@@648) ($generated@@434 ($generated@@259 0)) ($generated@@287 ($generated@@8 $generated@@645))))) (=> (and ($generated@@152 $generated@@650) (= $generated@@652 (+ $generated@@645 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@647) (= (- 10 $generated@@652) $generated@@647))) (=> (or (<= 0 $generated@@647) (= (- 10 $generated@@652) $generated@@647)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@652) $generated@@647)) (=> (< (- 10 $generated@@652) $generated@@647) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@646 (<= ($generated@@259 0) $generated@@652))) (=> (=> $generated@@646 (<= ($generated@@259 0) $generated@@652)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@646 (<= $generated@@652 ($generated@@259 10)))))))))))))))))))))
(let (($generated@@663 true))
(let (($generated@@664  (=> $generated@@646 (and (=> (= (ControlFlow 0 11) 2) $generated@@663) (=> (= (ControlFlow 0 11) 4) $generated@@662)))))
(let (($generated@@665  (and (=> (= (ControlFlow 0 16) 15) $generated@@661) (=> (= (ControlFlow 0 16) 11) $generated@@664))))
(let (($generated@@666 true))
(let (($generated@@667  (=> (and ($generated@@152 $generated@@651) ($generated@@653 $generated@@651)) (=> (and (and (not false) (and (<= 0 $generated@@645) (< $generated@@645 11))) (= $generated@@654 10)) (=> (and (and (and (=> $generated@@646 true) (=> $generated@@646 (<= ($generated@@259 0) $generated@@645))) (and (=> $generated@@646 (<= $generated@@645 ($generated@@259 10))) (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@81) (=> (and (not (= $generated@@668 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@668) $generated@@60))) (= ($generated@@85 $generated@@651 $generated@@668) ($generated@@85 $generated@@655 $generated@@668))))
 :pattern ( ($generated@@85 $generated@@651 $generated@@668))
)))) (and (and ($generated@@145 $generated@@655 $generated@@651) (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (! (let (($generated@@671 ($generated@@70 (type $generated@@670))))
 (=> (and (and (= (type $generated@@669) $generated@@81) (= (type $generated@@670) ($generated@@69 $generated@@671))) (and (not (= $generated@@669 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@669) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@651 $generated@@669) $generated@@670) ($generated@@87 ($generated@@85 $generated@@655 $generated@@669) $generated@@670)) ($generated@@0 ($generated@@183 $generated@@649 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@651 $generated@@669) $generated@@670))
))) (and (<= (- 10 $generated@@645) $generated@@654) (=> (= (- 10 $generated@@645) $generated@@654) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@666) (=> (= (ControlFlow 0 17) 16) $generated@@665)))))))
(let (($generated@@672  (=> (= $generated@@649 ($generated@@184 $generated@@138 $generated@@655 $generated@@60 false)) (=> (and (= $generated@@656 ($generated@@259 0)) (= $generated@@654 (- 10 $generated@@656))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@646 (<= ($generated@@259 0) $generated@@656))) (=> (=> $generated@@646 (<= ($generated@@259 0) $generated@@656)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@646 (<= $generated@@656 ($generated@@259 10)))) (=> (=> $generated@@646 (<= $generated@@656 ($generated@@259 10))) (=> (= (ControlFlow 0 18) 17) $generated@@667)))))))))
(let (($generated@@673  (=> (and ($generated@@152 $generated@@655) ($generated@@653 $generated@@655)) (=> (and (and (and ($generated@@140 $generated@@648 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@648 ($generated@@157 $generated@@46) $generated@@655)) (= 1 $generated@@657)) (and (> ($generated@@136 $generated@@648) 0) (= (ControlFlow 0 21) 18))) $generated@@672))))
$generated@@673)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492)) $generated@@492) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492) ($generated@@356 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495)) $generated@@495) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495) ($generated@@364 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@172)) ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@500)) $generated@@500) ($generated@@139 ($generated@@328 $generated@@163 $generated@@500) ($generated@@162 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@375 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@561)) ($generated@@487 $generated@@561)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@183 $generated@@562 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@183 $generated@@563 ($generated@@192 $generated@@564))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@192 $generated@@564))))
 :pattern ( ($generated@@183 $generated@@563 ($generated@@192 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@197 $generated@@566))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@197 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@197 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@442 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569) ($generated@@442 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@442 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@183 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@328 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@183 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@328 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@206 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)) ($generated@@202 ($generated@@182 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@589)) ($generated@@202 ($generated@@228 $generated@@589)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@221 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@220 $generated@@591)) (= ($generated@@219 $generated@@590) 0)) (= $generated@@590 ($generated@@218 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@241 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@399)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@220 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@219 $generated@@606))) ($generated@@183 ($generated@@443 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@443 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@219 $generated@@610))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@251 $generated@@612) ($generated@@192 $generated@@613)) ($generated@@139 ($generated@@296 $generated@@612) ($generated@@192 $generated@@614))) ($generated@@139 ($generated@@327 $generated@@612) ($generated@@192 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@269 $generated@@615) ($generated@@197 $generated@@616)) ($generated@@139 ($generated@@307 $generated@@615) ($generated@@197 $generated@@617))) ($generated@@139 ($generated@@338 $generated@@615) ($generated@@197 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@399) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@505 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@504 $generated@@137 $generated@@624 $generated@@60 $generated@@625)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@577)) ($generated@@503 $generated@@577)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@184 $generated@@578 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@184 $generated@@579 ($generated@@193 $generated@@580))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@193 $generated@@580))))
 :pattern ( ($generated@@184 $generated@@579 ($generated@@193 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@184 $generated@@581 ($generated@@198 $generated@@582))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@198 $generated@@582))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@198 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@451 $generated@@586))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585) ($generated@@451 $generated@@586))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@451 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@184 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@331 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@209 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)) ($generated@@205 ($generated@@183 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@611)) ($generated@@205 ($generated@@231 $generated@@611)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@224 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@223 $generated@@613)) (= ($generated@@222 $generated@@612) 0)) (= $generated@@612 ($generated@@221 $generated@@613))))
 :pattern ( ($generated@@222 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@244 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@408)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@223 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@222 $generated@@628))) ($generated@@184 ($generated@@452 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@452 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@222 $generated@@632))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@254 $generated@@634) ($generated@@193 $generated@@635)) ($generated@@140 ($generated@@299 $generated@@634) ($generated@@193 $generated@@636))) ($generated@@140 ($generated@@330 $generated@@634) ($generated@@193 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@272 $generated@@637) ($generated@@198 $generated@@638)) ($generated@@140 ($generated@@310 $generated@@637) ($generated@@198 $generated@@639))) ($generated@@140 ($generated@@341 $generated@@637) ($generated@@198 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@408) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Bool)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@658 true))
(let (($generated@@659  (=> (and (< $generated@@645 ($generated@@203 0)) (= (ControlFlow 0 14) 12)) $generated@@658)))
(let (($generated@@660  (=> (and (<= ($generated@@203 0) $generated@@645) (= (ControlFlow 0 13) 12)) $generated@@658)))
(let (($generated@@661  (=> (not $generated@@646) (and (=> (= (ControlFlow 0 15) 13) $generated@@660) (=> (= (ControlFlow 0 15) 14) $generated@@659)))))
(let (($generated@@662  (=> (and (< $generated@@645 10) (= $generated@@647 (- 10 $generated@@645))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0)))) (=> (= $generated@@650 ($generated@@86 $generated@@651 $generated@@648 ($generated@@88 ($generated@@85 $generated@@651 $generated@@648) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@645))))) (=> (and ($generated@@152 $generated@@650) (= $generated@@652 (+ $generated@@645 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@647) (= (- 10 $generated@@652) $generated@@647))) (=> (or (<= 0 $generated@@647) (= (- 10 $generated@@652) $generated@@647)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@652) $generated@@647)) (=> (< (- 10 $generated@@652) $generated@@647) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@646 (<= ($generated@@203 0) $generated@@652))) (=> (=> $generated@@646 (<= ($generated@@203 0) $generated@@652)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@646 (<= $generated@@652 ($generated@@203 10)))))))))))))))))))))
(let (($generated@@663 true))
(let (($generated@@664  (=> $generated@@646 (and (=> (= (ControlFlow 0 11) 2) $generated@@663) (=> (= (ControlFlow 0 11) 4) $generated@@662)))))
(let (($generated@@665  (and (=> (= (ControlFlow 0 16) 15) $generated@@661) (=> (= (ControlFlow 0 16) 11) $generated@@664))))
(let (($generated@@666 true))
(let (($generated@@667  (=> (and ($generated@@152 $generated@@651) ($generated@@653 $generated@@651)) (=> (and (and (not false) (and (<= 0 $generated@@645) (< $generated@@645 11))) (= $generated@@654 10)) (=> (and (and (and (=> $generated@@646 true) (=> $generated@@646 (<= ($generated@@203 0) $generated@@645))) (and (=> $generated@@646 (<= $generated@@645 ($generated@@203 10))) (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@81) (=> (and (not (= $generated@@668 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@668) $generated@@60))) (or (= ($generated@@85 $generated@@651 $generated@@668) ($generated@@85 $generated@@655 $generated@@668)) (= $generated@@668 $generated@@648))))
 :pattern ( ($generated@@85 $generated@@651 $generated@@668))
)))) (and (and ($generated@@145 $generated@@655 $generated@@651) (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (! (let (($generated@@671 ($generated@@70 (type $generated@@670))))
 (=> (and (and (= (type $generated@@669) $generated@@81) (= (type $generated@@670) ($generated@@69 $generated@@671))) (and (not (= $generated@@669 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@669) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@651 $generated@@669) $generated@@670) ($generated@@87 ($generated@@85 $generated@@655 $generated@@669) $generated@@670)) ($generated@@0 ($generated@@519 $generated@@649 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@651 $generated@@669) $generated@@670))
))) (and (<= (- 10 $generated@@645) $generated@@654) (=> (= (- 10 $generated@@645) $generated@@654) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@666) (=> (= (ControlFlow 0 17) 16) $generated@@665)))))))
(let (($generated@@672  (=> (= $generated@@649 ($generated@@520 $generated@@138 $generated@@655 $generated@@60 $generated@@648)) (=> (and (= $generated@@656 ($generated@@203 0)) (= $generated@@654 (- 10 $generated@@656))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@646 (<= ($generated@@203 0) $generated@@656))) (=> (=> $generated@@646 (<= ($generated@@203 0) $generated@@656)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@646 (<= $generated@@656 ($generated@@203 10)))) (=> (=> $generated@@646 (<= $generated@@656 ($generated@@203 10))) (=> (= (ControlFlow 0 18) 17) $generated@@667)))))))))
(let (($generated@@673  (=> (and ($generated@@152 $generated@@655) ($generated@@653 $generated@@655)) (=> (and (and (and ($generated@@140 $generated@@648 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@648 ($generated@@157 $generated@@46) $generated@@655)) (= 1 $generated@@657)) (and (> ($generated@@136 $generated@@648) 0) (= (ControlFlow 0 21) 18))) $generated@@672))))
$generated@@673)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@172)) (= (type $generated@@266) $generated@@172)) (= (type $generated@@267) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@267)) (= ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@71)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@163) (= ($generated@@161 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@161 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@172) (= (type $generated@@273) $generated@@172)) (= $generated@@271 ($generated@@238 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@161 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) $generated@@80)) (= ($generated@@139 $generated@@283 ($generated@@156 $generated@@282))  (and ($generated@@139 $generated@@283 ($generated@@136 $generated@@282)) (not (= $generated@@283 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@283 ($generated@@156 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@172)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@77 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@172)) (= (type $generated@@292) $generated@@67)) ($generated@@144 $generated@@289 $generated@@290)) ($generated@@262 $generated@@291 $generated@@292 $generated@@289)) ($generated@@262 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@144 $generated@@289 $generated@@290) ($generated@@262 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@296) $generated@@67)) ($generated@@144 $generated@@293 $generated@@294)) ($generated@@77 $generated@@295 $generated@@296 $generated@@293)) ($generated@@77 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@144 $generated@@293 $generated@@294) ($generated@@77 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@79 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@82 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@79 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@84 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@136 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@306)) $generated@@62) (= ($generated@@303 ($generated@@156 $generated@@306)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@178 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@297 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@178 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@80)) (= ($generated@@139 $generated@@347 ($generated@@136 $generated@@346))  (or (= $generated@@347 $generated@@137) (= ($generated@@138 $generated@@347) ($generated@@136 $generated@@346)))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@136 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@329 (type $generated@@359))))
(let (($generated@@361 ($generated@@328 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@327 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@326 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@325 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@79 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@371) $generated@@67)) (= ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@370 $generated@@372)))) ($generated@@239 $generated@@372 $generated@@371))
 :pattern ( ($generated@@84 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) ($generated@@0 ($generated@@84 $generated@@373 $generated@@376))) ($generated@@262 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@84 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@262 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@84 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@84 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@79 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@393) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393)))) (= ($generated@@84 ($generated@@385 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@393))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@401) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401)))) (= ($generated@@84 ($generated@@395 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@401))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@262 ($generated@@84 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@262 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@262 ($generated@@84 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@262 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@428 $generated@@430))) (and ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))) ($generated@@144 $generated@@428 $generated@@430))
 :pattern ( ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@79 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@329 (type $generated@@433))))
(let (($generated@@435 ($generated@@328 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@327 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@326 $generated@@435 $generated@@434)) (= ($generated@@325 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@325 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@329 (type $generated@@436))))
(let (($generated@@438 ($generated@@328 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@327 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@326 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@329 (type $generated@@439))))
(let (($generated@@441 ($generated@@328 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@327 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@326 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@172))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(let (($generated@@444 ($generated@@310 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@309 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@308 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@172) (= (type $generated@@446) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@442) ($generated@@284 ($generated@@238 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@329 (type $generated@@447))))
(let (($generated@@449 ($generated@@328 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@327 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@326 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@172) (= (type $generated@@451) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@238 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@172) ($generated@@239 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@139 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@172) ($generated@@239 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@139 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@67) (= ($generated@@239 ($generated@@284 $generated@@457) $generated@@458) ($generated@@139 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@239 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@80) (<= 0 ($generated@@135 $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@82 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@79 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@277 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@276 $generated@@463)) (<= 0 ($generated@@275 $generated@@462))))
 :pattern ( ($generated@@275 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@75 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@172) (= (type $generated@@485) $generated@@172)) (= ($generated@@268 ($generated@@238 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@162 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@162 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@162 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@162 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) (= (type $generated@@495) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@277 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@276 $generated@@172)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@275 $generated@@504))) ($generated@@262 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@78 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@78 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@248 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@248 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@253 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@253 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@177 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@177 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@136 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@136 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@156 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@156 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@384 $generated@@533 ($generated@@284 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@284 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@239 ($generated@@84 ($generated@@385 $generated@@534) $generated@@537) $generated@@536) ($generated@@239 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@534) $generated@@537))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@239 ($generated@@84 ($generated@@395 $generated@@538) $generated@@541) $generated@@540) ($generated@@239 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@172) (= (type $generated@@545) $generated@@172)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@238 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@284 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548)) $generated@@548) ($generated@@139 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@172) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@172)) ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555))) (and (= ($generated@@284 ($generated@@384 $generated@@163 $generated@@556)) $generated@@556) ($generated@@139 ($generated@@384 $generated@@163 $generated@@556) ($generated@@162 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@84 ($generated@@431 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@84 ($generated@@431 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@303 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@542 ($generated@@284 $generated@@561)) ($generated@@543 $generated@@561)))
 :pattern ( ($generated@@542 ($generated@@284 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@239 $generated@@562 ($generated@@78 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@239 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@253 $generated@@566))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@253 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@253 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@498 $generated@@570))) (and (= ($generated@@284 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569) ($generated@@498 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@498 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@239 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@384 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@239 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@384 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@262 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)) ($generated@@258 ($generated@@238 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@589)) ($generated@@258 ($generated@@284 $generated@@589)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@277 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@276 $generated@@591)) (= ($generated@@275 $generated@@590) 0)) (= $generated@@590 ($generated@@274 $generated@@591))))
 :pattern ( ($generated@@275 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@297 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@455)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@276 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@275 $generated@@606))) ($generated@@239 ($generated@@499 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@499 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@276 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@275 $generated@@610))) (< ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@307 $generated@@612) ($generated@@248 $generated@@613)) ($generated@@139 ($generated@@352 $generated@@612) ($generated@@248 $generated@@614))) ($generated@@139 ($generated@@383 $generated@@612) ($generated@@248 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@325 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@139 ($generated@@363 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@139 ($generated@@394 $generated@@615) ($generated@@253 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@455) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@183 $generated@@137 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (Int) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@81) (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@246) ($generated@@69 $generated@@4))) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@164)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@173)) (= (type $generated@@258) $generated@@173)) (= ($generated@@140 ($generated@@251 $generated@@257 $generated@@258) ($generated@@163 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@140 ($generated@@251 $generated@@257 $generated@@258) ($generated@@163 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@164) (= (type $generated@@260) $generated@@164)) (= ($generated@@170 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@170 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@67)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@264) $generated@@67)) (= ($generated@@140 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@173) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@252 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@140 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@173) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) $generated@@67)) (= (type $generated@@280) $generated@@173)) (= (type $generated@@281) $generated@@173)) (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@282)) (= ($generated@@78 ($generated@@251 $generated@@280 $generated@@281) ($generated@@163 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@78 ($generated@@251 $generated@@280 $generated@@281) ($generated@@163 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@71)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@164) (= ($generated@@162 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@164) ($generated@@162 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@173) (= (type $generated@@288) $generated@@173)) (= $generated@@286 ($generated@@251 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@162 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@67) (= (type $generated@@298) $generated@@81)) (= ($generated@@140 $generated@@298 ($generated@@157 $generated@@297))  (and ($generated@@140 $generated@@298 ($generated@@137 $generated@@297)) (not (= $generated@@298 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@298 ($generated@@157 $generated@@297)))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@173)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@277 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@78 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@277 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@306) $generated@@173)) (= (type $generated@@307) $generated@@67)) ($generated@@145 $generated@@304 $generated@@305)) ($generated@@277 $generated@@306 $generated@@307 $generated@@304)) ($generated@@277 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@145 $generated@@304 $generated@@305) ($generated@@277 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@311) $generated@@67)) ($generated@@145 $generated@@308 $generated@@309)) ($generated@@78 $generated@@310 $generated@@311 $generated@@308)) ($generated@@78 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@145 $generated@@308 $generated@@309) ($generated@@78 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@80 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@83 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@80 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@85 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@72)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@320)) $generated@@61) (= ($generated@@318 ($generated@@137 $generated@@320)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@321)) $generated@@62) (= ($generated@@318 ($generated@@157 $generated@@321)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@321))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@179 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@312 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@179 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@67) (= (type $generated@@362) $generated@@81)) (= ($generated@@140 $generated@@362 ($generated@@137 $generated@@361))  (or (= $generated@@362 $generated@@138) (= ($generated@@139 $generated@@362) ($generated@@137 $generated@@361)))))
 :pattern ( ($generated@@140 $generated@@362 ($generated@@137 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@326 (type $generated@@363))))
(let (($generated@@365 ($generated@@325 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@324 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@323 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@322 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@326 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(let (($generated@@372 ($generated@@325 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@324 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@323 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@85 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@344 (type $generated@@374))))
(let (($generated@@376 ($generated@@343 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@342 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@341 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@340 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@344 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@80 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@344 (type $generated@@381))))
(let (($generated@@383 ($generated@@343 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@342 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@341 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@386) $generated@@67)) (= ($generated@@140 $generated@@385 ($generated@@178 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@385 $generated@@387)))) ($generated@@252 $generated@@387 $generated@@386))
 :pattern ( ($generated@@85 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@140 $generated@@385 ($generated@@178 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@388 ($generated@@261 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@173) ($generated@@0 ($generated@@85 $generated@@388 $generated@@391))) ($generated@@277 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@85 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@78 $generated@@388 ($generated@@261 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@392 ($generated@@266 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@173) ($generated@@0 ($generated@@85 $generated@@392 $generated@@395))) ($generated@@277 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@85 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@78 $generated@@392 ($generated@@266 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@85 ($generated@@313 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@85 ($generated@@313 $generated@@397) $generated@@396)))
)))
(assert  (and (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@398 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@398 $generated@@401))
)) (forall (($generated@@402 T@T) ($generated@@403 T@U) ) (! (= (type ($generated@@399 $generated@@402 $generated@@403)) $generated@@402)
 :pattern ( ($generated@@399 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@400 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@400 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@173 $generated@@173)) (= (type $generated@@408) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@398 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@171 ($generated@@399 $generated@@164 $generated@@408)))) (= ($generated@@85 ($generated@@400 $generated@@407) ($generated@@171 ($generated@@399 $generated@@164 $generated@@408))) ($generated@@172 ($generated@@399 $generated@@164 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@416) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@171 ($generated@@399 $generated@@164 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@171 ($generated@@399 $generated@@164 $generated@@416))) ($generated@@172 ($generated@@399 $generated@@164 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@367 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@400 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@367 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@324 $generated@@173 $generated@@173)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@430) $generated@@434))) (and ($generated@@277 ($generated@@85 ($generated@@400 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@277 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@438) $generated@@442))) (and ($generated@@277 ($generated@@85 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@277 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@443 $generated@@445))) (and ($generated@@145 $generated@@443 $generated@@444) ($generated@@145 $generated@@444 $generated@@445))) ($generated@@145 $generated@@443 $generated@@445))
 :pattern ( ($generated@@145 $generated@@443 $generated@@444) ($generated@@145 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 Int) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 Int) ) (!  (=> (and (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@450) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@449) (and (not (= $generated@@450 $generated@@138)) (= ($generated@@139 $generated@@450) ($generated@@137 $generated@@448)))) (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@136 $generated@@450)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@449 $generated@@450) $generated@@60))) ($generated@@277 ($generated@@87 ($generated@@85 $generated@@449 $generated@@450) ($generated@@446 $generated@@451)) $generated@@448 $generated@@449)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@449 $generated@@450) ($generated@@446 $generated@@451)) ($generated@@137 $generated@@448))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@80 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@344 (type $generated@@454))))
(let (($generated@@456 ($generated@@343 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@342 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@341 $generated@@456 $generated@@455)) (= ($generated@@340 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@340 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@344 (type $generated@@457))))
(let (($generated@@459 ($generated@@343 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@342 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@341 $generated@@459 $generated@@458)) (= ($generated@@378 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@378 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@344 (type $generated@@460))))
(let (($generated@@462 ($generated@@343 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@342 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@341 $generated@@462 $generated@@461)) (= ($generated@@409 $generated@@460) ($generated@@452 $generated@@173))))))
 :pattern ( ($generated@@409 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@326 (type $generated@@463))))
(let (($generated@@465 ($generated@@325 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@324 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@323 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@173) (= (type $generated@@467) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@398 $generated@@463) ($generated@@299 ($generated@@251 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@398 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@344 (type $generated@@468))))
(let (($generated@@470 ($generated@@343 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@342 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@341 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@468) ($generated@@299 ($generated@@251 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@409 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@173) ($generated@@252 $generated@@473 $generated@@46)) (and (= ($generated@@299 ($generated@@399 $generated@@2 $generated@@473)) $generated@@473) ($generated@@140 ($generated@@399 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@173) ($generated@@252 $generated@@474 $generated@@47)) (and (= ($generated@@299 ($generated@@399 $generated@@3 $generated@@474)) $generated@@474) ($generated@@140 ($generated@@399 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@173) ($generated@@252 $generated@@475 $generated@@44)) (and (= ($generated@@299 ($generated@@399 $generated@@4 $generated@@475)) $generated@@475) ($generated@@140 ($generated@@399 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@173) ($generated@@252 $generated@@477 $generated@@45)) (and (= ($generated@@299 ($generated@@399 $generated@@476 $generated@@477)) $generated@@477) ($generated@@140 ($generated@@399 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@252 ($generated@@299 $generated@@478) $generated@@479) ($generated@@140 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@252 ($generated@@299 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@81) (<= 0 ($generated@@136 $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@83 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@80 $generated@@482 $generated@@2)) (<= 0 ($generated@@312 $generated@@481))))
 :pattern ( ($generated@@312 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@292 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@291 $generated@@484)) (<= 0 ($generated@@290 $generated@@483))))
 :pattern ( ($generated@@290 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@427 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@427 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@427 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@427 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@435 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@435 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@435 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@76 ($generated@@435 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@283 ($generated@@251 $generated@@505 $generated@@506)) $generated@@63))
 :pattern ( ($generated@@251 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@67) (= (type $generated@@510) $generated@@67)) (= ($generated@@507 ($generated@@163 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@163 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@67) (= (type $generated@@514) $generated@@67)) (= ($generated@@511 ($generated@@163 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@163 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@173) (= (type $generated@@516) $generated@@173)) (= ($generated@@171 ($generated@@251 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@251 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@173) (= (type $generated@@518) $generated@@173)) (= ($generated@@172 ($generated@@251 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@251 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@292 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@291 $generated@@173)) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@290 $generated@@525))) ($generated@@277 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@78 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@79 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@79 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@261 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@261 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@535 ($generated@@266 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@266 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@76 ($generated@@266 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@539 ($generated@@178 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@178 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@76 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@75 ($generated@@446 $generated@@547)) 1)
 :pattern ( ($generated@@446 $generated@@547))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@446 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@446 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@550 ($generated@@137 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@137 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@67)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@553 ($generated@@157 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@157 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@399 $generated@@557 ($generated@@299 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@299 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@324 $generated@@173 $generated@@173)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@67)) (= ($generated@@140 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@558) $generated@@561))) (and ($generated@@252 ($generated@@85 ($generated@@400 $generated@@558) $generated@@561) $generated@@560) ($generated@@252 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@558) $generated@@561))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@140 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@67)) (= ($generated@@140 $generated@@562 ($generated@@435 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@562) $generated@@565))) (and ($generated@@252 ($generated@@85 ($generated@@410 $generated@@562) $generated@@565) $generated@@564) ($generated@@252 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@562) $generated@@565))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@140 $generated@@562 ($generated@@435 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@67) (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@568) $generated@@81)) (and (and ($generated@@152 $generated@@567) (and (not (= $generated@@568 $generated@@138)) (= ($generated@@139 $generated@@568) ($generated@@137 $generated@@566)))) (and (<= 0 $generated@@569) (< $generated@@569 ($generated@@136 $generated@@568))))) ($generated@@252 ($generated@@87 ($generated@@85 $generated@@567 $generated@@568) ($generated@@446 $generated@@569)) $generated@@566))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@567 $generated@@568) ($generated@@446 $generated@@569)) ($generated@@137 $generated@@566))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@173) (= (type $generated@@573) $generated@@173)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@251 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@251 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@173) (= (type $generated@@575) $generated@@173)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@251 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@251 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@173) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) ($generated@@252 $generated@@576 ($generated@@427 $generated@@577 $generated@@578))) (and (= ($generated@@299 ($generated@@399 ($generated@@324 $generated@@173 $generated@@173) $generated@@576)) $generated@@576) ($generated@@140 ($generated@@399 ($generated@@324 $generated@@173 $generated@@173) $generated@@576) ($generated@@427 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@576 ($generated@@427 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@252 $generated@@579 ($generated@@435 $generated@@580 $generated@@581))) (and (= ($generated@@299 ($generated@@399 ($generated@@342 $generated@@173 $generated@@173) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@399 ($generated@@342 $generated@@173 $generated@@173) $generated@@579) ($generated@@435 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@252 $generated@@579 ($generated@@435 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@173)) ($generated@@252 $generated@@584 ($generated@@163 $generated@@582 $generated@@583))) (and (= ($generated@@299 ($generated@@399 $generated@@164 $generated@@584)) $generated@@584) ($generated@@140 ($generated@@399 $generated@@164 $generated@@584) ($generated@@163 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@252 $generated@@584 ($generated@@163 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@85 ($generated@@452 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@85 ($generated@@452 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@587 $generated@@588)) $generated@@64) (= ($generated@@318 ($generated@@163 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@164) (= ($generated@@570 ($generated@@299 $generated@@589)) ($generated@@571 $generated@@589)))
 :pattern ( ($generated@@570 ($generated@@299 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@173) ($generated@@252 $generated@@590 ($generated@@79 0))) (and (= ($generated@@299 ($generated@@399 $generated@@2 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@399 ($generated@@80 $generated@@173 $generated@@4) $generated@@590) ($generated@@79 0))))
 :pattern ( ($generated@@252 $generated@@590 ($generated@@79 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) ($generated@@252 $generated@@591 ($generated@@261 $generated@@592))) (and (= ($generated@@299 ($generated@@399 ($generated@@80 $generated@@173 $generated@@4) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@399 ($generated@@80 $generated@@173 $generated@@4) $generated@@591) ($generated@@261 $generated@@592))))
 :pattern ( ($generated@@252 $generated@@591 ($generated@@261 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@252 $generated@@593 ($generated@@266 $generated@@594))) (and (= ($generated@@299 ($generated@@399 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@399 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@266 $generated@@594))))
 :pattern ( ($generated@@252 $generated@@593 ($generated@@266 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@252 $generated@@595 ($generated@@178 $generated@@596))) (and (= ($generated@@299 ($generated@@399 ($generated@@80 $generated@@173 $generated@@2) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@399 ($generated@@80 $generated@@173 $generated@@2) $generated@@595) ($generated@@178 $generated@@596))))
 :pattern ( ($generated@@252 $generated@@595 ($generated@@178 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@252 $generated@@597 ($generated@@519 $generated@@598))) (and (= ($generated@@299 ($generated@@399 ($generated@@291 $generated@@173) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@399 ($generated@@291 $generated@@173) $generated@@597) ($generated@@519 $generated@@598))))
 :pattern ( ($generated@@252 $generated@@597 ($generated@@519 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@173)) ($generated@@252 $generated@@600 ($generated@@137 $generated@@599))) (and (= ($generated@@299 ($generated@@399 $generated@@81 $generated@@600)) $generated@@600) ($generated@@140 ($generated@@399 $generated@@81 $generated@@600) ($generated@@137 $generated@@599))))
 :pattern ( ($generated@@252 $generated@@600 ($generated@@137 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@252 $generated@@602 ($generated@@157 $generated@@601))) (and (= ($generated@@299 ($generated@@399 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@399 $generated@@81 $generated@@602) ($generated@@157 $generated@@601))))
 :pattern ( ($generated@@252 $generated@@602 ($generated@@157 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@81)) (= (type $generated@@605) ($generated@@69 $generated@@607))) ($generated@@152 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@145 $generated@@603 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@277 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@164) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@614) (and ($generated@@162 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@277 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@277 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@164) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@618) (and ($generated@@162 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@277 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@277 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (= (type $generated@@621) $generated@@173)) (= ($generated@@251 ($generated@@273 $generated@@620) ($generated@@273 $generated@@621)) ($generated@@273 ($generated@@251 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@251 ($generated@@273 $generated@@620) ($generated@@273 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@271 $generated@@622))) ($generated@@273 ($generated@@299 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@271 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@299 ($generated@@273 $generated@@623)) ($generated@@273 ($generated@@299 $generated@@623)))
 :pattern ( ($generated@@299 ($generated@@273 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@292 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@291 $generated@@625)) (= ($generated@@290 $generated@@624) 0)) (= $generated@@624 ($generated@@289 $generated@@625))))
 :pattern ( ($generated@@290 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@312 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@312 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@312 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@476)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@173)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@291 $generated@@173)) (= (type $generated@@641) $generated@@67)) (= ($generated@@140 $generated@@640 ($generated@@519 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@290 $generated@@640))) ($generated@@252 ($generated@@520 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@520 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@519 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@291 $generated@@173)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@290 $generated@@644))) (< ($generated@@571 ($generated@@399 $generated@@164 ($generated@@520 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@399 $generated@@164 ($generated@@520 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@324 $generated@@173 $generated@@173)) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@140 $generated@@646 ($generated@@427 $generated@@647 $generated@@648))) (and (and ($generated@@140 ($generated@@322 $generated@@646) ($generated@@261 $generated@@647)) ($generated@@140 ($generated@@367 $generated@@646) ($generated@@261 $generated@@648))) ($generated@@140 ($generated@@398 $generated@@646) ($generated@@261 ($generated@@163 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@140 $generated@@646 ($generated@@427 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@342 $generated@@173 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@140 $generated@@649 ($generated@@435 $generated@@650 $generated@@651))) (and (and ($generated@@140 ($generated@@340 $generated@@649) ($generated@@266 $generated@@650)) ($generated@@140 ($generated@@378 $generated@@649) ($generated@@266 $generated@@651))) ($generated@@140 ($generated@@409 $generated@@649) ($generated@@266 ($generated@@163 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@140 $generated@@649 ($generated@@435 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@140 $generated@@652 $generated@@46))
 :pattern ( ($generated@@140 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@140 $generated@@653 $generated@@47))
 :pattern ( ($generated@@140 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@140 $generated@@654 $generated@@44))
 :pattern ( ($generated@@140 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@476) ($generated@@140 $generated@@655 $generated@@45))
 :pattern ( ($generated@@140 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@173) ($generated@@140 $generated@@656 $generated@@48))
 :pattern ( ($generated@@140 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(assert  (and (and (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@668) ($generated@@185 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@671 true))
(let (($generated@@672  (=> (and (< $generated@@657 ($generated@@271 0)) (= (ControlFlow 0 14) 12)) $generated@@671)))
(let (($generated@@673  (=> (and (<= ($generated@@271 0) $generated@@657) (= (ControlFlow 0 13) 12)) $generated@@671)))
(let (($generated@@674  (=> (not $generated@@658) (and (=> (= (ControlFlow 0 15) 13) $generated@@673) (=> (= (ControlFlow 0 15) 14) $generated@@672)))))
(let (($generated@@675  (=> (and (< $generated@@657 10) (= $generated@@659 (- 10 $generated@@657))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@271 0)) (< ($generated@@271 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@271 0)) (< ($generated@@271 0) ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@446 ($generated@@271 0))))) (=> ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@446 ($generated@@271 0)))) (=> (= $generated@@662 ($generated@@86 $generated@@663 $generated@@660 ($generated@@88 ($generated@@85 $generated@@663 $generated@@660) ($generated@@446 ($generated@@271 0)) ($generated@@299 ($generated@@8 $generated@@657))))) (=> (and ($generated@@152 $generated@@662) (= $generated@@664 (+ $generated@@657 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659))) (=> (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@664) $generated@@659)) (=> (< (- 10 $generated@@664) $generated@@659) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@658 (<= ($generated@@271 0) $generated@@664))) (=> (=> $generated@@658 (<= ($generated@@271 0) $generated@@664)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@658 (<= $generated@@664 ($generated@@271 10)))))))))))))))))))))
(let (($generated@@676 true))
(let (($generated@@677  (=> $generated@@658 (and (=> (= (ControlFlow 0 11) 2) $generated@@676) (=> (= (ControlFlow 0 11) 4) $generated@@675)))))
(let (($generated@@678  (and (=> (= (ControlFlow 0 16) 15) $generated@@674) (=> (= (ControlFlow 0 16) 11) $generated@@677))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and ($generated@@152 $generated@@663) ($generated@@665 $generated@@663)) (=> (and (and (not false) (and (<= 0 $generated@@657) (< $generated@@657 11))) (= $generated@@666 10)) (=> (and (and (and (=> $generated@@658 true) (=> $generated@@658 (<= ($generated@@271 0) $generated@@657))) (and (=> $generated@@658 (<= $generated@@657 ($generated@@271 10))) (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (=> (and (not (= $generated@@681 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@681) $generated@@60))) (= ($generated@@85 $generated@@663 $generated@@681) ($generated@@85 $generated@@667 $generated@@681))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@681))
)))) (and (and ($generated@@145 $generated@@667 $generated@@663) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@70 (type $generated@@683))))
 (=> (and (and (= (type $generated@@682) $generated@@81) (= (type $generated@@683) ($generated@@69 $generated@@684))) (and (not (= $generated@@682 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@682) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683) ($generated@@87 ($generated@@85 $generated@@667 $generated@@682) $generated@@683)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683))
))) (and (<= (- 10 $generated@@657) $generated@@666) (=> (= (- 10 $generated@@657) $generated@@666) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@679) (=> (= (ControlFlow 0 17) 16) $generated@@678)))))))
(let (($generated@@685  (=> (and (and (= $generated@@668 ($generated@@184 $generated@@138 $generated@@667 $generated@@60 false)) (= $generated@@669 ($generated@@271 0))) (and (= $generated@@661 ($generated@@239 $generated@@138 $generated@@667 $generated@@60 false)) (= $generated@@666 (- 10 $generated@@669)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@658 (<= ($generated@@271 0) $generated@@669))) (=> (=> $generated@@658 (<= ($generated@@271 0) $generated@@669)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@658 (<= $generated@@669 ($generated@@271 10)))) (=> (=> $generated@@658 (<= $generated@@669 ($generated@@271 10))) (=> (= (ControlFlow 0 18) 17) $generated@@680))))))))
(let (($generated@@686  (=> (and ($generated@@152 $generated@@667) ($generated@@665 $generated@@667)) (=> (and (and (and ($generated@@140 $generated@@660 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@660 ($generated@@157 $generated@@46) $generated@@667)) (= 1 $generated@@670)) (and (> ($generated@@136 $generated@@660) 0) (= (ControlFlow 0 21) 18))) $generated@@685))))
$generated@@686)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492)) $generated@@492) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492) ($generated@@356 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495)) $generated@@495) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495) ($generated@@364 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@172)) ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@500)) $generated@@500) ($generated@@139 ($generated@@328 $generated@@163 $generated@@500) ($generated@@162 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@375 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@561)) ($generated@@487 $generated@@561)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@183 $generated@@562 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@183 $generated@@563 ($generated@@192 $generated@@564))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@192 $generated@@564))))
 :pattern ( ($generated@@183 $generated@@563 ($generated@@192 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@197 $generated@@566))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@197 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@197 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@442 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569) ($generated@@442 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@442 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@183 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@328 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@183 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@328 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@206 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)) ($generated@@202 ($generated@@182 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@589)) ($generated@@202 ($generated@@228 $generated@@589)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@221 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@220 $generated@@591)) (= ($generated@@219 $generated@@590) 0)) (= $generated@@590 ($generated@@218 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@241 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@399)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@220 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@219 $generated@@606))) ($generated@@183 ($generated@@443 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@443 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@219 $generated@@610))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@251 $generated@@612) ($generated@@192 $generated@@613)) ($generated@@139 ($generated@@296 $generated@@612) ($generated@@192 $generated@@614))) ($generated@@139 ($generated@@327 $generated@@612) ($generated@@192 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@269 $generated@@615) ($generated@@197 $generated@@616)) ($generated@@139 ($generated@@307 $generated@@615) ($generated@@197 $generated@@617))) ($generated@@139 ($generated@@338 $generated@@615) ($generated@@197 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@399) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@505 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@504 $generated@@137 $generated@@624 $generated@@60 $generated@@625)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@575 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (= (type ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@70 (type $generated@@585))))
 (=> (and (and (and (and (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@582) ($generated@@69 $generated@@4))) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (= (type $generated@@585) ($generated@@69 $generated@@586))) (= ($generated@@0 ($generated@@183 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))  (=> (and (not (= $generated@@584 $generated@@580)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@581 $generated@@584) $generated@@582))) (= $generated@@584 $generated@@583)))))
 :pattern ( ($generated@@183 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@587 $generated@@588)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@589)) ($generated@@559 $generated@@589)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@173) ($generated@@240 $generated@@590 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@590) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@79 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) ($generated@@240 $generated@@591 ($generated@@249 $generated@@592))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@591) ($generated@@249 $generated@@592))))
 :pattern ( ($generated@@240 $generated@@591 ($generated@@249 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@240 $generated@@593 ($generated@@254 $generated@@594))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@254 $generated@@594))))
 :pattern ( ($generated@@240 $generated@@593 ($generated@@254 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@240 $generated@@595 ($generated@@178 $generated@@596))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@595) ($generated@@178 $generated@@596))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@178 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@240 $generated@@597 ($generated@@507 $generated@@598))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@597) ($generated@@507 $generated@@598))))
 :pattern ( ($generated@@240 $generated@@597 ($generated@@507 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@173)) ($generated@@240 $generated@@600 ($generated@@137 $generated@@599))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@600)) $generated@@600) ($generated@@140 ($generated@@387 $generated@@81 $generated@@600) ($generated@@137 $generated@@599))))
 :pattern ( ($generated@@240 $generated@@600 ($generated@@137 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@240 $generated@@602 ($generated@@157 $generated@@601))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@387 $generated@@81 $generated@@602) ($generated@@157 $generated@@601))))
 :pattern ( ($generated@@240 $generated@@602 ($generated@@157 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@81)) (= (type $generated@@605) ($generated@@69 $generated@@607))) ($generated@@152 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@145 $generated@@603 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@265 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@164) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@614) (and ($generated@@162 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@265 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@164) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@618) (and ($generated@@162 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@265 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (= (type $generated@@621) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@620) ($generated@@261 $generated@@621)) ($generated@@261 ($generated@@239 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@620) ($generated@@261 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@622))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@623)) ($generated@@261 ($generated@@287 $generated@@623)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@280 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@279 $generated@@625)) (= ($generated@@278 $generated@@624) 0)) (= $generated@@624 ($generated@@277 $generated@@625))))
 :pattern ( ($generated@@278 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@300 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@300 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@464)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@173)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@279 $generated@@173)) (= (type $generated@@641) $generated@@67)) (= ($generated@@140 $generated@@640 ($generated@@507 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@278 $generated@@640))) ($generated@@240 ($generated@@508 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@508 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@507 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@278 $generated@@644))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@140 $generated@@646 ($generated@@415 $generated@@647 $generated@@648))) (and (and ($generated@@140 ($generated@@310 $generated@@646) ($generated@@249 $generated@@647)) ($generated@@140 ($generated@@355 $generated@@646) ($generated@@249 $generated@@648))) ($generated@@140 ($generated@@386 $generated@@646) ($generated@@249 ($generated@@163 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@140 $generated@@646 ($generated@@415 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@140 $generated@@649 ($generated@@423 $generated@@650 $generated@@651))) (and (and ($generated@@140 ($generated@@328 $generated@@649) ($generated@@254 $generated@@650)) ($generated@@140 ($generated@@366 $generated@@649) ($generated@@254 $generated@@651))) ($generated@@140 ($generated@@397 $generated@@649) ($generated@@254 ($generated@@163 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@140 $generated@@649 ($generated@@423 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@140 $generated@@652 $generated@@46))
 :pattern ( ($generated@@140 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@140 $generated@@653 $generated@@47))
 :pattern ( ($generated@@140 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@140 $generated@@654 $generated@@44))
 :pattern ( ($generated@@140 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@464) ($generated@@140 $generated@@655 $generated@@45))
 :pattern ( ($generated@@140 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@173) ($generated@@140 $generated@@656 $generated@@48))
 :pattern ( ($generated@@140 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(assert  (and (and (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@665) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@661) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@668) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@671 true))
(let (($generated@@672  (=> (and (< $generated@@657 ($generated@@259 0)) (= (ControlFlow 0 17) 15)) $generated@@671)))
(let (($generated@@673  (=> (and (<= ($generated@@259 0) $generated@@657) (= (ControlFlow 0 16) 15)) $generated@@671)))
(let (($generated@@674  (=> (not $generated@@658) (and (=> (= (ControlFlow 0 18) 16) $generated@@673) (=> (= (ControlFlow 0 18) 17) $generated@@672)))))
(let (($generated@@675  (=> (and (< $generated@@657 10) (= $generated@@659 (- 10 $generated@@657))) (and (=> (= (ControlFlow 0 7) (- 0 13)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 12)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@434 ($generated@@259 0))))) (=> ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@434 ($generated@@259 0)))) (=> (= $generated@@662 ($generated@@86 $generated@@663 $generated@@660 ($generated@@88 ($generated@@85 $generated@@663 $generated@@660) ($generated@@434 ($generated@@259 0)) ($generated@@287 ($generated@@8 $generated@@657))))) (=> (and ($generated@@152 $generated@@662) (= $generated@@664 (+ $generated@@657 1))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659))) (=> (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (< (- 10 $generated@@664) $generated@@659)) (=> (< (- 10 $generated@@664) $generated@@659) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@658 (<= ($generated@@259 0) $generated@@664))) (=> (=> $generated@@658 (<= ($generated@@259 0) $generated@@664)) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@658 (<= $generated@@664 ($generated@@259 10)))))))))))))))))))))
(let (($generated@@676  (=> (<= 10 $generated@@657) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@183 $generated@@665 $generated@@660 ($generated@@434 ($generated@@259 0))))))))))))
(let (($generated@@677  (=> $generated@@658 (and (=> (= (ControlFlow 0 14) 3) $generated@@676) (=> (= (ControlFlow 0 14) 7) $generated@@675)))))
(let (($generated@@678  (and (=> (= (ControlFlow 0 19) 18) $generated@@674) (=> (= (ControlFlow 0 19) 14) $generated@@677))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and ($generated@@152 $generated@@663) ($generated@@666 $generated@@663)) (=> (and (and (not false) (and (<= 0 $generated@@657) (< $generated@@657 11))) (= $generated@@667 10)) (=> (and (and (and (=> $generated@@658 true) (=> $generated@@658 (<= ($generated@@259 0) $generated@@657))) (and (=> $generated@@658 (<= $generated@@657 ($generated@@259 10))) (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (=> (and (not (= $generated@@681 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@668 $generated@@681) $generated@@60))) (or (= ($generated@@85 $generated@@663 $generated@@681) ($generated@@85 $generated@@668 $generated@@681)) (= $generated@@681 $generated@@660))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@681))
)))) (and (and ($generated@@145 $generated@@668 $generated@@663) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@70 (type $generated@@683))))
 (=> (and (and (= (type $generated@@682) $generated@@81) (= (type $generated@@683) ($generated@@69 $generated@@684))) (and (not (= $generated@@682 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@668 $generated@@682) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683) ($generated@@87 ($generated@@85 $generated@@668 $generated@@682) $generated@@683)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683))
))) (and (<= (- 10 $generated@@657) $generated@@667) (=> (= (- 10 $generated@@657) $generated@@667) true)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@679) (=> (= (ControlFlow 0 20) 19) $generated@@678)))))))
(let (($generated@@685  (=> (and (and (= $generated@@665 ($generated@@575 $generated@@138 $generated@@668 $generated@@60 $generated@@660)) (= $generated@@669 ($generated@@259 0))) (and (= $generated@@661 ($generated@@184 $generated@@138 $generated@@668 $generated@@60 false)) (= $generated@@667 (- 10 $generated@@669)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> $generated@@658 (<= ($generated@@259 0) $generated@@669))) (=> (=> $generated@@658 (<= ($generated@@259 0) $generated@@669)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@658 (<= $generated@@669 ($generated@@259 10)))) (=> (=> $generated@@658 (<= $generated@@669 ($generated@@259 10))) (=> (= (ControlFlow 0 21) 20) $generated@@680))))))))
(let (($generated@@686  (=> (and ($generated@@152 $generated@@668) ($generated@@666 $generated@@668)) (=> (and (and (and ($generated@@140 $generated@@660 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@660 ($generated@@157 $generated@@46) $generated@@668)) (= 1 $generated@@670)) (and (> ($generated@@136 $generated@@660) 0) (= (ControlFlow 0 24) 21))) $generated@@685))))
$generated@@686)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 11))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@172)) (= (type $generated@@266) $generated@@172)) (= (type $generated@@267) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@267)) (= ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@265 $generated@@266) ($generated@@162 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@71)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@163) (= ($generated@@161 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@163) ($generated@@161 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@172) (= (type $generated@@273) $generated@@172)) (= $generated@@271 ($generated@@238 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@161 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) $generated@@80)) (= ($generated@@139 $generated@@283 ($generated@@156 $generated@@282))  (and ($generated@@139 $generated@@283 ($generated@@136 $generated@@282)) (not (= $generated@@283 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@283 ($generated@@156 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@172)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@77 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@262 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@172)) (= (type $generated@@292) $generated@@67)) ($generated@@144 $generated@@289 $generated@@290)) ($generated@@262 $generated@@291 $generated@@292 $generated@@289)) ($generated@@262 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@144 $generated@@289 $generated@@290) ($generated@@262 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@296) $generated@@67)) ($generated@@144 $generated@@293 $generated@@294)) ($generated@@77 $generated@@295 $generated@@296 $generated@@293)) ($generated@@77 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@144 $generated@@293 $generated@@294) ($generated@@77 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@79 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@82 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@79 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@84 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@136 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@306)) $generated@@62) (= ($generated@@303 ($generated@@156 $generated@@306)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@178 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@297 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@178 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@80)) (= ($generated@@139 $generated@@347 ($generated@@136 $generated@@346))  (or (= $generated@@347 $generated@@137) (= ($generated@@138 $generated@@347) ($generated@@136 $generated@@346)))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@136 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@329 (type $generated@@359))))
(let (($generated@@361 ($generated@@328 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@327 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@326 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@325 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@79 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(let (($generated@@368 ($generated@@328 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@327 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@326 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@371) $generated@@67)) (= ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@370 $generated@@372)))) ($generated@@239 $generated@@372 $generated@@371))
 :pattern ( ($generated@@84 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@139 $generated@@370 ($generated@@177 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) ($generated@@0 ($generated@@84 $generated@@373 $generated@@376))) ($generated@@262 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@84 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@172) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@262 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@84 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@84 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@79 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@393) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393)))) (= ($generated@@84 ($generated@@385 $generated@@392) ($generated@@170 ($generated@@384 $generated@@163 $generated@@393))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@393))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@401) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401)))) (= ($generated@@84 ($generated@@395 $generated@@400) ($generated@@170 ($generated@@384 $generated@@163 $generated@@401))) ($generated@@171 ($generated@@384 $generated@@163 $generated@@401))))))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@262 ($generated@@84 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@262 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@262 ($generated@@84 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@262 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@77 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@428 $generated@@430))) (and ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))) ($generated@@144 $generated@@428 $generated@@430))
 :pattern ( ($generated@@144 $generated@@428 $generated@@429) ($generated@@144 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@79 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@329 (type $generated@@433))))
(let (($generated@@435 ($generated@@328 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@327 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@326 $generated@@435 $generated@@434)) (= ($generated@@325 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@325 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@329 (type $generated@@436))))
(let (($generated@@438 ($generated@@328 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@327 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@326 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@329 (type $generated@@439))))
(let (($generated@@441 ($generated@@328 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@327 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@326 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@172))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(let (($generated@@444 ($generated@@310 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@309 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@308 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@172) (= (type $generated@@446) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@442) ($generated@@284 ($generated@@238 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@329 (type $generated@@447))))
(let (($generated@@449 ($generated@@328 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@327 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@326 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@172) (= (type $generated@@451) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@394 $generated@@447) ($generated@@284 ($generated@@238 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@172) ($generated@@239 $generated@@452 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@139 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@172) ($generated@@239 $generated@@453 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@139 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@67) (= ($generated@@239 ($generated@@284 $generated@@457) $generated@@458) ($generated@@139 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@239 ($generated@@284 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@80) (<= 0 ($generated@@135 $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@82 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@79 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@277 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@276 $generated@@463)) (<= 0 ($generated@@275 $generated@@462))))
 :pattern ( ($generated@@275 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@75 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@172) (= (type $generated@@485) $generated@@172)) (= ($generated@@268 ($generated@@238 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@162 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@162 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@162 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@162 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) (= (type $generated@@495) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@277 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@276 $generated@@172)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@275 $generated@@504))) ($generated@@262 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@77 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@78 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@78 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@248 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@248 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@253 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@253 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@177 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@177 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@136 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@136 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@156 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@156 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@384 $generated@@533 ($generated@@284 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@284 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) (= ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@239 ($generated@@84 ($generated@@385 $generated@@534) $generated@@537) $generated@@536) ($generated@@239 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@534) $generated@@537))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@139 $generated@@534 ($generated@@412 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@239 ($generated@@84 ($generated@@395 $generated@@538) $generated@@541) $generated@@540) ($generated@@239 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@139 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@172) (= (type $generated@@545) $generated@@172)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@238 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@284 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548)) $generated@@548) ($generated@@139 ($generated@@384 ($generated@@309 $generated@@172 $generated@@172) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@239 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@172) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) $generated@@67)) ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@384 ($generated@@327 $generated@@172 $generated@@172) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) $generated@@172)) ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555))) (and (= ($generated@@284 ($generated@@384 $generated@@163 $generated@@556)) $generated@@556) ($generated@@139 ($generated@@384 $generated@@163 $generated@@556) ($generated@@162 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@162 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@84 ($generated@@431 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@84 ($generated@@431 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@303 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@542 ($generated@@284 $generated@@561)) ($generated@@543 $generated@@561)))
 :pattern ( ($generated@@542 ($generated@@284 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@239 $generated@@562 ($generated@@78 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@239 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@253 $generated@@566))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@253 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@253 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@284 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@384 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@498 $generated@@570))) (and (= ($generated@@284 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@384 ($generated@@276 $generated@@172) $generated@@569) ($generated@@498 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@498 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@239 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@384 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@239 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@284 ($generated@@384 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@384 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@262 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@262 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@262 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)) ($generated@@258 ($generated@@238 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@587) ($generated@@258 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@589)) ($generated@@258 ($generated@@284 $generated@@589)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@277 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@276 $generated@@591)) (= ($generated@@275 $generated@@590) 0)) (= $generated@@590 ($generated@@274 $generated@@591))))
 :pattern ( ($generated@@275 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@297 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@297 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@455)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@276 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@275 $generated@@606))) ($generated@@239 ($generated@@499 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@499 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@498 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@276 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@275 $generated@@610))) (< ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@543 ($generated@@384 $generated@@163 ($generated@@499 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@309 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@307 $generated@@612) ($generated@@248 $generated@@613)) ($generated@@139 ($generated@@352 $generated@@612) ($generated@@248 $generated@@614))) ($generated@@139 ($generated@@383 $generated@@612) ($generated@@248 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@412 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@327 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@325 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@139 ($generated@@363 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@139 ($generated@@394 $generated@@615) ($generated@@253 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@420 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@455) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@183 $generated@@137 $generated@@624 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@575 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (= (type ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@70 (type $generated@@585))))
 (=> (and (and (and (and (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@582) ($generated@@69 $generated@@4))) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (= (type $generated@@585) ($generated@@69 $generated@@586))) (= ($generated@@0 ($generated@@183 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))  (=> (and (not (= $generated@@584 $generated@@580)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@581 $generated@@584) $generated@@582))) (= $generated@@584 $generated@@583)))))
 :pattern ( ($generated@@183 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@587 $generated@@588)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@589)) ($generated@@559 $generated@@589)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@173) ($generated@@240 $generated@@590 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@590) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@79 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) ($generated@@240 $generated@@591 ($generated@@249 $generated@@592))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@591) ($generated@@249 $generated@@592))))
 :pattern ( ($generated@@240 $generated@@591 ($generated@@249 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@240 $generated@@593 ($generated@@254 $generated@@594))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@254 $generated@@594))))
 :pattern ( ($generated@@240 $generated@@593 ($generated@@254 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@240 $generated@@595 ($generated@@178 $generated@@596))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@595) ($generated@@178 $generated@@596))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@178 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@240 $generated@@597 ($generated@@507 $generated@@598))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@597) ($generated@@507 $generated@@598))))
 :pattern ( ($generated@@240 $generated@@597 ($generated@@507 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@173)) ($generated@@240 $generated@@600 ($generated@@137 $generated@@599))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@600)) $generated@@600) ($generated@@140 ($generated@@387 $generated@@81 $generated@@600) ($generated@@137 $generated@@599))))
 :pattern ( ($generated@@240 $generated@@600 ($generated@@137 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@240 $generated@@602 ($generated@@157 $generated@@601))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@387 $generated@@81 $generated@@602) ($generated@@157 $generated@@601))))
 :pattern ( ($generated@@240 $generated@@602 ($generated@@157 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@81)) (= (type $generated@@605) ($generated@@69 $generated@@607))) ($generated@@152 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@145 $generated@@603 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@265 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@164) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@614) (and ($generated@@162 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@265 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@164) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@618) (and ($generated@@162 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@265 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (= (type $generated@@621) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@620) ($generated@@261 $generated@@621)) ($generated@@261 ($generated@@239 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@620) ($generated@@261 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@622))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@623)) ($generated@@261 ($generated@@287 $generated@@623)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@280 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@279 $generated@@625)) (= ($generated@@278 $generated@@624) 0)) (= $generated@@624 ($generated@@277 $generated@@625))))
 :pattern ( ($generated@@278 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@300 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@300 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@464)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@173)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@279 $generated@@173)) (= (type $generated@@641) $generated@@67)) (= ($generated@@140 $generated@@640 ($generated@@507 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@278 $generated@@640))) ($generated@@240 ($generated@@508 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@508 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@507 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@278 $generated@@644))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@140 $generated@@646 ($generated@@415 $generated@@647 $generated@@648))) (and (and ($generated@@140 ($generated@@310 $generated@@646) ($generated@@249 $generated@@647)) ($generated@@140 ($generated@@355 $generated@@646) ($generated@@249 $generated@@648))) ($generated@@140 ($generated@@386 $generated@@646) ($generated@@249 ($generated@@163 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@140 $generated@@646 ($generated@@415 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@140 $generated@@649 ($generated@@423 $generated@@650 $generated@@651))) (and (and ($generated@@140 ($generated@@328 $generated@@649) ($generated@@254 $generated@@650)) ($generated@@140 ($generated@@366 $generated@@649) ($generated@@254 $generated@@651))) ($generated@@140 ($generated@@397 $generated@@649) ($generated@@254 ($generated@@163 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@140 $generated@@649 ($generated@@423 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@140 $generated@@652 $generated@@46))
 :pattern ( ($generated@@140 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@140 $generated@@653 $generated@@47))
 :pattern ( ($generated@@140 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@140 $generated@@654 $generated@@44))
 :pattern ( ($generated@@140 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@464) ($generated@@140 $generated@@655 $generated@@45))
 :pattern ( ($generated@@140 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@173) ($generated@@140 $generated@@656 $generated@@48))
 :pattern ( ($generated@@140 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(assert  (and (and (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@668) ($generated@@185 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@671 true))
(let (($generated@@672  (=> (and (< $generated@@657 ($generated@@259 0)) (= (ControlFlow 0 14) 12)) $generated@@671)))
(let (($generated@@673  (=> (and (<= ($generated@@259 0) $generated@@657) (= (ControlFlow 0 13) 12)) $generated@@671)))
(let (($generated@@674  (=> (not $generated@@658) (and (=> (= (ControlFlow 0 15) 13) $generated@@673) (=> (= (ControlFlow 0 15) 14) $generated@@672)))))
(let (($generated@@675  (=> (and (< $generated@@657 10) (= $generated@@659 (- 10 $generated@@657))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@434 ($generated@@259 0))))) (=> ($generated@@0 ($generated@@183 $generated@@661 $generated@@660 ($generated@@434 ($generated@@259 0)))) (=> (= $generated@@662 ($generated@@86 $generated@@663 $generated@@660 ($generated@@88 ($generated@@85 $generated@@663 $generated@@660) ($generated@@434 ($generated@@259 0)) ($generated@@287 ($generated@@8 $generated@@657))))) (=> (and ($generated@@152 $generated@@662) (= $generated@@664 (+ $generated@@657 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659))) (=> (or (<= 0 $generated@@659) (= (- 10 $generated@@664) $generated@@659)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@664) $generated@@659)) (=> (< (- 10 $generated@@664) $generated@@659) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@658 (<= ($generated@@259 0) $generated@@664))) (=> (=> $generated@@658 (<= ($generated@@259 0) $generated@@664)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@658 (<= $generated@@664 ($generated@@259 10)))))))))))))))))))))
(let (($generated@@676 true))
(let (($generated@@677  (=> $generated@@658 (and (=> (= (ControlFlow 0 11) 2) $generated@@676) (=> (= (ControlFlow 0 11) 4) $generated@@675)))))
(let (($generated@@678  (and (=> (= (ControlFlow 0 16) 15) $generated@@674) (=> (= (ControlFlow 0 16) 11) $generated@@677))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and ($generated@@152 $generated@@663) ($generated@@665 $generated@@663)) (=> (and (and (not false) (and (<= 0 $generated@@657) (< $generated@@657 11))) (= $generated@@666 10)) (=> (and (and (and (=> $generated@@658 true) (=> $generated@@658 (<= ($generated@@259 0) $generated@@657))) (and (=> $generated@@658 (<= $generated@@657 ($generated@@259 10))) (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (=> (and (not (= $generated@@681 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@681) $generated@@60))) (= ($generated@@85 $generated@@663 $generated@@681) ($generated@@85 $generated@@667 $generated@@681))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@681))
)))) (and (and ($generated@@145 $generated@@667 $generated@@663) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@70 (type $generated@@683))))
 (=> (and (and (= (type $generated@@682) $generated@@81) (= (type $generated@@683) ($generated@@69 $generated@@684))) (and (not (= $generated@@682 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@682) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683) ($generated@@87 ($generated@@85 $generated@@667 $generated@@682) $generated@@683)) ($generated@@0 ($generated@@183 $generated@@661 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@663 $generated@@682) $generated@@683))
))) (and (<= (- 10 $generated@@657) $generated@@666) (=> (= (- 10 $generated@@657) $generated@@666) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@679) (=> (= (ControlFlow 0 17) 16) $generated@@678)))))))
(let (($generated@@685  (=> (and (= $generated@@668 ($generated@@184 $generated@@138 $generated@@667 $generated@@60 false)) (= $generated@@669 ($generated@@259 0))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 ($generated@@70 (type $generated@@687))))
 (=> (and (= (type $generated@@686) $generated@@81) (= (type $generated@@687) ($generated@@69 $generated@@688))) (=> (and (and (not (= $generated@@686 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@686) $generated@@60))) (= $generated@@686 $generated@@660)) ($generated@@0 ($generated@@183 $generated@@668 $generated@@686 $generated@@687)))))
 :no-pattern (type $generated@@686)
 :no-pattern (type $generated@@687)
 :no-pattern ($generated $generated@@686)
 :no-pattern ($generated@@0 $generated@@686)
 :no-pattern ($generated $generated@@687)
 :no-pattern ($generated@@0 $generated@@687)
))) (=> (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (! (let (($generated@@691 ($generated@@70 (type $generated@@690))))
 (=> (and (= (type $generated@@689) $generated@@81) (= (type $generated@@690) ($generated@@69 $generated@@691))) (=> (and (and (not (= $generated@@689 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@689) $generated@@60))) (= $generated@@689 $generated@@660)) ($generated@@0 ($generated@@183 $generated@@668 $generated@@689 $generated@@690)))))
 :no-pattern (type $generated@@689)
 :no-pattern (type $generated@@690)
 :no-pattern ($generated $generated@@689)
 :no-pattern ($generated@@0 $generated@@689)
 :no-pattern ($generated $generated@@690)
 :no-pattern ($generated@@0 $generated@@690)
)) (=> (and (= $generated@@661 ($generated@@575 $generated@@138 $generated@@667 $generated@@60 $generated@@660)) (= $generated@@666 (- 10 $generated@@669))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@658 (<= ($generated@@259 0) $generated@@669))) (=> (=> $generated@@658 (<= ($generated@@259 0) $generated@@669)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@658 (<= $generated@@669 ($generated@@259 10)))) (=> (=> $generated@@658 (<= $generated@@669 ($generated@@259 10))) (=> (= (ControlFlow 0 18) 17) $generated@@680)))))))))))
(let (($generated@@692  (=> (and ($generated@@152 $generated@@667) ($generated@@665 $generated@@667)) (=> (and (and (and ($generated@@140 $generated@@660 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@660 ($generated@@157 $generated@@46) $generated@@667)) (= 1 $generated@@670)) (and (> ($generated@@136 $generated@@660) 0) (= (ControlFlow 0 22) 18))) $generated@@685))))
$generated@@692)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 18) (- 21))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@194 $generated@@80 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@70 (type $generated@@248))))
 (=> (and (and (and (and (and (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@244) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@80)) (= (type $generated@@246) $generated@@80)) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) ($generated@@69 $generated@@249))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@242)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@243 $generated@@247) $generated@@244))) (or (= $generated@@247 $generated@@245) (= $generated@@247 $generated@@246))))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@172) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@183 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@172) ($generated@@0 ($generated@@84 $generated@@257 $generated@@259))) ($generated@@183 $generated@@259 $generated@@258))
 :pattern ( ($generated@@84 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@182 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@183 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@182 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@182 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@183 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@183 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@183 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@183 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@183 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@183 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@182 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@182 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@182 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@250 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@250 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@255 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@255 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@255 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@183 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@183 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@183 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@183 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@182 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@182 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@182 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@182 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@183 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@250 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@250 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@250 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@255 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@255 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@255 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@183 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@183 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@183 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@183 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@182 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@591)) ($generated@@260 ($generated@@286 $generated@@591)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@279 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@278 $generated@@593)) (= ($generated@@277 $generated@@592) 0)) (= $generated@@592 ($generated@@276 $generated@@593))))
 :pattern ( ($generated@@277 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@79 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@299 $generated@@594) ($generated ($generated@@84 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@2)) ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@3)) ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@4)) ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@457)) ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@172)) ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@278 $generated@@172)) (= (type $generated@@609) $generated@@67)) (= ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@277 $generated@@608))) ($generated@@183 ($generated@@501 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@501 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@277 $generated@@612))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@67)) ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616))) (and (and ($generated@@139 ($generated@@309 $generated@@614) ($generated@@250 $generated@@615)) ($generated@@139 ($generated@@354 $generated@@614) ($generated@@250 $generated@@616))) ($generated@@139 ($generated@@385 $generated@@614) ($generated@@250 ($generated@@162 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619))) (and (and ($generated@@139 ($generated@@327 $generated@@617) ($generated@@255 $generated@@618)) ($generated@@139 ($generated@@365 $generated@@617) ($generated@@255 $generated@@619))) ($generated@@139 ($generated@@396 $generated@@617) ($generated@@255 ($generated@@162 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@139 $generated@@620 $generated@@46))
 :pattern ( ($generated@@139 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@139 $generated@@621 $generated@@47))
 :pattern ( ($generated@@139 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@139 $generated@@622 $generated@@44))
 :pattern ( ($generated@@139 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@457) ($generated@@139 $generated@@623 $generated@@45))
 :pattern ( ($generated@@139 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@172) ($generated@@139 $generated@@624 $generated@@48))
 :pattern ( ($generated@@139 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@625) ($generated@@194 $generated@@80 $generated@@4)) (= (type $generated@@626) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@627) $generated@@80)) (= (type $generated@@628) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@631  (=> (= $generated@@625 ($generated@@193 $generated@@137 $generated@@626 $generated@@60 $generated@@627 $generated@@628)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@627 $generated@@137))) (=> (not (= $generated@@627 $generated@@137)) (=> (and (> ($generated@@135 $generated@@627) 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@628 $generated@@137))))))))
(let (($generated@@632  (=> (and (and (and ($generated@@151 $generated@@626) ($generated@@629 $generated@@626)) (and ($generated@@139 $generated@@627 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@627 ($generated@@156 $generated@@46) $generated@@626))) (and (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@626)) (and (= 1 $generated@@630) (= (ControlFlow 0 4) 2)))) $generated@@631)))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@577 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@645 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@81)) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@248) $generated@@245))) (or (= $generated@@248 $generated@@246) (= $generated@@248 $generated@@247))))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@184 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@184 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@173)) (= (type $generated@@271) $generated@@173)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@272)) (= ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@164) (= ($generated@@162 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@164) ($generated@@162 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@173) (= (type $generated@@278) $generated@@173)) (= $generated@@276 ($generated@@183 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@162 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@81)) (= ($generated@@140 $generated@@288 ($generated@@157 $generated@@287))  (and ($generated@@140 $generated@@288 ($generated@@137 $generated@@287)) (not (= $generated@@288 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@288 ($generated@@157 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@173)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@296) $generated@@173)) (= (type $generated@@297) $generated@@67)) ($generated@@145 $generated@@294 $generated@@295)) ($generated@@267 $generated@@296 $generated@@297 $generated@@294)) ($generated@@267 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@145 $generated@@294 $generated@@295) ($generated@@267 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@301) $generated@@67)) ($generated@@145 $generated@@298 $generated@@299)) ($generated@@78 $generated@@300 $generated@@301 $generated@@298)) ($generated@@78 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@145 $generated@@298 $generated@@299) ($generated@@78 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@83 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@80 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@85 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@310)) $generated@@61) (= ($generated@@308 ($generated@@137 $generated@@310)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@311)) $generated@@62) (= ($generated@@308 ($generated@@157 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@179 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@179 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) $generated@@81)) (= ($generated@@140 $generated@@352 ($generated@@137 $generated@@351))  (or (= $generated@@352 $generated@@138) (= ($generated@@139 $generated@@352) ($generated@@137 $generated@@351)))))
 :pattern ( ($generated@@140 $generated@@352 ($generated@@137 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@184 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@173) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@267 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@173) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@303 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@303 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@398) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@334 (type $generated@@402))))
(let (($generated@@404 ($generated@@333 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@406) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@315 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@314 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@333 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@332 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))) (and ($generated@@267 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@267 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@433 $generated@@435))) (and ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))) ($generated@@145 $generated@@433 $generated@@435))
 :pattern ( ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@440) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@439) (and (not (= $generated@@440 $generated@@138)) (= ($generated@@139 $generated@@440) ($generated@@137 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@136 $generated@@440)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) ($generated@@137 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@368 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@368 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@399 $generated@@450) ($generated@@442 $generated@@173))))))
 :pattern ( ($generated@@399 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@173) (= (type $generated@@457) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@453) ($generated@@289 ($generated@@183 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) ($generated@@289 ($generated@@183 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@184 $generated@@463 $generated@@46)) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@389 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@184 $generated@@464 $generated@@47)) (and (= ($generated@@289 ($generated@@389 $generated@@3 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@184 $generated@@465 $generated@@44)) (and (= ($generated@@289 ($generated@@389 $generated@@4 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@184 $generated@@467 $generated@@45)) (and (= ($generated@@289 ($generated@@389 $generated@@466 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@389 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@184 ($generated@@289 $generated@@468) $generated@@469) ($generated@@140 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@184 ($generated@@289 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@81) (<= 0 ($generated@@136 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@302 $generated@@471))))
 :pattern ( ($generated@@302 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@417 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@417 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@417 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@425 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@425 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@173) (= (type $generated@@496) $generated@@173)) (= ($generated@@273 ($generated@@183 $generated@@495 $generated@@496)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@163 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@183 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@173) (= (type $generated@@508) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@183 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@282 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@173)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@280 $generated@@515))) ($generated@@267 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@251 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@178 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@178 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@75 ($generated@@436 $generated@@537)) 1)
 :pattern ( ($generated@@436 $generated@@537))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@436 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@436 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@157 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@389 $generated@@547 ($generated@@289 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@289 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@184 ($generated@@85 ($generated@@390 $generated@@548) $generated@@551) $generated@@550) ($generated@@184 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@184 ($generated@@85 ($generated@@400 $generated@@552) $generated@@555) $generated@@554) ($generated@@184 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) $generated@@81)) (and (and ($generated@@152 $generated@@557) (and (not (= $generated@@558 $generated@@138)) (= ($generated@@139 $generated@@558) ($generated@@137 $generated@@556)))) (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@136 $generated@@558))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) $generated@@556))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) ($generated@@137 $generated@@556))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@183 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@183 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@173)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@183 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@183 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@173) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568))) (and (= ($generated@@289 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566) ($generated@@417 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@173) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571))) (and (= ($generated@@289 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569) ($generated@@425 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@67) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) $generated@@173)) ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573))) (and (= ($generated@@289 ($generated@@389 $generated@@164 $generated@@574)) $generated@@574) ($generated@@140 ($generated@@389 $generated@@164 $generated@@574) ($generated@@163 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@85 ($generated@@442 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (= (type ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@70 (type $generated@@587))))
 (=> (and (and (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@584) ($generated@@69 $generated@@4))) (= (type $generated@@585) $generated@@81)) (= (type $generated@@586) $generated@@81)) (= (type $generated@@587) ($generated@@69 $generated@@588))) (= ($generated@@0 ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))  (=> (and (not (= $generated@@586 $generated@@582)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@583 $generated@@586) $generated@@584))) (= $generated@@586 $generated@@585)))))
 :pattern ( ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@589 $generated@@590)) $generated@@64) (= ($generated@@308 ($generated@@163 $generated@@589 $generated@@590)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@164) (= ($generated@@560 ($generated@@289 $generated@@591)) ($generated@@561 $generated@@591)))
 :pattern ( ($generated@@560 ($generated@@289 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@173) ($generated@@184 $generated@@592 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@592)) $generated@@592) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@184 $generated@@593 ($generated@@251 $generated@@594))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@251 $generated@@594))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@251 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@184 $generated@@595 ($generated@@256 $generated@@596))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595) ($generated@@256 $generated@@596))))
 :pattern ( ($generated@@184 $generated@@595 ($generated@@256 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@184 $generated@@597 ($generated@@178 $generated@@598))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597) ($generated@@178 $generated@@598))))
 :pattern ( ($generated@@184 $generated@@597 ($generated@@178 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@184 $generated@@599 ($generated@@509 $generated@@600))) (and (= ($generated@@289 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599) ($generated@@509 $generated@@600))))
 :pattern ( ($generated@@184 $generated@@599 ($generated@@509 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@184 $generated@@602 ($generated@@137 $generated@@601))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@389 $generated@@81 $generated@@602) ($generated@@137 $generated@@601))))
 :pattern ( ($generated@@184 $generated@@602 ($generated@@137 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@67) (= (type $generated@@604) $generated@@173)) ($generated@@184 $generated@@604 ($generated@@157 $generated@@603))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@389 $generated@@81 $generated@@604) ($generated@@157 $generated@@603))))
 :pattern ( ($generated@@184 $generated@@604 ($generated@@157 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (=> (and (and (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@81)) (= (type $generated@@607) ($generated@@69 $generated@@609))) ($generated@@152 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))) ($generated@@145 $generated@@605 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@610 $generated@@613)))) ($generated@@267 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@164) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@616) (and ($generated@@162 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@67) ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@164) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@620) (and ($generated@@162 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@173) (= (type $generated@@623) $generated@@173)) (= ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)) ($generated@@263 ($generated@@183 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)))
)))
(assert (forall (($generated@@624 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))) ($generated@@263 ($generated@@289 ($generated@@8 $generated@@624))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@289 ($generated@@263 $generated@@625)) ($generated@@263 ($generated@@289 $generated@@625)))
 :pattern ( ($generated@@289 ($generated@@263 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@282 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@281 $generated@@627)) (= ($generated@@280 $generated@@626) 0)) (= $generated@@626 ($generated@@279 $generated@@627))))
 :pattern ( ($generated@@280 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@302 $generated@@628) ($generated ($generated@@85 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@2)) ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@3)) ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@4)) ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@466)) ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@173)) ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@281 $generated@@173)) (= (type $generated@@643) $generated@@67)) (= ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@280 $generated@@642))) ($generated@@184 ($generated@@510 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@510 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@281 $generated@@173)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@280 $generated@@646))) (< ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))) ($generated@@645 $generated@@646))))
 :pattern ( ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@649) $generated@@67)) (= (type $generated@@650) $generated@@67)) ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650))) (and (and ($generated@@140 ($generated@@312 $generated@@648) ($generated@@251 $generated@@649)) ($generated@@140 ($generated@@357 $generated@@648) ($generated@@251 $generated@@650))) ($generated@@140 ($generated@@388 $generated@@648) ($generated@@251 ($generated@@163 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@652) $generated@@67)) (= (type $generated@@653) $generated@@67)) ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653))) (and (and ($generated@@140 ($generated@@330 $generated@@651) ($generated@@256 $generated@@652)) ($generated@@140 ($generated@@368 $generated@@651) ($generated@@256 $generated@@653))) ($generated@@140 ($generated@@399 $generated@@651) ($generated@@256 ($generated@@163 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@140 $generated@@654 $generated@@46))
 :pattern ( ($generated@@140 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@140 $generated@@655 $generated@@47))
 :pattern ( ($generated@@140 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@140 $generated@@656 $generated@@44))
 :pattern ( ($generated@@140 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@466) ($generated@@140 $generated@@657 $generated@@45))
 :pattern ( ($generated@@140 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@173) ($generated@@140 $generated@@658 $generated@@48))
 :pattern ( ($generated@@140 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Bool)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 (T@U) Bool)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@662) $generated@@81) (= (type $generated@@663) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@666) $generated@@81)) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) ($generated@@195 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@675 true))
(let (($generated@@676  (=> (and (< $generated@@659 ($generated@@261 0)) (= (ControlFlow 0 17) 15)) $generated@@675)))
(let (($generated@@677  (=> (and (<= ($generated@@261 0) $generated@@659) (= (ControlFlow 0 16) 15)) $generated@@675)))
(let (($generated@@678  (=> (not $generated@@660) (and (=> (= (ControlFlow 0 18) 16) $generated@@677) (=> (= (ControlFlow 0 18) 17) $generated@@676)))))
(let (($generated@@679  (=> (and (< $generated@@659 10) (= $generated@@661 (- 10 $generated@@659))) (and (=> (= (ControlFlow 0 4) (- 0 13)) (not (= $generated@@662 $generated@@138))) (=> (not (= $generated@@662 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 12)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@662)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@662))) (and (=> (= (ControlFlow 0 4) (- 0 11)) ($generated@@0 ($generated@@193 $generated@@663 $generated@@662 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@663 $generated@@662 ($generated@@436 ($generated@@261 0)))) (=> (and (= $generated@@664 ($generated@@86 $generated@@665 $generated@@662 ($generated@@88 ($generated@@85 $generated@@665 $generated@@662) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@659))))) ($generated@@152 $generated@@664)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@666 $generated@@138))) (=> (not (= $generated@@666 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@666)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@666))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@193 $generated@@663 $generated@@666 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@663 $generated@@666 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@667 ($generated@@86 $generated@@664 $generated@@666 ($generated@@88 ($generated@@85 $generated@@664 $generated@@666) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@659))))) (=> (and ($generated@@152 $generated@@667) (= $generated@@668 (+ $generated@@659 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@661) (= (- 10 $generated@@668) $generated@@661))) (=> (or (<= 0 $generated@@661) (= (- 10 $generated@@668) $generated@@661)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@668) $generated@@661)) (=> (< (- 10 $generated@@668) $generated@@661) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@660 (<= ($generated@@261 0) $generated@@668))) (=> (=> $generated@@660 (<= ($generated@@261 0) $generated@@668)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@660 (<= $generated@@668 ($generated@@261 10))))))))))))))))))))))))))))
(let (($generated@@680 true))
(let (($generated@@681  (=> $generated@@660 (and (=> (= (ControlFlow 0 14) 2) $generated@@680) (=> (= (ControlFlow 0 14) 4) $generated@@679)))))
(let (($generated@@682  (and (=> (= (ControlFlow 0 19) 18) $generated@@678) (=> (= (ControlFlow 0 19) 14) $generated@@681))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (and ($generated@@152 $generated@@665) ($generated@@669 $generated@@665)) (=> (and (and (not false) (and (<= 0 $generated@@659) (< $generated@@659 11))) (= $generated@@670 10)) (=> (and (and (and (=> $generated@@660 true) (=> $generated@@660 (<= ($generated@@261 0) $generated@@659))) (and (=> $generated@@660 (<= $generated@@659 ($generated@@261 10))) (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@81) (=> (and (not (= $generated@@685 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@671 $generated@@685) $generated@@60))) (or (= ($generated@@85 $generated@@665 $generated@@685) ($generated@@85 $generated@@671 $generated@@685)) (or (= $generated@@685 $generated@@662) (= $generated@@685 $generated@@666)))))
 :pattern ( ($generated@@85 $generated@@665 $generated@@685))
)))) (and (and ($generated@@145 $generated@@671 $generated@@665) (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 ($generated@@70 (type $generated@@687))))
 (=> (and (and (= (type $generated@@686) $generated@@81) (= (type $generated@@687) ($generated@@69 $generated@@688))) (and (not (= $generated@@686 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@671 $generated@@686) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@665 $generated@@686) $generated@@687) ($generated@@87 ($generated@@85 $generated@@671 $generated@@686) $generated@@687)) ($generated@@0 ($generated@@193 $generated@@663 $generated@@686 $generated@@687)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@665 $generated@@686) $generated@@687))
))) (and (<= (- 10 $generated@@659) $generated@@670) (=> (= (- 10 $generated@@659) $generated@@670) true)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@683) (=> (= (ControlFlow 0 20) 19) $generated@@682)))))))
(let (($generated@@689  (=> (and (= $generated@@672 ($generated@@194 $generated@@138 $generated@@671 $generated@@60 $generated@@662 $generated@@666)) (= $generated@@673 ($generated@@261 0))) (and (=> (= (ControlFlow 0 21) (- 0 24)) (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (! (let (($generated@@692 ($generated@@70 (type $generated@@691))))
 (=> (and (= (type $generated@@690) $generated@@81) (= (type $generated@@691) ($generated@@69 $generated@@692))) (=> (and (and (not (= $generated@@690 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@671 $generated@@690) $generated@@60))) (= $generated@@690 $generated@@662)) ($generated@@0 ($generated@@193 $generated@@672 $generated@@690 $generated@@691)))))
 :no-pattern (type $generated@@690)
 :no-pattern (type $generated@@691)
 :no-pattern ($generated $generated@@690)
 :no-pattern ($generated@@0 $generated@@690)
 :no-pattern ($generated $generated@@691)
 :no-pattern ($generated@@0 $generated@@691)
))) (=> (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (! (let (($generated@@695 ($generated@@70 (type $generated@@694))))
 (=> (and (= (type $generated@@693) $generated@@81) (= (type $generated@@694) ($generated@@69 $generated@@695))) (=> (and (and (not (= $generated@@693 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@671 $generated@@693) $generated@@60))) (= $generated@@693 $generated@@662)) ($generated@@0 ($generated@@193 $generated@@672 $generated@@693 $generated@@694)))))
 :no-pattern (type $generated@@693)
 :no-pattern (type $generated@@694)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
 :no-pattern ($generated $generated@@694)
 :no-pattern ($generated@@0 $generated@@694)
)) (=> (and (= $generated@@663 ($generated@@577 $generated@@138 $generated@@671 $generated@@60 $generated@@662)) (= $generated@@670 (- 10 $generated@@673))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> $generated@@660 (<= ($generated@@261 0) $generated@@673))) (=> (=> $generated@@660 (<= ($generated@@261 0) $generated@@673)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@660 (<= $generated@@673 ($generated@@261 10)))) (=> (=> $generated@@660 (<= $generated@@673 ($generated@@261 10))) (=> (= (ControlFlow 0 21) 20) $generated@@684)))))))))))
(let (($generated@@696  (=> (and ($generated@@152 $generated@@671) ($generated@@669 $generated@@671)) (=> (and (and (and ($generated@@140 $generated@@662 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@662 ($generated@@157 $generated@@46) $generated@@671)) (and ($generated@@140 $generated@@666 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@666 ($generated@@157 $generated@@46) $generated@@671))) (and (and (= 1 $generated@@674) (> ($generated@@136 $generated@@662) 0)) (and (> ($generated@@136 $generated@@666) 0) (= (ControlFlow 0 25) 21)))) $generated@@689))))
$generated@@696)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@194 $generated@@80 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@70 (type $generated@@248))))
 (=> (and (and (and (and (and (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@244) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@80)) (= (type $generated@@246) $generated@@80)) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) ($generated@@69 $generated@@249))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@242)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@243 $generated@@247) $generated@@244))) (or (= $generated@@247 $generated@@245) (= $generated@@247 $generated@@246))))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@172) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@183 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@172) ($generated@@0 ($generated@@84 $generated@@257 $generated@@259))) ($generated@@183 $generated@@259 $generated@@258))
 :pattern ( ($generated@@84 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@182 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@183 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@182 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@182 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@183 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@183 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@183 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@183 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@183 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@183 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@182 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@182 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@182 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@250 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@250 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@255 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@255 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@255 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@183 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@183 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@183 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@183 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@182 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@182 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@182 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@182 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@183 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@250 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@250 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@250 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@255 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@255 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@255 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@183 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@183 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@183 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@183 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@182 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@591)) ($generated@@260 ($generated@@286 $generated@@591)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@279 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@278 $generated@@593)) (= ($generated@@277 $generated@@592) 0)) (= $generated@@592 ($generated@@276 $generated@@593))))
 :pattern ( ($generated@@277 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@79 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@299 $generated@@594) ($generated ($generated@@84 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@2)) ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@3)) ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@4)) ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@457)) ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@172)) ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@278 $generated@@172)) (= (type $generated@@609) $generated@@67)) (= ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@277 $generated@@608))) ($generated@@183 ($generated@@501 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@501 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@277 $generated@@612))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@67)) ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616))) (and (and ($generated@@139 ($generated@@309 $generated@@614) ($generated@@250 $generated@@615)) ($generated@@139 ($generated@@354 $generated@@614) ($generated@@250 $generated@@616))) ($generated@@139 ($generated@@385 $generated@@614) ($generated@@250 ($generated@@162 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619))) (and (and ($generated@@139 ($generated@@327 $generated@@617) ($generated@@255 $generated@@618)) ($generated@@139 ($generated@@365 $generated@@617) ($generated@@255 $generated@@619))) ($generated@@139 ($generated@@396 $generated@@617) ($generated@@255 ($generated@@162 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@139 $generated@@620 $generated@@46))
 :pattern ( ($generated@@139 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@139 $generated@@621 $generated@@47))
 :pattern ( ($generated@@139 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@139 $generated@@622 $generated@@44))
 :pattern ( ($generated@@139 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@457) ($generated@@139 $generated@@623 $generated@@45))
 :pattern ( ($generated@@139 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@172) ($generated@@139 $generated@@624 $generated@@48))
 :pattern ( ($generated@@139 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@625) ($generated@@194 $generated@@80 $generated@@4)) (= (type $generated@@626) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@627) $generated@@80)) (= (type $generated@@628) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@631  (=> (= $generated@@625 ($generated@@193 $generated@@137 $generated@@626 $generated@@60 $generated@@627 $generated@@628)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@627 $generated@@137))) (=> (not (= $generated@@627 $generated@@137)) (=> (and (> ($generated@@135 $generated@@627) 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@628 $generated@@137))))))))
(let (($generated@@632  (=> (and (and (and ($generated@@151 $generated@@626) ($generated@@629 $generated@@626)) (and ($generated@@139 $generated@@627 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@627 ($generated@@156 $generated@@46) $generated@@626))) (and (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@626)) (and (= 1 $generated@@630) (= (ControlFlow 0 4) 2)))) $generated@@631)))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@577 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@645 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@81)) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@248) $generated@@245))) (or (= $generated@@248 $generated@@246) (= $generated@@248 $generated@@247))))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@184 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@184 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@173)) (= (type $generated@@271) $generated@@173)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@272)) (= ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@164) (= ($generated@@162 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@164) ($generated@@162 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@173) (= (type $generated@@278) $generated@@173)) (= $generated@@276 ($generated@@183 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@162 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@81)) (= ($generated@@140 $generated@@288 ($generated@@157 $generated@@287))  (and ($generated@@140 $generated@@288 ($generated@@137 $generated@@287)) (not (= $generated@@288 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@288 ($generated@@157 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@173)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@296) $generated@@173)) (= (type $generated@@297) $generated@@67)) ($generated@@145 $generated@@294 $generated@@295)) ($generated@@267 $generated@@296 $generated@@297 $generated@@294)) ($generated@@267 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@145 $generated@@294 $generated@@295) ($generated@@267 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@301) $generated@@67)) ($generated@@145 $generated@@298 $generated@@299)) ($generated@@78 $generated@@300 $generated@@301 $generated@@298)) ($generated@@78 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@145 $generated@@298 $generated@@299) ($generated@@78 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@83 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@80 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@85 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@310)) $generated@@61) (= ($generated@@308 ($generated@@137 $generated@@310)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@311)) $generated@@62) (= ($generated@@308 ($generated@@157 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@179 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@179 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) $generated@@81)) (= ($generated@@140 $generated@@352 ($generated@@137 $generated@@351))  (or (= $generated@@352 $generated@@138) (= ($generated@@139 $generated@@352) ($generated@@137 $generated@@351)))))
 :pattern ( ($generated@@140 $generated@@352 ($generated@@137 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@184 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@173) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@267 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@173) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@303 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@303 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@398) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@334 (type $generated@@402))))
(let (($generated@@404 ($generated@@333 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@406) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@315 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@314 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@333 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@332 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))) (and ($generated@@267 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@267 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@433 $generated@@435))) (and ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))) ($generated@@145 $generated@@433 $generated@@435))
 :pattern ( ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@440) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@439) (and (not (= $generated@@440 $generated@@138)) (= ($generated@@139 $generated@@440) ($generated@@137 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@136 $generated@@440)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) ($generated@@137 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@368 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@368 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@399 $generated@@450) ($generated@@442 $generated@@173))))))
 :pattern ( ($generated@@399 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@173) (= (type $generated@@457) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@453) ($generated@@289 ($generated@@183 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) ($generated@@289 ($generated@@183 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@184 $generated@@463 $generated@@46)) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@389 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@184 $generated@@464 $generated@@47)) (and (= ($generated@@289 ($generated@@389 $generated@@3 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@184 $generated@@465 $generated@@44)) (and (= ($generated@@289 ($generated@@389 $generated@@4 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@184 $generated@@467 $generated@@45)) (and (= ($generated@@289 ($generated@@389 $generated@@466 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@389 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@184 ($generated@@289 $generated@@468) $generated@@469) ($generated@@140 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@184 ($generated@@289 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@81) (<= 0 ($generated@@136 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@302 $generated@@471))))
 :pattern ( ($generated@@302 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@417 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@417 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@417 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@425 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@425 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@173) (= (type $generated@@496) $generated@@173)) (= ($generated@@273 ($generated@@183 $generated@@495 $generated@@496)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@163 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@183 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@173) (= (type $generated@@508) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@183 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@282 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@173)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@280 $generated@@515))) ($generated@@267 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@251 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@178 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@178 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@75 ($generated@@436 $generated@@537)) 1)
 :pattern ( ($generated@@436 $generated@@537))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@436 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@436 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@157 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@389 $generated@@547 ($generated@@289 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@289 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@184 ($generated@@85 ($generated@@390 $generated@@548) $generated@@551) $generated@@550) ($generated@@184 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@184 ($generated@@85 ($generated@@400 $generated@@552) $generated@@555) $generated@@554) ($generated@@184 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) $generated@@81)) (and (and ($generated@@152 $generated@@557) (and (not (= $generated@@558 $generated@@138)) (= ($generated@@139 $generated@@558) ($generated@@137 $generated@@556)))) (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@136 $generated@@558))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) $generated@@556))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) ($generated@@137 $generated@@556))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@183 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@183 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@173)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@183 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@183 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@173) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568))) (and (= ($generated@@289 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566) ($generated@@417 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@173) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571))) (and (= ($generated@@289 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569) ($generated@@425 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@67) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) $generated@@173)) ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573))) (and (= ($generated@@289 ($generated@@389 $generated@@164 $generated@@574)) $generated@@574) ($generated@@140 ($generated@@389 $generated@@164 $generated@@574) ($generated@@163 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@85 ($generated@@442 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (= (type ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@70 (type $generated@@587))))
 (=> (and (and (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@584) ($generated@@69 $generated@@4))) (= (type $generated@@585) $generated@@81)) (= (type $generated@@586) $generated@@81)) (= (type $generated@@587) ($generated@@69 $generated@@588))) (= ($generated@@0 ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))  (=> (and (not (= $generated@@586 $generated@@582)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@583 $generated@@586) $generated@@584))) (= $generated@@586 $generated@@585)))))
 :pattern ( ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@589 $generated@@590)) $generated@@64) (= ($generated@@308 ($generated@@163 $generated@@589 $generated@@590)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@164) (= ($generated@@560 ($generated@@289 $generated@@591)) ($generated@@561 $generated@@591)))
 :pattern ( ($generated@@560 ($generated@@289 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@173) ($generated@@184 $generated@@592 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@592)) $generated@@592) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@184 $generated@@593 ($generated@@251 $generated@@594))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@251 $generated@@594))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@251 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@184 $generated@@595 ($generated@@256 $generated@@596))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595) ($generated@@256 $generated@@596))))
 :pattern ( ($generated@@184 $generated@@595 ($generated@@256 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@184 $generated@@597 ($generated@@178 $generated@@598))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597) ($generated@@178 $generated@@598))))
 :pattern ( ($generated@@184 $generated@@597 ($generated@@178 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@184 $generated@@599 ($generated@@509 $generated@@600))) (and (= ($generated@@289 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599) ($generated@@509 $generated@@600))))
 :pattern ( ($generated@@184 $generated@@599 ($generated@@509 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@184 $generated@@602 ($generated@@137 $generated@@601))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@389 $generated@@81 $generated@@602) ($generated@@137 $generated@@601))))
 :pattern ( ($generated@@184 $generated@@602 ($generated@@137 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@67) (= (type $generated@@604) $generated@@173)) ($generated@@184 $generated@@604 ($generated@@157 $generated@@603))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@389 $generated@@81 $generated@@604) ($generated@@157 $generated@@603))))
 :pattern ( ($generated@@184 $generated@@604 ($generated@@157 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (=> (and (and (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@81)) (= (type $generated@@607) ($generated@@69 $generated@@609))) ($generated@@152 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))) ($generated@@145 $generated@@605 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@610 $generated@@613)))) ($generated@@267 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@164) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@616) (and ($generated@@162 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@67) ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@164) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@620) (and ($generated@@162 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@173) (= (type $generated@@623) $generated@@173)) (= ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)) ($generated@@263 ($generated@@183 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)))
)))
(assert (forall (($generated@@624 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))) ($generated@@263 ($generated@@289 ($generated@@8 $generated@@624))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@289 ($generated@@263 $generated@@625)) ($generated@@263 ($generated@@289 $generated@@625)))
 :pattern ( ($generated@@289 ($generated@@263 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@282 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@281 $generated@@627)) (= ($generated@@280 $generated@@626) 0)) (= $generated@@626 ($generated@@279 $generated@@627))))
 :pattern ( ($generated@@280 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@302 $generated@@628) ($generated ($generated@@85 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@2)) ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@3)) ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@4)) ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@466)) ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@173)) ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@281 $generated@@173)) (= (type $generated@@643) $generated@@67)) (= ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@280 $generated@@642))) ($generated@@184 ($generated@@510 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@510 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@281 $generated@@173)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@280 $generated@@646))) (< ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))) ($generated@@645 $generated@@646))))
 :pattern ( ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@649) $generated@@67)) (= (type $generated@@650) $generated@@67)) ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650))) (and (and ($generated@@140 ($generated@@312 $generated@@648) ($generated@@251 $generated@@649)) ($generated@@140 ($generated@@357 $generated@@648) ($generated@@251 $generated@@650))) ($generated@@140 ($generated@@388 $generated@@648) ($generated@@251 ($generated@@163 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@652) $generated@@67)) (= (type $generated@@653) $generated@@67)) ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653))) (and (and ($generated@@140 ($generated@@330 $generated@@651) ($generated@@256 $generated@@652)) ($generated@@140 ($generated@@368 $generated@@651) ($generated@@256 $generated@@653))) ($generated@@140 ($generated@@399 $generated@@651) ($generated@@256 ($generated@@163 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@140 $generated@@654 $generated@@46))
 :pattern ( ($generated@@140 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@140 $generated@@655 $generated@@47))
 :pattern ( ($generated@@140 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@140 $generated@@656 $generated@@44))
 :pattern ( ($generated@@140 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@466) ($generated@@140 $generated@@657 $generated@@45))
 :pattern ( ($generated@@140 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@173) ($generated@@140 $generated@@658 $generated@@48))
 :pattern ( ($generated@@140 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Bool)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) $generated@@81)) (= (type $generated@@663) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@673) ($generated@@195 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@676 true))
(let (($generated@@677  (=> (and (< $generated@@659 ($generated@@261 0)) (= (ControlFlow 0 17) 15)) $generated@@676)))
(let (($generated@@678  (=> (and (<= ($generated@@261 0) $generated@@659) (= (ControlFlow 0 16) 15)) $generated@@676)))
(let (($generated@@679  (=> (not $generated@@660) (and (=> (= (ControlFlow 0 18) 16) $generated@@678) (=> (= (ControlFlow 0 18) 17) $generated@@677)))))
(let (($generated@@680  (=> (and (< $generated@@659 10) (= $generated@@661 (- 10 $generated@@659))) (and (=> (= (ControlFlow 0 7) (- 0 13)) (not (= $generated@@662 $generated@@138))) (=> (not (= $generated@@662 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 12)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@662)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@662))) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@0 ($generated@@193 $generated@@663 $generated@@662 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@663 $generated@@662 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@664 ($generated@@86 $generated@@665 $generated@@662 ($generated@@88 ($generated@@85 $generated@@665 $generated@@662) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@659))))) (=> (and ($generated@@152 $generated@@664) (= $generated@@666 (+ $generated@@659 1))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (<= 0 $generated@@661) (= (- 10 $generated@@666) $generated@@661))) (=> (or (<= 0 $generated@@661) (= (- 10 $generated@@666) $generated@@661)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (< (- 10 $generated@@666) $generated@@661)) (=> (< (- 10 $generated@@666) $generated@@661) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@660 (<= ($generated@@261 0) $generated@@666))) (=> (=> $generated@@660 (<= ($generated@@261 0) $generated@@666)) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@660 (<= $generated@@666 ($generated@@261 10)))))))))))))))))))))
(let (($generated@@681  (=> (<= 10 $generated@@659) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667)))) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated ($generated@@389 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@667) ($generated@@436 ($generated@@261 0))))) ($generated@@261 4)))))))))
(let (($generated@@682  (=> $generated@@660 (and (=> (= (ControlFlow 0 14) 3) $generated@@681) (=> (= (ControlFlow 0 14) 7) $generated@@680)))))
(let (($generated@@683  (and (=> (= (ControlFlow 0 19) 18) $generated@@679) (=> (= (ControlFlow 0 19) 14) $generated@@682))))
(let (($generated@@684 true))
(let (($generated@@685  (=> (and ($generated@@152 $generated@@665) ($generated@@668 $generated@@665)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@659) (< $generated@@659 11))) (= $generated@@669 4)) (= $generated@@670 10)) (and (and (and (=> $generated@@660 true) (=> $generated@@660 (<= ($generated@@261 0) $generated@@659))) (and (=> $generated@@660 (<= $generated@@659 ($generated@@261 10))) (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@81) (=> (and (not (= $generated@@686 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@671 $generated@@686) $generated@@60))) (or (= ($generated@@85 $generated@@665 $generated@@686) ($generated@@85 $generated@@672 $generated@@686)) (or (= $generated@@686 $generated@@662) (= $generated@@686 $generated@@667)))))
 :pattern ( ($generated@@85 $generated@@665 $generated@@686))
)))) (and (and ($generated@@145 $generated@@672 $generated@@665) (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@70 (type $generated@@688))))
 (=> (and (and (= (type $generated@@687) $generated@@81) (= (type $generated@@688) ($generated@@69 $generated@@689))) (and (not (= $generated@@687 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@672 $generated@@687) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@665 $generated@@687) $generated@@688) ($generated@@87 ($generated@@85 $generated@@672 $generated@@687) $generated@@688)) ($generated@@0 ($generated@@193 $generated@@663 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@665 $generated@@687) $generated@@688))
))) (and (<= (- 10 $generated@@659) $generated@@670) (=> (= (- 10 $generated@@659) $generated@@670) true))))) (and (=> (= (ControlFlow 0 20) 1) $generated@@684) (=> (= (ControlFlow 0 20) 19) $generated@@683))))))
(let (($generated@@690  (=> (and (= $generated@@673 ($generated@@194 $generated@@138 $generated@@671 $generated@@60 $generated@@662 $generated@@667)) (= $generated@@674 ($generated@@261 0))) (and (=> (= (ControlFlow 0 21) (- 0 27)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 21) (- 0 26)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667))) (and (=> (= (ControlFlow 0 21) (- 0 25)) ($generated@@0 ($generated@@193 $generated@@673 $generated@@667 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@673 $generated@@667 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@669 ($generated@@261 4)) (=> (and (= $generated@@672 ($generated@@86 $generated@@671 $generated@@667 ($generated@@88 ($generated@@85 $generated@@671 $generated@@667) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@669))))) ($generated@@152 $generated@@672)) (and (=> (= (ControlFlow 0 21) (- 0 24)) (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@70 (type $generated@@692))))
 (=> (and (= (type $generated@@691) $generated@@81) (= (type $generated@@692) ($generated@@69 $generated@@693))) (=> (and (and (not (= $generated@@691 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@672 $generated@@691) $generated@@60))) (= $generated@@691 $generated@@662)) ($generated@@0 ($generated@@193 $generated@@673 $generated@@691 $generated@@692)))))
 :no-pattern (type $generated@@691)
 :no-pattern (type $generated@@692)
 :no-pattern ($generated $generated@@691)
 :no-pattern ($generated@@0 $generated@@691)
 :no-pattern ($generated $generated@@692)
 :no-pattern ($generated@@0 $generated@@692)
))) (=> (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (! (let (($generated@@696 ($generated@@70 (type $generated@@695))))
 (=> (and (= (type $generated@@694) $generated@@81) (= (type $generated@@695) ($generated@@69 $generated@@696))) (=> (and (and (not (= $generated@@694 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@672 $generated@@694) $generated@@60))) (= $generated@@694 $generated@@662)) ($generated@@0 ($generated@@193 $generated@@673 $generated@@694 $generated@@695)))))
 :no-pattern (type $generated@@694)
 :no-pattern (type $generated@@695)
 :no-pattern ($generated $generated@@694)
 :no-pattern ($generated@@0 $generated@@694)
 :no-pattern ($generated $generated@@695)
 :no-pattern ($generated@@0 $generated@@695)
)) (=> (and (= $generated@@663 ($generated@@577 $generated@@138 $generated@@672 $generated@@60 $generated@@662)) (= $generated@@670 (- 10 $generated@@674))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> $generated@@660 (<= ($generated@@261 0) $generated@@674))) (=> (=> $generated@@660 (<= ($generated@@261 0) $generated@@674)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@660 (<= $generated@@674 ($generated@@261 10)))) (=> (=> $generated@@660 (<= $generated@@674 ($generated@@261 10))) (=> (= (ControlFlow 0 21) 20) $generated@@685)))))))))))))))))))
(let (($generated@@697  (=> (and (and ($generated@@152 $generated@@671) ($generated@@668 $generated@@671)) (and ($generated@@140 $generated@@662 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@662 ($generated@@157 $generated@@46) $generated@@671))) (=> (and (and (and ($generated@@140 $generated@@667 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@667 ($generated@@157 $generated@@46) $generated@@671)) (= 1 $generated@@675)) (and (and (> ($generated@@136 $generated@@662) 0) (> ($generated@@136 $generated@@667) 0)) (and (not (= $generated@@662 $generated@@667)) (= (ControlFlow 0 28) 21)))) $generated@@690))))
$generated@@697)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@492 (T@U T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@494 (T@T T@T) T@T)
(declare-fun $generated@@495 (T@T) T@T)
(declare-fun $generated@@496 (T@T) T@T)
(declare-fun $generated@@497 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@613 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@498 T@T) ($generated@@499 T@T) ) (= ($generated@@1 ($generated@@494 $generated@@498 $generated@@499)) 20)) (forall (($generated@@500 T@T) ($generated@@501 T@T) ) (! (= ($generated@@495 ($generated@@494 $generated@@500 $generated@@501)) $generated@@500)
 :pattern ( ($generated@@494 $generated@@500 $generated@@501))
))) (forall (($generated@@502 T@T) ($generated@@503 T@T) ) (! (= ($generated@@496 ($generated@@494 $generated@@502 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@494 $generated@@502 $generated@@503))
))) (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@496 (type $generated@@504))))
(= (type ($generated@@492 $generated@@504 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@492 $generated@@504 $generated@@505 $generated@@506))
))) (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 (type $generated@@509)))
(= (type ($generated@@497 $generated@@508 $generated@@509 $generated@@510 $generated@@511)) ($generated@@494 $generated@@513 $generated@@512))))
 :pattern ( ($generated@@497 $generated@@508 $generated@@509 $generated@@510 $generated@@511))
))) (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@496 (type $generated@@514))))
 (=> (= (type $generated@@517) $generated@@518) (= ($generated@@492 ($generated@@497 $generated@@514 $generated@@515 $generated@@516 $generated@@517) $generated@@515 $generated@@516) $generated@@517)))
 :weight 0
))) (and (and (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (or (= $generated@@521 $generated@@523) (= ($generated@@492 ($generated@@497 $generated@@520 $generated@@521 $generated@@522 $generated@@519) $generated@@523 $generated@@524) ($generated@@492 $generated@@520 $generated@@523 $generated@@524)))
 :weight 0
)) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (or (= $generated@@528 $generated@@530) (= ($generated@@492 ($generated@@497 $generated@@526 $generated@@527 $generated@@528 $generated@@525) $generated@@529 $generated@@530) ($generated@@492 $generated@@526 $generated@@529 $generated@@530)))
 :weight 0
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (or true (= ($generated@@492 ($generated@@497 $generated@@532 $generated@@533 $generated@@534 $generated@@531) $generated@@535 $generated@@536) ($generated@@492 $generated@@532 $generated@@535 $generated@@536)))
 :weight 0
)))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (! (= (type ($generated@@493 $generated@@537 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542)) ($generated@@494 $generated@@80 $generated@@4))
 :pattern ( ($generated@@493 $generated@@537 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@70 (type $generated@@550))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@543) $generated@@80) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@545) ($generated@@69 $generated@@4))) (= (type $generated@@546) $generated@@80)) (= (type $generated@@547) $generated@@80)) (= (type $generated@@548) $generated@@80)) (= (type $generated@@549) $generated@@80)) (= (type $generated@@550) ($generated@@69 $generated@@551))) (= ($generated@@0 ($generated@@492 ($generated@@493 $generated@@543 $generated@@544 $generated@@545 $generated@@546 $generated@@547 $generated@@548) $generated@@549 $generated@@550))  (=> (and (not (= $generated@@549 $generated@@543)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@544 $generated@@549) $generated@@545))) (or (or (= $generated@@549 $generated@@546) (= $generated@@549 $generated@@547)) (= $generated@@549 $generated@@548))))))
 :pattern ( ($generated@@492 ($generated@@493 $generated@@543 $generated@@544 $generated@@545 $generated@@546 $generated@@547 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@172) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) ($generated@@183 $generated@@552 ($generated@@356 $generated@@553 $generated@@554))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@552) ($generated@@356 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@183 $generated@@552 ($generated@@356 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@172) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) $generated@@67)) ($generated@@183 $generated@@555 ($generated@@364 $generated@@556 $generated@@557))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@555)) $generated@@555) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@555) ($generated@@364 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@183 $generated@@555 ($generated@@364 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@172)) ($generated@@183 $generated@@560 ($generated@@162 $generated@@558 $generated@@559))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@560)) $generated@@560) ($generated@@139 ($generated@@328 $generated@@163 $generated@@560) ($generated@@162 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@183 $generated@@560 ($generated@@162 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@84 ($generated@@375 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@563 $generated@@564)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@563 $generated@@564)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@565)) ($generated@@487 $generated@@565)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@172) ($generated@@183 $generated@@566 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@566)) $generated@@566) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@566) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@566 ($generated@@78 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@192 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@192 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@192 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@197 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@569) ($generated@@197 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@197 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@183 $generated@@571 ($generated@@177 $generated@@572))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@571) ($generated@@177 $generated@@572))))
 :pattern ( ($generated@@183 $generated@@571 ($generated@@177 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@172) (= (type $generated@@574) $generated@@67)) ($generated@@183 $generated@@573 ($generated@@442 $generated@@574))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@573)) $generated@@573) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@573) ($generated@@442 $generated@@574))))
 :pattern ( ($generated@@183 $generated@@573 ($generated@@442 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@183 $generated@@576 ($generated@@136 $generated@@575))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@328 $generated@@80 $generated@@576) ($generated@@136 $generated@@575))))
 :pattern ( ($generated@@183 $generated@@576 ($generated@@136 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@172)) ($generated@@183 $generated@@578 ($generated@@156 $generated@@577))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@578)) $generated@@578) ($generated@@139 ($generated@@328 $generated@@80 $generated@@578) ($generated@@156 $generated@@577))))
 :pattern ( ($generated@@183 $generated@@578 ($generated@@156 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@579 ($generated@@177 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@579 $generated@@582)))) ($generated@@206 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@84 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@177 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@206 ($generated@@170 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@163) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@589) (and ($generated@@161 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@67) ($generated@@77 $generated@@587 ($generated@@162 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@77 $generated@@587 ($generated@@162 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@206 ($generated@@171 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@172) (= (type $generated@@592) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@591) ($generated@@202 $generated@@592)) ($generated@@202 ($generated@@182 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@591) ($generated@@202 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@593)) ($generated@@202 ($generated@@228 $generated@@593)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@221 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@220 $generated@@595)) (= ($generated@@219 $generated@@594) 0)) (= $generated@@594 ($generated@@218 $generated@@595))))
 :pattern ( ($generated@@219 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@79 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@241 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@241 $generated@@596) ($generated ($generated@@84 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@2)) ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@3)) ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@4)) ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@399)) ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@172)) ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@220 $generated@@172)) (= (type $generated@@611) $generated@@67)) (= ($generated@@139 $generated@@610 ($generated@@442 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@219 $generated@@610))) ($generated@@183 ($generated@@443 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@443 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@139 $generated@@610 ($generated@@442 $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ) (!  (=> (= (type $generated@@614) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@219 $generated@@614))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@614 $generated@@615))) ($generated@@613 $generated@@614))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@614 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@67)) ($generated@@139 $generated@@616 ($generated@@356 $generated@@617 $generated@@618))) (and (and ($generated@@139 ($generated@@251 $generated@@616) ($generated@@192 $generated@@617)) ($generated@@139 ($generated@@296 $generated@@616) ($generated@@192 $generated@@618))) ($generated@@139 ($generated@@327 $generated@@616) ($generated@@192 ($generated@@162 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@356 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@620) $generated@@67)) (= (type $generated@@621) $generated@@67)) ($generated@@139 $generated@@619 ($generated@@364 $generated@@620 $generated@@621))) (and (and ($generated@@139 ($generated@@269 $generated@@619) ($generated@@197 $generated@@620)) ($generated@@139 ($generated@@307 $generated@@619) ($generated@@197 $generated@@621))) ($generated@@139 ($generated@@338 $generated@@619) ($generated@@197 ($generated@@162 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@139 $generated@@619 ($generated@@364 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) ($generated@@139 $generated@@622 $generated@@46))
 :pattern ( ($generated@@139 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@3) ($generated@@139 $generated@@623 $generated@@47))
 :pattern ( ($generated@@139 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@4) ($generated@@139 $generated@@624 $generated@@44))
 :pattern ( ($generated@@139 $generated@@624 $generated@@44))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@399) ($generated@@139 $generated@@625 $generated@@45))
 :pattern ( ($generated@@139 $generated@@625 $generated@@45))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@172) ($generated@@139 $generated@@626 $generated@@48))
 :pattern ( ($generated@@139 $generated@@626 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (= (type $generated@@627) ($generated@@494 $generated@@80 $generated@@4)) (= (type $generated@@628) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@629) $generated@@80)) (= (type $generated@@630) $generated@@80)) (= (type $generated@@631) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@634  (=> (= $generated@@627 ($generated@@493 $generated@@137 $generated@@628 $generated@@60 $generated@@629 $generated@@630 $generated@@631)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@629 $generated@@137))) (=> (not (= $generated@@629 $generated@@137)) (=> (> ($generated@@135 $generated@@629) 0) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@630 $generated@@137))) (=> (not (= $generated@@630 $generated@@137)) (=> (and (> ($generated@@135 $generated@@630) 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@631 $generated@@137)))))))))))
(let (($generated@@635  (=> (and ($generated@@151 $generated@@628) ($generated@@632 $generated@@628)) (=> (and (and (and ($generated@@139 $generated@@629 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@629 ($generated@@156 $generated@@46) $generated@@628)) (and ($generated@@139 $generated@@630 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@630 ($generated@@156 $generated@@46) $generated@@628))) (and (and ($generated@@139 $generated@@631 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@631 ($generated@@156 $generated@@46) $generated@@628)) (and (= 1 $generated@@633) (= (ControlFlow 0 5) 2)))) $generated@@634))))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@566 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@593 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@81)) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@248) $generated@@245))) (or (= $generated@@248 $generated@@246) (= $generated@@248 $generated@@247))))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@184 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@184 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@173)) (= (type $generated@@271) $generated@@173)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@272)) (= ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@164) (= ($generated@@162 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@164) ($generated@@162 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@173) (= (type $generated@@278) $generated@@173)) (= $generated@@276 ($generated@@183 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@162 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@81)) (= ($generated@@140 $generated@@288 ($generated@@157 $generated@@287))  (and ($generated@@140 $generated@@288 ($generated@@137 $generated@@287)) (not (= $generated@@288 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@288 ($generated@@157 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@173)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@296) $generated@@173)) (= (type $generated@@297) $generated@@67)) ($generated@@145 $generated@@294 $generated@@295)) ($generated@@267 $generated@@296 $generated@@297 $generated@@294)) ($generated@@267 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@145 $generated@@294 $generated@@295) ($generated@@267 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@301) $generated@@67)) ($generated@@145 $generated@@298 $generated@@299)) ($generated@@78 $generated@@300 $generated@@301 $generated@@298)) ($generated@@78 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@145 $generated@@298 $generated@@299) ($generated@@78 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@83 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@80 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@85 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@310)) $generated@@61) (= ($generated@@308 ($generated@@137 $generated@@310)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@311)) $generated@@62) (= ($generated@@308 ($generated@@157 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@179 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@179 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) $generated@@81)) (= ($generated@@140 $generated@@352 ($generated@@137 $generated@@351))  (or (= $generated@@352 $generated@@138) (= ($generated@@139 $generated@@352) ($generated@@137 $generated@@351)))))
 :pattern ( ($generated@@140 $generated@@352 ($generated@@137 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@184 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@173) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@267 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@173) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@303 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@303 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@398) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@334 (type $generated@@402))))
(let (($generated@@404 ($generated@@333 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@406) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@315 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@314 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@333 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@332 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))) (and ($generated@@267 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@267 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@433 $generated@@435))) (and ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))) ($generated@@145 $generated@@433 $generated@@435))
 :pattern ( ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@440) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@439) (and (not (= $generated@@440 $generated@@138)) (= ($generated@@139 $generated@@440) ($generated@@137 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@136 $generated@@440)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) ($generated@@137 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@368 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@368 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@399 $generated@@450) ($generated@@442 $generated@@173))))))
 :pattern ( ($generated@@399 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@173) (= (type $generated@@457) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@453) ($generated@@289 ($generated@@183 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) ($generated@@289 ($generated@@183 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@184 $generated@@463 $generated@@46)) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@389 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@184 $generated@@464 $generated@@47)) (and (= ($generated@@289 ($generated@@389 $generated@@3 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@184 $generated@@465 $generated@@44)) (and (= ($generated@@289 ($generated@@389 $generated@@4 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@184 $generated@@467 $generated@@45)) (and (= ($generated@@289 ($generated@@389 $generated@@466 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@389 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@184 ($generated@@289 $generated@@468) $generated@@469) ($generated@@140 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@184 ($generated@@289 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@81) (<= 0 ($generated@@136 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@302 $generated@@471))))
 :pattern ( ($generated@@302 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@417 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@417 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@417 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@425 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@425 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@173) (= (type $generated@@496) $generated@@173)) (= ($generated@@273 ($generated@@183 $generated@@495 $generated@@496)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@163 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@183 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@173) (= (type $generated@@508) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@183 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@282 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@173)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@280 $generated@@515))) ($generated@@267 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@251 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@178 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@178 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@75 ($generated@@436 $generated@@537)) 1)
 :pattern ( ($generated@@436 $generated@@537))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@436 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@436 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@157 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@389 $generated@@547 ($generated@@289 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@289 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@184 ($generated@@85 ($generated@@390 $generated@@548) $generated@@551) $generated@@550) ($generated@@184 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@184 ($generated@@85 ($generated@@400 $generated@@552) $generated@@555) $generated@@554) ($generated@@184 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) $generated@@81)) (and (and ($generated@@152 $generated@@557) (and (not (= $generated@@558 $generated@@138)) (= ($generated@@139 $generated@@558) ($generated@@137 $generated@@556)))) (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@136 $generated@@558))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) $generated@@556))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) ($generated@@137 $generated@@556))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@183 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@183 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@173)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@183 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@183 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (= (type ($generated@@566 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@566 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@70 (type $generated@@580))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@573) $generated@@81) (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@575) ($generated@@69 $generated@@4))) (= (type $generated@@576) $generated@@81)) (= (type $generated@@577) $generated@@81)) (= (type $generated@@578) $generated@@81)) (= (type $generated@@579) $generated@@81)) (= (type $generated@@580) ($generated@@69 $generated@@581))) (= ($generated@@0 ($generated@@193 ($generated@@566 $generated@@573 $generated@@574 $generated@@575 $generated@@576 $generated@@577 $generated@@578) $generated@@579 $generated@@580))  (=> (and (not (= $generated@@579 $generated@@573)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@574 $generated@@579) $generated@@575))) (or (or (= $generated@@579 $generated@@576) (= $generated@@579 $generated@@577)) (= $generated@@579 $generated@@578))))))
 :pattern ( ($generated@@193 ($generated@@566 $generated@@573 $generated@@574 $generated@@575 $generated@@576 $generated@@577 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@173) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@582 ($generated@@417 $generated@@583 $generated@@584))) (and (= ($generated@@289 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@582) ($generated@@417 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@582 ($generated@@417 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@425 $generated@@586 $generated@@587))) (and (= ($generated@@289 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@585) ($generated@@425 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@425 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@67) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@163 $generated@@588 $generated@@589))) (and (= ($generated@@289 ($generated@@389 $generated@@164 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@389 $generated@@164 $generated@@590) ($generated@@163 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@163 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@85 ($generated@@442 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (= (type ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@70 (type $generated@@603))))
 (=> (and (and (and (and (and (= (type $generated@@598) $generated@@81) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@600) ($generated@@69 $generated@@4))) (= (type $generated@@601) $generated@@81)) (= (type $generated@@602) $generated@@81)) (= (type $generated@@603) ($generated@@69 $generated@@604))) (= ($generated@@0 ($generated@@193 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))  (=> (and (not (= $generated@@602 $generated@@598)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@599 $generated@@602) $generated@@600))) (= $generated@@602 $generated@@601)))))
 :pattern ( ($generated@@193 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@605 $generated@@606)) $generated@@64) (= ($generated@@308 ($generated@@163 $generated@@605 $generated@@606)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@164) (= ($generated@@560 ($generated@@289 $generated@@607)) ($generated@@561 $generated@@607)))
 :pattern ( ($generated@@560 ($generated@@289 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) ($generated@@184 $generated@@608 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@608) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@608 ($generated@@79 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@173) (= (type $generated@@610) $generated@@67)) ($generated@@184 $generated@@609 ($generated@@251 $generated@@610))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@609)) $generated@@609) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@609) ($generated@@251 $generated@@610))))
 :pattern ( ($generated@@184 $generated@@609 ($generated@@251 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@173) (= (type $generated@@612) $generated@@67)) ($generated@@184 $generated@@611 ($generated@@256 $generated@@612))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@611)) $generated@@611) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@611) ($generated@@256 $generated@@612))))
 :pattern ( ($generated@@184 $generated@@611 ($generated@@256 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@173) (= (type $generated@@614) $generated@@67)) ($generated@@184 $generated@@613 ($generated@@178 $generated@@614))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@613)) $generated@@613) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@613) ($generated@@178 $generated@@614))))
 :pattern ( ($generated@@184 $generated@@613 ($generated@@178 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@173) (= (type $generated@@616) $generated@@67)) ($generated@@184 $generated@@615 ($generated@@509 $generated@@616))) (and (= ($generated@@289 ($generated@@389 ($generated@@281 $generated@@173) $generated@@615)) $generated@@615) ($generated@@140 ($generated@@389 ($generated@@281 $generated@@173) $generated@@615) ($generated@@509 $generated@@616))))
 :pattern ( ($generated@@184 $generated@@615 ($generated@@509 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@173)) ($generated@@184 $generated@@618 ($generated@@137 $generated@@617))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@618)) $generated@@618) ($generated@@140 ($generated@@389 $generated@@81 $generated@@618) ($generated@@137 $generated@@617))))
 :pattern ( ($generated@@184 $generated@@618 ($generated@@137 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@173)) ($generated@@184 $generated@@620 ($generated@@157 $generated@@619))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@620)) $generated@@620) ($generated@@140 ($generated@@389 $generated@@81 $generated@@620) ($generated@@157 $generated@@619))))
 :pattern ( ($generated@@184 $generated@@620 ($generated@@157 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
 (=> (and (and (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@81)) (= (type $generated@@623) ($generated@@69 $generated@@625))) ($generated@@152 ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))) ($generated@@145 $generated@@621 ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@626 ($generated@@178 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@626 $generated@@629)))) ($generated@@267 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@85 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@178 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@164) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@632) (and ($generated@@162 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@78 $generated@@630 ($generated@@163 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@163 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@267 ($generated@@171 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@267 ($generated@@171 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@164) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@636) (and ($generated@@162 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@67) ($generated@@78 $generated@@634 ($generated@@163 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@78 $generated@@634 ($generated@@163 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@267 ($generated@@172 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@267 ($generated@@172 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@173) (= (type $generated@@639) $generated@@173)) (= ($generated@@183 ($generated@@263 $generated@@638) ($generated@@263 $generated@@639)) ($generated@@263 ($generated@@183 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@183 ($generated@@263 $generated@@638) ($generated@@263 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@261 $generated@@640))) ($generated@@263 ($generated@@289 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@261 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@289 ($generated@@263 $generated@@641)) ($generated@@263 ($generated@@289 $generated@@641)))
 :pattern ( ($generated@@289 ($generated@@263 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@282 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@281 $generated@@643)) (= ($generated@@280 $generated@@642) 0)) (= $generated@@642 ($generated@@279 $generated@@643))))
 :pattern ( ($generated@@280 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@80 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@302 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@302 $generated@@644) ($generated ($generated@@85 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@302 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@2)) ($generated@@78 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@3)) ($generated@@78 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@4)) ($generated@@78 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) $generated@@466)) ($generated@@78 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@78 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@173)) ($generated@@78 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@281 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= ($generated@@140 $generated@@658 ($generated@@509 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@280 $generated@@658))) ($generated@@184 ($generated@@510 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@510 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@509 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@281 $generated@@173)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@280 $generated@@662))) (< ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@665) $generated@@67)) (= (type $generated@@666) $generated@@67)) ($generated@@140 $generated@@664 ($generated@@417 $generated@@665 $generated@@666))) (and (and ($generated@@140 ($generated@@312 $generated@@664) ($generated@@251 $generated@@665)) ($generated@@140 ($generated@@357 $generated@@664) ($generated@@251 $generated@@666))) ($generated@@140 ($generated@@388 $generated@@664) ($generated@@251 ($generated@@163 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@140 $generated@@664 ($generated@@417 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@668) $generated@@67)) (= (type $generated@@669) $generated@@67)) ($generated@@140 $generated@@667 ($generated@@425 $generated@@668 $generated@@669))) (and (and ($generated@@140 ($generated@@330 $generated@@667) ($generated@@256 $generated@@668)) ($generated@@140 ($generated@@368 $generated@@667) ($generated@@256 $generated@@669))) ($generated@@140 ($generated@@399 $generated@@667) ($generated@@256 ($generated@@163 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@140 $generated@@667 ($generated@@425 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@140 $generated@@670 $generated@@46))
 :pattern ( ($generated@@140 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@140 $generated@@671 $generated@@47))
 :pattern ( ($generated@@140 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@140 $generated@@672 $generated@@44))
 :pattern ( ($generated@@140 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@466) ($generated@@140 $generated@@673 $generated@@45))
 :pattern ( ($generated@@140 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@173) ($generated@@140 $generated@@674 $generated@@48))
 :pattern ( ($generated@@140 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Bool)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Bool)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 (T@U) Bool)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@695) $generated@@81) (= (type $generated@@698) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@680) $generated@@81)) (= (type $generated@@681) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@682) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@683) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@684) $generated@@81)) (= (type $generated@@685) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@697) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@699) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 48) (let (($generated@@702 true))
(let (($generated@@703  (=> (and (< $generated@@675 ($generated@@261 0)) (= (ControlFlow 0 37) 35)) $generated@@702)))
(let (($generated@@704  (=> (and (<= ($generated@@261 0) $generated@@675) (= (ControlFlow 0 36) 35)) $generated@@702)))
(let (($generated@@705  (=> (not $generated@@676) (and (=> (= (ControlFlow 0 38) 36) $generated@@704) (=> (= (ControlFlow 0 38) 37) $generated@@703)))))
(let (($generated@@706 true))
(let (($generated@@707  (=> (and (< $generated@@677 ($generated@@261 0)) (= (ControlFlow 0 26) 24)) $generated@@706)))
(let (($generated@@708  (=> (and (<= ($generated@@261 0) $generated@@677) (= (ControlFlow 0 25) 24)) $generated@@706)))
(let (($generated@@709  (=> (not $generated@@678) (and (=> (= (ControlFlow 0 27) 25) $generated@@708) (=> (= (ControlFlow 0 27) 26) $generated@@707)))))
(let (($generated@@710  (=> (and (< $generated@@677 10) (= $generated@@679 (- 10 $generated@@677))) (and (=> (= (ControlFlow 0 13) (- 0 22)) (not (= $generated@@680 $generated@@138))) (=> (not (= $generated@@680 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 21)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@680)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@680))) (and (=> (= (ControlFlow 0 13) (- 0 20)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@680 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@681 $generated@@680 ($generated@@436 ($generated@@261 0)))) (=> (and (= $generated@@682 ($generated@@86 $generated@@683 $generated@@680 ($generated@@88 ($generated@@85 $generated@@683 $generated@@680) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@677))))) ($generated@@152 $generated@@682)) (and (=> (= (ControlFlow 0 13) (- 0 19)) (not (= $generated@@684 $generated@@138))) (=> (not (= $generated@@684 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@684)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@684))) (and (=> (= (ControlFlow 0 13) (- 0 17)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@684 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@681 $generated@@684 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@685 ($generated@@86 $generated@@682 $generated@@684 ($generated@@88 ($generated@@85 $generated@@682 $generated@@684) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@675))))) (=> (and ($generated@@152 $generated@@685) (= $generated@@686 (+ $generated@@677 1))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (<= 0 $generated@@679) (= (- 10 $generated@@686) $generated@@679))) (=> (or (<= 0 $generated@@679) (= (- 10 $generated@@686) $generated@@679)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (< (- 10 $generated@@686) $generated@@679)) (=> (< (- 10 $generated@@686) $generated@@679) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> $generated@@678 (<= ($generated@@261 0) $generated@@686))) (=> (=> $generated@@678 (<= ($generated@@261 0) $generated@@686)) (=> (= (ControlFlow 0 13) (- 0 12)) (=> $generated@@678 (<= $generated@@686 ($generated@@261 10))))))))))))))))))))))))))))
(let (($generated@@711  (=> (and (<= 10 $generated@@677) (= $generated@@687 (+ $generated@@675 1))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (<= 0 $generated@@688) (= (- 10 $generated@@687) $generated@@688))) (=> (or (<= 0 $generated@@688) (= (- 10 $generated@@687) $generated@@688)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< (- 10 $generated@@687) $generated@@688)) (=> (< (- 10 $generated@@687) $generated@@688) (and (=> (= (ControlFlow 0 8) (- 0 9)) (=> $generated@@676 (<= ($generated@@261 0) $generated@@687))) (=> (=> $generated@@676 (<= ($generated@@261 0) $generated@@687)) (=> (= (ControlFlow 0 8) (- 0 7)) (=> $generated@@676 (<= $generated@@687 ($generated@@261 10)))))))))))))
(let (($generated@@712  (=> $generated@@678 (and (=> (= (ControlFlow 0 23) 8) $generated@@711) (=> (= (ControlFlow 0 23) 13) $generated@@710)))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 28) 27) $generated@@709) (=> (= (ControlFlow 0 28) 23) $generated@@712))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (and ($generated@@152 $generated@@683) ($generated@@689 $generated@@683)) (=> (and (and (and (and (and (and (and (and (not false) (and (<= 0 $generated@@675) (< $generated@@675 10))) (= $generated@@690 4)) (= $generated@@691 10)) $generated@@676) (and (<= 1 $generated@@688) (< $generated@@688 11))) (and (<= 0 $generated@@677) (< $generated@@677 11))) (= $generated@@692 10)) (and (and (and (=> $generated@@678 true) (=> $generated@@678 (<= ($generated@@261 0) $generated@@677))) (and (=> $generated@@678 (<= $generated@@677 ($generated@@261 10))) (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@81) (=> (and (not (= $generated@@716 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@716) $generated@@60))) (or (= ($generated@@85 $generated@@683 $generated@@716) ($generated@@85 $generated@@694 $generated@@716)) (or (or (= $generated@@716 $generated@@680) (= $generated@@716 $generated@@684)) (= $generated@@716 $generated@@695)))))
 :pattern ( ($generated@@85 $generated@@683 $generated@@716))
)))) (and (and ($generated@@145 $generated@@694 $generated@@683) (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@70 (type $generated@@718))))
 (=> (and (and (= (type $generated@@717) $generated@@81) (= (type $generated@@718) ($generated@@69 $generated@@719))) (and (not (= $generated@@717 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@694 $generated@@717) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@683 $generated@@717) $generated@@718) ($generated@@87 ($generated@@85 $generated@@694 $generated@@717) $generated@@718)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@717 $generated@@718)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@683 $generated@@717) $generated@@718))
))) (and (<= (- 10 $generated@@677) $generated@@692) (=> (= (- 10 $generated@@677) $generated@@692) true))))) (and (=> (= (ControlFlow 0 29) 6) $generated@@714) (=> (= (ControlFlow 0 29) 28) $generated@@713))))))
(let (($generated@@720  (=> (< $generated@@675 10) (=> (and (= $generated@@688 (- 10 $generated@@675)) (= $generated@@696 ($generated@@261 0))) (and (=> (= (ControlFlow 0 30) (- 0 33)) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 ($generated@@70 (type $generated@@722))))
 (=> (and (= (type $generated@@721) $generated@@81) (= (type $generated@@722) ($generated@@69 $generated@@723))) (=> (and (and (not (= $generated@@721 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@694 $generated@@721) $generated@@60))) (= $generated@@721 $generated@@680)) ($generated@@0 ($generated@@193 $generated@@697 $generated@@721 $generated@@722)))))
 :no-pattern (type $generated@@721)
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
))) (=> (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@70 (type $generated@@725))))
 (=> (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) ($generated@@69 $generated@@726))) (=> (and (and (not (= $generated@@724 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@694 $generated@@724) $generated@@60))) (= $generated@@724 $generated@@680)) ($generated@@0 ($generated@@193 $generated@@697 $generated@@724 $generated@@725)))))
 :no-pattern (type $generated@@724)
 :no-pattern (type $generated@@725)
 :no-pattern ($generated $generated@@724)
 :no-pattern ($generated@@0 $generated@@724)
 :no-pattern ($generated $generated@@725)
 :no-pattern ($generated@@0 $generated@@725)
)) (=> (and (= $generated@@681 ($generated@@593 $generated@@138 $generated@@694 $generated@@60 $generated@@680)) (= $generated@@692 (- 10 $generated@@696))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@678 (<= ($generated@@261 0) $generated@@696))) (=> (=> $generated@@678 (<= ($generated@@261 0) $generated@@696)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@678 (<= $generated@@696 ($generated@@261 10)))) (=> (=> $generated@@678 (<= $generated@@696 ($generated@@261 10))) (=> (= (ControlFlow 0 30) 29) $generated@@715))))))))))))
(let (($generated@@727  (=> (<= 10 $generated@@675) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@695 $generated@@138))) (=> (not (= $generated@@695 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@695)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@695))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@193 $generated@@698 $generated@@695 ($generated@@436 ($generated@@261 0))))))))))))
(let (($generated@@728  (=> $generated@@676 (and (=> (= (ControlFlow 0 34) 3) $generated@@727) (=> (= (ControlFlow 0 34) 30) $generated@@720)))))
(let (($generated@@729  (and (=> (= (ControlFlow 0 39) 38) $generated@@705) (=> (= (ControlFlow 0 39) 34) $generated@@728))))
(let (($generated@@730 true))
(let (($generated@@731  (=> (and ($generated@@152 $generated@@694) ($generated@@689 $generated@@694)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@675) (< $generated@@675 11))) (= $generated@@690 4)) (= $generated@@691 10)) (and (and (and (=> $generated@@676 true) (=> $generated@@676 (<= ($generated@@261 0) $generated@@675))) (and (=> $generated@@676 (<= $generated@@675 ($generated@@261 10))) (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@81) (=> (and (not (= $generated@@732 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@732) $generated@@60))) (or (= ($generated@@85 $generated@@694 $generated@@732) ($generated@@85 $generated@@699 $generated@@732)) (or (or (= $generated@@732 $generated@@680) (= $generated@@732 $generated@@684)) (= $generated@@732 $generated@@695)))))
 :pattern ( ($generated@@85 $generated@@694 $generated@@732))
)))) (and (and ($generated@@145 $generated@@699 $generated@@694) (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@70 (type $generated@@734))))
 (=> (and (and (= (type $generated@@733) $generated@@81) (= (type $generated@@734) ($generated@@69 $generated@@735))) (and (not (= $generated@@733 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@733) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@694 $generated@@733) $generated@@734) ($generated@@87 ($generated@@85 $generated@@699 $generated@@733) $generated@@734)) ($generated@@0 ($generated@@193 $generated@@697 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@694 $generated@@733) $generated@@734))
))) (and (<= (- 10 $generated@@675) $generated@@691) (=> (= (- 10 $generated@@675) $generated@@691) true))))) (and (=> (= (ControlFlow 0 40) 1) $generated@@730) (=> (= (ControlFlow 0 40) 39) $generated@@729))))))
(let (($generated@@736  (=> (and (= $generated@@698 ($generated@@566 $generated@@138 $generated@@693 $generated@@60 $generated@@680 $generated@@684 $generated@@695)) (= $generated@@700 ($generated@@261 0))) (and (=> (= (ControlFlow 0 41) (- 0 47)) (not (= $generated@@684 $generated@@138))) (=> (not (= $generated@@684 $generated@@138)) (and (=> (= (ControlFlow 0 41) (- 0 46)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@684)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@684))) (and (=> (= (ControlFlow 0 41) (- 0 45)) ($generated@@0 ($generated@@193 $generated@@698 $generated@@684 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@698 $generated@@684 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@690 ($generated@@261 4)) (=> (and (= $generated@@699 ($generated@@86 $generated@@693 $generated@@684 ($generated@@88 ($generated@@85 $generated@@693 $generated@@684) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@690))))) ($generated@@152 $generated@@699)) (and (=> (= (ControlFlow 0 41) (- 0 44)) (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@70 (type $generated@@738))))
 (=> (and (= (type $generated@@737) $generated@@81) (= (type $generated@@738) ($generated@@69 $generated@@739))) (=> (and (and (not (= $generated@@737 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@737) $generated@@60))) (or (= $generated@@737 $generated@@680) (= $generated@@737 $generated@@684))) ($generated@@0 ($generated@@193 $generated@@698 $generated@@737 $generated@@738)))))
 :no-pattern (type $generated@@737)
 :no-pattern (type $generated@@738)
 :no-pattern ($generated $generated@@737)
 :no-pattern ($generated@@0 $generated@@737)
 :no-pattern ($generated $generated@@738)
 :no-pattern ($generated@@0 $generated@@738)
))) (=> (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 ($generated@@70 (type $generated@@741))))
 (=> (and (= (type $generated@@740) $generated@@81) (= (type $generated@@741) ($generated@@69 $generated@@742))) (=> (and (and (not (= $generated@@740 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@740) $generated@@60))) (or (= $generated@@740 $generated@@680) (= $generated@@740 $generated@@684))) ($generated@@0 ($generated@@193 $generated@@698 $generated@@740 $generated@@741)))))
 :no-pattern (type $generated@@740)
 :no-pattern (type $generated@@741)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
 :no-pattern ($generated $generated@@741)
 :no-pattern ($generated@@0 $generated@@741)
)) (=> (and (= $generated@@697 ($generated@@194 $generated@@138 $generated@@699 $generated@@60 $generated@@680 $generated@@684)) (= $generated@@691 (- 10 $generated@@700))) (and (=> (= (ControlFlow 0 41) (- 0 43)) (=> $generated@@676 (<= ($generated@@261 0) $generated@@700))) (=> (=> $generated@@676 (<= ($generated@@261 0) $generated@@700)) (and (=> (= (ControlFlow 0 41) (- 0 42)) (=> $generated@@676 (<= $generated@@700 ($generated@@261 10)))) (=> (=> $generated@@676 (<= $generated@@700 ($generated@@261 10))) (=> (= (ControlFlow 0 41) 40) $generated@@731)))))))))))))))))))
(let (($generated@@743  (=> (and (and (and (and ($generated@@152 $generated@@693) ($generated@@689 $generated@@693)) (and ($generated@@140 $generated@@680 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@680 ($generated@@157 $generated@@46) $generated@@693))) (and (and ($generated@@140 $generated@@684 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@684 ($generated@@157 $generated@@46) $generated@@693)) (and ($generated@@140 $generated@@695 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@695 ($generated@@157 $generated@@46) $generated@@693)))) (and (and (and (= 1 $generated@@701) (> ($generated@@136 $generated@@680) 0)) (and (> ($generated@@136 $generated@@684) 0) (> ($generated@@136 $generated@@695) 0))) (and (and (not (= $generated@@680 $generated@@684)) (not (= $generated@@684 $generated@@695))) (and (not (= $generated@@695 $generated@@680)) (= (ControlFlow 0 48) 41))))) $generated@@736)))
$generated@@743)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 17))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@492 (T@U T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@494 (T@T T@T) T@T)
(declare-fun $generated@@495 (T@T) T@T)
(declare-fun $generated@@496 (T@T) T@T)
(declare-fun $generated@@497 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@613 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@498 T@T) ($generated@@499 T@T) ) (= ($generated@@1 ($generated@@494 $generated@@498 $generated@@499)) 20)) (forall (($generated@@500 T@T) ($generated@@501 T@T) ) (! (= ($generated@@495 ($generated@@494 $generated@@500 $generated@@501)) $generated@@500)
 :pattern ( ($generated@@494 $generated@@500 $generated@@501))
))) (forall (($generated@@502 T@T) ($generated@@503 T@T) ) (! (= ($generated@@496 ($generated@@494 $generated@@502 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@494 $generated@@502 $generated@@503))
))) (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@496 (type $generated@@504))))
(= (type ($generated@@492 $generated@@504 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@492 $generated@@504 $generated@@505 $generated@@506))
))) (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 (type $generated@@509)))
(= (type ($generated@@497 $generated@@508 $generated@@509 $generated@@510 $generated@@511)) ($generated@@494 $generated@@513 $generated@@512))))
 :pattern ( ($generated@@497 $generated@@508 $generated@@509 $generated@@510 $generated@@511))
))) (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@496 (type $generated@@514))))
 (=> (= (type $generated@@517) $generated@@518) (= ($generated@@492 ($generated@@497 $generated@@514 $generated@@515 $generated@@516 $generated@@517) $generated@@515 $generated@@516) $generated@@517)))
 :weight 0
))) (and (and (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (or (= $generated@@521 $generated@@523) (= ($generated@@492 ($generated@@497 $generated@@520 $generated@@521 $generated@@522 $generated@@519) $generated@@523 $generated@@524) ($generated@@492 $generated@@520 $generated@@523 $generated@@524)))
 :weight 0
)) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (or (= $generated@@528 $generated@@530) (= ($generated@@492 ($generated@@497 $generated@@526 $generated@@527 $generated@@528 $generated@@525) $generated@@529 $generated@@530) ($generated@@492 $generated@@526 $generated@@529 $generated@@530)))
 :weight 0
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (or true (= ($generated@@492 ($generated@@497 $generated@@532 $generated@@533 $generated@@534 $generated@@531) $generated@@535 $generated@@536) ($generated@@492 $generated@@532 $generated@@535 $generated@@536)))
 :weight 0
)))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (! (= (type ($generated@@493 $generated@@537 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542)) ($generated@@494 $generated@@80 $generated@@4))
 :pattern ( ($generated@@493 $generated@@537 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@70 (type $generated@@550))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@543) $generated@@80) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@545) ($generated@@69 $generated@@4))) (= (type $generated@@546) $generated@@80)) (= (type $generated@@547) $generated@@80)) (= (type $generated@@548) $generated@@80)) (= (type $generated@@549) $generated@@80)) (= (type $generated@@550) ($generated@@69 $generated@@551))) (= ($generated@@0 ($generated@@492 ($generated@@493 $generated@@543 $generated@@544 $generated@@545 $generated@@546 $generated@@547 $generated@@548) $generated@@549 $generated@@550))  (=> (and (not (= $generated@@549 $generated@@543)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@544 $generated@@549) $generated@@545))) (or (or (= $generated@@549 $generated@@546) (= $generated@@549 $generated@@547)) (= $generated@@549 $generated@@548))))))
 :pattern ( ($generated@@492 ($generated@@493 $generated@@543 $generated@@544 $generated@@545 $generated@@546 $generated@@547 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@172) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) ($generated@@183 $generated@@552 ($generated@@356 $generated@@553 $generated@@554))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@552) ($generated@@356 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@183 $generated@@552 ($generated@@356 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@172) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) $generated@@67)) ($generated@@183 $generated@@555 ($generated@@364 $generated@@556 $generated@@557))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@555)) $generated@@555) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@555) ($generated@@364 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@183 $generated@@555 ($generated@@364 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@172)) ($generated@@183 $generated@@560 ($generated@@162 $generated@@558 $generated@@559))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@560)) $generated@@560) ($generated@@139 ($generated@@328 $generated@@163 $generated@@560) ($generated@@162 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@183 $generated@@560 ($generated@@162 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@84 ($generated@@375 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@563 $generated@@564)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@563 $generated@@564)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@565)) ($generated@@487 $generated@@565)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@172) ($generated@@183 $generated@@566 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@566)) $generated@@566) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@566) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@566 ($generated@@78 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@192 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@192 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@192 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@197 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@569) ($generated@@197 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@197 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@183 $generated@@571 ($generated@@177 $generated@@572))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@571) ($generated@@177 $generated@@572))))
 :pattern ( ($generated@@183 $generated@@571 ($generated@@177 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@172) (= (type $generated@@574) $generated@@67)) ($generated@@183 $generated@@573 ($generated@@442 $generated@@574))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@573)) $generated@@573) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@573) ($generated@@442 $generated@@574))))
 :pattern ( ($generated@@183 $generated@@573 ($generated@@442 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@183 $generated@@576 ($generated@@136 $generated@@575))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@328 $generated@@80 $generated@@576) ($generated@@136 $generated@@575))))
 :pattern ( ($generated@@183 $generated@@576 ($generated@@136 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@172)) ($generated@@183 $generated@@578 ($generated@@156 $generated@@577))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@578)) $generated@@578) ($generated@@139 ($generated@@328 $generated@@80 $generated@@578) ($generated@@156 $generated@@577))))
 :pattern ( ($generated@@183 $generated@@578 ($generated@@156 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@579 ($generated@@177 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@579 $generated@@582)))) ($generated@@206 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@84 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@177 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@206 ($generated@@170 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@163) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@589) (and ($generated@@161 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@67) ($generated@@77 $generated@@587 ($generated@@162 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@77 $generated@@587 ($generated@@162 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@206 ($generated@@171 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@172) (= (type $generated@@592) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@591) ($generated@@202 $generated@@592)) ($generated@@202 ($generated@@182 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@591) ($generated@@202 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@593)) ($generated@@202 ($generated@@228 $generated@@593)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@221 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@220 $generated@@595)) (= ($generated@@219 $generated@@594) 0)) (= $generated@@594 ($generated@@218 $generated@@595))))
 :pattern ( ($generated@@219 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@79 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@241 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@241 $generated@@596) ($generated ($generated@@84 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@2)) ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@3)) ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@4)) ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@399)) ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@172)) ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@220 $generated@@172)) (= (type $generated@@611) $generated@@67)) (= ($generated@@139 $generated@@610 ($generated@@442 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@219 $generated@@610))) ($generated@@183 ($generated@@443 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@443 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@139 $generated@@610 ($generated@@442 $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ) (!  (=> (= (type $generated@@614) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@219 $generated@@614))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@614 $generated@@615))) ($generated@@613 $generated@@614))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@614 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@67)) ($generated@@139 $generated@@616 ($generated@@356 $generated@@617 $generated@@618))) (and (and ($generated@@139 ($generated@@251 $generated@@616) ($generated@@192 $generated@@617)) ($generated@@139 ($generated@@296 $generated@@616) ($generated@@192 $generated@@618))) ($generated@@139 ($generated@@327 $generated@@616) ($generated@@192 ($generated@@162 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@356 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@620) $generated@@67)) (= (type $generated@@621) $generated@@67)) ($generated@@139 $generated@@619 ($generated@@364 $generated@@620 $generated@@621))) (and (and ($generated@@139 ($generated@@269 $generated@@619) ($generated@@197 $generated@@620)) ($generated@@139 ($generated@@307 $generated@@619) ($generated@@197 $generated@@621))) ($generated@@139 ($generated@@338 $generated@@619) ($generated@@197 ($generated@@162 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@139 $generated@@619 ($generated@@364 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) ($generated@@139 $generated@@622 $generated@@46))
 :pattern ( ($generated@@139 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@3) ($generated@@139 $generated@@623 $generated@@47))
 :pattern ( ($generated@@139 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@4) ($generated@@139 $generated@@624 $generated@@44))
 :pattern ( ($generated@@139 $generated@@624 $generated@@44))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@399) ($generated@@139 $generated@@625 $generated@@45))
 :pattern ( ($generated@@139 $generated@@625 $generated@@45))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@172) ($generated@@139 $generated@@626 $generated@@48))
 :pattern ( ($generated@@139 $generated@@626 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (= (type $generated@@627) ($generated@@494 $generated@@80 $generated@@4)) (= (type $generated@@628) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@629) $generated@@80)) (= (type $generated@@630) $generated@@80)) (= (type $generated@@631) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@634  (=> (= $generated@@627 ($generated@@493 $generated@@137 $generated@@628 $generated@@60 $generated@@629 $generated@@630 $generated@@631)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@629 $generated@@137))) (=> (not (= $generated@@629 $generated@@137)) (=> (> ($generated@@135 $generated@@629) 0) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@630 $generated@@137))) (=> (not (= $generated@@630 $generated@@137)) (=> (and (> ($generated@@135 $generated@@630) 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@631 $generated@@137)))))))))))
(let (($generated@@635  (=> (and ($generated@@151 $generated@@628) ($generated@@632 $generated@@628)) (=> (and (and (and ($generated@@139 $generated@@629 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@629 ($generated@@156 $generated@@46) $generated@@628)) (and ($generated@@139 $generated@@630 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@630 ($generated@@156 $generated@@46) $generated@@628))) (and (and ($generated@@139 $generated@@631 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@631 ($generated@@156 $generated@@46) $generated@@628)) (and (= 1 $generated@@633) (= (ControlFlow 0 5) 2)))) $generated@@634))))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@566 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@593 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@81)) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@248) $generated@@245))) (or (= $generated@@248 $generated@@246) (= $generated@@248 $generated@@247))))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@184 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@184 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@173)) (= (type $generated@@271) $generated@@173)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@272)) (= ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@164) (= ($generated@@162 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@164) ($generated@@162 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@173) (= (type $generated@@278) $generated@@173)) (= $generated@@276 ($generated@@183 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@162 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@81)) (= ($generated@@140 $generated@@288 ($generated@@157 $generated@@287))  (and ($generated@@140 $generated@@288 ($generated@@137 $generated@@287)) (not (= $generated@@288 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@288 ($generated@@157 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@173)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@296) $generated@@173)) (= (type $generated@@297) $generated@@67)) ($generated@@145 $generated@@294 $generated@@295)) ($generated@@267 $generated@@296 $generated@@297 $generated@@294)) ($generated@@267 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@145 $generated@@294 $generated@@295) ($generated@@267 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@301) $generated@@67)) ($generated@@145 $generated@@298 $generated@@299)) ($generated@@78 $generated@@300 $generated@@301 $generated@@298)) ($generated@@78 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@145 $generated@@298 $generated@@299) ($generated@@78 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@83 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@80 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@85 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@310)) $generated@@61) (= ($generated@@308 ($generated@@137 $generated@@310)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@311)) $generated@@62) (= ($generated@@308 ($generated@@157 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@179 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@179 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) $generated@@81)) (= ($generated@@140 $generated@@352 ($generated@@137 $generated@@351))  (or (= $generated@@352 $generated@@138) (= ($generated@@139 $generated@@352) ($generated@@137 $generated@@351)))))
 :pattern ( ($generated@@140 $generated@@352 ($generated@@137 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@184 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@173) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@267 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@173) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@303 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@303 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@398) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@334 (type $generated@@402))))
(let (($generated@@404 ($generated@@333 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@406) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@315 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@314 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@333 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@332 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))) (and ($generated@@267 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@267 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@433 $generated@@435))) (and ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))) ($generated@@145 $generated@@433 $generated@@435))
 :pattern ( ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@440) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@439) (and (not (= $generated@@440 $generated@@138)) (= ($generated@@139 $generated@@440) ($generated@@137 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@136 $generated@@440)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) ($generated@@137 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@368 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@368 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@399 $generated@@450) ($generated@@442 $generated@@173))))))
 :pattern ( ($generated@@399 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@173) (= (type $generated@@457) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@453) ($generated@@289 ($generated@@183 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) ($generated@@289 ($generated@@183 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@184 $generated@@463 $generated@@46)) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@389 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@184 $generated@@464 $generated@@47)) (and (= ($generated@@289 ($generated@@389 $generated@@3 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@184 $generated@@465 $generated@@44)) (and (= ($generated@@289 ($generated@@389 $generated@@4 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@184 $generated@@467 $generated@@45)) (and (= ($generated@@289 ($generated@@389 $generated@@466 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@389 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@184 ($generated@@289 $generated@@468) $generated@@469) ($generated@@140 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@184 ($generated@@289 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@81) (<= 0 ($generated@@136 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@302 $generated@@471))))
 :pattern ( ($generated@@302 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@417 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@417 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@417 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@425 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@425 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@173) (= (type $generated@@496) $generated@@173)) (= ($generated@@273 ($generated@@183 $generated@@495 $generated@@496)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@163 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@183 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@173) (= (type $generated@@508) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@183 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@282 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@173)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@280 $generated@@515))) ($generated@@267 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@251 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@178 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@178 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@75 ($generated@@436 $generated@@537)) 1)
 :pattern ( ($generated@@436 $generated@@537))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@436 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@436 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@157 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@389 $generated@@547 ($generated@@289 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@289 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@184 ($generated@@85 ($generated@@390 $generated@@548) $generated@@551) $generated@@550) ($generated@@184 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@184 ($generated@@85 ($generated@@400 $generated@@552) $generated@@555) $generated@@554) ($generated@@184 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) $generated@@81)) (and (and ($generated@@152 $generated@@557) (and (not (= $generated@@558 $generated@@138)) (= ($generated@@139 $generated@@558) ($generated@@137 $generated@@556)))) (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@136 $generated@@558))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) $generated@@556))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) ($generated@@137 $generated@@556))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@183 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@183 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@173)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@183 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@183 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (= (type ($generated@@566 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@566 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@70 (type $generated@@580))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@573) $generated@@81) (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@575) ($generated@@69 $generated@@4))) (= (type $generated@@576) $generated@@81)) (= (type $generated@@577) $generated@@81)) (= (type $generated@@578) $generated@@81)) (= (type $generated@@579) $generated@@81)) (= (type $generated@@580) ($generated@@69 $generated@@581))) (= ($generated@@0 ($generated@@193 ($generated@@566 $generated@@573 $generated@@574 $generated@@575 $generated@@576 $generated@@577 $generated@@578) $generated@@579 $generated@@580))  (=> (and (not (= $generated@@579 $generated@@573)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@574 $generated@@579) $generated@@575))) (or (or (= $generated@@579 $generated@@576) (= $generated@@579 $generated@@577)) (= $generated@@579 $generated@@578))))))
 :pattern ( ($generated@@193 ($generated@@566 $generated@@573 $generated@@574 $generated@@575 $generated@@576 $generated@@577 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@173) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@582 ($generated@@417 $generated@@583 $generated@@584))) (and (= ($generated@@289 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@582) ($generated@@417 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@582 ($generated@@417 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@425 $generated@@586 $generated@@587))) (and (= ($generated@@289 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@585) ($generated@@425 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@425 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@67) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@163 $generated@@588 $generated@@589))) (and (= ($generated@@289 ($generated@@389 $generated@@164 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@389 $generated@@164 $generated@@590) ($generated@@163 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@163 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@85 ($generated@@442 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (= (type ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@70 (type $generated@@603))))
 (=> (and (and (and (and (and (= (type $generated@@598) $generated@@81) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@600) ($generated@@69 $generated@@4))) (= (type $generated@@601) $generated@@81)) (= (type $generated@@602) $generated@@81)) (= (type $generated@@603) ($generated@@69 $generated@@604))) (= ($generated@@0 ($generated@@193 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))  (=> (and (not (= $generated@@602 $generated@@598)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@599 $generated@@602) $generated@@600))) (= $generated@@602 $generated@@601)))))
 :pattern ( ($generated@@193 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@605 $generated@@606)) $generated@@64) (= ($generated@@308 ($generated@@163 $generated@@605 $generated@@606)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@164) (= ($generated@@560 ($generated@@289 $generated@@607)) ($generated@@561 $generated@@607)))
 :pattern ( ($generated@@560 ($generated@@289 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) ($generated@@184 $generated@@608 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@608)) $generated@@608) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@608) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@608 ($generated@@79 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@173) (= (type $generated@@610) $generated@@67)) ($generated@@184 $generated@@609 ($generated@@251 $generated@@610))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@609)) $generated@@609) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@609) ($generated@@251 $generated@@610))))
 :pattern ( ($generated@@184 $generated@@609 ($generated@@251 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@173) (= (type $generated@@612) $generated@@67)) ($generated@@184 $generated@@611 ($generated@@256 $generated@@612))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@611)) $generated@@611) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@611) ($generated@@256 $generated@@612))))
 :pattern ( ($generated@@184 $generated@@611 ($generated@@256 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@173) (= (type $generated@@614) $generated@@67)) ($generated@@184 $generated@@613 ($generated@@178 $generated@@614))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@613)) $generated@@613) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@613) ($generated@@178 $generated@@614))))
 :pattern ( ($generated@@184 $generated@@613 ($generated@@178 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@173) (= (type $generated@@616) $generated@@67)) ($generated@@184 $generated@@615 ($generated@@509 $generated@@616))) (and (= ($generated@@289 ($generated@@389 ($generated@@281 $generated@@173) $generated@@615)) $generated@@615) ($generated@@140 ($generated@@389 ($generated@@281 $generated@@173) $generated@@615) ($generated@@509 $generated@@616))))
 :pattern ( ($generated@@184 $generated@@615 ($generated@@509 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@173)) ($generated@@184 $generated@@618 ($generated@@137 $generated@@617))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@618)) $generated@@618) ($generated@@140 ($generated@@389 $generated@@81 $generated@@618) ($generated@@137 $generated@@617))))
 :pattern ( ($generated@@184 $generated@@618 ($generated@@137 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@173)) ($generated@@184 $generated@@620 ($generated@@157 $generated@@619))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@620)) $generated@@620) ($generated@@140 ($generated@@389 $generated@@81 $generated@@620) ($generated@@157 $generated@@619))))
 :pattern ( ($generated@@184 $generated@@620 ($generated@@157 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
 (=> (and (and (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@81)) (= (type $generated@@623) ($generated@@69 $generated@@625))) ($generated@@152 ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))) ($generated@@145 $generated@@621 ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@86 $generated@@621 $generated@@622 ($generated@@88 ($generated@@85 $generated@@621 $generated@@622) $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@626 ($generated@@178 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@626 $generated@@629)))) ($generated@@267 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@85 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@178 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@164) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@632) (and ($generated@@162 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@78 $generated@@630 ($generated@@163 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@163 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@267 ($generated@@171 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@267 ($generated@@171 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@164) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@636) (and ($generated@@162 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@67) ($generated@@78 $generated@@634 ($generated@@163 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@78 $generated@@634 ($generated@@163 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@267 ($generated@@172 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@267 ($generated@@172 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@173) (= (type $generated@@639) $generated@@173)) (= ($generated@@183 ($generated@@263 $generated@@638) ($generated@@263 $generated@@639)) ($generated@@263 ($generated@@183 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@183 ($generated@@263 $generated@@638) ($generated@@263 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@261 $generated@@640))) ($generated@@263 ($generated@@289 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@261 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@289 ($generated@@263 $generated@@641)) ($generated@@263 ($generated@@289 $generated@@641)))
 :pattern ( ($generated@@289 ($generated@@263 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@282 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@281 $generated@@643)) (= ($generated@@280 $generated@@642) 0)) (= $generated@@642 ($generated@@279 $generated@@643))))
 :pattern ( ($generated@@280 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@80 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@302 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@302 $generated@@644) ($generated ($generated@@85 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@302 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@2)) ($generated@@78 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@3)) ($generated@@78 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@4)) ($generated@@78 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) $generated@@466)) ($generated@@78 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@78 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@173)) ($generated@@78 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@281 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= ($generated@@140 $generated@@658 ($generated@@509 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@280 $generated@@658))) ($generated@@184 ($generated@@510 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@510 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@509 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@281 $generated@@173)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@280 $generated@@662))) (< ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@665) $generated@@67)) (= (type $generated@@666) $generated@@67)) ($generated@@140 $generated@@664 ($generated@@417 $generated@@665 $generated@@666))) (and (and ($generated@@140 ($generated@@312 $generated@@664) ($generated@@251 $generated@@665)) ($generated@@140 ($generated@@357 $generated@@664) ($generated@@251 $generated@@666))) ($generated@@140 ($generated@@388 $generated@@664) ($generated@@251 ($generated@@163 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@140 $generated@@664 ($generated@@417 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@668) $generated@@67)) (= (type $generated@@669) $generated@@67)) ($generated@@140 $generated@@667 ($generated@@425 $generated@@668 $generated@@669))) (and (and ($generated@@140 ($generated@@330 $generated@@667) ($generated@@256 $generated@@668)) ($generated@@140 ($generated@@368 $generated@@667) ($generated@@256 $generated@@669))) ($generated@@140 ($generated@@399 $generated@@667) ($generated@@256 ($generated@@163 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@140 $generated@@667 ($generated@@425 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@140 $generated@@670 $generated@@46))
 :pattern ( ($generated@@140 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@140 $generated@@671 $generated@@47))
 :pattern ( ($generated@@140 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@140 $generated@@672 $generated@@44))
 :pattern ( ($generated@@140 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@466) ($generated@@140 $generated@@673 $generated@@45))
 :pattern ( ($generated@@140 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@173) ($generated@@140 $generated@@674 $generated@@48))
 :pattern ( ($generated@@140 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Bool)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Bool)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 (T@U) Bool)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@694) $generated@@81) (= (type $generated@@698) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@685) $generated@@81)) (= (type $generated@@683) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@680) $generated@@81)) (= (type $generated@@681) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@682) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@696) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@697) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@699) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 51) (let (($generated@@702 true))
(let (($generated@@703  (=> (and (< $generated@@675 ($generated@@261 0)) (= (ControlFlow 0 40) 38)) $generated@@702)))
(let (($generated@@704  (=> (and (<= ($generated@@261 0) $generated@@675) (= (ControlFlow 0 39) 38)) $generated@@702)))
(let (($generated@@705  (=> (not $generated@@676) (and (=> (= (ControlFlow 0 41) 39) $generated@@704) (=> (= (ControlFlow 0 41) 40) $generated@@703)))))
(let (($generated@@706 true))
(let (($generated@@707  (=> (and (< $generated@@677 ($generated@@261 0)) (= (ControlFlow 0 26) 24)) $generated@@706)))
(let (($generated@@708  (=> (and (<= ($generated@@261 0) $generated@@677) (= (ControlFlow 0 25) 24)) $generated@@706)))
(let (($generated@@709  (=> (not $generated@@678) (and (=> (= (ControlFlow 0 27) 25) $generated@@708) (=> (= (ControlFlow 0 27) 26) $generated@@707)))))
(let (($generated@@710  (=> (and (< $generated@@677 10) (= $generated@@679 (- 10 $generated@@677))) (and (=> (= (ControlFlow 0 16) (- 0 22)) (not (= $generated@@680 $generated@@138))) (=> (not (= $generated@@680 $generated@@138)) (and (=> (= (ControlFlow 0 16) (- 0 21)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@680)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@680))) (and (=> (= (ControlFlow 0 16) (- 0 20)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@680 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@681 $generated@@680 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@682 ($generated@@86 $generated@@683 $generated@@680 ($generated@@88 ($generated@@85 $generated@@683 $generated@@680) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@677))))) (=> (and ($generated@@152 $generated@@682) (= $generated@@684 (+ $generated@@677 1))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (or (<= 0 $generated@@679) (= (- 10 $generated@@684) $generated@@679))) (=> (or (<= 0 $generated@@679) (= (- 10 $generated@@684) $generated@@679)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (< (- 10 $generated@@684) $generated@@679)) (=> (< (- 10 $generated@@684) $generated@@679) (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> $generated@@678 (<= ($generated@@261 0) $generated@@684))) (=> (=> $generated@@678 (<= ($generated@@261 0) $generated@@684)) (=> (= (ControlFlow 0 16) (- 0 15)) (=> $generated@@678 (<= $generated@@684 ($generated@@261 10)))))))))))))))))))))
(let (($generated@@711  (=> (<= 10 $generated@@677) (and (=> (= (ControlFlow 0 8) (- 0 14)) (not (= $generated@@685 $generated@@138))) (=> (not (= $generated@@685 $generated@@138)) (and (=> (= (ControlFlow 0 8) (- 0 13)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@685)))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (= ($generated ($generated@@389 $generated@@2 ($generated@@87 ($generated@@85 $generated@@683 $generated@@685) ($generated@@436 ($generated@@261 0))))) $generated@@675)) (=> (= ($generated ($generated@@389 $generated@@2 ($generated@@87 ($generated@@85 $generated@@683 $generated@@685) ($generated@@436 ($generated@@261 0))))) $generated@@675) (=> (= $generated@@686 (+ $generated@@675 1)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (<= 0 $generated@@687) (= (- 10 $generated@@686) $generated@@687))) (=> (or (<= 0 $generated@@687) (= (- 10 $generated@@686) $generated@@687)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< (- 10 $generated@@686) $generated@@687)) (=> (< (- 10 $generated@@686) $generated@@687) (and (=> (= (ControlFlow 0 8) (- 0 9)) (=> $generated@@676 (<= ($generated@@261 0) $generated@@686))) (=> (=> $generated@@676 (<= ($generated@@261 0) $generated@@686)) (=> (= (ControlFlow 0 8) (- 0 7)) (=> $generated@@676 (<= $generated@@686 ($generated@@261 10)))))))))))))))))))
(let (($generated@@712  (=> $generated@@678 (and (=> (= (ControlFlow 0 23) 8) $generated@@711) (=> (= (ControlFlow 0 23) 16) $generated@@710)))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 28) 27) $generated@@709) (=> (= (ControlFlow 0 28) 23) $generated@@712))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (and ($generated@@152 $generated@@683) ($generated@@688 $generated@@683)) (=> (and (and (and (and (and (and (and (and (and (not false) (and (<= 0 $generated@@675) (< $generated@@675 10))) (= $generated@@689 4)) (= $generated@@690 10)) $generated@@676) (and (<= 1 $generated@@687) (< $generated@@687 11))) (and (<= 0 $generated@@677) (< $generated@@677 11))) (and (<= 0 $generated@@675) (< $generated@@675 10))) (= $generated@@691 10)) (and (and (and (=> $generated@@678 true) (=> $generated@@678 (<= ($generated@@261 0) $generated@@677))) (and (=> $generated@@678 (<= $generated@@677 ($generated@@261 10))) (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@81) (=> (and (not (= $generated@@716 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@692 $generated@@716) $generated@@60))) (or (= ($generated@@85 $generated@@683 $generated@@716) ($generated@@85 $generated@@693 $generated@@716)) (or (or (= $generated@@716 $generated@@680) (= $generated@@716 $generated@@685)) (= $generated@@716 $generated@@694)))))
 :pattern ( ($generated@@85 $generated@@683 $generated@@716))
)))) (and (and ($generated@@145 $generated@@693 $generated@@683) (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@70 (type $generated@@718))))
 (=> (and (and (= (type $generated@@717) $generated@@81) (= (type $generated@@718) ($generated@@69 $generated@@719))) (and (not (= $generated@@717 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@717) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@683 $generated@@717) $generated@@718) ($generated@@87 ($generated@@85 $generated@@693 $generated@@717) $generated@@718)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@717 $generated@@718)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@683 $generated@@717) $generated@@718))
))) (and (<= (- 10 $generated@@677) $generated@@691) (=> (= (- 10 $generated@@677) $generated@@691) true))))) (and (=> (= (ControlFlow 0 29) 6) $generated@@714) (=> (= (ControlFlow 0 29) 28) $generated@@713))))))
(let (($generated@@720  (=> (< $generated@@675 10) (=> (and (= $generated@@687 (- 10 $generated@@675)) (= $generated@@695 ($generated@@261 0))) (and (=> (= (ControlFlow 0 30) (- 0 36)) (not (= $generated@@685 $generated@@138))) (=> (not (= $generated@@685 $generated@@138)) (and (=> (= (ControlFlow 0 30) (- 0 35)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@685)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@685))) (and (=> (= (ControlFlow 0 30) (- 0 34)) ($generated@@0 ($generated@@193 $generated@@696 $generated@@685 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@696 $generated@@685 ($generated@@436 ($generated@@261 0)))) (=> (and (= $generated@@693 ($generated@@86 $generated@@697 $generated@@685 ($generated@@88 ($generated@@85 $generated@@697 $generated@@685) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@675))))) ($generated@@152 $generated@@693)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 ($generated@@70 (type $generated@@722))))
 (=> (and (= (type $generated@@721) $generated@@81) (= (type $generated@@722) ($generated@@69 $generated@@723))) (=> (and (and (not (= $generated@@721 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@721) $generated@@60))) (= $generated@@721 $generated@@680)) ($generated@@0 ($generated@@193 $generated@@696 $generated@@721 $generated@@722)))))
 :no-pattern (type $generated@@721)
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
))) (=> (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@70 (type $generated@@725))))
 (=> (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) ($generated@@69 $generated@@726))) (=> (and (and (not (= $generated@@724 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@693 $generated@@724) $generated@@60))) (= $generated@@724 $generated@@680)) ($generated@@0 ($generated@@193 $generated@@696 $generated@@724 $generated@@725)))))
 :no-pattern (type $generated@@724)
 :no-pattern (type $generated@@725)
 :no-pattern ($generated $generated@@724)
 :no-pattern ($generated@@0 $generated@@724)
 :no-pattern ($generated $generated@@725)
 :no-pattern ($generated@@0 $generated@@725)
)) (=> (and (= $generated@@681 ($generated@@593 $generated@@138 $generated@@693 $generated@@60 $generated@@680)) (= $generated@@691 (- 10 $generated@@695))) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@678 (<= ($generated@@261 0) $generated@@695))) (=> (=> $generated@@678 (<= ($generated@@261 0) $generated@@695)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@678 (<= $generated@@695 ($generated@@261 10)))) (=> (=> $generated@@678 (<= $generated@@695 ($generated@@261 10))) (=> (= (ControlFlow 0 30) 29) $generated@@715)))))))))))))))))))
(let (($generated@@727  (=> (<= 10 $generated@@675) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@694 $generated@@138))) (=> (not (= $generated@@694 $generated@@138)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@694)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@694))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@193 $generated@@698 $generated@@694 ($generated@@436 ($generated@@261 0))))))))))))
(let (($generated@@728  (=> $generated@@676 (and (=> (= (ControlFlow 0 37) 3) $generated@@727) (=> (= (ControlFlow 0 37) 30) $generated@@720)))))
(let (($generated@@729  (and (=> (= (ControlFlow 0 42) 41) $generated@@705) (=> (= (ControlFlow 0 42) 37) $generated@@728))))
(let (($generated@@730 true))
(let (($generated@@731  (=> (and ($generated@@152 $generated@@697) ($generated@@688 $generated@@697)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@675) (< $generated@@675 11))) (= $generated@@689 4)) (= $generated@@690 10)) (and (and (and (=> $generated@@676 true) (=> $generated@@676 (<= ($generated@@261 0) $generated@@675))) (and (=> $generated@@676 (<= $generated@@675 ($generated@@261 10))) (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@81) (=> (and (not (= $generated@@732 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@692 $generated@@732) $generated@@60))) (or (= ($generated@@85 $generated@@697 $generated@@732) ($generated@@85 $generated@@699 $generated@@732)) (or (or (= $generated@@732 $generated@@680) (= $generated@@732 $generated@@685)) (= $generated@@732 $generated@@694)))))
 :pattern ( ($generated@@85 $generated@@697 $generated@@732))
)))) (and (and ($generated@@145 $generated@@699 $generated@@697) (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@70 (type $generated@@734))))
 (=> (and (and (= (type $generated@@733) $generated@@81) (= (type $generated@@734) ($generated@@69 $generated@@735))) (and (not (= $generated@@733 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@733) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@697 $generated@@733) $generated@@734) ($generated@@87 ($generated@@85 $generated@@699 $generated@@733) $generated@@734)) ($generated@@0 ($generated@@193 $generated@@696 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@697 $generated@@733) $generated@@734))
))) (and (<= (- 10 $generated@@675) $generated@@690) (=> (= (- 10 $generated@@675) $generated@@690) true))))) (and (=> (= (ControlFlow 0 43) 1) $generated@@730) (=> (= (ControlFlow 0 43) 42) $generated@@729))))))
(let (($generated@@736  (=> (and (= $generated@@698 ($generated@@566 $generated@@138 $generated@@692 $generated@@60 $generated@@680 $generated@@685 $generated@@694)) (= $generated@@700 ($generated@@261 0))) (and (=> (= (ControlFlow 0 44) (- 0 50)) (not (= $generated@@685 $generated@@138))) (=> (not (= $generated@@685 $generated@@138)) (and (=> (= (ControlFlow 0 44) (- 0 49)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@685)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@685))) (and (=> (= (ControlFlow 0 44) (- 0 48)) ($generated@@0 ($generated@@193 $generated@@698 $generated@@685 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@698 $generated@@685 ($generated@@436 ($generated@@261 0)))) (=> (= $generated@@689 ($generated@@261 4)) (=> (and (= $generated@@699 ($generated@@86 $generated@@692 $generated@@685 ($generated@@88 ($generated@@85 $generated@@692 $generated@@685) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@689))))) ($generated@@152 $generated@@699)) (and (=> (= (ControlFlow 0 44) (- 0 47)) (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@70 (type $generated@@738))))
 (=> (and (= (type $generated@@737) $generated@@81) (= (type $generated@@738) ($generated@@69 $generated@@739))) (=> (and (and (not (= $generated@@737 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@737) $generated@@60))) (or (= $generated@@737 $generated@@680) (= $generated@@737 $generated@@685))) ($generated@@0 ($generated@@193 $generated@@698 $generated@@737 $generated@@738)))))
 :no-pattern (type $generated@@737)
 :no-pattern (type $generated@@738)
 :no-pattern ($generated $generated@@737)
 :no-pattern ($generated@@0 $generated@@737)
 :no-pattern ($generated $generated@@738)
 :no-pattern ($generated@@0 $generated@@738)
))) (=> (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 ($generated@@70 (type $generated@@741))))
 (=> (and (= (type $generated@@740) $generated@@81) (= (type $generated@@741) ($generated@@69 $generated@@742))) (=> (and (and (not (= $generated@@740 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@740) $generated@@60))) (or (= $generated@@740 $generated@@680) (= $generated@@740 $generated@@685))) ($generated@@0 ($generated@@193 $generated@@698 $generated@@740 $generated@@741)))))
 :no-pattern (type $generated@@740)
 :no-pattern (type $generated@@741)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
 :no-pattern ($generated $generated@@741)
 :no-pattern ($generated@@0 $generated@@741)
)) (=> (and (= $generated@@696 ($generated@@194 $generated@@138 $generated@@699 $generated@@60 $generated@@680 $generated@@685)) (= $generated@@690 (- 10 $generated@@700))) (and (=> (= (ControlFlow 0 44) (- 0 46)) (=> $generated@@676 (<= ($generated@@261 0) $generated@@700))) (=> (=> $generated@@676 (<= ($generated@@261 0) $generated@@700)) (and (=> (= (ControlFlow 0 44) (- 0 45)) (=> $generated@@676 (<= $generated@@700 ($generated@@261 10)))) (=> (=> $generated@@676 (<= $generated@@700 ($generated@@261 10))) (=> (= (ControlFlow 0 44) 43) $generated@@731)))))))))))))))))))
(let (($generated@@743  (=> (and (and (and (and ($generated@@152 $generated@@692) ($generated@@688 $generated@@692)) (and ($generated@@140 $generated@@680 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@680 ($generated@@157 $generated@@46) $generated@@692))) (and (and ($generated@@140 $generated@@685 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@685 ($generated@@157 $generated@@46) $generated@@692)) (and ($generated@@140 $generated@@694 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@694 ($generated@@157 $generated@@46) $generated@@692)))) (and (and (and (= 1 $generated@@701) (> ($generated@@136 $generated@@680) 0)) (and (> ($generated@@136 $generated@@685) 0) (> ($generated@@136 $generated@@694) 0))) (and (and (not (= $generated@@680 $generated@@685)) (not (= $generated@@685 $generated@@694))) (and (not (= $generated@@694 $generated@@680)) (= (ControlFlow 0 51) 44))))) $generated@@736)))
$generated@@743)))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492)) $generated@@492) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492) ($generated@@356 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495)) $generated@@495) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495) ($generated@@364 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@172)) ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@500)) $generated@@500) ($generated@@139 ($generated@@328 $generated@@163 $generated@@500) ($generated@@162 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@375 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@561)) ($generated@@487 $generated@@561)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@183 $generated@@562 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@183 $generated@@563 ($generated@@192 $generated@@564))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@192 $generated@@564))))
 :pattern ( ($generated@@183 $generated@@563 ($generated@@192 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@197 $generated@@566))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@197 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@197 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@442 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569) ($generated@@442 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@442 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@183 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@328 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@183 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@328 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@206 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)) ($generated@@202 ($generated@@182 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@589)) ($generated@@202 ($generated@@228 $generated@@589)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@221 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@220 $generated@@591)) (= ($generated@@219 $generated@@590) 0)) (= $generated@@590 ($generated@@218 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@241 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@399)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@220 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@219 $generated@@606))) ($generated@@183 ($generated@@443 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@443 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@219 $generated@@610))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@251 $generated@@612) ($generated@@192 $generated@@613)) ($generated@@139 ($generated@@296 $generated@@612) ($generated@@192 $generated@@614))) ($generated@@139 ($generated@@327 $generated@@612) ($generated@@192 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@269 $generated@@615) ($generated@@197 $generated@@616)) ($generated@@139 ($generated@@307 $generated@@615) ($generated@@197 $generated@@617))) ($generated@@139 ($generated@@338 $generated@@615) ($generated@@197 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@399) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@505 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@504 $generated@@137 $generated@@624 $generated@@60 $generated@@625)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@575 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (= (type ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@70 (type $generated@@585))))
 (=> (and (and (and (and (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@582) ($generated@@69 $generated@@4))) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (= (type $generated@@585) ($generated@@69 $generated@@586))) (= ($generated@@0 ($generated@@519 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))  (=> (and (not (= $generated@@584 $generated@@580)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@581 $generated@@584) $generated@@582))) (= $generated@@584 $generated@@583)))))
 :pattern ( ($generated@@519 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@587 $generated@@588)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@587 $generated@@588)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@589)) ($generated@@503 $generated@@589)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@173) ($generated@@184 $generated@@590 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@590) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@79 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) ($generated@@184 $generated@@591 ($generated@@193 $generated@@592))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@591) ($generated@@193 $generated@@592))))
 :pattern ( ($generated@@184 $generated@@591 ($generated@@193 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@184 $generated@@593 ($generated@@198 $generated@@594))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@198 $generated@@594))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@198 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@184 $generated@@595 ($generated@@178 $generated@@596))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@595) ($generated@@178 $generated@@596))))
 :pattern ( ($generated@@184 $generated@@595 ($generated@@178 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@184 $generated@@597 ($generated@@451 $generated@@598))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@597) ($generated@@451 $generated@@598))))
 :pattern ( ($generated@@184 $generated@@597 ($generated@@451 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@173)) ($generated@@184 $generated@@600 ($generated@@137 $generated@@599))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@600)) $generated@@600) ($generated@@140 ($generated@@331 $generated@@81 $generated@@600) ($generated@@137 $generated@@599))))
 :pattern ( ($generated@@184 $generated@@600 ($generated@@137 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@184 $generated@@602 ($generated@@157 $generated@@601))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@331 $generated@@81 $generated@@602) ($generated@@157 $generated@@601))))
 :pattern ( ($generated@@184 $generated@@602 ($generated@@157 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (=> (and (and (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@81)) (= (type $generated@@605) ($generated@@69 $generated@@607))) ($generated@@152 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))) ($generated@@145 $generated@@603 ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@86 $generated@@603 $generated@@604 ($generated@@88 ($generated@@85 $generated@@603 $generated@@604) $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@209 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@178 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@164) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@614) (and ($generated@@162 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@163 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@209 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@164) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@618) (and ($generated@@162 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@163 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@209 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (= (type $generated@@621) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@620) ($generated@@205 $generated@@621)) ($generated@@205 ($generated@@183 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@620) ($generated@@205 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@622))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@623)) ($generated@@205 ($generated@@231 $generated@@623)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@224 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@223 $generated@@625)) (= ($generated@@222 $generated@@624) 0)) (= $generated@@624 ($generated@@221 $generated@@625))))
 :pattern ( ($generated@@222 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@244 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@244 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@408)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@173)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@223 $generated@@173)) (= (type $generated@@641) $generated@@67)) (= ($generated@@140 $generated@@640 ($generated@@451 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@222 $generated@@640))) ($generated@@184 ($generated@@452 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@452 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@451 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@222 $generated@@644))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@140 $generated@@646 ($generated@@359 $generated@@647 $generated@@648))) (and (and ($generated@@140 ($generated@@254 $generated@@646) ($generated@@193 $generated@@647)) ($generated@@140 ($generated@@299 $generated@@646) ($generated@@193 $generated@@648))) ($generated@@140 ($generated@@330 $generated@@646) ($generated@@193 ($generated@@163 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@140 $generated@@646 ($generated@@359 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@140 $generated@@649 ($generated@@367 $generated@@650 $generated@@651))) (and (and ($generated@@140 ($generated@@272 $generated@@649) ($generated@@198 $generated@@650)) ($generated@@140 ($generated@@310 $generated@@649) ($generated@@198 $generated@@651))) ($generated@@140 ($generated@@341 $generated@@649) ($generated@@198 ($generated@@163 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@140 $generated@@649 ($generated@@367 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@140 $generated@@652 $generated@@46))
 :pattern ( ($generated@@140 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@140 $generated@@653 $generated@@47))
 :pattern ( ($generated@@140 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@140 $generated@@654 $generated@@44))
 :pattern ( ($generated@@140 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@408) ($generated@@140 $generated@@655 $generated@@45))
 :pattern ( ($generated@@140 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@173) ($generated@@140 $generated@@656 $generated@@48))
 :pattern ( ($generated@@140 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 (T@U) Bool)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@670) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) $generated@@81)) (= (type $generated@@672) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@674) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@675) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@677 true))
(let (($generated@@678  (=> (and (< $generated@@657 ($generated@@203 0)) (= (ControlFlow 0 14) 12)) $generated@@677)))
(let (($generated@@679  (=> (and (<= ($generated@@203 0) $generated@@657) (= (ControlFlow 0 13) 12)) $generated@@677)))
(let (($generated@@680  (=> (not $generated@@658) (and (=> (= (ControlFlow 0 15) 13) $generated@@679) (=> (= (ControlFlow 0 15) 14) $generated@@678)))))
(let (($generated@@681  (=> (and (< $generated@@657 10) (= $generated@@659 (- 10 $generated@@657))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@519 $generated@@661 $generated@@660 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@661 $generated@@660 ($generated@@378 ($generated@@203 0)))) (=> (and (and (= $generated@@662 ($generated@@203 1)) (= $generated@@663 ($generated@@86 $generated@@664 $generated@@660 ($generated@@88 ($generated@@85 $generated@@664 $generated@@660) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@662)))))) (and ($generated@@152 $generated@@663) (= $generated@@665 (+ $generated@@657 1)))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@659) (= (- 10 $generated@@665) $generated@@659))) (=> (or (<= 0 $generated@@659) (= (- 10 $generated@@665) $generated@@659)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@665) $generated@@659)) (=> (< (- 10 $generated@@665) $generated@@659) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@658 (<= ($generated@@203 0) $generated@@665))) (=> (=> $generated@@658 (<= ($generated@@203 0) $generated@@665)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@658 (<= $generated@@665 ($generated@@203 10))))))))))))))))))))
(let (($generated@@682 true))
(let (($generated@@683  (=> $generated@@658 (and (=> (= (ControlFlow 0 11) 2) $generated@@682) (=> (= (ControlFlow 0 11) 4) $generated@@681)))))
(let (($generated@@684  (and (=> (= (ControlFlow 0 16) 15) $generated@@680) (=> (= (ControlFlow 0 16) 11) $generated@@683))))
(let (($generated@@685 true))
(let (($generated@@686  (=> (and ($generated@@152 $generated@@664) ($generated@@666 $generated@@664)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@657) (< $generated@@657 11))) (= $generated@@667 1)) (= $generated@@668 10)) (and (and (and (=> $generated@@658 true) (=> $generated@@658 (<= ($generated@@203 0) $generated@@657))) (and (=> $generated@@658 (<= $generated@@657 ($generated@@203 10))) (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@81) (=> (and (not (= $generated@@687 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@669 $generated@@687) $generated@@60))) (or (= ($generated@@85 $generated@@664 $generated@@687) ($generated@@85 $generated@@670 $generated@@687)) (= $generated@@687 $generated@@671))))
 :pattern ( ($generated@@85 $generated@@664 $generated@@687))
)))) (and (and ($generated@@145 $generated@@670 $generated@@664) (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@70 (type $generated@@689))))
 (=> (and (and (= (type $generated@@688) $generated@@81) (= (type $generated@@689) ($generated@@69 $generated@@690))) (and (not (= $generated@@688 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@670 $generated@@688) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@664 $generated@@688) $generated@@689) ($generated@@87 ($generated@@85 $generated@@670 $generated@@688) $generated@@689)) ($generated@@0 ($generated@@519 $generated@@661 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@664 $generated@@688) $generated@@689))
))) (and (<= (- 10 $generated@@657) $generated@@668) (=> (= (- 10 $generated@@657) $generated@@668) true))))) (and (=> (= (ControlFlow 0 17) 1) $generated@@685) (=> (= (ControlFlow 0 17) 16) $generated@@684))))))
(let (($generated@@691  (=> (and (= $generated@@672 ($generated@@520 $generated@@138 $generated@@669 $generated@@60 $generated@@671)) (= $generated@@673 ($generated@@203 0))) (and (=> (= (ControlFlow 0 18) (- 0 25)) (<= 0 ($generated@@203 1))) (=> (<= 0 ($generated@@203 1)) (=> (and (and (and (not (= $generated@@660 $generated@@138)) (= ($generated@@139 $generated@@660) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@669 $generated@@660) $generated@@60)))) (and (and (= ($generated@@136 $generated@@660) ($generated@@203 1)) (= $generated@@674 ($generated@@86 $generated@@669 $generated@@660 ($generated@@88 ($generated@@85 $generated@@669 $generated@@660) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@674) ($generated@@666 $generated@@674)))) (and (=> (= (ControlFlow 0 18) (- 0 24)) (not (= $generated@@660 $generated@@138))) (=> (not (= $generated@@660 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 23)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@660)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@660))) (and (=> (= (ControlFlow 0 18) (- 0 22)) ($generated@@0 ($generated@@519 $generated@@672 $generated@@660 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@672 $generated@@660 ($generated@@378 ($generated@@203 0)))) (=> (= $generated@@667 ($generated@@203 1)) (=> (and (= $generated@@670 ($generated@@86 $generated@@674 $generated@@660 ($generated@@88 ($generated@@85 $generated@@674 $generated@@660) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@667))))) ($generated@@152 $generated@@670)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@70 (type $generated@@693))))
 (=> (and (= (type $generated@@692) $generated@@81) (= (type $generated@@693) ($generated@@69 $generated@@694))) (=> (and (and (not (= $generated@@692 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@670 $generated@@692) $generated@@60))) (= $generated@@692 $generated@@671)) ($generated@@0 ($generated@@519 $generated@@672 $generated@@692 $generated@@693)))))
 :no-pattern (type $generated@@692)
 :no-pattern (type $generated@@693)
 :no-pattern ($generated $generated@@692)
 :no-pattern ($generated@@0 $generated@@692)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
))) (=> (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (! (let (($generated@@697 ($generated@@70 (type $generated@@696))))
 (=> (and (= (type $generated@@695) $generated@@81) (= (type $generated@@696) ($generated@@69 $generated@@697))) (=> (and (and (not (= $generated@@695 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@670 $generated@@695) $generated@@60))) (= $generated@@695 $generated@@671)) ($generated@@0 ($generated@@519 $generated@@672 $generated@@695 $generated@@696)))))
 :no-pattern (type $generated@@695)
 :no-pattern (type $generated@@696)
 :no-pattern ($generated $generated@@695)
 :no-pattern ($generated@@0 $generated@@695)
 :no-pattern ($generated $generated@@696)
 :no-pattern ($generated@@0 $generated@@696)
)) (=> (and (= $generated@@661 ($generated@@575 $generated@@138 $generated@@670 $generated@@60 $generated@@671)) (= $generated@@668 (- 10 $generated@@673))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@658 (<= ($generated@@203 0) $generated@@673))) (=> (=> $generated@@658 (<= ($generated@@203 0) $generated@@673)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@658 (<= $generated@@673 ($generated@@203 10)))) (=> (=> $generated@@658 (<= $generated@@673 ($generated@@203 10))) (=> (= (ControlFlow 0 18) 17) $generated@@686))))))))))))))))))))))
(let (($generated@@698  (=> (and (and ($generated@@152 $generated@@669) ($generated@@666 $generated@@669)) (and ($generated@@140 $generated@@671 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@671 ($generated@@157 $generated@@46) $generated@@669))) (=> (and (and (and (and ($generated@@140 $generated@@675 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@675 ($generated@@157 $generated@@46) $generated@@669)) true) (= 1 $generated@@676)) (and (> ($generated@@136 $generated@@671) 0) (= (ControlFlow 0 26) 18))) $generated@@691))))
$generated@@698)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492)) $generated@@492) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492) ($generated@@356 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495)) $generated@@495) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495) ($generated@@364 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@172)) ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@500)) $generated@@500) ($generated@@139 ($generated@@328 $generated@@163 $generated@@500) ($generated@@162 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@375 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@561)) ($generated@@487 $generated@@561)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@183 $generated@@562 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@183 $generated@@563 ($generated@@192 $generated@@564))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@192 $generated@@564))))
 :pattern ( ($generated@@183 $generated@@563 ($generated@@192 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@197 $generated@@566))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@197 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@197 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@442 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569) ($generated@@442 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@442 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@183 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@328 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@183 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@328 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@206 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)) ($generated@@202 ($generated@@182 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@589)) ($generated@@202 ($generated@@228 $generated@@589)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@221 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@220 $generated@@591)) (= ($generated@@219 $generated@@590) 0)) (= $generated@@590 ($generated@@218 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@241 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@399)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@220 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@219 $generated@@606))) ($generated@@183 ($generated@@443 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@443 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@219 $generated@@610))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@251 $generated@@612) ($generated@@192 $generated@@613)) ($generated@@139 ($generated@@296 $generated@@612) ($generated@@192 $generated@@614))) ($generated@@139 ($generated@@327 $generated@@612) ($generated@@192 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@269 $generated@@615) ($generated@@197 $generated@@616)) ($generated@@139 ($generated@@307 $generated@@615) ($generated@@197 $generated@@617))) ($generated@@139 ($generated@@338 $generated@@615) ($generated@@197 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@399) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@505 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@504 $generated@@137 $generated@@624 $generated@@60 $generated@@625)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@577)) ($generated@@503 $generated@@577)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@184 $generated@@578 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@184 $generated@@579 ($generated@@193 $generated@@580))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@193 $generated@@580))))
 :pattern ( ($generated@@184 $generated@@579 ($generated@@193 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@184 $generated@@581 ($generated@@198 $generated@@582))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@198 $generated@@582))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@198 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@451 $generated@@586))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585) ($generated@@451 $generated@@586))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@451 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@184 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@331 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@209 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)) ($generated@@205 ($generated@@183 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@611)) ($generated@@205 ($generated@@231 $generated@@611)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@224 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@223 $generated@@613)) (= ($generated@@222 $generated@@612) 0)) (= $generated@@612 ($generated@@221 $generated@@613))))
 :pattern ( ($generated@@222 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@244 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@408)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@223 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@222 $generated@@628))) ($generated@@184 ($generated@@452 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@452 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@222 $generated@@632))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@254 $generated@@634) ($generated@@193 $generated@@635)) ($generated@@140 ($generated@@299 $generated@@634) ($generated@@193 $generated@@636))) ($generated@@140 ($generated@@330 $generated@@634) ($generated@@193 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@272 $generated@@637) ($generated@@198 $generated@@638)) ($generated@@140 ($generated@@310 $generated@@637) ($generated@@198 $generated@@639))) ($generated@@140 ($generated@@341 $generated@@637) ($generated@@198 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@408) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Bool)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@659) $generated@@81)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@664 true))
(let (($generated@@665  (=> (and (< $generated@@645 ($generated@@203 0)) (= (ControlFlow 0 14) 12)) $generated@@664)))
(let (($generated@@666  (=> (and (<= ($generated@@203 0) $generated@@645) (= (ControlFlow 0 13) 12)) $generated@@664)))
(let (($generated@@667  (=> (not $generated@@646) (and (=> (= (ControlFlow 0 15) 13) $generated@@666) (=> (= (ControlFlow 0 15) 14) $generated@@665)))))
(let (($generated@@668  (=> (and (< $generated@@645 10) (= $generated@@647 (- 10 $generated@@645))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0)))) (=> (and (and (= $generated@@650 ($generated@@203 1)) (= $generated@@651 ($generated@@86 $generated@@652 $generated@@648 ($generated@@88 ($generated@@85 $generated@@652 $generated@@648) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@650)))))) (and ($generated@@152 $generated@@651) (= $generated@@653 (+ $generated@@645 1)))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@647) (= (- 10 $generated@@653) $generated@@647))) (=> (or (<= 0 $generated@@647) (= (- 10 $generated@@653) $generated@@647)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- 10 $generated@@653) $generated@@647)) (=> (< (- 10 $generated@@653) $generated@@647) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@646 (<= ($generated@@203 0) $generated@@653))) (=> (=> $generated@@646 (<= ($generated@@203 0) $generated@@653)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@646 (<= $generated@@653 ($generated@@203 10))))))))))))))))))))
(let (($generated@@669 true))
(let (($generated@@670  (=> $generated@@646 (and (=> (= (ControlFlow 0 11) 2) $generated@@669) (=> (= (ControlFlow 0 11) 4) $generated@@668)))))
(let (($generated@@671  (and (=> (= (ControlFlow 0 16) 15) $generated@@667) (=> (= (ControlFlow 0 16) 11) $generated@@670))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (and ($generated@@152 $generated@@652) ($generated@@654 $generated@@652)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@645) (< $generated@@645 11))) (= $generated@@655 1)) (= $generated@@656 10)) (and (and (and (=> $generated@@646 true) (=> $generated@@646 (<= ($generated@@203 0) $generated@@645))) (and (=> $generated@@646 (<= $generated@@645 ($generated@@203 10))) (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@81) (=> (and (not (= $generated@@674 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@657 $generated@@674) $generated@@60))) (or (= ($generated@@85 $generated@@652 $generated@@674) ($generated@@85 $generated@@658 $generated@@674)) (= $generated@@674 $generated@@659))))
 :pattern ( ($generated@@85 $generated@@652 $generated@@674))
)))) (and (and ($generated@@145 $generated@@658 $generated@@652) (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@70 (type $generated@@676))))
 (=> (and (and (= (type $generated@@675) $generated@@81) (= (type $generated@@676) ($generated@@69 $generated@@677))) (and (not (= $generated@@675 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@658 $generated@@675) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@652 $generated@@675) $generated@@676) ($generated@@87 ($generated@@85 $generated@@658 $generated@@675) $generated@@676)) ($generated@@0 ($generated@@519 $generated@@649 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@652 $generated@@675) $generated@@676))
))) (and (<= (- 10 $generated@@645) $generated@@656) (=> (= (- 10 $generated@@645) $generated@@656) true))))) (and (=> (= (ControlFlow 0 17) 1) $generated@@672) (=> (= (ControlFlow 0 17) 16) $generated@@671))))))
(let (($generated@@678  (=> (and (= $generated@@649 ($generated@@520 $generated@@138 $generated@@657 $generated@@60 $generated@@659)) (= $generated@@660 ($generated@@203 0))) (and (=> (= (ControlFlow 0 18) (- 0 24)) (<= 0 ($generated@@203 1))) (=> (<= 0 ($generated@@203 1)) (=> (and (and (and (not (= $generated@@648 $generated@@138)) (= ($generated@@139 $generated@@648) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) $generated@@60)))) (and (and (= ($generated@@136 $generated@@648) ($generated@@203 1)) (= $generated@@661 ($generated@@86 $generated@@657 $generated@@648 ($generated@@88 ($generated@@85 $generated@@657 $generated@@648) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@661) ($generated@@654 $generated@@661)))) (and (=> (= (ControlFlow 0 18) (- 0 23)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@648))) (and (=> (= (ControlFlow 0 18) (- 0 21)) ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@649 $generated@@648 ($generated@@378 ($generated@@203 0)))) (=> (and (and (= $generated@@655 ($generated@@203 1)) (= $generated@@658 ($generated@@86 $generated@@661 $generated@@648 ($generated@@88 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@655)))))) (and ($generated@@152 $generated@@658) (= $generated@@656 (- 10 $generated@@660)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@646 (<= ($generated@@203 0) $generated@@660))) (=> (=> $generated@@646 (<= ($generated@@203 0) $generated@@660)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@646 (<= $generated@@660 ($generated@@203 10)))) (=> (=> $generated@@646 (<= $generated@@660 ($generated@@203 10))) (=> (= (ControlFlow 0 18) 17) $generated@@673))))))))))))))))))
(let (($generated@@679  (=> (and (and ($generated@@152 $generated@@657) ($generated@@654 $generated@@657)) (and ($generated@@140 $generated@@659 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@659 ($generated@@157 $generated@@46) $generated@@657))) (=> (and (and (and (and ($generated@@140 $generated@@662 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@662 ($generated@@157 $generated@@46) $generated@@657)) true) (= 1 $generated@@663)) (and (> ($generated@@136 $generated@@659) 0) (= (ControlFlow 0 25) 18))) $generated@@678))))
$generated@@679)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 16)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@194 $generated@@80 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@70 (type $generated@@248))))
 (=> (and (and (and (and (and (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@244) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@80)) (= (type $generated@@246) $generated@@80)) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) ($generated@@69 $generated@@249))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@242)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@243 $generated@@247) $generated@@244))) (or (= $generated@@247 $generated@@245) (= $generated@@247 $generated@@246))))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@172) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@183 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@172) ($generated@@0 ($generated@@84 $generated@@257 $generated@@259))) ($generated@@183 $generated@@259 $generated@@258))
 :pattern ( ($generated@@84 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@139 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@182 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@183 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@250 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@255 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@182 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@182 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@183 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@183 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@183 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@183 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@183 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@183 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@182 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@182 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@182 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@250 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@250 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@255 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@255 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@255 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@183 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@183 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@183 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@183 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@182 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@182 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@182 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@182 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@183 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@183 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@183 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@183 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@250 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@250 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@250 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@255 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@255 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@255 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@183 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@183 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@183 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@183 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@264 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@177 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@163) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@583) (and ($generated@@161 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@162 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@163) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@587) (and ($generated@@161 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@162 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@172) (= (type $generated@@590) $generated@@172)) (= ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)) ($generated@@260 ($generated@@182 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@182 ($generated@@260 $generated@@589) ($generated@@260 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@591)) ($generated@@260 ($generated@@286 $generated@@591)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@279 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@278 $generated@@593)) (= ($generated@@277 $generated@@592) 0)) (= $generated@@592 ($generated@@276 $generated@@593))))
 :pattern ( ($generated@@277 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@79 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@299 $generated@@594) ($generated ($generated@@84 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@2)) ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@3)) ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@4)) ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@457)) ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@172)) ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@278 $generated@@172)) (= (type $generated@@609) $generated@@67)) (= ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@277 $generated@@608))) ($generated@@183 ($generated@@501 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@501 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@139 $generated@@608 ($generated@@500 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@277 $generated@@612))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@67)) ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616))) (and (and ($generated@@139 ($generated@@309 $generated@@614) ($generated@@250 $generated@@615)) ($generated@@139 ($generated@@354 $generated@@614) ($generated@@250 $generated@@616))) ($generated@@139 ($generated@@385 $generated@@614) ($generated@@250 ($generated@@162 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@414 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619))) (and (and ($generated@@139 ($generated@@327 $generated@@617) ($generated@@255 $generated@@618)) ($generated@@139 ($generated@@365 $generated@@617) ($generated@@255 $generated@@619))) ($generated@@139 ($generated@@396 $generated@@617) ($generated@@255 ($generated@@162 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@139 $generated@@617 ($generated@@422 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@139 $generated@@620 $generated@@46))
 :pattern ( ($generated@@139 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@139 $generated@@621 $generated@@47))
 :pattern ( ($generated@@139 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@139 $generated@@622 $generated@@44))
 :pattern ( ($generated@@139 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@457) ($generated@@139 $generated@@623 $generated@@45))
 :pattern ( ($generated@@139 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@172) ($generated@@139 $generated@@624 $generated@@48))
 :pattern ( ($generated@@139 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@625) ($generated@@194 $generated@@80 $generated@@4)) (= (type $generated@@626) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@627) $generated@@80)) (= (type $generated@@628) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@631  (=> (= $generated@@625 ($generated@@193 $generated@@137 $generated@@626 $generated@@60 $generated@@627 $generated@@628)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@627 $generated@@137))) (=> (not (= $generated@@627 $generated@@137)) (=> (and (> ($generated@@135 $generated@@627) 0) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@628 $generated@@137))))))))
(let (($generated@@632  (=> (and (and (and ($generated@@151 $generated@@626) ($generated@@629 $generated@@626)) (and ($generated@@139 $generated@@627 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@627 ($generated@@156 $generated@@46) $generated@@626))) (and (and ($generated@@139 $generated@@628 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@628 ($generated@@156 $generated@@46) $generated@@626)) (and (= 1 $generated@@630) (= (ControlFlow 0 4) 2)))) $generated@@631)))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@577 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@645 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (and (and (= (type $generated@@243) $generated@@81) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@246) $generated@@81)) (= (type $generated@@247) $generated@@81)) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@243)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@244 $generated@@248) $generated@@245))) (or (= $generated@@248 $generated@@246) (= $generated@@248 $generated@@247))))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@184 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@173) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@184 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@173)) (= (type $generated@@271) $generated@@173)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@272)) (= ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@270 $generated@@271) ($generated@@163 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@164) (= ($generated@@162 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@164) ($generated@@162 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@173) (= (type $generated@@278) $generated@@173)) (= $generated@@276 ($generated@@183 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@162 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@81)) (= ($generated@@140 $generated@@288 ($generated@@157 $generated@@287))  (and ($generated@@140 $generated@@288 ($generated@@137 $generated@@287)) (not (= $generated@@288 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@288 ($generated@@157 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@173)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@296) $generated@@173)) (= (type $generated@@297) $generated@@67)) ($generated@@145 $generated@@294 $generated@@295)) ($generated@@267 $generated@@296 $generated@@297 $generated@@294)) ($generated@@267 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@145 $generated@@294 $generated@@295) ($generated@@267 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@301) $generated@@67)) ($generated@@145 $generated@@298 $generated@@299)) ($generated@@78 $generated@@300 $generated@@301 $generated@@298)) ($generated@@78 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@145 $generated@@298 $generated@@299) ($generated@@78 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@80 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@83 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@80 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@85 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@310)) $generated@@61) (= ($generated@@308 ($generated@@137 $generated@@310)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@311)) $generated@@62) (= ($generated@@308 ($generated@@157 $generated@@311)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@179 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@179 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@67) (= (type $generated@@352) $generated@@81)) (= ($generated@@140 $generated@@352 ($generated@@137 $generated@@351))  (or (= $generated@@352 $generated@@138) (= ($generated@@139 $generated@@352) ($generated@@137 $generated@@351)))))
 :pattern ( ($generated@@140 $generated@@352 ($generated@@137 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@312 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@334 (type $generated@@364))))
(let (($generated@@366 ($generated@@333 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@332 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@331 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@330 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@184 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@178 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@173) ($generated@@0 ($generated@@85 $generated@@378 $generated@@381))) ($generated@@267 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@85 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@78 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@173) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@85 ($generated@@303 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@85 ($generated@@303 $generated@@387) $generated@@386)))
)))
(assert  (and (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@391)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391))
)) (forall (($generated@@392 T@T) ($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@390 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@390 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@398) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398)))) (= ($generated@@85 ($generated@@390 $generated@@397) ($generated@@171 ($generated@@389 $generated@@164 $generated@@398))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@334 (type $generated@@402))))
(let (($generated@@404 ($generated@@333 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@406) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@171 ($generated@@389 $generated@@164 $generated@@406))) ($generated@@172 ($generated@@389 $generated@@164 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@315 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@314 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@333 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@332 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@85 ($generated@@390 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) $generated@@67)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))) (and ($generated@@267 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@267 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@433 $generated@@435))) (and ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))) ($generated@@145 $generated@@433 $generated@@435))
 :pattern ( ($generated@@145 $generated@@433 $generated@@434) ($generated@@145 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@440) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@439) (and (not (= $generated@@440 $generated@@138)) (= ($generated@@139 $generated@@440) ($generated@@137 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@136 $generated@@440)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@439 $generated@@440) ($generated@@436 $generated@@441)) ($generated@@137 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@368 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@368 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@399 $generated@@450) ($generated@@442 $generated@@173))))))
 :pattern ( ($generated@@399 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@173) (= (type $generated@@457) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@453) ($generated@@289 ($generated@@183 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) ($generated@@289 ($generated@@183 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@184 $generated@@463 $generated@@46)) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@389 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@173) ($generated@@184 $generated@@464 $generated@@47)) (and (= ($generated@@289 ($generated@@389 $generated@@3 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@389 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@184 $generated@@465 $generated@@44)) (and (= ($generated@@289 ($generated@@389 $generated@@4 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@389 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@173) ($generated@@184 $generated@@467 $generated@@45)) (and (= ($generated@@289 ($generated@@389 $generated@@466 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@389 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@184 ($generated@@289 $generated@@468) $generated@@469) ($generated@@140 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@184 ($generated@@289 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@81) (<= 0 ($generated@@136 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@302 $generated@@471))))
 :pattern ( ($generated@@302 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@417 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@417 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@417 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@76 ($generated@@417 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@425 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@425 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@76 ($generated@@425 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@173) (= (type $generated@@496) $generated@@173)) (= ($generated@@273 ($generated@@183 $generated@@495 $generated@@496)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@163 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@183 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@173) (= (type $generated@@508) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@183 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@282 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@173)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@280 $generated@@515))) ($generated@@267 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@251 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@251 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@76 ($generated@@251 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@76 ($generated@@256 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@178 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@178 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@75 ($generated@@436 $generated@@537)) 1)
 :pattern ( ($generated@@436 $generated@@537))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@436 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@436 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@157 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@157 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@389 $generated@@547 ($generated@@289 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@289 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@184 ($generated@@85 ($generated@@390 $generated@@548) $generated@@551) $generated@@550) ($generated@@184 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@417 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@184 ($generated@@85 ($generated@@400 $generated@@552) $generated@@555) $generated@@554) ($generated@@184 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@425 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@558) $generated@@81)) (and (and ($generated@@152 $generated@@557) (and (not (= $generated@@558 $generated@@138)) (= ($generated@@139 $generated@@558) ($generated@@137 $generated@@556)))) (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@136 $generated@@558))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) $generated@@556))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@557 $generated@@558) ($generated@@436 $generated@@559)) ($generated@@137 $generated@@556))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@183 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@183 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@173)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@183 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@183 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@173) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) $generated@@67)) ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568))) (and (= ($generated@@289 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@389 ($generated@@314 $generated@@173 $generated@@173) $generated@@566) ($generated@@417 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@184 $generated@@566 ($generated@@417 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@173) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571))) (and (= ($generated@@289 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@389 ($generated@@332 $generated@@173 $generated@@173) $generated@@569) ($generated@@425 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@184 $generated@@569 ($generated@@425 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@67) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) $generated@@173)) ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573))) (and (= ($generated@@289 ($generated@@389 $generated@@164 $generated@@574)) $generated@@574) ($generated@@140 ($generated@@389 $generated@@164 $generated@@574) ($generated@@163 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@184 $generated@@574 ($generated@@163 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@85 ($generated@@442 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (= (type ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581)) ($generated@@195 $generated@@81 $generated@@4))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@70 (type $generated@@587))))
 (=> (and (and (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@584) ($generated@@69 $generated@@4))) (= (type $generated@@585) $generated@@81)) (= (type $generated@@586) $generated@@81)) (= (type $generated@@587) ($generated@@69 $generated@@588))) (= ($generated@@0 ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))  (=> (and (not (= $generated@@586 $generated@@582)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@583 $generated@@586) $generated@@584))) (= $generated@@586 $generated@@585)))))
 :pattern ( ($generated@@193 ($generated@@577 $generated@@582 $generated@@583 $generated@@584 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@589 $generated@@590)) $generated@@64) (= ($generated@@308 ($generated@@163 $generated@@589 $generated@@590)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@164) (= ($generated@@560 ($generated@@289 $generated@@591)) ($generated@@561 $generated@@591)))
 :pattern ( ($generated@@560 ($generated@@289 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@173) ($generated@@184 $generated@@592 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@389 $generated@@2 $generated@@592)) $generated@@592) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@173) (= (type $generated@@594) $generated@@67)) ($generated@@184 $generated@@593 ($generated@@251 $generated@@594))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@593) ($generated@@251 $generated@@594))))
 :pattern ( ($generated@@184 $generated@@593 ($generated@@251 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@173) (= (type $generated@@596) $generated@@67)) ($generated@@184 $generated@@595 ($generated@@256 $generated@@596))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@4) $generated@@595) ($generated@@256 $generated@@596))))
 :pattern ( ($generated@@184 $generated@@595 ($generated@@256 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@67)) ($generated@@184 $generated@@597 ($generated@@178 $generated@@598))) (and (= ($generated@@289 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597)) $generated@@597) ($generated@@140 ($generated@@389 ($generated@@80 $generated@@173 $generated@@2) $generated@@597) ($generated@@178 $generated@@598))))
 :pattern ( ($generated@@184 $generated@@597 ($generated@@178 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@173) (= (type $generated@@600) $generated@@67)) ($generated@@184 $generated@@599 ($generated@@509 $generated@@600))) (and (= ($generated@@289 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@389 ($generated@@281 $generated@@173) $generated@@599) ($generated@@509 $generated@@600))))
 :pattern ( ($generated@@184 $generated@@599 ($generated@@509 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@67) (= (type $generated@@602) $generated@@173)) ($generated@@184 $generated@@602 ($generated@@137 $generated@@601))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@389 $generated@@81 $generated@@602) ($generated@@137 $generated@@601))))
 :pattern ( ($generated@@184 $generated@@602 ($generated@@137 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@67) (= (type $generated@@604) $generated@@173)) ($generated@@184 $generated@@604 ($generated@@157 $generated@@603))) (and (= ($generated@@289 ($generated@@389 $generated@@81 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@389 $generated@@81 $generated@@604) ($generated@@157 $generated@@603))))
 :pattern ( ($generated@@184 $generated@@604 ($generated@@157 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (=> (and (and (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@81)) (= (type $generated@@607) ($generated@@69 $generated@@609))) ($generated@@152 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))) ($generated@@145 $generated@@605 ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@86 $generated@@605 $generated@@606 ($generated@@88 ($generated@@85 $generated@@605 $generated@@606) $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@610 $generated@@613)))) ($generated@@267 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@178 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@164) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@616) (and ($generated@@162 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@67) ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@163 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@267 ($generated@@171 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@164) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@620) (and ($generated@@162 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@67) ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@163 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@267 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@173) (= (type $generated@@623) $generated@@173)) (= ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)) ($generated@@263 ($generated@@183 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@183 ($generated@@263 $generated@@622) ($generated@@263 $generated@@623)))
)))
(assert (forall (($generated@@624 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))) ($generated@@263 ($generated@@289 ($generated@@8 $generated@@624))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@261 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@289 ($generated@@263 $generated@@625)) ($generated@@263 ($generated@@289 $generated@@625)))
 :pattern ( ($generated@@289 ($generated@@263 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@282 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@281 $generated@@627)) (= ($generated@@280 $generated@@626) 0)) (= $generated@@626 ($generated@@279 $generated@@627))))
 :pattern ( ($generated@@280 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@302 $generated@@628) ($generated ($generated@@85 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@302 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@2)) ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@3)) ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@4)) ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@466)) ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@173)) ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@281 $generated@@173)) (= (type $generated@@643) $generated@@67)) (= ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@280 $generated@@642))) ($generated@@184 ($generated@@510 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@510 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@140 $generated@@642 ($generated@@509 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@281 $generated@@173)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@280 $generated@@646))) (< ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))) ($generated@@645 $generated@@646))))
 :pattern ( ($generated@@561 ($generated@@389 $generated@@164 ($generated@@510 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@314 $generated@@173 $generated@@173)) (= (type $generated@@649) $generated@@67)) (= (type $generated@@650) $generated@@67)) ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650))) (and (and ($generated@@140 ($generated@@312 $generated@@648) ($generated@@251 $generated@@649)) ($generated@@140 ($generated@@357 $generated@@648) ($generated@@251 $generated@@650))) ($generated@@140 ($generated@@388 $generated@@648) ($generated@@251 ($generated@@163 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@140 $generated@@648 ($generated@@417 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@332 $generated@@173 $generated@@173)) (= (type $generated@@652) $generated@@67)) (= (type $generated@@653) $generated@@67)) ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653))) (and (and ($generated@@140 ($generated@@330 $generated@@651) ($generated@@256 $generated@@652)) ($generated@@140 ($generated@@368 $generated@@651) ($generated@@256 $generated@@653))) ($generated@@140 ($generated@@399 $generated@@651) ($generated@@256 ($generated@@163 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@140 $generated@@651 ($generated@@425 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@140 $generated@@654 $generated@@46))
 :pattern ( ($generated@@140 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@140 $generated@@655 $generated@@47))
 :pattern ( ($generated@@140 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@140 $generated@@656 $generated@@44))
 :pattern ( ($generated@@140 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@466) ($generated@@140 $generated@@657 $generated@@45))
 :pattern ( ($generated@@140 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@173) ($generated@@140 $generated@@658 $generated@@48))
 :pattern ( ($generated@@140 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Bool)
(declare-fun $generated@@672 (T@U) Bool)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Bool)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@661) $generated@@81)) (= (type $generated@@662) ($generated@@195 $generated@@81 $generated@@4))) (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@681) ($generated@@195 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@684  (=> (and (< $generated@@659 10) (= $generated@@660 (- 10 $generated@@659))) (and (=> (= (ControlFlow 0 13) (- 0 17)) (not (= $generated@@661 $generated@@138))) (=> (not (= $generated@@661 $generated@@138)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@661)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@661))) (and (=> (= (ControlFlow 0 13) (- 0 15)) ($generated@@0 ($generated@@193 $generated@@662 $generated@@661 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@662 $generated@@661 ($generated@@436 ($generated@@261 0)))) (=> (and (and (= $generated@@663 ($generated@@261 1)) (= $generated@@664 ($generated@@86 $generated@@665 $generated@@661 ($generated@@88 ($generated@@85 $generated@@665 $generated@@661) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@663)))))) (and ($generated@@152 $generated@@664) (= $generated@@666 (+ $generated@@659 1)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (<= 0 $generated@@660) (= (- 10 $generated@@666) $generated@@660))) (=> (or (<= 0 $generated@@660) (= (- 10 $generated@@666) $generated@@660)) (=> (= (ControlFlow 0 13) (- 0 12)) (< (- 10 $generated@@666) $generated@@660))))))))))))))
(let (($generated@@685  (=> (<= 10 $generated@@659) (and (=> (= (ControlFlow 0 7) (- 0 11)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (= ($generated ($generated@@389 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@667) ($generated@@436 ($generated@@261 0))))) ($generated@@261 4))) (=> (= ($generated ($generated@@389 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@667) ($generated@@436 ($generated@@261 0))))) ($generated@@261 4)) (=> (= $generated@@668 (+ $generated@@669 1)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@670) (= (- 10 $generated@@668) $generated@@670))) (=> (or (<= 0 $generated@@670) (= (- 10 $generated@@668) $generated@@670)) (=> (= (ControlFlow 0 7) (- 0 6)) (< (- 10 $generated@@668) $generated@@670)))))))))))))
(let (($generated@@686  (=> $generated@@671 (and (=> (= (ControlFlow 0 18) 7) $generated@@685) (=> (= (ControlFlow 0 18) 13) $generated@@684)))))
(let (($generated@@687 true))
(let (($generated@@688  (and (=> (= (ControlFlow 0 19) 5) $generated@@687) (=> (= (ControlFlow 0 19) 18) $generated@@686))))
(let (($generated@@689 true))
(let (($generated@@690  (=> (and ($generated@@152 $generated@@665) ($generated@@672 $generated@@665)) (=> (and (and (and (and (and (and (and (and (and (not false) (= $generated@@673 4)) (and (<= 0 $generated@@669) (< $generated@@669 10))) (= $generated@@674 10)) $generated@@675) (and (<= 1 $generated@@670) (< $generated@@670 11))) (and (<= 1 $generated@@659) (< $generated@@659 11))) (= $generated@@676 9)) (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@81) (=> (and (not (= $generated@@691 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@677 $generated@@691) $generated@@60))) (or (= ($generated@@85 $generated@@665 $generated@@691) ($generated@@85 $generated@@678 $generated@@691)) (or (= $generated@@691 $generated@@661) (= $generated@@691 $generated@@667)))))
 :pattern ( ($generated@@85 $generated@@665 $generated@@691))
))) (and (and ($generated@@145 $generated@@678 $generated@@665) (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@70 (type $generated@@693))))
 (=> (and (and (= (type $generated@@692) $generated@@81) (= (type $generated@@693) ($generated@@69 $generated@@694))) (and (not (= $generated@@692 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@678 $generated@@692) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@665 $generated@@692) $generated@@693) ($generated@@87 ($generated@@85 $generated@@678 $generated@@692) $generated@@693)) ($generated@@0 ($generated@@193 $generated@@662 $generated@@692 $generated@@693)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@665 $generated@@692) $generated@@693))
))) (and (<= (- 10 $generated@@659) $generated@@676) (=> (= (- 10 $generated@@659) $generated@@676) true)))) (and (=> (= (ControlFlow 0 20) 4) $generated@@689) (=> (= (ControlFlow 0 20) 19) $generated@@688))))))
(let (($generated@@695  (=> (< $generated@@669 10) (=> (and (and (= $generated@@670 (- 10 $generated@@669)) (= $generated@@679 ($generated@@261 1))) (and (= $generated@@676 (- 10 $generated@@679)) (= (ControlFlow 0 21) 20))) $generated@@690))))
(let (($generated@@696 true))
(let (($generated@@697  (=> $generated@@675 (and (=> (= (ControlFlow 0 22) 3) $generated@@696) (=> (= (ControlFlow 0 22) 21) $generated@@695)))))
(let (($generated@@698 true))
(let (($generated@@699  (and (=> (= (ControlFlow 0 23) 2) $generated@@698) (=> (= (ControlFlow 0 23) 22) $generated@@697))))
(let (($generated@@700 true))
(let (($generated@@701  (=> (and ($generated@@152 $generated@@678) ($generated@@672 $generated@@678)) (=> (and (and (and (and (and (not false) (= $generated@@673 4)) (and (<= 0 $generated@@669) (< $generated@@669 11))) (= $generated@@674 10)) (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@81) (=> (and (not (= $generated@@702 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@677 $generated@@702) $generated@@60))) (or (= ($generated@@85 $generated@@678 $generated@@702) ($generated@@85 $generated@@680 $generated@@702)) (or (= $generated@@702 $generated@@661) (= $generated@@702 $generated@@667)))))
 :pattern ( ($generated@@85 $generated@@678 $generated@@702))
))) (and (and ($generated@@145 $generated@@680 $generated@@678) (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (! (let (($generated@@705 ($generated@@70 (type $generated@@704))))
 (=> (and (and (= (type $generated@@703) $generated@@81) (= (type $generated@@704) ($generated@@69 $generated@@705))) (and (not (= $generated@@703 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@680 $generated@@703) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@678 $generated@@703) $generated@@704) ($generated@@87 ($generated@@85 $generated@@680 $generated@@703) $generated@@704)) ($generated@@0 ($generated@@193 $generated@@662 $generated@@703 $generated@@704)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@678 $generated@@703) $generated@@704))
))) (and (<= (- 10 $generated@@669) $generated@@674) (=> (= (- 10 $generated@@669) $generated@@674) true)))) (and (=> (= (ControlFlow 0 24) 1) $generated@@700) (=> (= (ControlFlow 0 24) 23) $generated@@699))))))
(let (($generated@@706  (=> (= $generated@@681 ($generated@@194 $generated@@138 $generated@@677 $generated@@60 $generated@@661 $generated@@667)) (and (=> (= (ControlFlow 0 25) (- 0 29)) (not (= $generated@@667 $generated@@138))) (=> (not (= $generated@@667 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 28)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667)))) (=> (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@136 $generated@@667))) (and (=> (= (ControlFlow 0 25) (- 0 27)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@667 ($generated@@436 ($generated@@261 0))))) (=> ($generated@@0 ($generated@@193 $generated@@681 $generated@@667 ($generated@@436 ($generated@@261 0)))) (=> (and (and (= $generated@@673 ($generated@@261 4)) (= $generated@@680 ($generated@@86 $generated@@677 $generated@@667 ($generated@@88 ($generated@@85 $generated@@677 $generated@@667) ($generated@@436 ($generated@@261 0)) ($generated@@289 ($generated@@8 $generated@@673)))))) (and ($generated@@152 $generated@@680) (= $generated@@682 ($generated@@261 0)))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@70 (type $generated@@708))))
 (=> (and (= (type $generated@@707) $generated@@81) (= (type $generated@@708) ($generated@@69 $generated@@709))) (=> (and (and (not (= $generated@@707 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@680 $generated@@707) $generated@@60))) (= $generated@@707 $generated@@661)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@707 $generated@@708)))))
 :no-pattern (type $generated@@707)
 :no-pattern (type $generated@@708)
 :no-pattern ($generated $generated@@707)
 :no-pattern ($generated@@0 $generated@@707)
 :no-pattern ($generated $generated@@708)
 :no-pattern ($generated@@0 $generated@@708)
))) (=> (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (! (let (($generated@@712 ($generated@@70 (type $generated@@711))))
 (=> (and (= (type $generated@@710) $generated@@81) (= (type $generated@@711) ($generated@@69 $generated@@712))) (=> (and (and (not (= $generated@@710 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@680 $generated@@710) $generated@@60))) (= $generated@@710 $generated@@661)) ($generated@@0 ($generated@@193 $generated@@681 $generated@@710 $generated@@711)))))
 :no-pattern (type $generated@@710)
 :no-pattern (type $generated@@711)
 :no-pattern ($generated $generated@@710)
 :no-pattern ($generated@@0 $generated@@710)
 :no-pattern ($generated $generated@@711)
 :no-pattern ($generated@@0 $generated@@711)
)) (=> (= $generated@@662 ($generated@@577 $generated@@138 $generated@@680 $generated@@60 $generated@@661)) (=> (and (= $generated@@674 (- 10 $generated@@682)) (= (ControlFlow 0 25) 24)) $generated@@701))))))))))))))
(let (($generated@@713  (=> (and (and ($generated@@152 $generated@@677) ($generated@@672 $generated@@677)) (and ($generated@@140 $generated@@661 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@661 ($generated@@157 $generated@@46) $generated@@677))) (=> (and (and (and ($generated@@140 $generated@@667 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@667 ($generated@@157 $generated@@46) $generated@@677)) (= 1 $generated@@683)) (and (and (> ($generated@@136 $generated@@661) 0) (> ($generated@@136 $generated@@667) 0)) (and (not (= $generated@@661 $generated@@667)) (= (ControlFlow 0 30) 25)))) $generated@@706))))
$generated@@713)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@T T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@458 (Int) T@U)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@532 (T@U Int) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@655 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@81) (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@246) ($generated@@69 $generated@@4))) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@70 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@81) (= (type $generated@@257) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@258) ($generated@@69 $generated@@4))) (= (type $generated@@260) $generated@@81)) (= (type $generated@@261) ($generated@@69 $generated@@262))) (= ($generated@@0 ($generated@@183 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@183 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@164)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@67) (= (type $generated@@268) $generated@@67)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) $generated@@173)) (= ($generated@@140 ($generated@@263 $generated@@269 $generated@@270) ($generated@@163 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@140 ($generated@@263 $generated@@269 $generated@@270) ($generated@@163 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@164) (= (type $generated@@272) $generated@@164)) (= ($generated@@170 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@170 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@67)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@276) $generated@@67)) (= ($generated@@140 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@173) ($generated@@0 ($generated@@85 $generated@@275 $generated@@277))) ($generated@@264 $generated@@277 $generated@@276))
 :pattern ( ($generated@@85 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@140 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@173) ($generated@@0 ($generated@@85 $generated@@280 $generated@@282))) ($generated@@264 $generated@@282 $generated@@281))
 :pattern ( ($generated@@85 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@140 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@67)) (= (type $generated@@292) $generated@@173)) (= (type $generated@@293) $generated@@173)) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@294)) (= ($generated@@78 ($generated@@263 $generated@@292 $generated@@293) ($generated@@163 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@78 ($generated@@263 $generated@@292 $generated@@293) ($generated@@163 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@71)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@164) (= ($generated@@162 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@164) ($generated@@162 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@173) (= (type $generated@@300) $generated@@173)) (= $generated@@298 ($generated@@263 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@162 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) $generated@@81)) (= ($generated@@140 $generated@@310 ($generated@@157 $generated@@309))  (and ($generated@@140 $generated@@310 ($generated@@137 $generated@@309)) (not (= $generated@@310 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@310 ($generated@@157 $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@173)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@67) (= (type $generated@@315) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@289 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@78 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@289 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@318) $generated@@173)) (= (type $generated@@319) $generated@@67)) ($generated@@145 $generated@@316 $generated@@317)) ($generated@@289 $generated@@318 $generated@@319 $generated@@316)) ($generated@@289 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@145 $generated@@316 $generated@@317) ($generated@@289 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@320) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@321) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@323) $generated@@67)) ($generated@@145 $generated@@320 $generated@@321)) ($generated@@78 $generated@@322 $generated@@323 $generated@@320)) ($generated@@78 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@145 $generated@@320 $generated@@321) ($generated@@78 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@80 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@83 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@80 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@85 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@72)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@332)) $generated@@61) (= ($generated@@330 ($generated@@137 $generated@@332)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@333)) $generated@@62) (= ($generated@@330 ($generated@@157 $generated@@333)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 18)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@83 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@80 $generated@@371 $generated@@2)) (= ($generated@@179 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@85 $generated@@370 $generated@@372))) (<= ($generated ($generated@@85 $generated@@370 $generated@@372)) ($generated@@324 $generated@@370))))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@179 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@67) (= (type $generated@@374) $generated@@81)) (= ($generated@@140 $generated@@374 ($generated@@137 $generated@@373))  (or (= $generated@@374 $generated@@138) (= ($generated@@139 $generated@@374) ($generated@@137 $generated@@373)))))
 :pattern ( ($generated@@140 $generated@@374 ($generated@@137 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@338 (type $generated@@375))))
(let (($generated@@377 ($generated@@337 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@336 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@335 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@334 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@338 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(let (($generated@@384 ($generated@@337 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@336 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@335 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@356 (type $generated@@386))))
(let (($generated@@388 ($generated@@355 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@354 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@353 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@352 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@356 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@80 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(let (($generated@@395 ($generated@@355 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@354 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@353 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@398) $generated@@67)) (= ($generated@@140 $generated@@397 ($generated@@178 $generated@@398)) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@397 $generated@@399)))) ($generated@@264 $generated@@399 $generated@@398))
 :pattern ( ($generated@@85 $generated@@397 $generated@@399))
))))
 :pattern ( ($generated@@140 $generated@@397 ($generated@@178 $generated@@398)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@400 ($generated@@273 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@173) ($generated@@0 ($generated@@85 $generated@@400 $generated@@403))) ($generated@@289 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@85 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@400 ($generated@@273 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@404 ($generated@@278 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@0 ($generated@@85 $generated@@404 $generated@@407))) ($generated@@289 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@85 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@278 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= ($generated ($generated@@85 ($generated@@325 $generated@@409) $generated@@408)) 0))
 :pattern ( (let (($generated@@409 (type $generated@@408)))
($generated@@85 ($generated@@325 $generated@@409) $generated@@408)))
)))
(assert  (and (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@410 $generated@@413)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@410 $generated@@413))
)) (forall (($generated@@414 T@T) ($generated@@415 T@U) ) (! (= (type ($generated@@411 $generated@@414 $generated@@415)) $generated@@414)
 :pattern ( ($generated@@411 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@338 (type $generated@@416))))
(let (($generated@@418 ($generated@@337 (type $generated@@416))))
(= (type ($generated@@412 $generated@@416)) ($generated@@80 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@412 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@336 $generated@@173 $generated@@173)) (= (type $generated@@420) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@410 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@419) ($generated@@171 ($generated@@411 $generated@@164 $generated@@420)))) (= ($generated@@85 ($generated@@412 $generated@@419) ($generated@@171 ($generated@@411 $generated@@164 $generated@@420))) ($generated@@172 ($generated@@411 $generated@@164 $generated@@420))))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@356 (type $generated@@424))))
(let (($generated@@426 ($generated@@355 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@354 $generated@@173 $generated@@173)) (= (type $generated@@428) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@427) ($generated@@171 ($generated@@411 $generated@@164 $generated@@428)))) (= ($generated@@85 ($generated@@422 $generated@@427) ($generated@@171 ($generated@@411 $generated@@164 $generated@@428))) ($generated@@172 ($generated@@411 $generated@@164 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@337 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@336 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@412 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@355 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@354 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@85 ($generated@@390 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@336 $generated@@173 $generated@@173)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) $generated@@67)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@442) $generated@@446))) (and ($generated@@289 ($generated@@85 ($generated@@412 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@289 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@354 $generated@@173 $generated@@173)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) $generated@@67)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@450) $generated@@454))) (and ($generated@@289 ($generated@@85 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@289 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@455) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@456) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@457) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@455 $generated@@457))) (and ($generated@@145 $generated@@455 $generated@@456) ($generated@@145 $generated@@456 $generated@@457))) ($generated@@145 $generated@@455 $generated@@457))
 :pattern ( ($generated@@145 $generated@@455 $generated@@456) ($generated@@145 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 Int) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 Int) ) (!  (=> (and (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@462) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@461) (and (not (= $generated@@462 $generated@@138)) (= ($generated@@139 $generated@@462) ($generated@@137 $generated@@460)))) (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@136 $generated@@462)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@461 $generated@@462) $generated@@60))) ($generated@@289 ($generated@@87 ($generated@@85 $generated@@461 $generated@@462) ($generated@@458 $generated@@463)) $generated@@460 $generated@@461)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@461 $generated@@462) ($generated@@458 $generated@@463)) ($generated@@137 $generated@@460))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@80 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@356 (type $generated@@466))))
(let (($generated@@468 ($generated@@355 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@354 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@353 $generated@@468 $generated@@467)) (= ($generated@@352 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@352 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@356 (type $generated@@469))))
(let (($generated@@471 ($generated@@355 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@354 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@353 $generated@@471 $generated@@470)) (= ($generated@@390 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@390 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@356 (type $generated@@472))))
(let (($generated@@474 ($generated@@355 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@354 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@353 $generated@@474 $generated@@473)) (= ($generated@@421 $generated@@472) ($generated@@464 $generated@@173))))))
 :pattern ( ($generated@@421 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@338 (type $generated@@475))))
(let (($generated@@477 ($generated@@337 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@336 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@335 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@173) (= (type $generated@@479) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@475) ($generated@@311 ($generated@@263 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@410 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@356 (type $generated@@480))))
(let (($generated@@482 ($generated@@355 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@354 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@353 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@173) (= (type $generated@@484) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@480) ($generated@@311 ($generated@@263 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@421 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@173) ($generated@@264 $generated@@485 $generated@@46)) (and (= ($generated@@311 ($generated@@411 $generated@@2 $generated@@485)) $generated@@485) ($generated@@140 ($generated@@411 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@173) ($generated@@264 $generated@@486 $generated@@47)) (and (= ($generated@@311 ($generated@@411 $generated@@3 $generated@@486)) $generated@@486) ($generated@@140 ($generated@@411 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@173) ($generated@@264 $generated@@487 $generated@@44)) (and (= ($generated@@311 ($generated@@411 $generated@@4 $generated@@487)) $generated@@487) ($generated@@140 ($generated@@411 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@173) ($generated@@264 $generated@@489 $generated@@45)) (and (= ($generated@@311 ($generated@@411 $generated@@488 $generated@@489)) $generated@@489) ($generated@@140 ($generated@@411 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@264 ($generated@@311 $generated@@490) $generated@@491) ($generated@@140 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@264 ($generated@@311 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@81) (<= 0 ($generated@@136 $generated@@492)))
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@83 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@80 $generated@@494 $generated@@2)) (<= 0 ($generated@@324 $generated@@493))))
 :pattern ( ($generated@@324 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@304 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@303 $generated@@496)) (<= 0 ($generated@@302 $generated@@495))))
 :pattern ( ($generated@@302 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@439 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@439 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@501 ($generated@@439 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@439 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@67) (= (type $generated@@506) $generated@@67)) (= ($generated@@76 ($generated@@439 $generated@@505 $generated@@506)) $generated@@58))
 :pattern ( ($generated@@439 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@67) (= (type $generated@@510) $generated@@67)) (= ($generated@@507 ($generated@@447 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@447 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@67) (= (type $generated@@514) $generated@@67)) (= ($generated@@511 ($generated@@447 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@447 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@76 ($generated@@447 $generated@@515 $generated@@516)) $generated@@59))
 :pattern ( ($generated@@447 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@173) (= (type $generated@@518) $generated@@173)) (= ($generated@@295 ($generated@@263 $generated@@517 $generated@@518)) $generated@@63))
 :pattern ( ($generated@@263 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@519 ($generated@@163 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@163 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@163 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@163 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@173) (= (type $generated@@528) $generated@@173)) (= ($generated@@171 ($generated@@263 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@263 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@173) (= (type $generated@@530) $generated@@173)) (= ($generated@@172 ($generated@@263 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@263 $generated@@529 $generated@@530))
)))
(assert  (and (forall (($generated@@533 T@U) ) (! (= (type ($generated@@531 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@533))
)) (forall (($generated@@534 T@U) ($generated@@535 Int) ) (! (let (($generated@@536 ($generated@@304 (type $generated@@534))))
(= (type ($generated@@532 $generated@@534 $generated@@535)) $generated@@536))
 :pattern ( ($generated@@532 $generated@@534 $generated@@535))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@303 $generated@@173)) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@537 ($generated@@531 $generated@@538) $generated@@539) (forall (($generated@@540 Int) ) (!  (=> (and (<= 0 $generated@@540) (< $generated@@540 ($generated@@302 $generated@@537))) ($generated@@289 ($generated@@532 $generated@@537 $generated@@540) $generated@@538 $generated@@539))
 :pattern ( ($generated@@532 $generated@@537 $generated@@540))
))))
 :pattern ( ($generated@@78 $generated@@537 ($generated@@531 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@542 Int) ) (! (= ($generated@@541 ($generated@@79 $generated@@542)) $generated@@542)
 :pattern ( ($generated@@79 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@543 ($generated@@273 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@273 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@76 ($generated@@273 $generated@@546)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@67)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@67) (= ($generated@@547 ($generated@@278 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@278 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@76 ($generated@@278 $generated@@550)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@178 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@178 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@554)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@555 ($generated@@531 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@531 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@76 ($generated@@531 $generated@@558)) $generated@@57))
 :pattern ( ($generated@@531 $generated@@558))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@75 ($generated@@458 $generated@@559)) 1)
 :pattern ( ($generated@@458 $generated@@559))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@458 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@458 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@67) (= ($generated@@562 ($generated@@137 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@137 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@67)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@67) (= ($generated@@565 ($generated@@157 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@157 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
(= ($generated@@411 $generated@@569 ($generated@@311 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@311 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@336 $generated@@173 $generated@@173)) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@67)) (= ($generated@@140 $generated@@570 ($generated@@439 $generated@@571 $generated@@572)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@570) $generated@@573))) (and ($generated@@264 ($generated@@85 ($generated@@412 $generated@@570) $generated@@573) $generated@@572) ($generated@@264 $generated@@573 $generated@@571)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@570) $generated@@573))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@570) $generated@@573))
))))
 :pattern ( ($generated@@140 $generated@@570 ($generated@@439 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@354 $generated@@173 $generated@@173)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) $generated@@67)) (= ($generated@@140 $generated@@574 ($generated@@447 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@574) $generated@@577))) (and ($generated@@264 ($generated@@85 ($generated@@422 $generated@@574) $generated@@577) $generated@@576) ($generated@@264 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@574) $generated@@577))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@140 $generated@@574 ($generated@@447 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@67) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@580) $generated@@81)) (and (and ($generated@@152 $generated@@579) (and (not (= $generated@@580 $generated@@138)) (= ($generated@@139 $generated@@580) ($generated@@137 $generated@@578)))) (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@136 $generated@@580))))) ($generated@@264 ($generated@@87 ($generated@@85 $generated@@579 $generated@@580) ($generated@@458 $generated@@581)) $generated@@578))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@579 $generated@@580) ($generated@@458 $generated@@581)) ($generated@@137 $generated@@578))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@173) (= (type $generated@@585) $generated@@173)) (< ($generated@@582 $generated@@584) ($generated@@583 ($generated@@263 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@263 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@173) (= (type $generated@@587) $generated@@173)) (< ($generated@@582 $generated@@587) ($generated@@583 ($generated@@263 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@263 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@173) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) ($generated@@264 $generated@@588 ($generated@@439 $generated@@589 $generated@@590))) (and (= ($generated@@311 ($generated@@411 ($generated@@336 $generated@@173 $generated@@173) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@411 ($generated@@336 $generated@@173 $generated@@173) $generated@@588) ($generated@@439 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@264 $generated@@588 ($generated@@439 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) $generated@@67)) ($generated@@264 $generated@@591 ($generated@@447 $generated@@592 $generated@@593))) (and (= ($generated@@311 ($generated@@411 ($generated@@354 $generated@@173 $generated@@173) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@411 ($generated@@354 $generated@@173 $generated@@173) $generated@@591) ($generated@@447 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@264 $generated@@591 ($generated@@447 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@173)) ($generated@@264 $generated@@596 ($generated@@163 $generated@@594 $generated@@595))) (and (= ($generated@@311 ($generated@@411 $generated@@164 $generated@@596)) $generated@@596) ($generated@@140 ($generated@@411 $generated@@164 $generated@@596) ($generated@@163 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@264 $generated@@596 ($generated@@163 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@85 ($generated@@464 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@85 ($generated@@464 $generated@@598) $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@599 $generated@@600)) $generated@@64) (= ($generated@@330 ($generated@@163 $generated@@599 $generated@@600)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@164) (= ($generated@@582 ($generated@@311 $generated@@601)) ($generated@@583 $generated@@601)))
 :pattern ( ($generated@@582 ($generated@@311 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@173) ($generated@@264 $generated@@602 ($generated@@79 0))) (and (= ($generated@@311 ($generated@@411 $generated@@2 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@411 ($generated@@80 $generated@@173 $generated@@4) $generated@@602) ($generated@@79 0))))
 :pattern ( ($generated@@264 $generated@@602 ($generated@@79 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@67)) ($generated@@264 $generated@@603 ($generated@@273 $generated@@604))) (and (= ($generated@@311 ($generated@@411 ($generated@@80 $generated@@173 $generated@@4) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@411 ($generated@@80 $generated@@173 $generated@@4) $generated@@603) ($generated@@273 $generated@@604))))
 :pattern ( ($generated@@264 $generated@@603 ($generated@@273 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@173) (= (type $generated@@606) $generated@@67)) ($generated@@264 $generated@@605 ($generated@@278 $generated@@606))) (and (= ($generated@@311 ($generated@@411 ($generated@@80 $generated@@173 $generated@@4) $generated@@605)) $generated@@605) ($generated@@140 ($generated@@411 ($generated@@80 $generated@@173 $generated@@4) $generated@@605) ($generated@@278 $generated@@606))))
 :pattern ( ($generated@@264 $generated@@605 ($generated@@278 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@173) (= (type $generated@@608) $generated@@67)) ($generated@@264 $generated@@607 ($generated@@178 $generated@@608))) (and (= ($generated@@311 ($generated@@411 ($generated@@80 $generated@@173 $generated@@2) $generated@@607)) $generated@@607) ($generated@@140 ($generated@@411 ($generated@@80 $generated@@173 $generated@@2) $generated@@607) ($generated@@178 $generated@@608))))
 :pattern ( ($generated@@264 $generated@@607 ($generated@@178 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@173) (= (type $generated@@610) $generated@@67)) ($generated@@264 $generated@@609 ($generated@@531 $generated@@610))) (and (= ($generated@@311 ($generated@@411 ($generated@@303 $generated@@173) $generated@@609)) $generated@@609) ($generated@@140 ($generated@@411 ($generated@@303 $generated@@173) $generated@@609) ($generated@@531 $generated@@610))))
 :pattern ( ($generated@@264 $generated@@609 ($generated@@531 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@67) (= (type $generated@@612) $generated@@173)) ($generated@@264 $generated@@612 ($generated@@137 $generated@@611))) (and (= ($generated@@311 ($generated@@411 $generated@@81 $generated@@612)) $generated@@612) ($generated@@140 ($generated@@411 $generated@@81 $generated@@612) ($generated@@137 $generated@@611))))
 :pattern ( ($generated@@264 $generated@@612 ($generated@@137 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@67) (= (type $generated@@614) $generated@@173)) ($generated@@264 $generated@@614 ($generated@@157 $generated@@613))) (and (= ($generated@@311 ($generated@@411 $generated@@81 $generated@@614)) $generated@@614) ($generated@@140 ($generated@@411 $generated@@81 $generated@@614) ($generated@@157 $generated@@613))))
 :pattern ( ($generated@@264 $generated@@614 ($generated@@157 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (=> (and (and (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@81)) (= (type $generated@@617) ($generated@@69 $generated@@619))) ($generated@@152 ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))) ($generated@@145 $generated@@615 ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@620 ($generated@@178 $generated@@621) $generated@@622) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@620 $generated@@623)))) ($generated@@289 $generated@@623 $generated@@621 $generated@@622))
 :pattern ( ($generated@@85 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@78 $generated@@620 ($generated@@178 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@164) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@626) (and ($generated@@162 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@67) ($generated@@78 $generated@@624 ($generated@@163 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@78 $generated@@624 ($generated@@163 $generated@@625 $generated@@627) $generated@@626))
))))) ($generated@@289 ($generated@@171 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@289 ($generated@@171 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@164) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@630) (and ($generated@@162 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@67) ($generated@@78 $generated@@628 ($generated@@163 $generated@@631 $generated@@629) $generated@@630))
 :pattern ( ($generated@@78 $generated@@628 ($generated@@163 $generated@@631 $generated@@629) $generated@@630))
))))) ($generated@@289 ($generated@@172 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@289 ($generated@@172 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@173) (= (type $generated@@633) $generated@@173)) (= ($generated@@263 ($generated@@285 $generated@@632) ($generated@@285 $generated@@633)) ($generated@@285 ($generated@@263 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@263 ($generated@@285 $generated@@632) ($generated@@285 $generated@@633)))
)))
(assert (forall (($generated@@634 Int) ) (! (= ($generated@@311 ($generated@@8 ($generated@@283 $generated@@634))) ($generated@@285 ($generated@@311 ($generated@@8 $generated@@634))))
 :pattern ( ($generated@@311 ($generated@@8 ($generated@@283 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ) (! (= ($generated@@311 ($generated@@285 $generated@@635)) ($generated@@285 ($generated@@311 $generated@@635)))
 :pattern ( ($generated@@311 ($generated@@285 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@304 (type $generated@@636))))
 (=> (and (= (type $generated@@636) ($generated@@303 $generated@@637)) (= ($generated@@302 $generated@@636) 0)) (= $generated@@636 ($generated@@301 $generated@@637))))
 :pattern ( ($generated@@302 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@80 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@324 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@324 $generated@@638) ($generated ($generated@@85 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@324 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@2)) ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@3)) ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@4)) ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@488)) ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@173)) ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@303 $generated@@173)) (= (type $generated@@653) $generated@@67)) (= ($generated@@140 $generated@@652 ($generated@@531 $generated@@653)) (forall (($generated@@654 Int) ) (!  (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@302 $generated@@652))) ($generated@@264 ($generated@@532 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@532 $generated@@652 $generated@@654))
))))
 :pattern ( ($generated@@140 $generated@@652 ($generated@@531 $generated@@653)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 Int) ) (!  (=> (= (type $generated@@656) ($generated@@303 $generated@@173)) (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@302 $generated@@656))) (< ($generated@@583 ($generated@@411 $generated@@164 ($generated@@532 $generated@@656 $generated@@657))) ($generated@@655 $generated@@656))))
 :pattern ( ($generated@@583 ($generated@@411 $generated@@164 ($generated@@532 $generated@@656 $generated@@657))))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@336 $generated@@173 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@140 $generated@@658 ($generated@@439 $generated@@659 $generated@@660))) (and (and ($generated@@140 ($generated@@334 $generated@@658) ($generated@@273 $generated@@659)) ($generated@@140 ($generated@@379 $generated@@658) ($generated@@273 $generated@@660))) ($generated@@140 ($generated@@410 $generated@@658) ($generated@@273 ($generated@@163 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@439 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@354 $generated@@173 $generated@@173)) (= (type $generated@@662) $generated@@67)) (= (type $generated@@663) $generated@@67)) ($generated@@140 $generated@@661 ($generated@@447 $generated@@662 $generated@@663))) (and (and ($generated@@140 ($generated@@352 $generated@@661) ($generated@@278 $generated@@662)) ($generated@@140 ($generated@@390 $generated@@661) ($generated@@278 $generated@@663))) ($generated@@140 ($generated@@421 $generated@@661) ($generated@@278 ($generated@@163 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@140 $generated@@661 ($generated@@447 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@2) ($generated@@140 $generated@@664 $generated@@46))
 :pattern ( ($generated@@140 $generated@@664 $generated@@46))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@3) ($generated@@140 $generated@@665 $generated@@47))
 :pattern ( ($generated@@140 $generated@@665 $generated@@47))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@4) ($generated@@140 $generated@@666 $generated@@44))
 :pattern ( ($generated@@140 $generated@@666 $generated@@44))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@488) ($generated@@140 $generated@@667 $generated@@45))
 :pattern ( ($generated@@140 $generated@@667 $generated@@45))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@173) ($generated@@140 $generated@@668 $generated@@48))
 :pattern ( ($generated@@140 $generated@@668 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Bool)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 (T@U) Bool)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@675) $generated@@81) (= (type $generated@@676) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@679) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@685) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@686) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@687) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@688) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@691) $generated@@81)) (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@695) $generated@@81)) (= (type $generated@@696) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@698 true))
(let (($generated@@699  (=> (and (< $generated@@669 ($generated@@283 0)) (= (ControlFlow 0 34) 32)) $generated@@698)))
(let (($generated@@700  (=> (and (<= ($generated@@283 0) $generated@@669) (= (ControlFlow 0 33) 32)) $generated@@698)))
(let (($generated@@701  (=> (not $generated@@670) (and (=> (= (ControlFlow 0 35) 33) $generated@@700) (=> (= (ControlFlow 0 35) 34) $generated@@699)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (and (< $generated@@671 ($generated@@283 0)) (= (ControlFlow 0 20) 18)) $generated@@702)))
(let (($generated@@704  (=> (and (<= ($generated@@283 0) $generated@@671) (= (ControlFlow 0 19) 18)) $generated@@702)))
(let (($generated@@705  (=> (not $generated@@672) (and (=> (= (ControlFlow 0 21) 19) $generated@@704) (=> (= (ControlFlow 0 21) 20) $generated@@703)))))
(let (($generated@@706  (=> (< $generated@@671 10) (=> (and (= $generated@@673 (- 10 $generated@@671)) (= $generated@@674 (+ $generated@@671 1))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (<= 0 $generated@@673) (= (- 10 $generated@@674) $generated@@673))) (=> (or (<= 0 $generated@@673) (= (- 10 $generated@@674) $generated@@673)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (< (- 10 $generated@@674) $generated@@673)) (=> (< (- 10 $generated@@674) $generated@@673) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> $generated@@672 (<= ($generated@@283 0) $generated@@674))) (=> (=> $generated@@672 (<= ($generated@@283 0) $generated@@674)) (=> (= (ControlFlow 0 13) (- 0 12)) (=> $generated@@672 (<= $generated@@674 ($generated@@283 10))))))))))))))
(let (($generated@@707  (=> (<= 10 $generated@@671) (and (=> (= (ControlFlow 0 5) (- 0 11)) (not (= $generated@@675 $generated@@138))) (=> (not (= $generated@@675 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= 0 ($generated@@283 0)) (< ($generated@@283 0) ($generated@@136 $generated@@675)))) (=> (and (<= 0 ($generated@@283 0)) (< ($generated@@283 0) ($generated@@136 $generated@@675))) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@0 ($generated@@183 $generated@@676 $generated@@675 ($generated@@458 ($generated@@283 0))))) (=> ($generated@@0 ($generated@@183 $generated@@676 $generated@@675 ($generated@@458 ($generated@@283 0)))) (=> (and (and (= $generated@@677 ($generated@@283 2)) (= $generated@@678 ($generated@@86 $generated@@679 $generated@@675 ($generated@@88 ($generated@@85 $generated@@679 $generated@@675) ($generated@@458 ($generated@@283 0)) ($generated@@311 ($generated@@8 $generated@@677)))))) (and ($generated@@152 $generated@@678) (= $generated@@680 (+ $generated@@669 1)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@681) (= (- 10 $generated@@680) $generated@@681))) (=> (or (<= 0 $generated@@681) (= (- 10 $generated@@680) $generated@@681)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (- 10 $generated@@680) $generated@@681)) (=> (< (- 10 $generated@@680) $generated@@681) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@670 (<= ($generated@@283 0) $generated@@680))) (=> (=> $generated@@670 (<= ($generated@@283 0) $generated@@680)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@670 (<= $generated@@680 ($generated@@283 10))))))))))))))))))))
(let (($generated@@708  (=> $generated@@672 (and (=> (= (ControlFlow 0 17) 5) $generated@@707) (=> (= (ControlFlow 0 17) 13) $generated@@706)))))
(let (($generated@@709  (and (=> (= (ControlFlow 0 22) 21) $generated@@705) (=> (= (ControlFlow 0 22) 17) $generated@@708))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (and (and (and (and (and (and (and (and (not false) (and (<= 0 $generated@@669) (< $generated@@669 10))) (= $generated@@682 10)) $generated@@670) (and (<= 1 $generated@@681) (< $generated@@681 11))) (= $generated@@683 1)) (and (<= 0 $generated@@671) (< $generated@@671 11))) (= $generated@@684 10)) (and (and (and (=> $generated@@672 true) (=> $generated@@672 (<= ($generated@@283 0) $generated@@671))) (and (=> $generated@@672 (<= $generated@@671 ($generated@@283 10))) (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@81) (=> (and (not (= $generated@@712 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@685 $generated@@712) $generated@@60))) (= ($generated@@85 $generated@@679 $generated@@712) ($generated@@85 $generated@@679 $generated@@712))))
 :pattern ( ($generated@@85 $generated@@679 $generated@@712))
)))) (and (and ($generated@@145 $generated@@679 $generated@@679) (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@70 (type $generated@@714))))
 (=> (and (and (= (type $generated@@713) $generated@@81) (= (type $generated@@714) ($generated@@69 $generated@@715))) (and (not (= $generated@@713 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@679 $generated@@713) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@679 $generated@@713) $generated@@714) ($generated@@87 ($generated@@85 $generated@@679 $generated@@713) $generated@@714)) ($generated@@0 ($generated@@183 $generated@@686 $generated@@713 $generated@@714)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@679 $generated@@713) $generated@@714))
))) (and (<= (- 10 $generated@@671) $generated@@684) (=> (= (- 10 $generated@@671) $generated@@684) true))))) (and (=> (= (ControlFlow 0 23) 3) $generated@@710) (=> (= (ControlFlow 0 23) 22) $generated@@709)))))
(let (($generated@@716  (=> (and (< $generated@@669 10) (= $generated@@681 (- 10 $generated@@669))) (and (=> (= (ControlFlow 0 24) (- 0 30)) (<= 0 ($generated@@283 1))) (=> (<= 0 ($generated@@283 1)) (=> (and (and (and (not (= $generated@@675 $generated@@138)) (= ($generated@@139 $generated@@675) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@687 $generated@@675) $generated@@60)))) (and (and (= ($generated@@136 $generated@@675) ($generated@@283 1)) (= $generated@@688 ($generated@@86 $generated@@687 $generated@@675 ($generated@@88 ($generated@@85 $generated@@687 $generated@@675) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@688) ($generated@@689 $generated@@688)))) (and (=> (= (ControlFlow 0 24) (- 0 29)) (not (= $generated@@675 $generated@@138))) (=> (not (= $generated@@675 $generated@@138)) (and (=> (= (ControlFlow 0 24) (- 0 28)) (and (<= 0 ($generated@@283 0)) (< ($generated@@283 0) ($generated@@136 $generated@@675)))) (=> (and (<= 0 ($generated@@283 0)) (< ($generated@@283 0) ($generated@@136 $generated@@675))) (and (=> (= (ControlFlow 0 24) (- 0 27)) ($generated@@0 ($generated@@183 $generated@@676 $generated@@675 ($generated@@458 ($generated@@283 0))))) (=> ($generated@@0 ($generated@@183 $generated@@676 $generated@@675 ($generated@@458 ($generated@@283 0)))) (=> (and (= $generated@@683 ($generated@@283 1)) (= $generated@@679 ($generated@@86 $generated@@688 $generated@@675 ($generated@@88 ($generated@@85 $generated@@688 $generated@@675) ($generated@@458 ($generated@@283 0)) ($generated@@311 ($generated@@8 $generated@@683)))))) (=> (and (and ($generated@@152 $generated@@679) (= $generated@@690 ($generated@@283 0))) (and (= $generated@@686 ($generated@@251 $generated@@138 $generated@@679 $generated@@60 false)) (= $generated@@684 (- 10 $generated@@690)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (=> $generated@@672 (<= ($generated@@283 0) $generated@@690))) (=> (=> $generated@@672 (<= ($generated@@283 0) $generated@@690)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> $generated@@672 (<= $generated@@690 ($generated@@283 10)))) (=> (=> $generated@@672 (<= $generated@@690 ($generated@@283 10))) (=> (= (ControlFlow 0 24) 23) $generated@@711)))))))))))))))))))
(let (($generated@@717 true))
(let (($generated@@718  (=> $generated@@670 (and (=> (= (ControlFlow 0 31) 2) $generated@@717) (=> (= (ControlFlow 0 31) 24) $generated@@716)))))
(let (($generated@@719  (and (=> (= (ControlFlow 0 36) 35) $generated@@701) (=> (= (ControlFlow 0 36) 31) $generated@@718))))
(let (($generated@@720 true))
(let (($generated@@721  (=> (and (and (and (and ($generated@@152 $generated@@687) ($generated@@689 $generated@@687)) (and ($generated@@140 $generated@@691 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@691 ($generated@@157 $generated@@46) $generated@@687))) (and (and (not false) (and (<= 0 $generated@@669) (< $generated@@669 11))) (= $generated@@682 10))) (and (and (and (=> $generated@@670 true) (=> $generated@@670 (<= ($generated@@283 0) $generated@@669))) (and (=> $generated@@670 (<= $generated@@669 ($generated@@283 10))) (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@81) (=> (and (not (= $generated@@722 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@685 $generated@@722) $generated@@60))) (= ($generated@@85 $generated@@687 $generated@@722) ($generated@@85 $generated@@692 $generated@@722))))
 :pattern ( ($generated@@85 $generated@@687 $generated@@722))
)))) (and (and ($generated@@145 $generated@@692 $generated@@687) (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (! (let (($generated@@725 ($generated@@70 (type $generated@@724))))
 (=> (and (and (= (type $generated@@723) $generated@@81) (= (type $generated@@724) ($generated@@69 $generated@@725))) (and (not (= $generated@@723 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@692 $generated@@723) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@687 $generated@@723) $generated@@724) ($generated@@87 ($generated@@85 $generated@@692 $generated@@723) $generated@@724)) ($generated@@0 ($generated@@183 $generated@@676 $generated@@723 $generated@@724)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@687 $generated@@723) $generated@@724))
))) (and (<= (- 10 $generated@@669) $generated@@682) (=> (= (- 10 $generated@@669) $generated@@682) true))))) (and (=> (= (ControlFlow 0 37) 1) $generated@@720) (=> (= (ControlFlow 0 37) 36) $generated@@719)))))
(let (($generated@@726  (=> (and (= $generated@@693 ($generated@@184 $generated@@138 $generated@@685 $generated@@60 false)) (= $generated@@694 ($generated@@283 0))) (and (=> (= (ControlFlow 0 38) (- 0 41)) (<= 0 ($generated@@283 1))) (=> (<= 0 ($generated@@283 1)) (=> (and (and (and (and (not (= $generated@@695 $generated@@138)) (= ($generated@@139 $generated@@695) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@685 $generated@@695) $generated@@60)))) (and (= ($generated@@136 $generated@@695) ($generated@@283 1)) (= $generated@@692 ($generated@@86 $generated@@685 $generated@@695 ($generated@@88 ($generated@@85 $generated@@685 $generated@@695) $generated@@60 ($generated@@11 true)))))) (and (and ($generated@@152 $generated@@692) ($generated@@689 $generated@@692)) (and (= $generated@@676 ($generated@@239 $generated@@138 $generated@@692 $generated@@60 false)) (= $generated@@682 (- 10 $generated@@694))))) (and (=> (= (ControlFlow 0 38) (- 0 40)) (=> $generated@@670 (<= ($generated@@283 0) $generated@@694))) (=> (=> $generated@@670 (<= ($generated@@283 0) $generated@@694)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (=> $generated@@670 (<= $generated@@694 ($generated@@283 10)))) (=> (=> $generated@@670 (<= $generated@@694 ($generated@@283 10))) (=> (= (ControlFlow 0 38) 37) $generated@@721)))))))))))
(let (($generated@@727  (=> (and ($generated@@152 $generated@@685) ($generated@@689 $generated@@685)) (=> (and (and (and ($generated@@140 $generated@@696 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@696 ($generated@@157 $generated@@46) $generated@@685)) true) (and (= 1 $generated@@697) (= (ControlFlow 0 42) 38))) $generated@@726))))
$generated@@727)))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@218 (T@T) T@U)
(declare-fun $generated@@219 (T@U) Int)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Int)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@T) T@U)
(declare-fun $generated@@253 (T@T T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@399 () T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U Int) T@U)
(declare-fun $generated@@452 (T@U) Int)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@504 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@T)
(declare-fun $generated@@506 (T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@163)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@172)) (= (type $generated@@189) $generated@@172)) (= ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@139 ($generated@@182 $generated@@188 $generated@@189) ($generated@@162 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@163) (= (type $generated@@191) $generated@@163)) (= ($generated@@169 $generated@@190 $generated@@191) (= $generated@@190 $generated@@191)))
 :pattern ( ($generated@@169 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@195) $generated@@67)) (= ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@172) ($generated@@0 ($generated@@84 $generated@@194 $generated@@196))) ($generated@@183 $generated@@196 $generated@@195))
 :pattern ( ($generated@@84 $generated@@194 $generated@@196))
))))
 :pattern ( ($generated@@139 $generated@@194 ($generated@@192 $generated@@195)))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@200) $generated@@67)) (= ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@172) ($generated@@0 ($generated@@84 $generated@@199 $generated@@201))) ($generated@@183 $generated@@201 $generated@@200))
 :pattern ( ($generated@@84 $generated@@199 $generated@@201))
))))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@197 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(= (type ($generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@202 $generated@@205) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) $generated@@67) (= (type $generated@@208) $generated@@67)) (= (type $generated@@209) $generated@@172)) (= (type $generated@@210) $generated@@172)) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@211)) (= ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211)  (and ($generated@@206 $generated@@209 $generated@@207 $generated@@211) ($generated@@206 $generated@@210 $generated@@208 $generated@@211))))
 :pattern ( ($generated@@77 ($generated@@182 $generated@@209 $generated@@210) ($generated@@162 $generated@@207 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@71)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@163) (= ($generated@@161 $generated@@214) (= ($generated@@212 $generated@@214) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@215) $generated@@163) ($generated@@161 $generated@@215)) (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@172) (= (type $generated@@217) $generated@@172)) (= $generated@@215 ($generated@@182 $generated@@216 $generated@@217)))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)))
 :pattern ( ($generated@@161 $generated@@215))
)))
(assert  (and (and (forall (($generated@@222 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@222)) 16)) (forall (($generated@@223 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@223)) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
))) (forall (($generated@@224 T@T) ) (! (= (type ($generated@@218 $generated@@224)) ($generated@@220 $generated@@224))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert (forall (($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@225)) 0)
 :pattern ( ($generated@@218 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@80)) (= ($generated@@139 $generated@@227 ($generated@@156 $generated@@226))  (and ($generated@@139 $generated@@227 ($generated@@136 $generated@@226)) (not (= $generated@@227 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@227 ($generated@@156 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@172)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232) ($generated@@77 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@206 ($generated@@228 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@233) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@234) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@235) $generated@@172)) (= (type $generated@@236) $generated@@67)) ($generated@@144 $generated@@233 $generated@@234)) ($generated@@206 $generated@@235 $generated@@236 $generated@@233)) ($generated@@206 $generated@@235 $generated@@236 $generated@@234))
 :pattern ( ($generated@@144 $generated@@233 $generated@@234) ($generated@@206 $generated@@235 $generated@@236 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@237) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@238) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@240) $generated@@67)) ($generated@@144 $generated@@237 $generated@@238)) ($generated@@77 $generated@@239 $generated@@240 $generated@@237)) ($generated@@77 $generated@@239 $generated@@240 $generated@@238))
 :pattern ( ($generated@@144 $generated@@237 $generated@@238) ($generated@@77 $generated@@239 $generated@@240 $generated@@237))
)))
(assert (forall (($generated@@243 T@T) ) (! (= (type ($generated@@242 $generated@@243)) ($generated@@79 $generated@@243 $generated@@2))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@82 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@79 $generated@@245 $generated@@2)) (and (= (= ($generated@@241 $generated@@244) 0) (= $generated@@244 ($generated@@242 $generated@@245))) (=> (not (= ($generated@@241 $generated@@244) 0)) (exists (($generated@@246 T@U) ) (!  (and (= (type $generated@@246) $generated@@245) (< 0 ($generated ($generated@@84 $generated@@244 $generated@@246))))
 :no-pattern (type $generated@@246)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
))))))
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@249)) $generated@@61) (= ($generated@@247 ($generated@@136 $generated@@249)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@250)) $generated@@62) (= ($generated@@247 ($generated@@156 $generated@@250)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@250))
)))
(assert  (and (and (and (and (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@1 ($generated@@253 $generated@@256 $generated@@257)) 17)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@253 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@253 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@253 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@254 (type $generated@@262))))
(= (type ($generated@@251 $generated@@262)) ($generated@@79 $generated@@263 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@262))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= (type ($generated@@252 $generated@@264 $generated@@265)) ($generated@@253 $generated@@264 $generated@@265))
 :pattern ( ($generated@@252 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@T) ) (! (let (($generated@@268 (type $generated@@266)))
 (not ($generated@@0 ($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266))))
 :pattern ( (let (($generated@@268 (type $generated@@266)))
($generated@@84 ($generated@@251 ($generated@@252 $generated@@268 $generated@@267)) $generated@@266)))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@79 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@84 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (= ($generated@@178 $generated@@287) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@288) (and (<= 0 ($generated ($generated@@84 $generated@@287 $generated@@289))) (<= ($generated ($generated@@84 $generated@@287 $generated@@289)) ($generated@@241 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@287 $generated@@289))
)))))
 :pattern ( ($generated@@178 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@139 $generated@@291 ($generated@@136 $generated@@290))  (or (= $generated@@291 $generated@@137) (= ($generated@@138 $generated@@291) ($generated@@136 $generated@@290)))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@136 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@255 (type $generated@@292))))
(let (($generated@@294 ($generated@@254 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@253 $generated@@294 $generated@@293)) (or (= $generated@@292 ($generated@@252 $generated@@294 $generated@@293)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@292) $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@251 $generated@@292))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@255 (type $generated@@297))))
(= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@255 (type $generated@@299))))
(let (($generated@@301 ($generated@@254 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@253 $generated@@301 $generated@@300)) (or (= $generated@@299 ($generated@@252 $generated@@301 $generated@@300)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@300) ($generated@@0 ($generated@@84 ($generated@@296 $generated@@299) $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@273 (type $generated@@303))))
(let (($generated@@305 ($generated@@272 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@271 $generated@@305 $generated@@304)) (or (= $generated@@303 ($generated@@270 $generated@@305 $generated@@304)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@303) $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@269 $generated@@303))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(= (type ($generated@@307 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@273 (type $generated@@310))))
(let (($generated@@312 ($generated@@272 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@271 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@270 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@311) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@315) $generated@@67)) (= ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)) (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316)))) ($generated@@183 $generated@@316 $generated@@315))
 :pattern ( ($generated@@84 $generated@@314 $generated@@316))
))))
 :pattern ( ($generated@@139 $generated@@314 ($generated@@177 $generated@@315)))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@317) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@318) $generated@@67)) (= (type $generated@@319) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@172) ($generated@@0 ($generated@@84 $generated@@317 $generated@@320))) ($generated@@206 $generated@@320 $generated@@318 $generated@@319))
 :pattern ( ($generated@@84 $generated@@317 $generated@@320))
))))
 :pattern ( ($generated@@77 $generated@@317 ($generated@@192 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@172) ($generated@@0 ($generated@@84 $generated@@321 $generated@@324))) ($generated@@206 $generated@@324 $generated@@322 $generated@@323))
 :pattern ( ($generated@@84 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@77 $generated@@321 ($generated@@197 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= ($generated ($generated@@84 ($generated@@242 $generated@@326) $generated@@325)) 0))
 :pattern ( (let (($generated@@326 (type $generated@@325)))
($generated@@84 ($generated@@242 $generated@@326) $generated@@325)))
)))
(assert  (and (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@330)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@327 $generated@@330))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@328 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@255 (type $generated@@333))))
(let (($generated@@335 ($generated@@254 (type $generated@@333))))
(= (type ($generated@@329 $generated@@333)) ($generated@@79 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@329 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@337) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))  (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337)))) (= ($generated@@84 ($generated@@329 $generated@@336) ($generated@@170 ($generated@@328 $generated@@163 $generated@@337))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@337))))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@273 (type $generated@@341))))
(let (($generated@@343 ($generated@@272 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@345) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345)))) (= ($generated@@84 ($generated@@339 $generated@@344) ($generated@@170 ($generated@@328 $generated@@163 $generated@@345))) ($generated@@171 ($generated@@328 $generated@@163 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(let (($generated@@349 ($generated@@254 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@253 $generated@@349 $generated@@348)) (= ($generated@@0 ($generated@@84 ($generated@@296 $generated@@346) $generated@@347)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) (and ($generated@@0 ($generated@@84 ($generated@@251 $generated@@346) $generated@@350)) (= $generated@@347 ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@346) $generated@@350))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@346) $generated@@350))
))))))
 :pattern ( ($generated@@84 ($generated@@296 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(let (($generated@@354 ($generated@@272 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@271 $generated@@354 $generated@@353)) (= ($generated@@0 ($generated@@84 ($generated@@307 $generated@@351) $generated@@352)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (and ($generated@@0 ($generated@@84 ($generated@@269 $generated@@351) $generated@@355)) (= $generated@@352 ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@351) $generated@@355))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@351) $generated@@355))
))))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@67)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))) (and ($generated@@206 ($generated@@84 ($generated@@329 $generated@@359) $generated@@363) $generated@@361 $generated@@362) ($generated@@206 $generated@@363 $generated@@360 $generated@@362)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@359) $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@356 $generated@@360 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))) (and ($generated@@206 ($generated@@84 ($generated@@339 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@206 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@372) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@372 $generated@@374))) (and ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))) ($generated@@144 $generated@@372 $generated@@374))
 :pattern ( ($generated@@144 $generated@@372 $generated@@373) ($generated@@144 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@T) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@376 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@273 (type $generated@@377))))
(let (($generated@@379 ($generated@@272 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@271 $generated@@379 $generated@@378)) (= (= $generated@@377 ($generated@@270 $generated@@379 $generated@@378)) (= ($generated@@269 $generated@@377) ($generated@@375 $generated@@379))))))
 :pattern ( ($generated@@269 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@273 (type $generated@@380))))
(let (($generated@@382 ($generated@@272 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@271 $generated@@382 $generated@@381)) (= (= $generated@@380 ($generated@@270 $generated@@382 $generated@@381)) (= ($generated@@307 $generated@@380) ($generated@@375 $generated@@381))))))
 :pattern ( ($generated@@307 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@273 (type $generated@@383))))
(let (($generated@@385 ($generated@@272 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@271 $generated@@385 $generated@@384)) (= (= $generated@@383 ($generated@@270 $generated@@385 $generated@@384)) (= ($generated@@338 $generated@@383) ($generated@@375 $generated@@172))))))
 :pattern ( ($generated@@338 $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@255 (type $generated@@386))))
(let (($generated@@388 ($generated@@254 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@253 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@252 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (and (and (= (type $generated@@389) $generated@@172) (= (type $generated@@390) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@386) ($generated@@228 ($generated@@182 $generated@@389 $generated@@390)))))
 :no-pattern (type $generated@@389)
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@327 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@273 (type $generated@@391))))
(let (($generated@@393 ($generated@@272 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@271 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@270 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@172) (= (type $generated@@395) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@391) ($generated@@228 ($generated@@182 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@338 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@172) ($generated@@183 $generated@@396 $generated@@46)) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@396)) $generated@@396) ($generated@@139 ($generated@@328 $generated@@2 $generated@@396) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@396 $generated@@46))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@172) ($generated@@183 $generated@@397 $generated@@47)) (and (= ($generated@@228 ($generated@@328 $generated@@3 $generated@@397)) $generated@@397) ($generated@@139 ($generated@@328 $generated@@3 $generated@@397) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@397 $generated@@47))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@172) ($generated@@183 $generated@@398 $generated@@44)) (and (= ($generated@@228 ($generated@@328 $generated@@4 $generated@@398)) $generated@@398) ($generated@@139 ($generated@@328 $generated@@4 $generated@@398) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@398 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@399) 19))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@172) ($generated@@183 $generated@@400 $generated@@45)) (and (= ($generated@@228 ($generated@@328 $generated@@399 $generated@@400)) $generated@@400) ($generated@@139 ($generated@@328 $generated@@399 $generated@@400) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@400 $generated@@45))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@67) (= ($generated@@183 ($generated@@228 $generated@@401) $generated@@402) ($generated@@139 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@183 ($generated@@228 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@80) (<= 0 ($generated@@135 $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@82 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@79 $generated@@405 $generated@@2)) (<= 0 ($generated@@241 $generated@@404))))
 :pattern ( ($generated@@241 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@221 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@220 $generated@@407)) (<= 0 ($generated@@219 $generated@@406))))
 :pattern ( ($generated@@219 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@67) (= (type $generated@@411) $generated@@67)) (= ($generated@@408 ($generated@@356 $generated@@410 $generated@@411)) $generated@@410))
 :pattern ( ($generated@@356 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= ($generated@@412 ($generated@@356 $generated@@414 $generated@@415)) $generated@@415))
 :pattern ( ($generated@@356 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@67) (= (type $generated@@417) $generated@@67)) (= ($generated@@75 ($generated@@356 $generated@@416 $generated@@417)) $generated@@58))
 :pattern ( ($generated@@356 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@67) (= (type $generated@@421) $generated@@67)) (= ($generated@@418 ($generated@@364 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@364 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@364 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@364 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@67) (= (type $generated@@427) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@426 $generated@@427)) $generated@@59))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) (= (type $generated@@429) $generated@@172)) (= ($generated@@212 ($generated@@182 $generated@@428 $generated@@429)) $generated@@63))
 :pattern ( ($generated@@182 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@67) (= (type $generated@@433) $generated@@67)) (= ($generated@@430 ($generated@@162 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@162 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@162 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@162 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@172) (= (type $generated@@439) $generated@@172)) (= ($generated@@170 ($generated@@182 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@182 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@172) (= (type $generated@@441) $generated@@172)) (= ($generated@@171 ($generated@@182 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@182 $generated@@440 $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (! (let (($generated@@447 ($generated@@221 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445 $generated@@446)) $generated@@447))
 :pattern ( ($generated@@443 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@220 $generated@@172)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450) (forall (($generated@@451 Int) ) (!  (=> (and (<= 0 $generated@@451) (< $generated@@451 ($generated@@219 $generated@@448))) ($generated@@206 ($generated@@443 $generated@@448 $generated@@451) $generated@@449 $generated@@450))
 :pattern ( ($generated@@443 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@448 ($generated@@442 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ) (! (= ($generated@@452 ($generated@@78 $generated@@453)) $generated@@453)
 :pattern ( ($generated@@78 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@454 ($generated@@192 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@192 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@457)) $generated@@54))
 :pattern ( ($generated@@192 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@458 ($generated@@197 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@197 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@75 ($generated@@197 $generated@@461)) $generated@@55))
 :pattern ( ($generated@@197 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@462 ($generated@@177 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@177 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@465)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@67) (= ($generated@@466 ($generated@@442 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@442 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@75 ($generated@@442 $generated@@469)) $generated@@57))
 :pattern ( ($generated@@442 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@67) (= ($generated@@470 ($generated@@136 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@136 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@156 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@156 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(= ($generated@@328 $generated@@477 ($generated@@228 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@228 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) $generated@@67)) (= ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))) (and ($generated@@183 ($generated@@84 ($generated@@329 $generated@@478) $generated@@481) $generated@@480) ($generated@@183 $generated@@481 $generated@@479)))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@478) $generated@@481))
 :pattern ( ($generated@@84 ($generated@@251 $generated@@478) $generated@@481))
))))
 :pattern ( ($generated@@139 $generated@@478 ($generated@@356 $generated@@479 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))) (and ($generated@@183 ($generated@@84 ($generated@@339 $generated@@482) $generated@@485) $generated@@484) ($generated@@183 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@482) $generated@@485))
 :pattern ( ($generated@@84 ($generated@@269 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@139 $generated@@482 ($generated@@364 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) (< ($generated@@486 $generated@@488) ($generated@@487 ($generated@@182 $generated@@488 $generated@@489))))
 :pattern ( ($generated@@182 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (< ($generated@@486 $generated@@491) ($generated@@487 ($generated@@182 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494))) (and (= ($generated@@228 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492)) $generated@@492) ($generated@@139 ($generated@@328 ($generated@@253 $generated@@172 $generated@@172) $generated@@492) ($generated@@356 $generated@@493 $generated@@494))))
 :pattern ( ($generated@@183 $generated@@492 ($generated@@356 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) $generated@@172) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497))) (and (= ($generated@@228 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495)) $generated@@495) ($generated@@139 ($generated@@328 ($generated@@271 $generated@@172 $generated@@172) $generated@@495) ($generated@@364 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@183 $generated@@495 ($generated@@364 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@172)) ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499))) (and (= ($generated@@228 ($generated@@328 $generated@@163 $generated@@500)) $generated@@500) ($generated@@139 ($generated@@328 $generated@@163 $generated@@500) ($generated@@162 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@183 $generated@@500 ($generated@@162 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (not ($generated@@0 ($generated@@84 ($generated@@375 $generated@@502) $generated@@501))))
 :pattern ( (let (($generated@@502 (type $generated@@501)))
($generated@@84 ($generated@@375 $generated@@502) $generated@@501)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@505 $generated@@509 $generated@@510)) 20)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@506 ($generated@@505 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@505 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@507 ($generated@@505 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@505 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@503 $generated@@515 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@503 $generated@@515 $generated@@516 $generated@@517))
))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 (type $generated@@520)))
(= (type ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522)) ($generated@@505 $generated@@524 $generated@@523))))
 :pattern ( ($generated@@508 $generated@@519 $generated@@520 $generated@@521 $generated@@522))
))) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@507 (type $generated@@525))))
 (=> (= (type $generated@@528) $generated@@529) (= ($generated@@503 ($generated@@508 $generated@@525 $generated@@526 $generated@@527 $generated@@528) $generated@@526 $generated@@527) $generated@@528)))
 :weight 0
))) (and (and (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (or (= $generated@@532 $generated@@534) (= ($generated@@503 ($generated@@508 $generated@@531 $generated@@532 $generated@@533 $generated@@530) $generated@@534 $generated@@535) ($generated@@503 $generated@@531 $generated@@534 $generated@@535)))
 :weight 0
)) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (or (= $generated@@539 $generated@@541) (= ($generated@@503 ($generated@@508 $generated@@537 $generated@@538 $generated@@539 $generated@@536) $generated@@540 $generated@@541) ($generated@@503 $generated@@537 $generated@@540 $generated@@541)))
 :weight 0
))) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or true (= ($generated@@503 ($generated@@508 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@503 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (= (type ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@505 $generated@@80 $generated@@4))
 :pattern ( ($generated@@504 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@70 (type $generated@@557))))
 (=> (and (and (and (and (and (= (type $generated@@552) $generated@@80) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@554) ($generated@@69 $generated@@4))) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@558))) (= ($generated@@0 ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))  (=> (and (not (= $generated@@556 $generated@@552)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@553 $generated@@556) $generated@@554))) (= $generated@@556 $generated@@555)))))
 :pattern ( ($generated@@503 ($generated@@504 $generated@@552 $generated@@553 $generated@@554 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@559 $generated@@560)) $generated@@64) (= ($generated@@247 ($generated@@162 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@163) (= ($generated@@486 ($generated@@228 $generated@@561)) ($generated@@487 $generated@@561)))
 :pattern ( ($generated@@486 ($generated@@228 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@172) ($generated@@183 $generated@@562 ($generated@@78 0))) (and (= ($generated@@228 ($generated@@328 $generated@@2 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@562) ($generated@@78 0))))
 :pattern ( ($generated@@183 $generated@@562 ($generated@@78 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@172) (= (type $generated@@564) $generated@@67)) ($generated@@183 $generated@@563 ($generated@@192 $generated@@564))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563)) $generated@@563) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@563) ($generated@@192 $generated@@564))))
 :pattern ( ($generated@@183 $generated@@563 ($generated@@192 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@183 $generated@@565 ($generated@@197 $generated@@566))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@197 $generated@@566))))
 :pattern ( ($generated@@183 $generated@@565 ($generated@@197 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@183 $generated@@567 ($generated@@177 $generated@@568))) (and (= ($generated@@228 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@328 ($generated@@79 $generated@@172 $generated@@2) $generated@@567) ($generated@@177 $generated@@568))))
 :pattern ( ($generated@@183 $generated@@567 ($generated@@177 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@183 $generated@@569 ($generated@@442 $generated@@570))) (and (= ($generated@@228 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@328 ($generated@@220 $generated@@172) $generated@@569) ($generated@@442 $generated@@570))))
 :pattern ( ($generated@@183 $generated@@569 ($generated@@442 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@172)) ($generated@@183 $generated@@572 ($generated@@136 $generated@@571))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@572)) $generated@@572) ($generated@@139 ($generated@@328 $generated@@80 $generated@@572) ($generated@@136 $generated@@571))))
 :pattern ( ($generated@@183 $generated@@572 ($generated@@136 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@183 $generated@@574 ($generated@@156 $generated@@573))) (and (= ($generated@@228 ($generated@@328 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@328 $generated@@80 $generated@@574) ($generated@@156 $generated@@573))))
 :pattern ( ($generated@@183 $generated@@574 ($generated@@156 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@575 $generated@@578)))) ($generated@@206 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@84 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@177 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@163) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@581) (and ($generated@@161 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@67) ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@77 $generated@@579 ($generated@@162 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@206 ($generated@@170 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@163) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@585) (and ($generated@@161 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@67) ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@162 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@206 ($generated@@171 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (= (type $generated@@588) $generated@@172)) (= ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)) ($generated@@202 ($generated@@182 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@182 ($generated@@202 $generated@@587) ($generated@@202 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@228 ($generated@@202 $generated@@589)) ($generated@@202 ($generated@@228 $generated@@589)))
 :pattern ( ($generated@@228 ($generated@@202 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@221 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@220 $generated@@591)) (= ($generated@@219 $generated@@590) 0)) (= $generated@@590 ($generated@@218 $generated@@591))))
 :pattern ( ($generated@@219 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@79 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@241 $generated@@592) ($generated ($generated@@84 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@241 ($generated@@85 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@2)) ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@3)) ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@4)) ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@399)) ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@172)) ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@220 $generated@@172)) (= (type $generated@@607) $generated@@67)) (= ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@219 $generated@@606))) ($generated@@183 ($generated@@443 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@443 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@139 $generated@@606 ($generated@@442 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@220 $generated@@172)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@219 $generated@@610))) (< ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@487 ($generated@@328 $generated@@163 ($generated@@443 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@253 $generated@@172 $generated@@172)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614))) (and (and ($generated@@139 ($generated@@251 $generated@@612) ($generated@@192 $generated@@613)) ($generated@@139 ($generated@@296 $generated@@612) ($generated@@192 $generated@@614))) ($generated@@139 ($generated@@327 $generated@@612) ($generated@@192 ($generated@@162 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@139 $generated@@612 ($generated@@356 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@271 $generated@@172 $generated@@172)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617))) (and (and ($generated@@139 ($generated@@269 $generated@@615) ($generated@@197 $generated@@616)) ($generated@@139 ($generated@@307 $generated@@615) ($generated@@197 $generated@@617))) ($generated@@139 ($generated@@338 $generated@@615) ($generated@@197 ($generated@@162 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@139 $generated@@615 ($generated@@364 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@139 $generated@@618 $generated@@46))
 :pattern ( ($generated@@139 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@139 $generated@@619 $generated@@47))
 :pattern ( ($generated@@139 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@139 $generated@@620 $generated@@44))
 :pattern ( ($generated@@139 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@399) ($generated@@139 $generated@@621 $generated@@45))
 :pattern ( ($generated@@139 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@172) ($generated@@139 $generated@@622 $generated@@48))
 :pattern ( ($generated@@139 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (= (type $generated@@623) ($generated@@505 $generated@@80 $generated@@4)) (= (type $generated@@624) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (and (= $generated@@623 ($generated@@504 $generated@@137 $generated@@624 $generated@@60 $generated@@625)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@625 $generated@@137)))))
(let (($generated@@629  (=> (and ($generated@@151 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@139 $generated@@625 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@625 ($generated@@156 $generated@@46) $generated@@624)) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@575 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@587 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@655 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (= (type ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@70 (type $generated@@585))))
 (=> (and (and (and (and (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@582) ($generated@@69 $generated@@4))) (= (type $generated@@583) $generated@@81)) (= (type $generated@@584) $generated@@81)) (= (type $generated@@585) ($generated@@69 $generated@@586))) (= ($generated@@0 ($generated@@519 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))  (=> (and (not (= $generated@@584 $generated@@580)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@581 $generated@@584) $generated@@582))) (= $generated@@584 $generated@@583)))))
 :pattern ( ($generated@@519 ($generated@@575 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (= (type ($generated@@587 $generated@@588 $generated@@589 $generated@@590 $generated@@591)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@587 $generated@@588 $generated@@589 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@70 (type $generated@@597))))
 (=> (and (and (and (and (and (= (type $generated@@592) $generated@@81) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@594) ($generated@@69 $generated@@4))) (= (type $generated@@595) $generated@@81)) (= (type $generated@@596) $generated@@81)) (= (type $generated@@597) ($generated@@69 $generated@@598))) (= ($generated@@0 ($generated@@519 ($generated@@587 $generated@@592 $generated@@593 $generated@@594 $generated@@595) $generated@@596 $generated@@597))  (=> (and (not (= $generated@@596 $generated@@592)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@593 $generated@@596) $generated@@594))) (= $generated@@596 $generated@@595)))))
 :pattern ( ($generated@@519 ($generated@@587 $generated@@592 $generated@@593 $generated@@594 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@67) (= (type $generated@@600) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@599 $generated@@600)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@599 $generated@@600)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@601)) ($generated@@503 $generated@@601)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@173) ($generated@@184 $generated@@602 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@602)) $generated@@602) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@602) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@602 ($generated@@79 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@67)) ($generated@@184 $generated@@603 ($generated@@193 $generated@@604))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@603)) $generated@@603) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@603) ($generated@@193 $generated@@604))))
 :pattern ( ($generated@@184 $generated@@603 ($generated@@193 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@173) (= (type $generated@@606) $generated@@67)) ($generated@@184 $generated@@605 ($generated@@198 $generated@@606))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@605)) $generated@@605) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@605) ($generated@@198 $generated@@606))))
 :pattern ( ($generated@@184 $generated@@605 ($generated@@198 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@173) (= (type $generated@@608) $generated@@67)) ($generated@@184 $generated@@607 ($generated@@178 $generated@@608))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@607)) $generated@@607) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@607) ($generated@@178 $generated@@608))))
 :pattern ( ($generated@@184 $generated@@607 ($generated@@178 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@173) (= (type $generated@@610) $generated@@67)) ($generated@@184 $generated@@609 ($generated@@451 $generated@@610))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@609)) $generated@@609) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@609) ($generated@@451 $generated@@610))))
 :pattern ( ($generated@@184 $generated@@609 ($generated@@451 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@67) (= (type $generated@@612) $generated@@173)) ($generated@@184 $generated@@612 ($generated@@137 $generated@@611))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@612)) $generated@@612) ($generated@@140 ($generated@@331 $generated@@81 $generated@@612) ($generated@@137 $generated@@611))))
 :pattern ( ($generated@@184 $generated@@612 ($generated@@137 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@67) (= (type $generated@@614) $generated@@173)) ($generated@@184 $generated@@614 ($generated@@157 $generated@@613))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@614)) $generated@@614) ($generated@@140 ($generated@@331 $generated@@81 $generated@@614) ($generated@@157 $generated@@613))))
 :pattern ( ($generated@@184 $generated@@614 ($generated@@157 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (=> (and (and (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@81)) (= (type $generated@@617) ($generated@@69 $generated@@619))) ($generated@@152 ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))) ($generated@@145 $generated@@615 ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@86 $generated@@615 $generated@@616 ($generated@@88 ($generated@@85 $generated@@615 $generated@@616) $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@620 ($generated@@178 $generated@@621) $generated@@622) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@620 $generated@@623)))) ($generated@@209 $generated@@623 $generated@@621 $generated@@622))
 :pattern ( ($generated@@85 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@78 $generated@@620 ($generated@@178 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@164) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@626) (and ($generated@@162 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@67) ($generated@@78 $generated@@624 ($generated@@163 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@78 $generated@@624 ($generated@@163 $generated@@625 $generated@@627) $generated@@626))
))))) ($generated@@209 ($generated@@171 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@164) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@630) (and ($generated@@162 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@67) ($generated@@78 $generated@@628 ($generated@@163 $generated@@631 $generated@@629) $generated@@630))
 :pattern ( ($generated@@78 $generated@@628 ($generated@@163 $generated@@631 $generated@@629) $generated@@630))
))))) ($generated@@209 ($generated@@172 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@173) (= (type $generated@@633) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@632) ($generated@@205 $generated@@633)) ($generated@@205 ($generated@@183 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@632) ($generated@@205 $generated@@633)))
)))
(assert (forall (($generated@@634 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@634))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@634))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@635)) ($generated@@205 ($generated@@231 $generated@@635)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@224 (type $generated@@636))))
 (=> (and (= (type $generated@@636) ($generated@@223 $generated@@637)) (= ($generated@@222 $generated@@636) 0)) (= $generated@@636 ($generated@@221 $generated@@637))))
 :pattern ( ($generated@@222 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@80 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@244 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@244 $generated@@638) ($generated ($generated@@85 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@2)) ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@3)) ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@4)) ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@408)) ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@173)) ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@223 $generated@@173)) (= (type $generated@@653) $generated@@67)) (= ($generated@@140 $generated@@652 ($generated@@451 $generated@@653)) (forall (($generated@@654 Int) ) (!  (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@222 $generated@@652))) ($generated@@184 ($generated@@452 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@452 $generated@@652 $generated@@654))
))))
 :pattern ( ($generated@@140 $generated@@652 ($generated@@451 $generated@@653)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 Int) ) (!  (=> (= (type $generated@@656) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@222 $generated@@656))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@656 $generated@@657))) ($generated@@655 $generated@@656))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@656 $generated@@657))))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@140 $generated@@658 ($generated@@359 $generated@@659 $generated@@660))) (and (and ($generated@@140 ($generated@@254 $generated@@658) ($generated@@193 $generated@@659)) ($generated@@140 ($generated@@299 $generated@@658) ($generated@@193 $generated@@660))) ($generated@@140 ($generated@@330 $generated@@658) ($generated@@193 ($generated@@163 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@140 $generated@@658 ($generated@@359 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@662) $generated@@67)) (= (type $generated@@663) $generated@@67)) ($generated@@140 $generated@@661 ($generated@@367 $generated@@662 $generated@@663))) (and (and ($generated@@140 ($generated@@272 $generated@@661) ($generated@@198 $generated@@662)) ($generated@@140 ($generated@@310 $generated@@661) ($generated@@198 $generated@@663))) ($generated@@140 ($generated@@341 $generated@@661) ($generated@@198 ($generated@@163 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@140 $generated@@661 ($generated@@367 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@2) ($generated@@140 $generated@@664 $generated@@46))
 :pattern ( ($generated@@140 $generated@@664 $generated@@46))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@3) ($generated@@140 $generated@@665 $generated@@47))
 :pattern ( ($generated@@140 $generated@@665 $generated@@47))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@4) ($generated@@140 $generated@@666 $generated@@44))
 :pattern ( ($generated@@140 $generated@@666 $generated@@44))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@408) ($generated@@140 $generated@@667 $generated@@45))
 :pattern ( ($generated@@140 $generated@@667 $generated@@45))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@173) ($generated@@140 $generated@@668 $generated@@48))
 :pattern ( ($generated@@140 $generated@@668 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Bool)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 (T@U) Bool)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@674) $generated@@81) (= (type $generated@@675) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@686) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@687) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@688) $generated@@81)) (= (type $generated@@689) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@691) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@693) $generated@@81)) (= (type $generated@@694) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@696) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@698 true))
(let (($generated@@699  (=> (and (< $generated@@669 ($generated@@203 0)) (= (ControlFlow 0 35) 33)) $generated@@698)))
(let (($generated@@700  (=> (and (<= ($generated@@203 0) $generated@@669) (= (ControlFlow 0 34) 33)) $generated@@698)))
(let (($generated@@701  (=> (not $generated@@670) (and (=> (= (ControlFlow 0 36) 34) $generated@@700) (=> (= (ControlFlow 0 36) 35) $generated@@699)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (and (< $generated@@671 ($generated@@203 0)) (= (ControlFlow 0 20) 18)) $generated@@702)))
(let (($generated@@704  (=> (and (<= ($generated@@203 0) $generated@@671) (= (ControlFlow 0 19) 18)) $generated@@702)))
(let (($generated@@705  (=> (not $generated@@672) (and (=> (= (ControlFlow 0 21) 19) $generated@@704) (=> (= (ControlFlow 0 21) 20) $generated@@703)))))
(let (($generated@@706  (=> (and (< $generated@@671 10) (= $generated@@673 (- 10 $generated@@671))) (and (=> (= (ControlFlow 0 10) (- 0 16)) (not (= $generated@@674 $generated@@138))) (=> (not (= $generated@@674 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@674)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@674))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@0 ($generated@@519 $generated@@675 $generated@@674 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@675 $generated@@674 ($generated@@378 ($generated@@203 0)))) (=> (and (and (= $generated@@676 ($generated@@203 3)) (= $generated@@677 ($generated@@86 $generated@@678 $generated@@674 ($generated@@88 ($generated@@85 $generated@@678 $generated@@674) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@676)))))) (and ($generated@@152 $generated@@677) (= $generated@@679 (+ $generated@@671 1)))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (<= 0 $generated@@673) (= (- 10 $generated@@679) $generated@@673))) (=> (or (<= 0 $generated@@673) (= (- 10 $generated@@679) $generated@@673)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (< (- 10 $generated@@679) $generated@@673)) (=> (< (- 10 $generated@@679) $generated@@673) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@672 (<= ($generated@@203 0) $generated@@679))) (=> (=> $generated@@672 (<= ($generated@@203 0) $generated@@679)) (=> (= (ControlFlow 0 10) (- 0 9)) (=> $generated@@672 (<= $generated@@679 ($generated@@203 10))))))))))))))))))))
(let (($generated@@707  (=> (and (<= 10 $generated@@671) (= $generated@@680 (+ $generated@@669 1))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@681) (= (- 10 $generated@@680) $generated@@681))) (=> (or (<= 0 $generated@@681) (= (- 10 $generated@@680) $generated@@681)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (- 10 $generated@@680) $generated@@681)) (=> (< (- 10 $generated@@680) $generated@@681) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@670 (<= ($generated@@203 0) $generated@@680))) (=> (=> $generated@@670 (<= ($generated@@203 0) $generated@@680)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@670 (<= $generated@@680 ($generated@@203 10)))))))))))))
(let (($generated@@708  (=> $generated@@672 (and (=> (= (ControlFlow 0 17) 5) $generated@@707) (=> (= (ControlFlow 0 17) 10) $generated@@706)))))
(let (($generated@@709  (and (=> (= (ControlFlow 0 22) 21) $generated@@705) (=> (= (ControlFlow 0 22) 17) $generated@@708))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (and ($generated@@152 $generated@@678) ($generated@@682 $generated@@678)) (=> (and (and (and (and (and (and (and (and (not false) (and (<= 0 $generated@@669) (< $generated@@669 10))) (= $generated@@683 10)) $generated@@670) (and (<= 1 $generated@@681) (< $generated@@681 11))) (= $generated@@684 1)) (and (<= 0 $generated@@671) (< $generated@@671 11))) (= $generated@@685 10)) (and (and (and (=> $generated@@672 true) (=> $generated@@672 (<= ($generated@@203 0) $generated@@671))) (and (=> $generated@@672 (<= $generated@@671 ($generated@@203 10))) (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@81) (=> (and (not (= $generated@@712 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@686 $generated@@712) $generated@@60))) (or (= ($generated@@85 $generated@@678 $generated@@712) ($generated@@85 $generated@@687 $generated@@712)) (= $generated@@712 $generated@@688))))
 :pattern ( ($generated@@85 $generated@@678 $generated@@712))
)))) (and (and ($generated@@145 $generated@@687 $generated@@678) (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@70 (type $generated@@714))))
 (=> (and (and (= (type $generated@@713) $generated@@81) (= (type $generated@@714) ($generated@@69 $generated@@715))) (and (not (= $generated@@713 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@687 $generated@@713) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@678 $generated@@713) $generated@@714) ($generated@@87 ($generated@@85 $generated@@687 $generated@@713) $generated@@714)) ($generated@@0 ($generated@@519 $generated@@675 $generated@@713 $generated@@714)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@678 $generated@@713) $generated@@714))
))) (and (<= (- 10 $generated@@671) $generated@@685) (=> (= (- 10 $generated@@671) $generated@@685) true))))) (and (=> (= (ControlFlow 0 23) 3) $generated@@710) (=> (= (ControlFlow 0 23) 22) $generated@@709))))))
(let (($generated@@716  (=> (and (< $generated@@669 10) (= $generated@@681 (- 10 $generated@@669))) (and (=> (= (ControlFlow 0 24) (- 0 31)) (<= 0 ($generated@@203 1))) (=> (<= 0 ($generated@@203 1)) (=> (and (and (and (not (= $generated@@674 $generated@@138)) (= ($generated@@139 $generated@@674) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@689 $generated@@674) $generated@@60)))) (and (and (= ($generated@@136 $generated@@674) ($generated@@203 1)) (= $generated@@690 ($generated@@86 $generated@@689 $generated@@674 ($generated@@88 ($generated@@85 $generated@@689 $generated@@674) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@690) ($generated@@682 $generated@@690)))) (and (=> (= (ControlFlow 0 24) (- 0 30)) (not (= $generated@@674 $generated@@138))) (=> (not (= $generated@@674 $generated@@138)) (and (=> (= (ControlFlow 0 24) (- 0 29)) (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@674)))) (=> (and (<= 0 ($generated@@203 0)) (< ($generated@@203 0) ($generated@@136 $generated@@674))) (and (=> (= (ControlFlow 0 24) (- 0 28)) ($generated@@0 ($generated@@519 $generated@@691 $generated@@674 ($generated@@378 ($generated@@203 0))))) (=> ($generated@@0 ($generated@@519 $generated@@691 $generated@@674 ($generated@@378 ($generated@@203 0)))) (=> (and (and (= $generated@@684 ($generated@@203 1)) (= $generated@@687 ($generated@@86 $generated@@690 $generated@@674 ($generated@@88 ($generated@@85 $generated@@690 $generated@@674) ($generated@@378 ($generated@@203 0)) ($generated@@231 ($generated@@8 $generated@@684)))))) (and ($generated@@152 $generated@@687) (= $generated@@692 ($generated@@203 0)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@70 (type $generated@@718))))
 (=> (and (= (type $generated@@717) $generated@@81) (= (type $generated@@718) ($generated@@69 $generated@@719))) (=> (and (and (not (= $generated@@717 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@687 $generated@@717) $generated@@60))) (= $generated@@717 $generated@@688)) ($generated@@0 ($generated@@519 $generated@@691 $generated@@717 $generated@@718)))))
 :no-pattern (type $generated@@717)
 :no-pattern (type $generated@@718)
 :no-pattern ($generated $generated@@717)
 :no-pattern ($generated@@0 $generated@@717)
 :no-pattern ($generated $generated@@718)
 :no-pattern ($generated@@0 $generated@@718)
))) (=> (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (! (let (($generated@@722 ($generated@@70 (type $generated@@721))))
 (=> (and (= (type $generated@@720) $generated@@81) (= (type $generated@@721) ($generated@@69 $generated@@722))) (=> (and (and (not (= $generated@@720 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@687 $generated@@720) $generated@@60))) (= $generated@@720 $generated@@688)) ($generated@@0 ($generated@@519 $generated@@691 $generated@@720 $generated@@721)))))
 :no-pattern (type $generated@@720)
 :no-pattern (type $generated@@721)
 :no-pattern ($generated $generated@@720)
 :no-pattern ($generated@@0 $generated@@720)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
)) (=> (and (= $generated@@675 ($generated@@587 $generated@@138 $generated@@687 $generated@@60 $generated@@688)) (= $generated@@685 (- 10 $generated@@692))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (=> $generated@@672 (<= ($generated@@203 0) $generated@@692))) (=> (=> $generated@@672 (<= ($generated@@203 0) $generated@@692)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> $generated@@672 (<= $generated@@692 ($generated@@203 10)))) (=> (=> $generated@@672 (<= $generated@@692 ($generated@@203 10))) (=> (= (ControlFlow 0 24) 23) $generated@@711)))))))))))))))))))))
(let (($generated@@723 true))
(let (($generated@@724  (=> $generated@@670 (and (=> (= (ControlFlow 0 32) 2) $generated@@723) (=> (= (ControlFlow 0 32) 24) $generated@@716)))))
(let (($generated@@725  (and (=> (= (ControlFlow 0 37) 36) $generated@@701) (=> (= (ControlFlow 0 37) 32) $generated@@724))))
(let (($generated@@726 true))
(let (($generated@@727  (=> (and (and (and (and ($generated@@152 $generated@@689) ($generated@@682 $generated@@689)) (and ($generated@@140 $generated@@693 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@693 ($generated@@157 $generated@@46) $generated@@689))) (and (and (not false) (and (<= 0 $generated@@669) (< $generated@@669 11))) (= $generated@@683 10))) (and (and (and (=> $generated@@670 true) (=> $generated@@670 (<= ($generated@@203 0) $generated@@669))) (and (=> $generated@@670 (<= $generated@@669 ($generated@@203 10))) (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@81) (=> (and (not (= $generated@@728 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@686 $generated@@728) $generated@@60))) (or (= ($generated@@85 $generated@@689 $generated@@728) ($generated@@85 $generated@@686 $generated@@728)) (= $generated@@728 $generated@@688))))
 :pattern ( ($generated@@85 $generated@@689 $generated@@728))
)))) (and (and ($generated@@145 $generated@@686 $generated@@689) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@70 (type $generated@@730))))
 (=> (and (and (= (type $generated@@729) $generated@@81) (= (type $generated@@730) ($generated@@69 $generated@@731))) (and (not (= $generated@@729 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@686 $generated@@729) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@689 $generated@@729) $generated@@730) ($generated@@87 ($generated@@85 $generated@@686 $generated@@729) $generated@@730)) ($generated@@0 ($generated@@519 $generated@@691 $generated@@729 $generated@@730)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@689 $generated@@729) $generated@@730))
))) (and (<= (- 10 $generated@@669) $generated@@683) (=> (= (- 10 $generated@@669) $generated@@683) true))))) (and (=> (= (ControlFlow 0 38) 1) $generated@@726) (=> (= (ControlFlow 0 38) 37) $generated@@725)))))
(let (($generated@@732  (=> (and (= $generated@@694 ($generated@@520 $generated@@138 $generated@@686 $generated@@60 $generated@@688)) (= $generated@@695 ($generated@@203 0))) (and (=> (= (ControlFlow 0 39) (- 0 42)) (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@70 (type $generated@@734))))
 (=> (and (= (type $generated@@733) $generated@@81) (= (type $generated@@734) ($generated@@69 $generated@@735))) (=> (and (and (not (= $generated@@733 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@686 $generated@@733) $generated@@60))) (= $generated@@733 $generated@@688)) ($generated@@0 ($generated@@519 $generated@@694 $generated@@733 $generated@@734)))))
 :no-pattern (type $generated@@733)
 :no-pattern (type $generated@@734)
 :no-pattern ($generated $generated@@733)
 :no-pattern ($generated@@0 $generated@@733)
 :no-pattern ($generated $generated@@734)
 :no-pattern ($generated@@0 $generated@@734)
))) (=> (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 ($generated@@70 (type $generated@@737))))
 (=> (and (= (type $generated@@736) $generated@@81) (= (type $generated@@737) ($generated@@69 $generated@@738))) (=> (and (and (not (= $generated@@736 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@686 $generated@@736) $generated@@60))) (= $generated@@736 $generated@@688)) ($generated@@0 ($generated@@519 $generated@@694 $generated@@736 $generated@@737)))))
 :no-pattern (type $generated@@736)
 :no-pattern (type $generated@@737)
 :no-pattern ($generated $generated@@736)
 :no-pattern ($generated@@0 $generated@@736)
 :no-pattern ($generated $generated@@737)
 :no-pattern ($generated@@0 $generated@@737)
)) (=> (and (= $generated@@691 ($generated@@575 $generated@@138 $generated@@686 $generated@@60 $generated@@688)) (= $generated@@683 (- 10 $generated@@695))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (=> $generated@@670 (<= ($generated@@203 0) $generated@@695))) (=> (=> $generated@@670 (<= ($generated@@203 0) $generated@@695)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (=> $generated@@670 (<= $generated@@695 ($generated@@203 10)))) (=> (=> $generated@@670 (<= $generated@@695 ($generated@@203 10))) (=> (= (ControlFlow 0 39) 38) $generated@@727)))))))))))
(let (($generated@@739  (=> (and (and ($generated@@152 $generated@@686) ($generated@@682 $generated@@686)) (and ($generated@@140 $generated@@688 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@688 ($generated@@157 $generated@@46) $generated@@686))) (=> (and (and (and (and ($generated@@140 $generated@@696 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@696 ($generated@@157 $generated@@46) $generated@@686)) true) (= 1 $generated@@697)) (and (> ($generated@@136 $generated@@688) 0) (= (ControlFlow 0 43) 39))) $generated@@732))))
$generated@@739)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 14))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@337 (T@U T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@537 (T@U T@U T@U) T@U)
(declare-fun $generated@@538 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@539 (T@T T@T) T@T)
(declare-fun $generated@@540 (T@T) T@T)
(declare-fun $generated@@541 (T@T) T@T)
(declare-fun $generated@@542 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@606 (T@T) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@631 (T@U T@U) Bool)
(declare-fun $generated@@658 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@70) (= (type $generated@@217) $generated@@70)) (= (type $generated@@218) $generated@@170)) (= (type $generated@@219) $generated@@170)) (= (type $generated@@220) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@220)) (= ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@218 $generated@@219) ($generated@@160 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@75)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@161) (= ($generated@@159 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@161) ($generated@@159 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@170) (= (type $generated@@226) $generated@@170)) (= $generated@@224 ($generated@@184 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@159 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 18)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@170)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239) ($generated@@85 $generated@@237 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@242) $generated@@170)) (= (type $generated@@243) $generated@@70)) ($generated@@143 $generated@@240 $generated@@241)) ($generated@@215 $generated@@242 $generated@@243 $generated@@240)) ($generated@@215 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@143 $generated@@240 $generated@@241) ($generated@@215 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@85 $generated@@246 $generated@@247 $generated@@244)) ($generated@@85 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@85 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) $generated@@88)) (=> (and (and ($generated@@152 $generated@@248) (and (not (= $generated@@249 $generated@@148)) (= ($generated@@153 $generated@@249) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151) $generated@@46 $generated@@248)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@248 $generated@@249) $generated@@151))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@87 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@90 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@87 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@92 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@87 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@92 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@87 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@92 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@143 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@73 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@88) (= (type $generated@@296) ($generated@@72 $generated@@297))) (not ($generated@@196 $generated@@296))) (= ($generated@@94 ($generated@@92 $generated@@293 $generated@@295) $generated@@296) ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@90 (type $generated@@299))))
 (=> (and (= (type $generated@@299) ($generated@@87 $generated@@301 $generated@@4)) (= (type $generated@@300) ($generated@@87 $generated@@301 $generated@@4))) (= ($generated@@298 $generated@@299 $generated@@300) (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@301) (= ($generated@@0 ($generated@@92 $generated@@299 $generated@@302)) ($generated@@0 ($generated@@92 $generated@@300 $generated@@302))))
 :pattern ( ($generated@@92 $generated@@299 $generated@@302))
 :pattern ( ($generated@@92 $generated@@300 $generated@@302))
)))))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@90 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@87 $generated@@304 $generated@@2)) (= ($generated@@176 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@92 $generated@@303 $generated@@305))) (<= ($generated ($generated@@92 $generated@@303 $generated@@305)) ($generated@@250 $generated@@303))))
 :pattern ( ($generated@@92 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@176 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@170) ($generated@@185 $generated@@309 $generated@@147)) (and (= ($generated@@235 ($generated@@306 $generated@@88 $generated@@309)) $generated@@309) ($generated@@154 ($generated@@306 $generated@@88 $generated@@309) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@309 $generated@@147))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@170) ($generated@@185 $generated@@310 $generated@@181)) (and (= ($generated@@235 ($generated@@306 $generated@@88 $generated@@310)) $generated@@310) ($generated@@154 ($generated@@306 $generated@@88 $generated@@310) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@310 $generated@@181))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@88) (= ($generated@@154 $generated@@311 $generated@@181)  (and ($generated@@154 $generated@@311 $generated@@147) (not (= $generated@@311 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@311 $generated@@181))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@260 (type $generated@@312))))
(let (($generated@@314 ($generated@@259 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@258 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@257 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@256 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@260 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@260 (type $generated@@319))))
(let (($generated@@321 ($generated@@259 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@258 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@257 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@278 (type $generated@@323))))
(let (($generated@@325 ($generated@@277 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@276 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@275 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@274 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@278 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@278 (type $generated@@330))))
(let (($generated@@332 ($generated@@277 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@276 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@275 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@92 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@335) $generated@@70)) (= ($generated@@154 $generated@@334 ($generated@@175 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@334 $generated@@336)))) ($generated@@185 $generated@@336 $generated@@335))
 :pattern ( ($generated@@92 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@154 $generated@@334 ($generated@@175 $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@90 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
 (=> (and (= (type $generated@@341) ($generated@@87 $generated@@344 $generated@@4)) (= (type $generated@@342) ($generated@@87 $generated@@344 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@337 $generated@@341 $generated@@342) $generated@@343))  (and ($generated@@0 ($generated@@92 $generated@@341 $generated@@343)) (not ($generated@@0 ($generated@@92 $generated@@342 $generated@@343)))))))
 :pattern ( ($generated@@92 ($generated@@337 $generated@@341 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@346) $generated@@70)) (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@345 ($generated@@199 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@170) ($generated@@0 ($generated@@92 $generated@@345 $generated@@348))) ($generated@@215 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@92 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@85 $generated@@345 ($generated@@199 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@350) $generated@@70)) (= (type $generated@@351) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@349 ($generated@@204 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@170) ($generated@@0 ($generated@@92 $generated@@349 $generated@@352))) ($generated@@215 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@92 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@85 $generated@@349 ($generated@@204 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@92 ($generated@@251 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@92 ($generated@@251 $generated@@354) $generated@@353)))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@260 (type $generated@@358))))
(let (($generated@@360 ($generated@@259 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@87 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@362) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@361) ($generated@@168 ($generated@@306 $generated@@161 $generated@@362)))) (= ($generated@@92 ($generated@@356 $generated@@361) ($generated@@168 ($generated@@306 $generated@@161 $generated@@362))) ($generated@@169 ($generated@@306 $generated@@161 $generated@@362))))))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@278 (type $generated@@366))))
(let (($generated@@368 ($generated@@277 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@87 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@369) ($generated@@168 ($generated@@306 $generated@@161 $generated@@370)))) (= ($generated@@92 ($generated@@364 $generated@@369) ($generated@@168 ($generated@@306 $generated@@161 $generated@@370))) ($generated@@169 ($generated@@306 $generated@@161 $generated@@370))))))
 :pattern ( ($generated@@92 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@259 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@258 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@92 ($generated@@316 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@92 ($generated@@256 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@92 ($generated@@356 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@371) $generated@@375))
 :pattern ( ($generated@@92 ($generated@@356 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@277 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@276 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@92 ($generated@@327 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@92 ($generated@@274 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@92 ($generated@@364 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@376) $generated@@380))
 :pattern ( ($generated@@92 ($generated@@364 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@92 ($generated@@327 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@70)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) $generated@@70)) (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@384) $generated@@388))) (and ($generated@@215 ($generated@@92 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@215 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@92 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@85 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@70)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@392) $generated@@396))) (and ($generated@@215 ($generated@@92 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@215 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@92 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@90 (type $generated@@397))))
 (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@399 $generated@@4)) (= (type $generated@@398) ($generated@@87 $generated@@399 $generated@@4))) ($generated@@298 $generated@@397 $generated@@398)) (= $generated@@397 $generated@@398)))
 :pattern ( ($generated@@298 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= (type ($generated@@400 $generated@@401 $generated@@402)) ($generated@@87 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@405)))
 (=> (and (and (= (type $generated@@404) ($generated@@87 $generated@@407 $generated@@4)) (= (type $generated@@406) $generated@@407)) ($generated@@0 ($generated@@92 $generated@@404 $generated@@406))) ($generated@@0 ($generated@@92 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@400 $generated@@404 $generated@@405) ($generated@@92 $generated@@404 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@409)))
 (=> (and (= (type $generated@@408) ($generated@@87 $generated@@411 $generated@@4)) (= (type $generated@@410) $generated@@411)) (= ($generated@@0 ($generated@@92 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))  (or (= $generated@@410 $generated@@409) ($generated@@0 ($generated@@92 $generated@@408 $generated@@410))))))
 :pattern ( ($generated@@92 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@413) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@414) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@412 $generated@@414))) (and ($generated@@143 $generated@@412 $generated@@413) ($generated@@143 $generated@@413 $generated@@414))) ($generated@@143 $generated@@412 $generated@@414))
 :pattern ( ($generated@@143 $generated@@412 $generated@@413) ($generated@@143 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
 (=> (and (and (= (type $generated@@415) ($generated@@87 $generated@@418 $generated@@4)) (= (type $generated@@416) ($generated@@87 $generated@@418 $generated@@4))) ($generated@@0 ($generated@@92 $generated@@416 $generated@@417))) (not ($generated@@0 ($generated@@92 ($generated@@337 $generated@@415 $generated@@416) $generated@@417)))))
 :pattern ( ($generated@@337 $generated@@415 $generated@@416) ($generated@@92 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@87 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@278 (type $generated@@421))))
(let (($generated@@423 ($generated@@277 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@276 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@275 $generated@@423 $generated@@422)) (= ($generated@@274 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@274 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@278 (type $generated@@424))))
(let (($generated@@426 ($generated@@277 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@276 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@275 $generated@@426 $generated@@425)) (= ($generated@@327 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@327 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@278 (type $generated@@427))))
(let (($generated@@429 ($generated@@277 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@276 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@275 $generated@@429 $generated@@428)) (= ($generated@@363 $generated@@427) ($generated@@419 $generated@@170))))))
 :pattern ( ($generated@@363 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@260 (type $generated@@430))))
(let (($generated@@432 ($generated@@259 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@258 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@257 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@170) (= (type $generated@@434) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@355 $generated@@430) ($generated@@235 ($generated@@184 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@355 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@278 (type $generated@@435))))
(let (($generated@@437 ($generated@@277 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@276 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@275 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@170) (= (type $generated@@439) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@363 $generated@@435) ($generated@@235 ($generated@@184 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@363 $generated@@435))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@76)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@T) ) (!  (=> (and (= (type $generated@@442) $generated@@76) (= (type $generated@@443) $generated@@74)) (and (= ($generated@@440 ($generated@@192 $generated@@444 $generated@@442 $generated@@443)) $generated@@442) (= ($generated@@83 ($generated@@192 $generated@@444 $generated@@442 $generated@@443)) $generated@@443)))
 :pattern ( ($generated@@192 $generated@@444 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@170) ($generated@@185 $generated@@445 $generated@@46)) (and (= ($generated@@235 ($generated@@306 $generated@@2 $generated@@445)) $generated@@445) ($generated@@154 ($generated@@306 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@170) ($generated@@185 $generated@@446 $generated@@47)) (and (= ($generated@@235 ($generated@@306 $generated@@3 $generated@@446)) $generated@@446) ($generated@@154 ($generated@@306 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@170) ($generated@@185 $generated@@447 $generated@@44)) (and (= ($generated@@235 ($generated@@306 $generated@@4 $generated@@447)) $generated@@447) ($generated@@154 ($generated@@306 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 21))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@170) ($generated@@185 $generated@@449 $generated@@45)) (and (= ($generated@@235 ($generated@@306 $generated@@448 $generated@@449)) $generated@@449) ($generated@@154 ($generated@@306 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@70) (= ($generated@@185 ($generated@@235 $generated@@450) $generated@@451) ($generated@@154 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@185 ($generated@@235 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@90 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@87 $generated@@453 $generated@@2)) (<= 0 ($generated@@250 $generated@@452))))
 :pattern ( ($generated@@250 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@230 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@229 $generated@@455)) (<= 0 ($generated@@228 $generated@@454))))
 :pattern ( ($generated@@228 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@456 ($generated@@381 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@381 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@381 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@381 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@81 ($generated@@381 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@381 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@389 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@389 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@389 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@389 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@81 ($generated@@389 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@389 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@170) (= (type $generated@@477) $generated@@170)) (= ($generated@@221 ($generated@@184 $generated@@476 $generated@@477)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@160 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@160 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@160 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@160 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@170) (= (type $generated@@487) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@184 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@170) (= (type $generated@@489) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@184 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@230 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@229 $generated@@170)) (= (type $generated@@497) $generated@@70)) (= (type $generated@@498) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@228 $generated@@496))) ($generated@@215 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@85 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (=> (= (type $generated@@500) ($generated@@87 $generated@@502 $generated@@4)) ($generated@@0 ($generated@@92 ($generated@@400 $generated@@500 $generated@@501) $generated@@501))))
 :pattern ( ($generated@@400 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@86 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@86 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@199 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@199 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@204 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@204 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@175 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@175 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@490 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@490 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@81 ($generated@@490 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@306 $generated@@522 ($generated@@235 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@235 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@154 $generated@@523 ($generated@@381 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@256 $generated@@523) $generated@@526))) (and ($generated@@185 ($generated@@92 ($generated@@356 $generated@@523) $generated@@526) $generated@@525) ($generated@@185 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@92 ($generated@@356 $generated@@523) $generated@@526))
 :pattern ( ($generated@@92 ($generated@@256 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@154 $generated@@523 ($generated@@381 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@154 $generated@@527 ($generated@@389 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@274 $generated@@527) $generated@@530))) (and ($generated@@185 ($generated@@92 ($generated@@364 $generated@@527) $generated@@530) $generated@@529) ($generated@@185 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@92 ($generated@@364 $generated@@527) $generated@@530))
 :pattern ( ($generated@@92 ($generated@@274 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@154 $generated@@527 ($generated@@389 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@170) (= (type $generated@@534) $generated@@170)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@184 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@184 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@170) (= (type $generated@@536) $generated@@170)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@184 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@184 $generated@@535 $generated@@536))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@543 T@T) ($generated@@544 T@T) ) (= ($generated@@1 ($generated@@539 $generated@@543 $generated@@544)) 22)) (forall (($generated@@545 T@T) ($generated@@546 T@T) ) (! (= ($generated@@540 ($generated@@539 $generated@@545 $generated@@546)) $generated@@545)
 :pattern ( ($generated@@539 $generated@@545 $generated@@546))
))) (forall (($generated@@547 T@T) ($generated@@548 T@T) ) (! (= ($generated@@541 ($generated@@539 $generated@@547 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@539 $generated@@547 $generated@@548))
))) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@541 (type $generated@@549))))
(= (type ($generated@@537 $generated@@549 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@537 $generated@@549 $generated@@550 $generated@@551))
))) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(let (($generated@@558 (type $generated@@554)))
(= (type ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556)) ($generated@@539 $generated@@558 $generated@@557))))
 :pattern ( ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556))
))) (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@541 (type $generated@@559))))
 (=> (= (type $generated@@562) $generated@@563) (= ($generated@@537 ($generated@@542 $generated@@559 $generated@@560 $generated@@561 $generated@@562) $generated@@560 $generated@@561) $generated@@562)))
 :weight 0
))) (and (and (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or (= $generated@@566 $generated@@568) (= ($generated@@537 ($generated@@542 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@537 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@537 ($generated@@542 $generated@@571 $generated@@572 $generated@@573 $generated@@570) $generated@@574 $generated@@575) ($generated@@537 $generated@@571 $generated@@574 $generated@@575)))
 :weight 0
))) (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (or true (= ($generated@@537 ($generated@@542 $generated@@577 $generated@@578 $generated@@579 $generated@@576) $generated@@580 $generated@@581) ($generated@@537 $generated@@577 $generated@@580 $generated@@581)))
 :weight 0
)))) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (= (type ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585 $generated@@586 $generated@@587)) ($generated@@539 $generated@@88 $generated@@4))
 :pattern ( ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585 $generated@@586 $generated@@587))
))))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@73 (type $generated@@595))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@588) $generated@@88) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@590) ($generated@@72 $generated@@4))) (= (type $generated@@591) $generated@@88)) (= (type $generated@@592) $generated@@88)) (= (type $generated@@593) $generated@@88)) (= (type $generated@@594) $generated@@88)) (= (type $generated@@595) ($generated@@72 $generated@@596))) (= ($generated@@0 ($generated@@537 ($generated@@538 $generated@@588 $generated@@589 $generated@@590 $generated@@591 $generated@@592 $generated@@593) $generated@@594 $generated@@595))  (=> (and (not (= $generated@@594 $generated@@588)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@589 $generated@@594) $generated@@590))) (or (or (= $generated@@594 $generated@@591) (= $generated@@594 $generated@@592)) (= $generated@@594 $generated@@593))))))
 :pattern ( ($generated@@537 ($generated@@538 $generated@@588 $generated@@589 $generated@@590 $generated@@591 $generated@@592 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@170) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@185 $generated@@597 ($generated@@381 $generated@@598 $generated@@599))) (and (= ($generated@@235 ($generated@@306 ($generated@@258 $generated@@170 $generated@@170) $generated@@597)) $generated@@597) ($generated@@154 ($generated@@306 ($generated@@258 $generated@@170 $generated@@170) $generated@@597) ($generated@@381 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@185 $generated@@597 ($generated@@381 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@170) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@185 $generated@@600 ($generated@@389 $generated@@601 $generated@@602))) (and (= ($generated@@235 ($generated@@306 ($generated@@276 $generated@@170 $generated@@170) $generated@@600)) $generated@@600) ($generated@@154 ($generated@@306 ($generated@@276 $generated@@170 $generated@@170) $generated@@600) ($generated@@389 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@185 $generated@@600 ($generated@@389 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@70) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@170)) ($generated@@185 $generated@@605 ($generated@@160 $generated@@603 $generated@@604))) (and (= ($generated@@235 ($generated@@306 $generated@@161 $generated@@605)) $generated@@605) ($generated@@154 ($generated@@306 $generated@@161 $generated@@605) ($generated@@160 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@185 $generated@@605 ($generated@@160 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@607 T@T) ) (! (= (type ($generated@@606 $generated@@607)) ($generated@@87 $generated@@607 $generated@@4))
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@92 ($generated@@606 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@92 ($generated@@606 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@92 ($generated@@419 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@92 ($generated@@419 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@77)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@614 $generated@@615)) $generated@@63) (= ($generated@@612 ($generated@@160 $generated@@614 $generated@@615)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@161) (= ($generated@@531 ($generated@@235 $generated@@616)) ($generated@@532 $generated@@616)))
 :pattern ( ($generated@@531 ($generated@@235 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@170) ($generated@@185 $generated@@617 ($generated@@86 0))) (and (= ($generated@@235 ($generated@@306 $generated@@2 $generated@@617)) $generated@@617) ($generated@@154 ($generated@@306 ($generated@@87 $generated@@170 $generated@@4) $generated@@617) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@617 ($generated@@86 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@170) (= (type $generated@@619) $generated@@70)) ($generated@@185 $generated@@618 ($generated@@199 $generated@@619))) (and (= ($generated@@235 ($generated@@306 ($generated@@87 $generated@@170 $generated@@4) $generated@@618)) $generated@@618) ($generated@@154 ($generated@@306 ($generated@@87 $generated@@170 $generated@@4) $generated@@618) ($generated@@199 $generated@@619))))
 :pattern ( ($generated@@185 $generated@@618 ($generated@@199 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@170) (= (type $generated@@621) $generated@@70)) ($generated@@185 $generated@@620 ($generated@@204 $generated@@621))) (and (= ($generated@@235 ($generated@@306 ($generated@@87 $generated@@170 $generated@@4) $generated@@620)) $generated@@620) ($generated@@154 ($generated@@306 ($generated@@87 $generated@@170 $generated@@4) $generated@@620) ($generated@@204 $generated@@621))))
 :pattern ( ($generated@@185 $generated@@620 ($generated@@204 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@170) (= (type $generated@@623) $generated@@70)) ($generated@@185 $generated@@622 ($generated@@175 $generated@@623))) (and (= ($generated@@235 ($generated@@306 ($generated@@87 $generated@@170 $generated@@2) $generated@@622)) $generated@@622) ($generated@@154 ($generated@@306 ($generated@@87 $generated@@170 $generated@@2) $generated@@622) ($generated@@175 $generated@@623))))
 :pattern ( ($generated@@185 $generated@@622 ($generated@@175 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@170) (= (type $generated@@625) $generated@@70)) ($generated@@185 $generated@@624 ($generated@@490 $generated@@625))) (and (= ($generated@@235 ($generated@@306 ($generated@@229 $generated@@170) $generated@@624)) $generated@@624) ($generated@@154 ($generated@@306 ($generated@@229 $generated@@170) $generated@@624) ($generated@@490 $generated@@625))))
 :pattern ( ($generated@@185 $generated@@624 ($generated@@490 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (=> (and (and (and (= (type $generated@@626) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@627) $generated@@88)) (= (type $generated@@628) ($generated@@72 $generated@@630))) ($generated@@152 ($generated@@93 $generated@@626 $generated@@627 ($generated@@95 ($generated@@92 $generated@@626 $generated@@627) $generated@@628 $generated@@629)))) ($generated@@143 $generated@@626 ($generated@@93 $generated@@626 $generated@@627 ($generated@@95 ($generated@@92 $generated@@626 $generated@@627) $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@93 $generated@@626 $generated@@627 ($generated@@95 ($generated@@92 $generated@@626 $generated@@627) $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@90 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@87 $generated@@634 $generated@@4)) (= (type $generated@@633) ($generated@@87 $generated@@634 $generated@@4))) (= ($generated@@631 $generated@@632 $generated@@633) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@634) ($generated@@0 ($generated@@92 $generated@@632 $generated@@635))) ($generated@@0 ($generated@@92 $generated@@633 $generated@@635)))
 :pattern ( ($generated@@92 $generated@@632 $generated@@635))
 :pattern ( ($generated@@92 $generated@@633 $generated@@635))
)))))
 :pattern ( ($generated@@631 $generated@@632 $generated@@633))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@612 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@612 $generated@@181) $generated@@68))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@636 ($generated@@175 $generated@@637) $generated@@638) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@636 $generated@@639)))) ($generated@@215 $generated@@639 $generated@@637 $generated@@638))
 :pattern ( ($generated@@92 $generated@@636 $generated@@639))
))))
 :pattern ( ($generated@@85 $generated@@636 ($generated@@175 $generated@@637) $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@161) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@642) (and ($generated@@159 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@70) ($generated@@85 $generated@@640 ($generated@@160 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@85 $generated@@640 ($generated@@160 $generated@@641 $generated@@643) $generated@@642))
))))) ($generated@@215 ($generated@@168 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@215 ($generated@@168 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@161) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@646) (and ($generated@@159 $generated@@644) (exists (($generated@@647 T@U) ) (!  (and (= (type $generated@@647) $generated@@70) ($generated@@85 $generated@@644 ($generated@@160 $generated@@647 $generated@@645) $generated@@646))
 :pattern ( ($generated@@85 $generated@@644 ($generated@@160 $generated@@647 $generated@@645) $generated@@646))
))))) ($generated@@215 ($generated@@169 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@215 ($generated@@169 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@170) (= (type $generated@@649) $generated@@170)) (= ($generated@@184 ($generated@@211 $generated@@648) ($generated@@211 $generated@@649)) ($generated@@211 ($generated@@184 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@184 ($generated@@211 $generated@@648) ($generated@@211 $generated@@649)))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@209 $generated@@650))) ($generated@@211 ($generated@@235 ($generated@@8 $generated@@650))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@209 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@235 ($generated@@211 $generated@@651)) ($generated@@211 ($generated@@235 $generated@@651)))
 :pattern ( ($generated@@235 ($generated@@211 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@230 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@229 $generated@@653)) (= ($generated@@228 $generated@@652) 0)) (= $generated@@652 ($generated@@227 $generated@@653))))
 :pattern ( ($generated@@228 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@87 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@250 ($generated@@93 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@250 $generated@@654) ($generated ($generated@@92 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@250 ($generated@@93 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (! (= (type ($generated@@658 $generated@@659 $generated@@660 $generated@@661 $generated@@662)) ($generated@@539 $generated@@88 $generated@@4))
 :pattern ( ($generated@@658 $generated@@659 $generated@@660 $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@73 (type $generated@@668))))
 (=> (and (and (and (and (and (= (type $generated@@663) $generated@@88) (= (type $generated@@664) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@665) ($generated@@72 $generated@@4))) (= (type $generated@@666) ($generated@@87 $generated@@170 $generated@@4))) (= (type $generated@@667) $generated@@88)) (= (type $generated@@668) ($generated@@72 $generated@@669))) (= ($generated@@0 ($generated@@537 ($generated@@658 $generated@@663 $generated@@664 $generated@@665 $generated@@666) $generated@@667 $generated@@668))  (=> (and (not (= $generated@@667 $generated@@663)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@664 $generated@@667) $generated@@665))) ($generated@@0 ($generated@@92 $generated@@666 ($generated@@235 $generated@@667)))))))
 :pattern ( ($generated@@537 ($generated@@658 $generated@@663 $generated@@664 $generated@@665 $generated@@666) $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@671) $generated@@2)) ($generated@@85 $generated@@671 $generated@@46 $generated@@670))
 :pattern ( ($generated@@85 $generated@@671 $generated@@46 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@673) $generated@@3)) ($generated@@85 $generated@@673 $generated@@47 $generated@@672))
 :pattern ( ($generated@@85 $generated@@673 $generated@@47 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@675) $generated@@4)) ($generated@@85 $generated@@675 $generated@@44 $generated@@674))
 :pattern ( ($generated@@85 $generated@@675 $generated@@44 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@677) $generated@@448)) ($generated@@85 $generated@@677 $generated@@45 $generated@@676))
 :pattern ( ($generated@@85 $generated@@677 $generated@@45 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@679) $generated@@170)) ($generated@@85 $generated@@679 $generated@@48 $generated@@678))
 :pattern ( ($generated@@85 $generated@@679 $generated@@48 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@229 $generated@@170)) (= (type $generated@@681) $generated@@70)) (= ($generated@@154 $generated@@680 ($generated@@490 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@228 $generated@@680))) ($generated@@185 ($generated@@491 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@491 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@154 $generated@@680 ($generated@@490 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@229 $generated@@170)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@228 $generated@@684))) (< ($generated@@532 ($generated@@306 $generated@@161 ($generated@@491 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@532 ($generated@@306 $generated@@161 ($generated@@491 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@258 $generated@@170 $generated@@170)) (= (type $generated@@687) $generated@@70)) (= (type $generated@@688) $generated@@70)) ($generated@@154 $generated@@686 ($generated@@381 $generated@@687 $generated@@688))) (and (and ($generated@@154 ($generated@@256 $generated@@686) ($generated@@199 $generated@@687)) ($generated@@154 ($generated@@316 $generated@@686) ($generated@@199 $generated@@688))) ($generated@@154 ($generated@@355 $generated@@686) ($generated@@199 ($generated@@160 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@154 $generated@@686 ($generated@@381 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@276 $generated@@170 $generated@@170)) (= (type $generated@@690) $generated@@70)) (= (type $generated@@691) $generated@@70)) ($generated@@154 $generated@@689 ($generated@@389 $generated@@690 $generated@@691))) (and (and ($generated@@154 ($generated@@274 $generated@@689) ($generated@@204 $generated@@690)) ($generated@@154 ($generated@@327 $generated@@689) ($generated@@204 $generated@@691))) ($generated@@154 ($generated@@363 $generated@@689) ($generated@@204 ($generated@@160 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@154 $generated@@689 ($generated@@389 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@154 $generated@@692 $generated@@46))
 :pattern ( ($generated@@154 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@154 $generated@@693 $generated@@47))
 :pattern ( ($generated@@154 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@154 $generated@@694 $generated@@44))
 :pattern ( ($generated@@154 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@448) ($generated@@154 $generated@@695 $generated@@45))
 :pattern ( ($generated@@154 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@170) ($generated@@154 $generated@@696 $generated@@48))
 :pattern ( ($generated@@154 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Bool)
(declare-fun $generated@@712 () Bool)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 (T@U) Bool)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () Int)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Bool)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@697) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@698) $generated@@88)) (= (type $generated@@699) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@700) $generated@@88)) (= (type $generated@@701) ($generated@@539 $generated@@88 $generated@@4))) (= (type $generated@@702) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@704) $generated@@88)) (= (type $generated@@705) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@706) $generated@@88)) (= (type $generated@@707) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@708) ($generated@@87 $generated@@170 $generated@@4))) (= (type $generated@@710) $generated@@88)) (= (type $generated@@713) $generated@@88)) (= (type $generated@@715) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@716) ($generated@@87 $generated@@170 $generated@@4))) (= (type $generated@@717) ($generated@@539 $generated@@88 $generated@@4))) (= (type $generated@@719) ($generated@@87 $generated@@170 $generated@@4))) (= (type $generated@@721) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@723  (and (=> (= (ControlFlow 0 5) (- 0 13)) (or (and ($generated@@154 $generated@@148 $generated@@181) ($generated@@0 ($generated@@92 $generated@@697 ($generated@@235 $generated@@148)))) (exists (($generated@@724 T@U) ) (!  (and (= (type $generated@@724) $generated@@88) (and ($generated@@154 $generated@@724 $generated@@181) ($generated@@0 ($generated@@92 $generated@@697 ($generated@@235 $generated@@724)))))
 :no-pattern (type $generated@@724)
 :no-pattern ($generated $generated@@724)
 :no-pattern ($generated@@0 $generated@@724)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@181) ($generated@@0 ($generated@@92 $generated@@697 ($generated@@235 $generated@@148)))) (exists (($generated@@725 T@U) ) (!  (and (= (type $generated@@725) $generated@@88) (and ($generated@@154 $generated@@725 $generated@@181) ($generated@@0 ($generated@@92 $generated@@697 ($generated@@235 $generated@@725)))))
 :no-pattern (type $generated@@725)
 :no-pattern ($generated $generated@@725)
 :no-pattern ($generated@@0 $generated@@725)
))) (=> (and (=> true (and ($generated@@154 $generated@@698 $generated@@181) ($generated@@85 $generated@@698 $generated@@181 $generated@@699))) ($generated@@0 ($generated@@92 $generated@@697 ($generated@@235 $generated@@698)))) (and (=> (= (ControlFlow 0 5) (- 0 12)) (not (= $generated@@700 $generated@@148))) (=> (not (= $generated@@700 $generated@@148)) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@0 ($generated@@537 $generated@@701 $generated@@700 $generated@@151))) (=> ($generated@@0 ($generated@@537 $generated@@701 $generated@@700 $generated@@151)) (=> (and (= $generated@@702 ($generated@@93 $generated@@699 $generated@@700 ($generated@@95 ($generated@@92 $generated@@699 $generated@@700) $generated@@151 ($generated@@8 $generated@@703)))) ($generated@@152 $generated@@702)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (not (= $generated@@704 $generated@@148))) (=> (not (= $generated@@704 $generated@@148)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@0 ($generated@@537 $generated@@701 $generated@@704 $generated@@151))) (=> ($generated@@0 ($generated@@537 $generated@@701 $generated@@704 $generated@@151)) (=> (and (= $generated@@705 ($generated@@93 $generated@@702 $generated@@704 ($generated@@95 ($generated@@92 $generated@@702 $generated@@704) $generated@@151 ($generated@@8 $generated@@703)))) ($generated@@152 $generated@@705)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@706 $generated@@148))) (=> (not (= $generated@@706 $generated@@148)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@0 ($generated@@537 $generated@@701 $generated@@706 $generated@@151))) (=> ($generated@@0 ($generated@@537 $generated@@701 $generated@@706 $generated@@151)) (=> (and (= $generated@@707 ($generated@@93 $generated@@705 $generated@@706 ($generated@@95 ($generated@@92 $generated@@705 $generated@@706) $generated@@151 ($generated@@8 $generated@@703)))) ($generated@@152 $generated@@707)) (and (=> (= (ControlFlow 0 5) (- 0 6)) true) (=> (= $generated@@708 ($generated@@337 $generated@@697 ($generated@@400 ($generated@@606 $generated@@170) ($generated@@235 $generated@@698)))) (=> (and (= $generated@@709 (+ $generated@@703 1)) (= (ControlFlow 0 5) (- 0 4))) (and ($generated@@631 $generated@@708 $generated@@697) (not ($generated@@631 $generated@@697 $generated@@708))))))))))))))))))))))))))
(let (($generated@@726  (=> (and (not (and ($generated@@154 $generated@@710 $generated@@181) ($generated@@85 $generated@@710 $generated@@181 $generated@@699))) (= (ControlFlow 0 15) 5)) $generated@@723)))
(let (($generated@@727  (=> (and (and ($generated@@154 $generated@@710 $generated@@181) ($generated@@85 $generated@@710 $generated@@181 $generated@@699)) (= (ControlFlow 0 14) 5)) $generated@@723)))
(let (($generated@@728  (=> (not ($generated@@298 $generated@@697 ($generated@@606 $generated@@170))) (and (=> (= (ControlFlow 0 16) 14) $generated@@727) (=> (= (ControlFlow 0 16) 15) $generated@@726)))))
(let (($generated@@729 true))
(let (($generated@@730  (=> $generated@@711 (and (=> (= (ControlFlow 0 17) 3) $generated@@729) (=> (= (ControlFlow 0 17) 16) $generated@@728)))))
(let (($generated@@731 true))
(let (($generated@@732  (and (=> (= (ControlFlow 0 18) 2) $generated@@731) (=> (= (ControlFlow 0 18) 17) $generated@@730))))
(let (($generated@@733 true))
(let (($generated@@734  (=> (=> $generated@@712 (and ($generated@@154 $generated@@713 $generated@@181) ($generated@@85 $generated@@713 $generated@@181 $generated@@699))) (=> (and (and ($generated@@152 $generated@@699) ($generated@@714 $generated@@699)) (and ($generated@@154 $generated@@697 ($generated@@199 $generated@@181)) ($generated@@85 $generated@@697 ($generated@@199 $generated@@181) $generated@@699))) (=> (and (and (and (not false) (<= 0 $generated@@703)) (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@88) (=> (and (not (= $generated@@735 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@715 $generated@@735) $generated@@60))) (or (= ($generated@@92 $generated@@699 $generated@@735) ($generated@@92 $generated@@715 $generated@@735)) (or (or (= $generated@@735 $generated@@700) (= $generated@@735 $generated@@704)) (= $generated@@735 $generated@@706)))))
 :pattern ( ($generated@@92 $generated@@699 $generated@@735))
))) (and (and ($generated@@143 $generated@@715 $generated@@699) (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 ($generated@@73 (type $generated@@737))))
 (=> (and (and (= (type $generated@@736) $generated@@88) (= (type $generated@@737) ($generated@@72 $generated@@738))) (and (not (= $generated@@736 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@715 $generated@@736) $generated@@60)))) (or (= ($generated@@94 ($generated@@92 $generated@@699 $generated@@736) $generated@@737) ($generated@@94 ($generated@@92 $generated@@715 $generated@@736) $generated@@737)) ($generated@@0 ($generated@@537 $generated@@701 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@699 $generated@@736) $generated@@737))
))) (and ($generated@@631 $generated@@697 $generated@@716) (=> ($generated@@298 $generated@@697 $generated@@716) true)))) (and (=> (= (ControlFlow 0 19) 1) $generated@@733) (=> (= (ControlFlow 0 19) 18) $generated@@732)))))))
(let (($generated@@739  (=> (= $generated@@717 ($generated@@538 $generated@@148 $generated@@715 $generated@@60 $generated@@700 $generated@@704 $generated@@706)) (=> (and (= $generated@@718 ($generated@@209 0)) (= $generated@@716 ($generated@@400 ($generated@@400 ($generated@@400 ($generated@@606 $generated@@170) ($generated@@235 $generated@@700)) ($generated@@235 $generated@@704)) ($generated@@235 $generated@@706)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 ($generated@@73 (type $generated@@741))))
 (=> (and (= (type $generated@@740) $generated@@88) (= (type $generated@@741) ($generated@@72 $generated@@742))) (=> (and (and (not (= $generated@@740 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@715 $generated@@740) $generated@@60))) ($generated@@0 ($generated@@92 $generated@@716 ($generated@@235 $generated@@740)))) ($generated@@0 ($generated@@537 $generated@@717 $generated@@740 $generated@@741)))))
 :no-pattern (type $generated@@740)
 :no-pattern (type $generated@@741)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
 :no-pattern ($generated $generated@@741)
 :no-pattern ($generated@@0 $generated@@741)
))) (=> (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (! (let (($generated@@745 ($generated@@73 (type $generated@@744))))
 (=> (and (= (type $generated@@743) $generated@@88) (= (type $generated@@744) ($generated@@72 $generated@@745))) (=> (and (and (not (= $generated@@743 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@715 $generated@@743) $generated@@60))) ($generated@@0 ($generated@@92 $generated@@716 ($generated@@235 $generated@@743)))) ($generated@@0 ($generated@@537 $generated@@717 $generated@@743 $generated@@744)))))
 :no-pattern (type $generated@@743)
 :no-pattern (type $generated@@744)
 :no-pattern ($generated $generated@@743)
 :no-pattern ($generated@@0 $generated@@743)
 :no-pattern ($generated $generated@@744)
 :no-pattern ($generated@@0 $generated@@744)
)) (=> (and (= $generated@@701 ($generated@@658 $generated@@148 $generated@@715 $generated@@60 $generated@@716)) (= (ControlFlow 0 20) 19)) $generated@@734)))))))
(let (($generated@@746  (=> (and (and ($generated@@152 $generated@@715) ($generated@@714 $generated@@715)) (and ($generated@@154 $generated@@700 $generated@@181) ($generated@@85 $generated@@700 $generated@@181 $generated@@715))) (=> (and (and (and (and ($generated@@154 $generated@@704 $generated@@181) ($generated@@85 $generated@@704 $generated@@181 $generated@@715)) (and ($generated@@154 $generated@@706 $generated@@181) ($generated@@85 $generated@@706 $generated@@181 $generated@@715))) (and (and ($generated@@154 $generated@@719 ($generated@@199 $generated@@181)) ($generated@@85 $generated@@719 ($generated@@199 $generated@@181) $generated@@715)) true)) (and (and (and (=> $generated@@720 (and ($generated@@154 $generated@@721 $generated@@181) ($generated@@85 $generated@@721 $generated@@181 $generated@@715))) true) (= 1 $generated@@722)) (and (and (not (= $generated@@700 $generated@@704)) (not (= $generated@@704 $generated@@706))) (and (not (= $generated@@706 $generated@@700)) (= (ControlFlow 0 22) 20))))) $generated@@739))))
$generated@@746)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
