(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 () T@T)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) Bool)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) Bool)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@562 () T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@567 (T@U Int) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(declare-fun $generated@@605 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@694 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@81) (= (type $generated@@85) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@84 $generated@@85) $generated@@80)  (and ($generated@@78 $generated@@84 $generated@@80) ($generated@@78 $generated@@85 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@84 $generated@@85) $generated@@80))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@71 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@71 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@68)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@78 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@78 $generated@@144 ($generated@@87 0)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) $generated@@81)) (= (type $generated@@148) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@145 $generated@@148)) (= ($generated@@86 ($generated@@79 $generated@@146 $generated@@147) $generated@@80 $generated@@148)  (and ($generated@@86 $generated@@146 $generated@@80 $generated@@148) ($generated@@86 $generated@@147 $generated@@80 $generated@@148))))
 :pattern ( ($generated@@86 ($generated@@79 $generated@@146 $generated@@147) $generated@@80 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@151 $generated@@152)) $generated@@68)
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@68) (= (type $generated@@154) $generated@@68)) (= (type $generated@@155) $generated@@81)) ($generated@@78 $generated@@155 ($generated@@150 $generated@@153 $generated@@154))) ($generated@@149 $generated@@155))
 :pattern ( ($generated@@149 $generated@@155) ($generated@@78 $generated@@155 ($generated@@150 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@81) (= (type $generated@@163) $generated@@81)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@72)
 :pattern ( ($generated@@164 $generated@@166))
)) (= (type $generated@@165) $generated@@81)))
(assert (= ($generated@@164 $generated@@165) $generated@@63))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@171) $generated@@68)) ($generated@@78 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@78 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@89 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@71 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@89) (= (type $generated@@222) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@223) ($generated@@70 $generated@@4))) (= (type $generated@@225) $generated@@89)) (= (type $generated@@226) ($generated@@70 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@174 $generated@@89 $generated@@4))
 :pattern ( ($generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@71 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@89) (= (type $generated@@234) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@235) ($generated@@70 $generated@@4))) (= (type $generated@@237) $generated@@89)) (= (type $generated@@238) ($generated@@70 $generated@@239))) (= ($generated@@0 ($generated@@172 ($generated@@228 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@172 ($generated@@228 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@91 (type $generated@@241))))
(= (type ($generated@@240 $generated@@241 $generated@@242)) ($generated@@88 $generated@@243 $generated@@4)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@91 (type $generated@@244))))
 (=> (and (= (type $generated@@244) ($generated@@88 $generated@@246 $generated@@4)) (= (type $generated@@245) ($generated@@88 $generated@@246 $generated@@4))) (= ($generated@@240 ($generated@@240 $generated@@244 $generated@@245) $generated@@245) ($generated@@240 $generated@@244 $generated@@245))))
 :pattern ( ($generated@@240 ($generated@@240 $generated@@244 $generated@@245) $generated@@245))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@251) 17) (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@248 $generated@@257 $generated@@258)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@248 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@U) ) (! (= (type ($generated@@249 $generated@@259)) $generated@@251)
 :pattern ( ($generated@@249 $generated@@259))
))) (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@250 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@250 $generated@@260))
))) (forall (($generated@@262 T@U) ) (! (= (type ($generated@@254 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@254 $generated@@262))
))) (forall (($generated@@263 T@U) ) (! (= (type ($generated@@255 $generated@@263)) $generated@@81)
 :pattern ( ($generated@@255 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@256 $generated@@264)) ($generated@@88 $generated@@264 $generated@@4))
 :pattern ( ($generated@@256 $generated@@264))
))))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@265) $generated@@251) (= (type $generated@@266) $generated@@81)) (or ($generated@@252 ($generated@@250 $generated@@266)) (and (not (= 0 $generated@@247)) ($generated@@78 $generated@@266 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@253 ($generated@@250 $generated@@266)))))) (let (($generated@@267 ($generated@@250 ($generated@@254 ($generated@@250 $generated@@266)))))
(let (($generated@@268 ($generated@@250 ($generated@@255 ($generated@@250 $generated@@266)))))
 (and ($generated@@252 $generated@@268) ($generated@@252 $generated@@267))))) (= ($generated@@248 ($generated@@249 $generated@@265) ($generated@@250 $generated@@266)) (ite ($generated@@253 ($generated@@250 $generated@@266)) ($generated@@256 $generated@@159) (let (($generated@@269 ($generated@@250 ($generated@@254 ($generated@@250 $generated@@266)))))
(let (($generated@@270 ($generated@@250 ($generated@@255 ($generated@@250 $generated@@266)))))
($generated@@240 ($generated@@248 ($generated@@249 $generated@@265) $generated@@270) ($generated@@248 ($generated@@249 $generated@@265) $generated@@269))))))))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@249 $generated@@265) ($generated@@250 $generated@@266)))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@81)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@68) (= (type $generated@@276) $generated@@68)) (= (type $generated@@277) $generated@@159)) (= (type $generated@@278) $generated@@159)) (= ($generated@@78 ($generated@@271 $generated@@277 $generated@@278) ($generated@@150 $generated@@275 $generated@@276))  (and ($generated@@272 $generated@@277 $generated@@275) ($generated@@272 $generated@@278 $generated@@276))))
 :pattern ( ($generated@@78 ($generated@@271 $generated@@277 $generated@@278) ($generated@@150 $generated@@275 $generated@@276)))
)))
(assert ($generated@@78 $generated@@165 $generated@@80))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@145 $generated@@279)) ($generated@@86 $generated@@165 $generated@@80 $generated@@279))
 :pattern ( ($generated@@86 $generated@@165 $generated@@80 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@81) (= (type $generated@@281) $generated@@81)) (= ($generated@@156 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@156 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@81) (= (type $generated@@284) $generated@@81)) (= ($generated@@282 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@68)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@288) $generated@@68)) (= ($generated@@78 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@159) ($generated@@0 ($generated@@93 $generated@@287 $generated@@289))) ($generated@@272 $generated@@289 $generated@@288))
 :pattern ( ($generated@@93 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@78 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@68)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@293) $generated@@68)) (= ($generated@@78 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@159) ($generated@@0 ($generated@@93 $generated@@292 $generated@@294))) ($generated@@272 $generated@@294 $generated@@293))
 :pattern ( ($generated@@93 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@78 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@250 $generated@@295) $generated@@295)
 :pattern ( ($generated@@250 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@81) (= (type $generated@@297) $generated@@81)) (and ($generated@@253 $generated@@296) ($generated@@253 $generated@@297))) (= ($generated@@282 $generated@@296 $generated@@297) true))
 :pattern ( ($generated@@282 $generated@@296 $generated@@297) ($generated@@253 $generated@@296))
 :pattern ( ($generated@@282 $generated@@296 $generated@@297) ($generated@@253 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@159)) (= (type $generated@@302) $generated@@159)) (= (type $generated@@303) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@145 $generated@@303)) (= ($generated@@86 ($generated@@271 $generated@@301 $generated@@302) ($generated@@150 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@86 ($generated@@271 $generated@@301 $generated@@302) ($generated@@150 $generated@@299 $generated@@300) $generated@@303))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@251) (= (type $generated@@305) $generated@@81)) (or ($generated@@252 $generated@@305) (and (not (= 0 $generated@@247)) ($generated@@78 $generated@@305 $generated@@80)))) ($generated@@78 ($generated@@248 $generated@@304 $generated@@305) ($generated@@285 $generated@@46)))
 :pattern ( ($generated@@248 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@81) (= ($generated@@149 $generated@@306) (= ($generated@@164 $generated@@306) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@81) (= ($generated@@253 $generated@@307) (= ($generated@@164 $generated@@307) $generated@@63)))
 :pattern ( ($generated@@253 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@81) (= ($generated@@308 $generated@@309) (= ($generated@@164 $generated@@309) $generated@@65)))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@81) ($generated@@149 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@159) (= (type $generated@@312) $generated@@159)) (= $generated@@310 ($generated@@271 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@149 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@81) ($generated@@308 $generated@@313)) (exists (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (and (and (= (type $generated@@314) $generated@@81) (= (type $generated@@315) $generated@@81)) (= $generated@@313 ($generated@@79 $generated@@314 $generated@@315)))
 :no-pattern (type $generated@@314)
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
)))
 :pattern ( ($generated@@308 $generated@@313))
)))
(assert  (and (and (forall (($generated@@320 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@320)) 18)) (forall (($generated@@321 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@318 $generated@@321))
))) (forall (($generated@@322 T@T) ) (! (= (type ($generated@@316 $generated@@322)) ($generated@@318 $generated@@322))
 :pattern ( ($generated@@316 $generated@@322))
))))
(assert (forall (($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@323)) 0)
 :pattern ( ($generated@@316 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@81) ($generated@@253 $generated@@324)) (= $generated@@324 $generated@@165))
 :pattern ( ($generated@@253 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@159)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@68) (= (type $generated@@329) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@86 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@298 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@88 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@93 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 20)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@88 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@93 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@93 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@91 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@88 $generated@@373 $generated@@2)) (= ($generated@@168 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (and (<= 0 ($generated ($generated@@93 $generated@@372 $generated@@374))) (<= ($generated ($generated@@93 $generated@@372 $generated@@374)) ($generated@@330 $generated@@372))))
 :pattern ( ($generated@@93 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@168 $generated@@372))
)))
(assert (forall (($generated@@376 T@T) ($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@375 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@272 $generated@@378 $generated@@80)) (and (= ($generated@@325 ($generated@@375 $generated@@81 $generated@@378)) $generated@@378) ($generated@@78 ($generated@@375 $generated@@81 $generated@@378) $generated@@80)))
 :pattern ( ($generated@@272 $generated@@378 $generated@@80))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@336 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@340 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@88 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@340 (type $generated@@386))))
(let (($generated@@388 ($generated@@339 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@338 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@337 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@93 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@358 (type $generated@@390))))
(let (($generated@@392 ($generated@@357 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@356 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@355 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@93 ($generated@@354 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@354 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@358 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@88 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@358 (type $generated@@397))))
(let (($generated@@399 ($generated@@357 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@356 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@355 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@93 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@78 $generated@@401 ($generated@@167 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@401 $generated@@403)))) ($generated@@272 $generated@@403 $generated@@402))
 :pattern ( ($generated@@93 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@401 ($generated@@167 $generated@@402)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@91 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406 $generated@@407)) ($generated@@88 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@91 (type $generated@@409))))
 (=> (and (and (= (type $generated@@409) ($generated@@88 $generated@@411 $generated@@4)) (= (type $generated@@410) ($generated@@88 $generated@@411 $generated@@4))) ($generated@@404 $generated@@409 $generated@@410)) (and (= ($generated@@405 ($generated@@240 $generated@@409 $generated@@410) $generated@@409) $generated@@410) (= ($generated@@405 ($generated@@240 $generated@@409 $generated@@410) $generated@@410) $generated@@409))))
 :pattern ( ($generated@@240 $generated@@409 $generated@@410))
)))
(assert  (=> (<= 0 $generated@@247) (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) $generated@@251) (= (type $generated@@413) $generated@@81)) (or ($generated@@252 $generated@@413) (and (not (= 0 $generated@@247)) ($generated@@78 $generated@@413 $generated@@80)))) (and (=> (not ($generated@@253 $generated@@413)) (let (($generated@@414 ($generated@@254 $generated@@413)))
(let (($generated@@415 ($generated@@255 $generated@@413)))
 (and ($generated@@252 $generated@@415) ($generated@@252 $generated@@414))))) (= ($generated@@248 ($generated@@249 $generated@@412) $generated@@413) (ite ($generated@@253 $generated@@413) ($generated@@256 $generated@@159) (let (($generated@@416 ($generated@@254 $generated@@413)))
(let (($generated@@417 ($generated@@255 $generated@@413)))
($generated@@240 ($generated@@248 $generated@@412 $generated@@417) ($generated@@248 $generated@@412 $generated@@416))))))))
 :pattern ( ($generated@@248 ($generated@@249 $generated@@412) $generated@@413))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
 (=> (and (= (type $generated@@418) ($generated@@88 $generated@@421 $generated@@4)) (= (type $generated@@419) ($generated@@88 $generated@@421 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@405 $generated@@418 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@93 $generated@@418 $generated@@420)) (not ($generated@@0 ($generated@@93 $generated@@419 $generated@@420)))))))
 :pattern ( ($generated@@93 ($generated@@405 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@422 ($generated@@285 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@159) ($generated@@0 ($generated@@93 $generated@@422 $generated@@425))) ($generated@@298 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@93 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@86 $generated@@422 ($generated@@285 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@426 ($generated@@290 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@159) ($generated@@0 ($generated@@93 $generated@@426 $generated@@429))) ($generated@@298 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@93 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@86 $generated@@426 ($generated@@290 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@431) $generated@@430)) 0))
 :pattern ( (let (($generated@@431 (type $generated@@430)))
($generated@@93 ($generated@@331 $generated@@431) $generated@@430)))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@340 (type $generated@@435))))
(let (($generated@@437 ($generated@@339 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@338 $generated@@159 $generated@@159)) (= (type $generated@@439) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@438) ($generated@@157 ($generated@@375 $generated@@81 $generated@@439)))) (= ($generated@@93 ($generated@@433 $generated@@438) ($generated@@157 ($generated@@375 $generated@@81 $generated@@439))) ($generated@@158 ($generated@@375 $generated@@81 $generated@@439))))))
 :pattern ( ($generated@@93 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert  (and (forall (($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@442)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@440 $generated@@442))
)) (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@358 (type $generated@@443))))
(let (($generated@@445 ($generated@@357 (type $generated@@443))))
(= (type ($generated@@441 $generated@@443)) ($generated@@88 $generated@@445 $generated@@444))))
 :pattern ( ($generated@@441 $generated@@443))
))))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@356 $generated@@159 $generated@@159)) (= (type $generated@@447) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@440 $generated@@446) $generated@@447))  (and ($generated@@0 ($generated@@93 ($generated@@354 $generated@@446) ($generated@@157 ($generated@@375 $generated@@81 $generated@@447)))) (= ($generated@@93 ($generated@@441 $generated@@446) ($generated@@157 ($generated@@375 $generated@@81 $generated@@447))) ($generated@@158 ($generated@@375 $generated@@81 $generated@@447))))))
 :pattern ( ($generated@@93 ($generated@@440 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(let (($generated@@451 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@451 $generated@@450)) (= ($generated@@0 ($generated@@93 ($generated@@383 $generated@@448) $generated@@449)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) (and ($generated@@0 ($generated@@93 ($generated@@336 $generated@@448) $generated@@452)) (= $generated@@449 ($generated@@93 ($generated@@433 $generated@@448) $generated@@452))))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@448) $generated@@452))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@448) $generated@@452))
))))))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
(let (($generated@@456 ($generated@@357 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@356 $generated@@456 $generated@@455)) (= ($generated@@0 ($generated@@93 ($generated@@394 $generated@@453) $generated@@454)) (exists (($generated@@457 T@U) ) (!  (and (= (type $generated@@457) $generated@@456) (and ($generated@@0 ($generated@@93 ($generated@@354 $generated@@453) $generated@@457)) (= $generated@@454 ($generated@@93 ($generated@@441 $generated@@453) $generated@@457))))
 :pattern ( ($generated@@93 ($generated@@354 $generated@@453) $generated@@457))
 :pattern ( ($generated@@93 ($generated@@441 $generated@@453) $generated@@457))
))))))
 :pattern ( ($generated@@93 ($generated@@394 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@338 $generated@@159 $generated@@159)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@461) $generated@@465))) (and ($generated@@298 ($generated@@93 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@298 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@86 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) ($generated@@356 $generated@@159 $generated@@159)) (= (type $generated@@470) $generated@@68)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@354 $generated@@469) $generated@@473))) (and ($generated@@298 ($generated@@93 ($generated@@441 $generated@@469) $generated@@473) $generated@@471 $generated@@472) ($generated@@298 $generated@@473 $generated@@470 $generated@@472)))
 :pattern ( ($generated@@93 ($generated@@441 $generated@@469) $generated@@473))
 :pattern ( ($generated@@93 ($generated@@354 $generated@@469) $generated@@473))
))))
 :pattern ( ($generated@@86 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
 (=> (and (and (= (type $generated@@474) ($generated@@88 $generated@@477 $generated@@4)) (= (type $generated@@475) ($generated@@88 $generated@@477 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@474 $generated@@476))) ($generated@@0 ($generated@@93 ($generated@@240 $generated@@474 $generated@@475) $generated@@476))))
 :pattern ( ($generated@@240 $generated@@474 $generated@@475) ($generated@@93 $generated@@474 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
 (=> (and (and (= (type $generated@@478) ($generated@@88 $generated@@481 $generated@@4)) (= (type $generated@@479) ($generated@@88 $generated@@481 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@479 $generated@@480))) ($generated@@0 ($generated@@93 ($generated@@240 $generated@@478 $generated@@479) $generated@@480))))
 :pattern ( ($generated@@240 $generated@@478 $generated@@479) ($generated@@93 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@78 $generated@@482 $generated@@80)) (or ($generated@@253 $generated@@482) ($generated@@308 $generated@@482)))
 :pattern ( ($generated@@308 $generated@@482) ($generated@@78 $generated@@482 $generated@@80))
 :pattern ( ($generated@@253 $generated@@482) ($generated@@78 $generated@@482 $generated@@80))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
 (=> (and (and (= (type $generated@@483) ($generated@@88 $generated@@486 $generated@@4)) (= (type $generated@@484) ($generated@@88 $generated@@486 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@484 $generated@@485))) (not ($generated@@0 ($generated@@93 ($generated@@405 $generated@@483 $generated@@484) $generated@@485)))))
 :pattern ( ($generated@@405 $generated@@483 $generated@@484) ($generated@@93 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@88 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@358 (type $generated@@489))))
(let (($generated@@491 ($generated@@357 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@356 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@355 $generated@@491 $generated@@490)) (= ($generated@@354 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@354 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@358 (type $generated@@492))))
(let (($generated@@494 ($generated@@357 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@356 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@355 $generated@@494 $generated@@493)) (= ($generated@@394 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@394 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@358 (type $generated@@495))))
(let (($generated@@497 ($generated@@357 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@356 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@355 $generated@@497 $generated@@496)) (= ($generated@@440 $generated@@495) ($generated@@487 $generated@@159))))))
 :pattern ( ($generated@@440 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@340 (type $generated@@498))))
(let (($generated@@500 ($generated@@339 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@338 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@337 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@159) (= (type $generated@@502) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@432 $generated@@498) ($generated@@325 ($generated@@271 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@432 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@358 (type $generated@@503))))
(let (($generated@@505 ($generated@@357 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@356 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@355 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@159) (= (type $generated@@507) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@440 $generated@@503) ($generated@@325 ($generated@@271 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@440 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@159) ($generated@@272 $generated@@508 $generated@@46)) (and (= ($generated@@325 ($generated@@375 $generated@@2 $generated@@508)) $generated@@508) ($generated@@78 ($generated@@375 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@272 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@159) ($generated@@272 $generated@@509 $generated@@47)) (and (= ($generated@@325 ($generated@@375 $generated@@3 $generated@@509)) $generated@@509) ($generated@@78 ($generated@@375 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@272 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@159) ($generated@@272 $generated@@510 $generated@@44)) (and (= ($generated@@325 ($generated@@375 $generated@@4 $generated@@510)) $generated@@510) ($generated@@78 ($generated@@375 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@272 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 21))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@159) ($generated@@272 $generated@@512 $generated@@45)) (and (= ($generated@@325 ($generated@@375 $generated@@511 $generated@@512)) $generated@@512) ($generated@@78 ($generated@@375 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@272 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@81) (= (type $generated@@514) $generated@@81)) (and ($generated@@308 $generated@@513) ($generated@@308 $generated@@514))) (= ($generated@@282 $generated@@513 $generated@@514)  (and ($generated@@282 ($generated@@255 $generated@@513) ($generated@@255 $generated@@514)) ($generated@@282 ($generated@@254 $generated@@513) ($generated@@254 $generated@@514)))))
 :pattern ( ($generated@@282 $generated@@513 $generated@@514) ($generated@@308 $generated@@513))
 :pattern ( ($generated@@282 $generated@@513 $generated@@514) ($generated@@308 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@272 ($generated@@325 $generated@@515) $generated@@516) ($generated@@78 $generated@@515 $generated@@516)))
 :pattern ( ($generated@@272 ($generated@@325 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@91 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@88 $generated@@518 $generated@@2)) (<= 0 ($generated@@330 $generated@@517))))
 :pattern ( ($generated@@330 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@319 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@318 $generated@@520)) (<= 0 ($generated@@317 $generated@@519))))
 :pattern ( ($generated@@317 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@458 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@458 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@458 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@458 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@76 ($generated@@458 $generated@@529 $generated@@530)) $generated@@58))
 :pattern ( ($generated@@458 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@466 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@466 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@466 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@466 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@76 ($generated@@466 $generated@@539 $generated@@540)) $generated@@59))
 :pattern ( ($generated@@466 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@159)) (= ($generated@@164 ($generated@@271 $generated@@541 $generated@@542)) $generated@@61))
 :pattern ( ($generated@@271 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@150 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@150 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@150 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@150 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@159)) (= ($generated@@157 ($generated@@271 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@271 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@159)) (= ($generated@@158 ($generated@@271 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@271 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@81) (= (type $generated@@556) $generated@@81)) (= ($generated@@164 ($generated@@79 $generated@@555 $generated@@556)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@81) (= (type $generated@@558) $generated@@81)) (= ($generated@@255 ($generated@@79 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@79 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@81) (= (type $generated@@560) $generated@@81)) (= ($generated@@254 ($generated@@79 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@79 $generated@@559 $generated@@560))
)))
(assert  (and (forall (($generated@@563 T@U) ) (! (= (type ($generated@@561 $generated@@563)) $generated@@251)
 :pattern ( ($generated@@561 $generated@@563))
)) (= (type $generated@@562) $generated@@251)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@251) (= (type $generated@@565) $generated@@81)) (= ($generated@@248 $generated@@564 $generated@@565) ($generated@@248 $generated@@562 $generated@@565)))
 :pattern ( ($generated@@248 ($generated@@561 $generated@@564) $generated@@565))
)))
(assert  (and (forall (($generated@@568 T@U) ) (! (= (type ($generated@@566 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@568))
)) (forall (($generated@@569 T@U) ($generated@@570 Int) ) (! (let (($generated@@571 ($generated@@319 (type $generated@@569))))
(= (type ($generated@@567 $generated@@569 $generated@@570)) $generated@@571))
 :pattern ( ($generated@@567 $generated@@569 $generated@@570))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@318 $generated@@159)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@572 ($generated@@566 $generated@@573) $generated@@574) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@317 $generated@@572))) ($generated@@298 ($generated@@567 $generated@@572 $generated@@575) $generated@@573 $generated@@574))
 :pattern ( ($generated@@567 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@86 $generated@@572 ($generated@@566 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@576 ($generated@@87 $generated@@577)) $generated@@577)
 :pattern ( ($generated@@87 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@285 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@285 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@285 $generated@@581)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@290 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@290 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@290 $generated@@585)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@586 ($generated@@167 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@167 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@76 ($generated@@167 $generated@@589)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@68) (= ($generated@@590 ($generated@@566 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@566 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@68) (= ($generated@@76 ($generated@@566 $generated@@593)) $generated@@57))
 :pattern ( ($generated@@566 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
(= ($generated@@375 $generated@@595 ($generated@@325 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@325 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@338 $generated@@159 $generated@@159)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) (= ($generated@@78 $generated@@596 ($generated@@458 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@336 $generated@@596) $generated@@599))) (and ($generated@@272 ($generated@@93 ($generated@@433 $generated@@596) $generated@@599) $generated@@598) ($generated@@272 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@596) $generated@@599))
 :pattern ( ($generated@@93 ($generated@@336 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@458 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@356 $generated@@159 $generated@@159)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) (= ($generated@@78 $generated@@600 ($generated@@466 $generated@@601 $generated@@602)) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@354 $generated@@600) $generated@@603))) (and ($generated@@272 ($generated@@93 ($generated@@441 $generated@@600) $generated@@603) $generated@@602) ($generated@@272 $generated@@603 $generated@@601)))
 :pattern ( ($generated@@93 ($generated@@441 $generated@@600) $generated@@603))
 :pattern ( ($generated@@93 ($generated@@354 $generated@@600) $generated@@603))
))))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@466 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@159) (= (type $generated@@607) $generated@@159)) (< ($generated@@604 $generated@@606) ($generated@@605 ($generated@@271 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@271 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@159) (= (type $generated@@609) $generated@@159)) (< ($generated@@604 $generated@@609) ($generated@@605 ($generated@@271 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@271 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@81) (= (type $generated@@611) $generated@@81)) (< ($generated@@605 $generated@@610) ($generated@@605 ($generated@@79 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@79 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@81) (= (type $generated@@613) $generated@@81)) (< ($generated@@605 $generated@@613) ($generated@@605 ($generated@@79 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@79 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@251) (= (type $generated@@615) $generated@@81)) (= ($generated@@248 ($generated@@249 $generated@@614) $generated@@615) ($generated@@248 $generated@@614 $generated@@615)))
 :pattern ( ($generated@@248 ($generated@@249 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@91 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@88 $generated@@618 $generated@@4)) (= (type $generated@@617) ($generated@@88 $generated@@618 $generated@@4))) (= ($generated@@240 $generated@@616 ($generated@@240 $generated@@616 $generated@@617)) ($generated@@240 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@240 $generated@@616 ($generated@@240 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) $generated@@68)) ($generated@@272 $generated@@619 ($generated@@458 $generated@@620 $generated@@621))) (and (= ($generated@@325 ($generated@@375 ($generated@@338 $generated@@159 $generated@@159) $generated@@619)) $generated@@619) ($generated@@78 ($generated@@375 ($generated@@338 $generated@@159 $generated@@159) $generated@@619) ($generated@@458 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@272 $generated@@619 ($generated@@458 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@159) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) $generated@@68)) ($generated@@272 $generated@@622 ($generated@@466 $generated@@623 $generated@@624))) (and (= ($generated@@325 ($generated@@375 ($generated@@356 $generated@@159 $generated@@159) $generated@@622)) $generated@@622) ($generated@@78 ($generated@@375 ($generated@@356 $generated@@159 $generated@@159) $generated@@622) ($generated@@466 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@272 $generated@@622 ($generated@@466 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@68) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) $generated@@159)) ($generated@@272 $generated@@627 ($generated@@150 $generated@@625 $generated@@626))) (and (= ($generated@@325 ($generated@@375 $generated@@81 $generated@@627)) $generated@@627) ($generated@@78 ($generated@@375 $generated@@81 $generated@@627) ($generated@@150 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@272 $generated@@627 ($generated@@150 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@93 ($generated@@256 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@93 ($generated@@256 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
 (not ($generated@@0 ($generated@@93 ($generated@@487 $generated@@631) $generated@@630))))
 :pattern ( (let (($generated@@631 (type $generated@@630)))
($generated@@93 ($generated@@487 $generated@@631) $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@73)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@68) (= (type $generated@@635) $generated@@68)) (and (= ($generated@@76 ($generated@@150 $generated@@634 $generated@@635)) $generated@@62) (= ($generated@@632 ($generated@@150 $generated@@634 $generated@@635)) $generated@@66)))
 :pattern ( ($generated@@150 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@81) (= ($generated@@604 ($generated@@325 $generated@@636)) ($generated@@605 $generated@@636)))
 :pattern ( ($generated@@604 ($generated@@325 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@159) ($generated@@272 $generated@@637 ($generated@@87 0))) (and (= ($generated@@325 ($generated@@375 $generated@@2 $generated@@637)) $generated@@637) ($generated@@78 ($generated@@375 ($generated@@88 $generated@@159 $generated@@4) $generated@@637) ($generated@@87 0))))
 :pattern ( ($generated@@272 $generated@@637 ($generated@@87 0)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@159) (= (type $generated@@639) $generated@@68)) ($generated@@272 $generated@@638 ($generated@@285 $generated@@639))) (and (= ($generated@@325 ($generated@@375 ($generated@@88 $generated@@159 $generated@@4) $generated@@638)) $generated@@638) ($generated@@78 ($generated@@375 ($generated@@88 $generated@@159 $generated@@4) $generated@@638) ($generated@@285 $generated@@639))))
 :pattern ( ($generated@@272 $generated@@638 ($generated@@285 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@159) (= (type $generated@@641) $generated@@68)) ($generated@@272 $generated@@640 ($generated@@290 $generated@@641))) (and (= ($generated@@325 ($generated@@375 ($generated@@88 $generated@@159 $generated@@4) $generated@@640)) $generated@@640) ($generated@@78 ($generated@@375 ($generated@@88 $generated@@159 $generated@@4) $generated@@640) ($generated@@290 $generated@@641))))
 :pattern ( ($generated@@272 $generated@@640 ($generated@@290 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@159) (= (type $generated@@643) $generated@@68)) ($generated@@272 $generated@@642 ($generated@@167 $generated@@643))) (and (= ($generated@@325 ($generated@@375 ($generated@@88 $generated@@159 $generated@@2) $generated@@642)) $generated@@642) ($generated@@78 ($generated@@375 ($generated@@88 $generated@@159 $generated@@2) $generated@@642) ($generated@@167 $generated@@643))))
 :pattern ( ($generated@@272 $generated@@642 ($generated@@167 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@159) (= (type $generated@@645) $generated@@68)) ($generated@@272 $generated@@644 ($generated@@566 $generated@@645))) (and (= ($generated@@325 ($generated@@375 ($generated@@318 $generated@@159) $generated@@644)) $generated@@644) ($generated@@78 ($generated@@375 ($generated@@318 $generated@@159) $generated@@644) ($generated@@566 $generated@@645))))
 :pattern ( ($generated@@272 $generated@@644 ($generated@@566 $generated@@645)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@632 $generated@@80) $generated@@67))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@646 ($generated@@167 $generated@@647) $generated@@648) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@646 $generated@@649)))) ($generated@@298 $generated@@649 $generated@@647 $generated@@648))
 :pattern ( ($generated@@93 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@86 $generated@@646 ($generated@@167 $generated@@647) $generated@@648))
)))
(assert (= $generated@@165 ($generated@@250 $generated@@165)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@91 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@88 $generated@@652 $generated@@4)) (= (type $generated@@651) ($generated@@88 $generated@@652 $generated@@4))) (= ($generated@@404 $generated@@650 $generated@@651) (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@652) (or (not ($generated@@0 ($generated@@93 $generated@@650 $generated@@653))) (not ($generated@@0 ($generated@@93 $generated@@651 $generated@@653)))))
 :pattern ( ($generated@@93 $generated@@650 $generated@@653))
 :pattern ( ($generated@@93 $generated@@651 $generated@@653))
)))))
 :pattern ( ($generated@@404 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@81) (= (type $generated@@655) $generated@@68)) (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@145 $generated@@656) (and ($generated@@149 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@68) ($generated@@86 $generated@@654 ($generated@@150 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@86 $generated@@654 ($generated@@150 $generated@@655 $generated@@657) $generated@@656))
))))) ($generated@@298 ($generated@@157 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@298 ($generated@@157 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@81) (= (type $generated@@659) $generated@@68)) (= (type $generated@@660) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@145 $generated@@660) (and ($generated@@149 $generated@@658) (exists (($generated@@661 T@U) ) (!  (and (= (type $generated@@661) $generated@@68) ($generated@@86 $generated@@658 ($generated@@150 $generated@@661 $generated@@659) $generated@@660))
 :pattern ( ($generated@@86 $generated@@658 ($generated@@150 $generated@@661 $generated@@659) $generated@@660))
))))) ($generated@@298 ($generated@@158 $generated@@658) $generated@@659 $generated@@660))
 :pattern ( ($generated@@298 ($generated@@158 $generated@@658) $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@81) (= (type $generated@@663) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@145 $generated@@663) (and ($generated@@308 $generated@@662) ($generated@@86 $generated@@662 $generated@@80 $generated@@663)))) ($generated@@86 ($generated@@255 $generated@@662) $generated@@80 $generated@@663))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@662) $generated@@80 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@81) (= (type $generated@@665) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@145 $generated@@665) (and ($generated@@308 $generated@@664) ($generated@@86 $generated@@664 $generated@@80 $generated@@665)))) ($generated@@86 ($generated@@254 $generated@@664) $generated@@80 $generated@@665))
 :pattern ( ($generated@@86 ($generated@@254 $generated@@664) $generated@@80 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@159) (= (type $generated@@667) $generated@@159)) (= ($generated@@271 ($generated@@250 $generated@@666) ($generated@@250 $generated@@667)) ($generated@@250 ($generated@@271 $generated@@666 $generated@@667))))
 :pattern ( ($generated@@271 ($generated@@250 $generated@@666) ($generated@@250 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@81) (= (type $generated@@669) $generated@@81)) (= ($generated@@79 ($generated@@250 $generated@@668) ($generated@@250 $generated@@669)) ($generated@@250 ($generated@@79 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@79 ($generated@@250 $generated@@668) ($generated@@250 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (! (= ($generated@@325 ($generated@@250 $generated@@670)) ($generated@@250 ($generated@@325 $generated@@670)))
 :pattern ( ($generated@@325 ($generated@@250 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@319 (type $generated@@671))))
 (=> (and (= (type $generated@@671) ($generated@@318 $generated@@672)) (= ($generated@@317 $generated@@671) 0)) (= $generated@@671 ($generated@@316 $generated@@672))))
 :pattern ( ($generated@@317 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@674)))
 (=> (and (and (= (type $generated@@673) ($generated@@88 $generated@@676 $generated@@2)) (= (type $generated@@675) $generated@@2)) (<= 0 ($generated $generated@@675))) (= ($generated@@330 ($generated@@94 $generated@@673 $generated@@674 $generated@@675)) (+ (- ($generated@@330 $generated@@673) ($generated ($generated@@93 $generated@@673 $generated@@674))) ($generated $generated@@675)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@673 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@679)))
 (=> (and (= (type $generated@@677) ($generated@@88 $generated@@680 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@680 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@240 $generated@@677 $generated@@678) $generated@@679))  (or ($generated@@0 ($generated@@93 $generated@@677 $generated@@679)) ($generated@@0 ($generated@@93 $generated@@678 $generated@@679))))))
 :pattern ( ($generated@@93 ($generated@@240 $generated@@677 $generated@@678) $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@682) $generated@@2)) ($generated@@86 $generated@@682 $generated@@46 $generated@@681))
 :pattern ( ($generated@@86 $generated@@682 $generated@@46 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@684) $generated@@3)) ($generated@@86 $generated@@684 $generated@@47 $generated@@683))
 :pattern ( ($generated@@86 $generated@@684 $generated@@47 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@686) $generated@@4)) ($generated@@86 $generated@@686 $generated@@44 $generated@@685))
 :pattern ( ($generated@@86 $generated@@686 $generated@@44 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@688) $generated@@511)) ($generated@@86 $generated@@688 $generated@@45 $generated@@687))
 :pattern ( ($generated@@86 $generated@@688 $generated@@45 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@690) $generated@@159)) ($generated@@86 $generated@@690 $generated@@48 $generated@@689))
 :pattern ( ($generated@@86 $generated@@690 $generated@@48 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@318 $generated@@159)) (= (type $generated@@692) $generated@@68)) (= ($generated@@78 $generated@@691 ($generated@@566 $generated@@692)) (forall (($generated@@693 Int) ) (!  (=> (and (<= 0 $generated@@693) (< $generated@@693 ($generated@@317 $generated@@691))) ($generated@@272 ($generated@@567 $generated@@691 $generated@@693) $generated@@692))
 :pattern ( ($generated@@567 $generated@@691 $generated@@693))
))))
 :pattern ( ($generated@@78 $generated@@691 ($generated@@566 $generated@@692)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 Int) ) (!  (=> (= (type $generated@@695) ($generated@@318 $generated@@159)) (=> (and (<= 0 $generated@@696) (< $generated@@696 ($generated@@317 $generated@@695))) (< ($generated@@605 ($generated@@375 $generated@@81 ($generated@@567 $generated@@695 $generated@@696))) ($generated@@694 $generated@@695))))
 :pattern ( ($generated@@605 ($generated@@375 $generated@@81 ($generated@@567 $generated@@695 $generated@@696))))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) ($generated@@338 $generated@@159 $generated@@159)) (= (type $generated@@698) $generated@@68)) (= (type $generated@@699) $generated@@68)) ($generated@@78 $generated@@697 ($generated@@458 $generated@@698 $generated@@699))) (and (and ($generated@@78 ($generated@@336 $generated@@697) ($generated@@285 $generated@@698)) ($generated@@78 ($generated@@383 $generated@@697) ($generated@@285 $generated@@699))) ($generated@@78 ($generated@@432 $generated@@697) ($generated@@285 ($generated@@150 $generated@@698 $generated@@699)))))
 :pattern ( ($generated@@78 $generated@@697 ($generated@@458 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) ($generated@@356 $generated@@159 $generated@@159)) (= (type $generated@@701) $generated@@68)) (= (type $generated@@702) $generated@@68)) ($generated@@78 $generated@@700 ($generated@@466 $generated@@701 $generated@@702))) (and (and ($generated@@78 ($generated@@354 $generated@@700) ($generated@@290 $generated@@701)) ($generated@@78 ($generated@@394 $generated@@700) ($generated@@290 $generated@@702))) ($generated@@78 ($generated@@440 $generated@@700) ($generated@@290 ($generated@@150 $generated@@701 $generated@@702)))))
 :pattern ( ($generated@@78 $generated@@700 ($generated@@466 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@2) ($generated@@78 $generated@@703 $generated@@46))
 :pattern ( ($generated@@78 $generated@@703 $generated@@46))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@3) ($generated@@78 $generated@@704 $generated@@47))
 :pattern ( ($generated@@78 $generated@@704 $generated@@47))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@4) ($generated@@78 $generated@@705 $generated@@44))
 :pattern ( ($generated@@78 $generated@@705 $generated@@44))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@511) ($generated@@78 $generated@@706 $generated@@45))
 :pattern ( ($generated@@78 $generated@@706 $generated@@45))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@159) ($generated@@78 $generated@@707 $generated@@48))
 :pattern ( ($generated@@78 $generated@@707 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@708) $generated@@81) (= (type $generated@@709) $generated@@81)) (= (type $generated@@710) $generated@@81)) (= (type $generated@@711) $generated@@81)) (= (type $generated@@712) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@713) $generated@@81)) (= (type $generated@@714) $generated@@81)) (= (type $generated@@715) $generated@@81)) (= (type $generated@@716) ($generated@@174 $generated@@89 $generated@@4))) (= (type $generated@@717) $generated@@89)) (= (type $generated@@718) ($generated@@174 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@720 true))
(let (($generated@@721  (=> (= $generated@@708 ($generated@@79 $generated@@709 $generated@@710)) (=> (and ($generated@@78 $generated@@709 $generated@@80) ($generated@@78 $generated@@710 $generated@@80)) (=> (and (and ($generated@@78 $generated@@711 $generated@@80) ($generated@@86 $generated@@711 $generated@@80 $generated@@712)) (= $generated@@713 $generated@@710)) (=> (and (and (and ($generated@@78 $generated@@713 $generated@@80) (= $generated@@711 $generated@@713)) (and ($generated@@78 $generated@@714 $generated@@80) ($generated@@86 $generated@@714 $generated@@80 $generated@@712))) (and (and (= $generated@@715 $generated@@709) ($generated@@78 $generated@@715 $generated@@80)) (and (= $generated@@714 $generated@@715) ($generated@@86 $generated@@714 $generated@@80 $generated@@712)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@605 $generated@@714) ($generated@@605 $generated@@708))) (=> (< ($generated@@605 $generated@@714) ($generated@@605 $generated@@708)) (=> ($generated@@252 $generated@@714) (=> (and ($generated@@86 $generated@@711 $generated@@80 $generated@@712) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@605 $generated@@711) ($generated@@605 $generated@@708))))))))))))
(let (($generated@@722  (=> (not (= $generated@@708 $generated@@165)) (and (=> (= (ControlFlow 0 7) 4) $generated@@721) (=> (= (ControlFlow 0 7) 6) $generated@@720)))))
(let (($generated@@723 true))
(let (($generated@@724  (=> (= $generated@@716 ($generated@@228 $generated@@717 $generated@@712 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@723) (=> (= (ControlFlow 0 8) 7) $generated@@722)))))
(let (($generated@@725 true))
(let (($generated@@726  (=> (= $generated@@718 ($generated@@173 $generated@@717 $generated@@712 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@725) (=> (= (ControlFlow 0 9) 8) $generated@@724)))))
(let (($generated@@727  (=> (and ($generated@@145 $generated@@712) ($generated@@719 $generated@@712)) (=> (and (and ($generated@@78 $generated@@708 $generated@@80) ($generated@@86 $generated@@708 $generated@@80 $generated@@712)) (and (= 0 $generated@@247) (= (ControlFlow 0 10) 9))) $generated@@726))))
$generated@@727)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@T) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int Int) Bool)
(declare-fun $generated@@286 (Int Int) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U Int) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@367 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (and (forall (($generated@@193 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@193)) 13)) (forall (($generated@@194 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ) (! (= (type ($generated@@189 $generated@@195)) ($generated@@191 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195))
))))
(assert (forall (($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@196)) 0)
 :pattern ( ($generated@@189 $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 14) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@61) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203) ($generated@@69 $generated@@201 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203))
)))
(assert  (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@209 $generated@@210)) 15)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@206 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@204 $generated@@215)) ($generated@@71 $generated@@216 $generated@@4)))
 :pattern ( ($generated@@204 $generated@@215))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= (type ($generated@@205 $generated@@217 $generated@@218)) ($generated@@206 $generated@@217 $generated@@218))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (let (($generated@@221 (type $generated@@219)))
 (not ($generated@@0 ($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219))))
 :pattern ( (let (($generated@@221 (type $generated@@219)))
($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219)))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@208 (type $generated@@240))))
(let (($generated@@242 ($generated@@207 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@206 $generated@@242 $generated@@241)) (or (= $generated@@240 ($generated@@205 $generated@@242 $generated@@241)) (exists (($generated@@243 T@U) ) (!  (and (= (type $generated@@243) $generated@@242) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@240) $generated@@243)))
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
))))))
 :pattern ( ($generated@@204 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@226 (type $generated@@244))))
(let (($generated@@246 ($generated@@225 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@224 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@223 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@222 $generated@@244))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@61)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@250) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@251) $generated@@61)) (= (type $generated@@252) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@199) ($generated@@0 ($generated@@76 $generated@@250 $generated@@253))) ($generated@@197 $generated@@253 $generated@@251 $generated@@252))
 :pattern ( ($generated@@76 $generated@@250 $generated@@253))
))))
 :pattern ( ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@199) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@197 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert  (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@208 (type $generated@@264))))
(let (($generated@@266 ($generated@@207 (type $generated@@264))))
(= (type ($generated@@261 $generated@@264)) ($generated@@71 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@206 $generated@@199 $generated@@199)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))) (and ($generated@@197 ($generated@@76 ($generated@@261 $generated@@267) $generated@@271) $generated@@269 $generated@@270) ($generated@@197 $generated@@271 $generated@@268 $generated@@270)))
 :pattern ( ($generated@@76 ($generated@@261 $generated@@267) $generated@@271))
 :pattern ( ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@226 (type $generated@@276))))
(let (($generated@@278 ($generated@@225 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@224 $generated@@199 $generated@@199)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))) (and ($generated@@197 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@197 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@286 $generated@@287 $generated@@288) (not (= 0 $generated@@284))) true)
 :pattern ( ($generated@@285 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@71 $generated@@290 $generated@@4))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@291))))
(let (($generated@@293 ($generated@@225 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@224 $generated@@293 $generated@@292)) (= (= $generated@@291 ($generated@@223 $generated@@293 $generated@@292)) (= ($generated@@222 $generated@@291) ($generated@@289 $generated@@293))))))
 :pattern ( ($generated@@222 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@192 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@191 $generated@@295)) (<= 0 ($generated@@190 $generated@@294))))
 :pattern ( ($generated@@190 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@61) (= (type $generated@@299) $generated@@61)) (= ($generated@@296 ($generated@@260 $generated@@298 $generated@@299)) $generated@@298))
 :pattern ( ($generated@@260 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@260 $generated@@302 $generated@@303)) $generated@@303))
 :pattern ( ($generated@@260 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@67 ($generated@@260 $generated@@304 $generated@@305)) $generated@@58))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@272 $generated@@308 $generated@@309)) $generated@@308))
 :pattern ( ($generated@@272 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@313))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@314 $generated@@315)) $generated@@59))
 :pattern ( ($generated@@272 $generated@@314 $generated@@315))
)))
(assert  (and (forall (($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@318))
)) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@192 (type $generated@@319))))
(= (type ($generated@@317 $generated@@319 $generated@@320)) $generated@@321))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) ($generated@@191 $generated@@199)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324) (forall (($generated@@325 Int) ) (!  (=> (and (<= 0 $generated@@325) (< $generated@@325 ($generated@@190 $generated@@322))) ($generated@@197 ($generated@@317 $generated@@322 $generated@@325) $generated@@323 $generated@@324))
 :pattern ( ($generated@@317 $generated@@322 $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 ($generated@@70 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@70 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@328 ($generated@@248 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@248 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@61) (= ($generated@@67 ($generated@@248 $generated@@331)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@254 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@254 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@335)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@335))
)))
(assert  (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
)) (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@337 ($generated@@336 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@336 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@67 ($generated@@336 $generated@@341)) $generated@@56))
 :pattern ( ($generated@@336 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@316 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@316 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@316 $generated@@345)) $generated@@57))
 :pattern ( ($generated@@316 $generated@@345))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated@@346 $generated@@350 ($generated@@198 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@198 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (not ($generated@@0 ($generated@@76 ($generated@@289 $generated@@352) $generated@@351))))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@76 ($generated@@289 $generated@@352) $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@71 $generated@@199 $generated@@2)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@199) (< 0 ($generated ($generated@@76 $generated@@353 $generated@@356)))) ($generated@@197 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@76 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 Int) ) (! (= ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))) ($generated@@185 ($generated@@198 ($generated@@8 $generated@@357))))
 :pattern ( ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@198 ($generated@@185 $generated@@358)) ($generated@@185 ($generated@@198 $generated@@358)))
 :pattern ( ($generated@@198 ($generated@@185 $generated@@358)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@192 (type $generated@@359))))
 (=> (and (= (type $generated@@359) ($generated@@191 $generated@@360)) (= ($generated@@190 $generated@@359) 0)) (= $generated@@359 ($generated@@189 $generated@@360))))
 :pattern ( ($generated@@190 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@362) $generated@@2)) ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
 :pattern ( ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@364) $generated@@3)) ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
 :pattern ( ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@4)) ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
)))
(assert (= ($generated@@1 $generated@@367) 17))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@369) $generated@@367)) ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
 :pattern ( ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@371) $generated@@199)) ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
 :pattern ( ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U) Bool)
(declare-fun $generated@@379 (T@U) Bool)
(assert  (and (and (= (type $generated@@372) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@373) $generated@@72)) (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@380  (=> (= $generated@@372 ($generated@@128 $generated@@373 $generated@@374 $generated@@60 false)) (=> (and ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@374) (= $generated@@376 (+ $generated@@377 1))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@374) ($generated@@286 $generated@@375 (+ $generated@@377 1))) (and ($generated@@286 $generated@@375 (+ $generated@@377 1)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@285 $generated@@375 (+ $generated@@377 1)))))))
(let (($generated@@381  (=> (and ($generated@@378 $generated@@374) ($generated@@379 $generated@@374)) (=> (and (and (= 1 $generated@@284) (= $generated@@377 ($generated@@183 2))) (and (forall (($generated@@382 Int) ) (!  (=> true ($generated@@285 $generated@@382 ($generated@@183 3)))
 :pattern ( ($generated@@285 $generated@@382 3))
)) (= (ControlFlow 0 3) 2))) $generated@@380))))
$generated@@381)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@T) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int Int) Bool)
(declare-fun $generated@@286 (Int Int) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U Int) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@367 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (and (forall (($generated@@193 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@193)) 13)) (forall (($generated@@194 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ) (! (= (type ($generated@@189 $generated@@195)) ($generated@@191 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195))
))))
(assert (forall (($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@196)) 0)
 :pattern ( ($generated@@189 $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 14) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@61) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203) ($generated@@69 $generated@@201 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203))
)))
(assert  (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@209 $generated@@210)) 15)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@206 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@204 $generated@@215)) ($generated@@71 $generated@@216 $generated@@4)))
 :pattern ( ($generated@@204 $generated@@215))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= (type ($generated@@205 $generated@@217 $generated@@218)) ($generated@@206 $generated@@217 $generated@@218))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (let (($generated@@221 (type $generated@@219)))
 (not ($generated@@0 ($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219))))
 :pattern ( (let (($generated@@221 (type $generated@@219)))
($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219)))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@208 (type $generated@@240))))
(let (($generated@@242 ($generated@@207 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@206 $generated@@242 $generated@@241)) (or (= $generated@@240 ($generated@@205 $generated@@242 $generated@@241)) (exists (($generated@@243 T@U) ) (!  (and (= (type $generated@@243) $generated@@242) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@240) $generated@@243)))
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
))))))
 :pattern ( ($generated@@204 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@226 (type $generated@@244))))
(let (($generated@@246 ($generated@@225 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@224 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@223 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@222 $generated@@244))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@61)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@250) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@251) $generated@@61)) (= (type $generated@@252) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@199) ($generated@@0 ($generated@@76 $generated@@250 $generated@@253))) ($generated@@197 $generated@@253 $generated@@251 $generated@@252))
 :pattern ( ($generated@@76 $generated@@250 $generated@@253))
))))
 :pattern ( ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@199) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@197 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert  (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@208 (type $generated@@264))))
(let (($generated@@266 ($generated@@207 (type $generated@@264))))
(= (type ($generated@@261 $generated@@264)) ($generated@@71 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@206 $generated@@199 $generated@@199)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))) (and ($generated@@197 ($generated@@76 ($generated@@261 $generated@@267) $generated@@271) $generated@@269 $generated@@270) ($generated@@197 $generated@@271 $generated@@268 $generated@@270)))
 :pattern ( ($generated@@76 ($generated@@261 $generated@@267) $generated@@271))
 :pattern ( ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@226 (type $generated@@276))))
(let (($generated@@278 ($generated@@225 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@224 $generated@@199 $generated@@199)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))) (and ($generated@@197 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@197 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@286 $generated@@287 $generated@@288) (not (= 0 $generated@@284))) true)
 :pattern ( ($generated@@285 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@71 $generated@@290 $generated@@4))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@291))))
(let (($generated@@293 ($generated@@225 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@224 $generated@@293 $generated@@292)) (= (= $generated@@291 ($generated@@223 $generated@@293 $generated@@292)) (= ($generated@@222 $generated@@291) ($generated@@289 $generated@@293))))))
 :pattern ( ($generated@@222 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@192 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@191 $generated@@295)) (<= 0 ($generated@@190 $generated@@294))))
 :pattern ( ($generated@@190 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@61) (= (type $generated@@299) $generated@@61)) (= ($generated@@296 ($generated@@260 $generated@@298 $generated@@299)) $generated@@298))
 :pattern ( ($generated@@260 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@260 $generated@@302 $generated@@303)) $generated@@303))
 :pattern ( ($generated@@260 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@67 ($generated@@260 $generated@@304 $generated@@305)) $generated@@58))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@272 $generated@@308 $generated@@309)) $generated@@308))
 :pattern ( ($generated@@272 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@313))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@314 $generated@@315)) $generated@@59))
 :pattern ( ($generated@@272 $generated@@314 $generated@@315))
)))
(assert  (and (forall (($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@318))
)) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@192 (type $generated@@319))))
(= (type ($generated@@317 $generated@@319 $generated@@320)) $generated@@321))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) ($generated@@191 $generated@@199)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324) (forall (($generated@@325 Int) ) (!  (=> (and (<= 0 $generated@@325) (< $generated@@325 ($generated@@190 $generated@@322))) ($generated@@197 ($generated@@317 $generated@@322 $generated@@325) $generated@@323 $generated@@324))
 :pattern ( ($generated@@317 $generated@@322 $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 ($generated@@70 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@70 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@328 ($generated@@248 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@248 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@61) (= ($generated@@67 ($generated@@248 $generated@@331)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@254 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@254 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@335)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@335))
)))
(assert  (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
)) (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@337 ($generated@@336 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@336 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@67 ($generated@@336 $generated@@341)) $generated@@56))
 :pattern ( ($generated@@336 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@316 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@316 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@316 $generated@@345)) $generated@@57))
 :pattern ( ($generated@@316 $generated@@345))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated@@346 $generated@@350 ($generated@@198 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@198 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (not ($generated@@0 ($generated@@76 ($generated@@289 $generated@@352) $generated@@351))))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@76 ($generated@@289 $generated@@352) $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@71 $generated@@199 $generated@@2)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@199) (< 0 ($generated ($generated@@76 $generated@@353 $generated@@356)))) ($generated@@197 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@76 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 Int) ) (! (= ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))) ($generated@@185 ($generated@@198 ($generated@@8 $generated@@357))))
 :pattern ( ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@198 ($generated@@185 $generated@@358)) ($generated@@185 ($generated@@198 $generated@@358)))
 :pattern ( ($generated@@198 ($generated@@185 $generated@@358)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@192 (type $generated@@359))))
 (=> (and (= (type $generated@@359) ($generated@@191 $generated@@360)) (= ($generated@@190 $generated@@359) 0)) (= $generated@@359 ($generated@@189 $generated@@360))))
 :pattern ( ($generated@@190 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@362) $generated@@2)) ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
 :pattern ( ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@364) $generated@@3)) ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
 :pattern ( ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@4)) ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
)))
(assert (= ($generated@@1 $generated@@367) 17))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@369) $generated@@367)) ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
 :pattern ( ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@371) $generated@@199)) ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
 :pattern ( ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U) Bool)
(declare-fun $generated@@379 (T@U) Bool)
(assert  (and (and (= (type $generated@@372) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@373) $generated@@72)) (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@380  (=> (= $generated@@372 ($generated@@128 $generated@@373 $generated@@374 $generated@@60 false)) (=> (and ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@374) (= $generated@@376 (+ $generated@@377 1))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@374) ($generated@@286 $generated@@375 (+ $generated@@377 1))) (and ($generated@@286 $generated@@375 (+ $generated@@377 1)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@285 $generated@@375 (+ $generated@@377 1)))))))
(let (($generated@@381  (=> (and ($generated@@378 $generated@@374) ($generated@@379 $generated@@374)) (=> (and (and (= 1 $generated@@284) (= $generated@@377 ($generated@@183 2))) (and (forall (($generated@@382 Int) ) (!  (=> true ($generated@@285 $generated@@382 ($generated@@183 3)))
 :pattern ( ($generated@@285 $generated@@382 3))
)) (= (ControlFlow 0 3) 2))) $generated@@380))))
$generated@@381)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@T) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int Int) Bool)
(declare-fun $generated@@286 (Int Int) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U Int) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@367 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (and (forall (($generated@@193 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@193)) 13)) (forall (($generated@@194 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ) (! (= (type ($generated@@189 $generated@@195)) ($generated@@191 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195))
))))
(assert (forall (($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@196)) 0)
 :pattern ( ($generated@@189 $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 14) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@61) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203) ($generated@@69 $generated@@201 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203))
)))
(assert  (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@209 $generated@@210)) 15)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@206 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@204 $generated@@215)) ($generated@@71 $generated@@216 $generated@@4)))
 :pattern ( ($generated@@204 $generated@@215))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= (type ($generated@@205 $generated@@217 $generated@@218)) ($generated@@206 $generated@@217 $generated@@218))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (let (($generated@@221 (type $generated@@219)))
 (not ($generated@@0 ($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219))))
 :pattern ( (let (($generated@@221 (type $generated@@219)))
($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219)))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@208 (type $generated@@240))))
(let (($generated@@242 ($generated@@207 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@206 $generated@@242 $generated@@241)) (or (= $generated@@240 ($generated@@205 $generated@@242 $generated@@241)) (exists (($generated@@243 T@U) ) (!  (and (= (type $generated@@243) $generated@@242) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@240) $generated@@243)))
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
))))))
 :pattern ( ($generated@@204 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@226 (type $generated@@244))))
(let (($generated@@246 ($generated@@225 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@224 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@223 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@222 $generated@@244))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@61)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@250) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@251) $generated@@61)) (= (type $generated@@252) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@199) ($generated@@0 ($generated@@76 $generated@@250 $generated@@253))) ($generated@@197 $generated@@253 $generated@@251 $generated@@252))
 :pattern ( ($generated@@76 $generated@@250 $generated@@253))
))))
 :pattern ( ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@199) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@197 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert  (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@208 (type $generated@@264))))
(let (($generated@@266 ($generated@@207 (type $generated@@264))))
(= (type ($generated@@261 $generated@@264)) ($generated@@71 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@206 $generated@@199 $generated@@199)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))) (and ($generated@@197 ($generated@@76 ($generated@@261 $generated@@267) $generated@@271) $generated@@269 $generated@@270) ($generated@@197 $generated@@271 $generated@@268 $generated@@270)))
 :pattern ( ($generated@@76 ($generated@@261 $generated@@267) $generated@@271))
 :pattern ( ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@226 (type $generated@@276))))
(let (($generated@@278 ($generated@@225 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@224 $generated@@199 $generated@@199)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))) (and ($generated@@197 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@197 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@286 $generated@@287 $generated@@288) (not (= 0 $generated@@284))) true)
 :pattern ( ($generated@@285 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@71 $generated@@290 $generated@@4))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@291))))
(let (($generated@@293 ($generated@@225 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@224 $generated@@293 $generated@@292)) (= (= $generated@@291 ($generated@@223 $generated@@293 $generated@@292)) (= ($generated@@222 $generated@@291) ($generated@@289 $generated@@293))))))
 :pattern ( ($generated@@222 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@192 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@191 $generated@@295)) (<= 0 ($generated@@190 $generated@@294))))
 :pattern ( ($generated@@190 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@61) (= (type $generated@@299) $generated@@61)) (= ($generated@@296 ($generated@@260 $generated@@298 $generated@@299)) $generated@@298))
 :pattern ( ($generated@@260 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@260 $generated@@302 $generated@@303)) $generated@@303))
 :pattern ( ($generated@@260 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@67 ($generated@@260 $generated@@304 $generated@@305)) $generated@@58))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@272 $generated@@308 $generated@@309)) $generated@@308))
 :pattern ( ($generated@@272 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@313))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@314 $generated@@315)) $generated@@59))
 :pattern ( ($generated@@272 $generated@@314 $generated@@315))
)))
(assert  (and (forall (($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@318))
)) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@192 (type $generated@@319))))
(= (type ($generated@@317 $generated@@319 $generated@@320)) $generated@@321))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) ($generated@@191 $generated@@199)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324) (forall (($generated@@325 Int) ) (!  (=> (and (<= 0 $generated@@325) (< $generated@@325 ($generated@@190 $generated@@322))) ($generated@@197 ($generated@@317 $generated@@322 $generated@@325) $generated@@323 $generated@@324))
 :pattern ( ($generated@@317 $generated@@322 $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 ($generated@@70 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@70 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@328 ($generated@@248 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@248 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@61) (= ($generated@@67 ($generated@@248 $generated@@331)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@254 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@254 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@335)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@335))
)))
(assert  (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
)) (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@337 ($generated@@336 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@336 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@67 ($generated@@336 $generated@@341)) $generated@@56))
 :pattern ( ($generated@@336 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@316 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@316 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@316 $generated@@345)) $generated@@57))
 :pattern ( ($generated@@316 $generated@@345))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated@@346 $generated@@350 ($generated@@198 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@198 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (not ($generated@@0 ($generated@@76 ($generated@@289 $generated@@352) $generated@@351))))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@76 ($generated@@289 $generated@@352) $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@71 $generated@@199 $generated@@2)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@199) (< 0 ($generated ($generated@@76 $generated@@353 $generated@@356)))) ($generated@@197 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@76 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 Int) ) (! (= ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))) ($generated@@185 ($generated@@198 ($generated@@8 $generated@@357))))
 :pattern ( ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@198 ($generated@@185 $generated@@358)) ($generated@@185 ($generated@@198 $generated@@358)))
 :pattern ( ($generated@@198 ($generated@@185 $generated@@358)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@192 (type $generated@@359))))
 (=> (and (= (type $generated@@359) ($generated@@191 $generated@@360)) (= ($generated@@190 $generated@@359) 0)) (= $generated@@359 ($generated@@189 $generated@@360))))
 :pattern ( ($generated@@190 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@362) $generated@@2)) ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
 :pattern ( ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@364) $generated@@3)) ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
 :pattern ( ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@4)) ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
)))
(assert (= ($generated@@1 $generated@@367) 17))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@369) $generated@@367)) ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
 :pattern ( ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@371) $generated@@199)) ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
 :pattern ( ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(assert  (and (and (= (type $generated@@372) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@373) $generated@@72)) (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@381  (=> (and (and (and (= $generated@@372 ($generated@@128 $generated@@373 $generated@@374 $generated@@60 false)) (= $generated@@375 ($generated@@183 3))) (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@374) (= $generated@@377 (+ $generated@@378 1)))) (and (and ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@374) ($generated@@286 $generated@@376 (+ $generated@@378 1))) (and ($generated@@286 $generated@@376 (+ $generated@@378 1)) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@285 $generated@@376 (+ $generated@@378 1)))))
(let (($generated@@382  (=> (and ($generated@@379 $generated@@374) ($generated@@380 $generated@@374)) (=> (and (and (= 1 $generated@@284) (= $generated@@378 ($generated@@183 2))) (and (forall (($generated@@383 Int) ) (!  (=> true ($generated@@285 $generated@@383 ($generated@@183 3)))
 :pattern ( ($generated@@285 $generated@@383 3))
)) (= (ControlFlow 0 3) 2))) $generated@@381))))
$generated@@382)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@T) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int Int) Bool)
(declare-fun $generated@@286 (Int Int) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U Int) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@367 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (and (forall (($generated@@193 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@193)) 13)) (forall (($generated@@194 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ) (! (= (type ($generated@@189 $generated@@195)) ($generated@@191 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195))
))))
(assert (forall (($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@196)) 0)
 :pattern ( ($generated@@189 $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 14) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@61) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203) ($generated@@69 $generated@@201 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203))
)))
(assert  (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@209 $generated@@210)) 15)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@206 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@204 $generated@@215)) ($generated@@71 $generated@@216 $generated@@4)))
 :pattern ( ($generated@@204 $generated@@215))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= (type ($generated@@205 $generated@@217 $generated@@218)) ($generated@@206 $generated@@217 $generated@@218))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (let (($generated@@221 (type $generated@@219)))
 (not ($generated@@0 ($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219))))
 :pattern ( (let (($generated@@221 (type $generated@@219)))
($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219)))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@208 (type $generated@@240))))
(let (($generated@@242 ($generated@@207 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@206 $generated@@242 $generated@@241)) (or (= $generated@@240 ($generated@@205 $generated@@242 $generated@@241)) (exists (($generated@@243 T@U) ) (!  (and (= (type $generated@@243) $generated@@242) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@240) $generated@@243)))
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
))))))
 :pattern ( ($generated@@204 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@226 (type $generated@@244))))
(let (($generated@@246 ($generated@@225 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@224 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@223 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@222 $generated@@244))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@61)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@250) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@251) $generated@@61)) (= (type $generated@@252) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@199) ($generated@@0 ($generated@@76 $generated@@250 $generated@@253))) ($generated@@197 $generated@@253 $generated@@251 $generated@@252))
 :pattern ( ($generated@@76 $generated@@250 $generated@@253))
))))
 :pattern ( ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@199) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@197 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert  (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@208 (type $generated@@264))))
(let (($generated@@266 ($generated@@207 (type $generated@@264))))
(= (type ($generated@@261 $generated@@264)) ($generated@@71 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@206 $generated@@199 $generated@@199)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))) (and ($generated@@197 ($generated@@76 ($generated@@261 $generated@@267) $generated@@271) $generated@@269 $generated@@270) ($generated@@197 $generated@@271 $generated@@268 $generated@@270)))
 :pattern ( ($generated@@76 ($generated@@261 $generated@@267) $generated@@271))
 :pattern ( ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@226 (type $generated@@276))))
(let (($generated@@278 ($generated@@225 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@224 $generated@@199 $generated@@199)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))) (and ($generated@@197 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@197 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@286 $generated@@287 $generated@@288) (not (= 0 $generated@@284))) true)
 :pattern ( ($generated@@285 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@71 $generated@@290 $generated@@4))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@291))))
(let (($generated@@293 ($generated@@225 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@224 $generated@@293 $generated@@292)) (= (= $generated@@291 ($generated@@223 $generated@@293 $generated@@292)) (= ($generated@@222 $generated@@291) ($generated@@289 $generated@@293))))))
 :pattern ( ($generated@@222 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@192 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@191 $generated@@295)) (<= 0 ($generated@@190 $generated@@294))))
 :pattern ( ($generated@@190 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@61)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@61) (= (type $generated@@299) $generated@@61)) (= ($generated@@296 ($generated@@260 $generated@@298 $generated@@299)) $generated@@298))
 :pattern ( ($generated@@260 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@260 $generated@@302 $generated@@303)) $generated@@303))
 :pattern ( ($generated@@260 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@67 ($generated@@260 $generated@@304 $generated@@305)) $generated@@58))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@272 $generated@@308 $generated@@309)) $generated@@308))
 :pattern ( ($generated@@272 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@313))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@314 $generated@@315)) $generated@@59))
 :pattern ( ($generated@@272 $generated@@314 $generated@@315))
)))
(assert  (and (forall (($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@318))
)) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (! (let (($generated@@321 ($generated@@192 (type $generated@@319))))
(= (type ($generated@@317 $generated@@319 $generated@@320)) $generated@@321))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) ($generated@@191 $generated@@199)) (= (type $generated@@323) $generated@@61)) (= (type $generated@@324) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324) (forall (($generated@@325 Int) ) (!  (=> (and (<= 0 $generated@@325) (< $generated@@325 ($generated@@190 $generated@@322))) ($generated@@197 ($generated@@317 $generated@@322 $generated@@325) $generated@@323 $generated@@324))
 :pattern ( ($generated@@317 $generated@@322 $generated@@325))
))))
 :pattern ( ($generated@@69 $generated@@322 ($generated@@316 $generated@@323) $generated@@324))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 ($generated@@70 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@70 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@328 ($generated@@248 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@248 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@61) (= ($generated@@67 ($generated@@248 $generated@@331)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@254 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@254 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@335)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@335))
)))
(assert  (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
)) (forall (($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@337 ($generated@@336 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@336 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@67 ($generated@@336 $generated@@341)) $generated@@56))
 :pattern ( ($generated@@336 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@316 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@316 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@316 $generated@@345)) $generated@@57))
 :pattern ( ($generated@@316 $generated@@345))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated@@346 $generated@@350 ($generated@@198 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@198 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (not ($generated@@0 ($generated@@76 ($generated@@289 $generated@@352) $generated@@351))))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@76 ($generated@@289 $generated@@352) $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@71 $generated@@199 $generated@@2)) (= (type $generated@@354) $generated@@61)) (= (type $generated@@355) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@199) (< 0 ($generated ($generated@@76 $generated@@353 $generated@@356)))) ($generated@@197 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@76 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@69 $generated@@353 ($generated@@336 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 Int) ) (! (= ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))) ($generated@@185 ($generated@@198 ($generated@@8 $generated@@357))))
 :pattern ( ($generated@@198 ($generated@@8 ($generated@@183 $generated@@357))))
)))
(assert (forall (($generated@@358 T@U) ) (! (= ($generated@@198 ($generated@@185 $generated@@358)) ($generated@@185 ($generated@@198 $generated@@358)))
 :pattern ( ($generated@@198 ($generated@@185 $generated@@358)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@192 (type $generated@@359))))
 (=> (and (= (type $generated@@359) ($generated@@191 $generated@@360)) (= ($generated@@190 $generated@@359) 0)) (= $generated@@359 ($generated@@189 $generated@@360))))
 :pattern ( ($generated@@190 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@362) $generated@@2)) ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
 :pattern ( ($generated@@69 $generated@@362 $generated@@46 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@364) $generated@@3)) ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
 :pattern ( ($generated@@69 $generated@@364 $generated@@47 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@4)) ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@44 $generated@@365))
)))
(assert (= ($generated@@1 $generated@@367) 17))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@369) $generated@@367)) ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
 :pattern ( ($generated@@69 $generated@@369 $generated@@45 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@371) $generated@@199)) ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
 :pattern ( ($generated@@69 $generated@@371 $generated@@48 $generated@@370))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@372 () T@U)
(declare-fun $generated@@373 () T@U)
(declare-fun $generated@@374 () T@U)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U) Bool)
(declare-fun $generated@@379 (T@U) Bool)
(assert  (and (and (= (type $generated@@372) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@373) $generated@@72)) (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@380  (=> (= $generated@@372 ($generated@@128 $generated@@373 $generated@@374 $generated@@60 false)) (=> (and ($generated@@69 ($generated@@8 $generated@@375) $generated@@46 $generated@@374) (= $generated@@376 (+ $generated@@377 1))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@374) ($generated@@286 $generated@@375 (+ $generated@@377 1))) (and ($generated@@286 $generated@@375 (+ $generated@@377 1)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@285 $generated@@375 (+ $generated@@377 1)))))))
(let (($generated@@381  (=> (and ($generated@@378 $generated@@374) ($generated@@379 $generated@@374)) (=> (and (and (= 1 $generated@@284) (= $generated@@377 ($generated@@183 2))) (and (forall (($generated@@382 Int) ($generated@@383 Int) ) (!  (=> true (=> (= $generated@@383 ($generated@@183 3)) ($generated@@285 $generated@@382 $generated@@383)))
 :pattern ( ($generated@@285 $generated@@382 $generated@@383))
)) (= (ControlFlow 0 3) 2))) $generated@@380))))
$generated@@381)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 () T@T)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@T) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (Int) Bool)
(declare-fun $generated@@290 (Int) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) Bool)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@558 () T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@563 (T@U Int) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@690 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@81) (= (type $generated@@85) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@84 $generated@@85) $generated@@80)  (and ($generated@@78 $generated@@84 $generated@@80) ($generated@@78 $generated@@85 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@84 $generated@@85) $generated@@80))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@71 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@71 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@68)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@78 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@78 $generated@@144 ($generated@@87 0)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) (or ($generated@@147 $generated@@148) (and (not (= 1 $generated@@145)) ($generated@@78 $generated@@148 $generated@@80)))) true)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@81) (= (type $generated@@151) $generated@@81)) (= (type $generated@@152) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@149 $generated@@152)) (= ($generated@@86 ($generated@@79 $generated@@150 $generated@@151) $generated@@80 $generated@@152)  (and ($generated@@86 $generated@@150 $generated@@80 $generated@@152) ($generated@@86 $generated@@151 $generated@@80 $generated@@152))))
 :pattern ( ($generated@@86 ($generated@@79 $generated@@150 $generated@@151) $generated@@80 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@81)) ($generated@@78 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@78 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@167) $generated@@81)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@81)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@78 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@78 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@89 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@89) (= (type $generated@@226) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@89)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@91 (type $generated@@233))))
(= (type ($generated@@232 $generated@@233 $generated@@234)) ($generated@@88 $generated@@235 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@91 (type $generated@@236))))
 (=> (and (= (type $generated@@236) ($generated@@88 $generated@@238 $generated@@4)) (= (type $generated@@237) ($generated@@88 $generated@@238 $generated@@4))) (= ($generated@@232 ($generated@@232 $generated@@236 $generated@@237) $generated@@237) ($generated@@232 $generated@@236 $generated@@237))))
 :pattern ( ($generated@@232 ($generated@@232 $generated@@236 $generated@@237) $generated@@237))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@242) 17) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@239 $generated@@248 $generated@@249)) ($generated@@88 $generated@@163 $generated@@4))
 :pattern ( ($generated@@239 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@240 $generated@@250)) $generated@@242)
 :pattern ( ($generated@@240 $generated@@250))
))) (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@241 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@241 $generated@@251))
))) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@245 $generated@@253)) $generated@@81)
 :pattern ( ($generated@@245 $generated@@253))
))) (forall (($generated@@254 T@U) ) (! (= (type ($generated@@246 $generated@@254)) $generated@@81)
 :pattern ( ($generated@@246 $generated@@254))
))) (forall (($generated@@255 T@T) ) (! (= (type ($generated@@247 $generated@@255)) ($generated@@88 $generated@@255 $generated@@4))
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@242) (= (type $generated@@257) $generated@@81)) (or ($generated@@243 ($generated@@241 $generated@@257)) (and (not (= 0 $generated@@145)) ($generated@@78 $generated@@257 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@241 ($generated@@11 ($generated@@244 ($generated@@241 $generated@@257)))))) (let (($generated@@258 ($generated@@241 ($generated@@245 ($generated@@241 $generated@@257)))))
(let (($generated@@259 ($generated@@241 ($generated@@246 ($generated@@241 $generated@@257)))))
 (and ($generated@@243 $generated@@259) ($generated@@243 $generated@@258))))) (= ($generated@@239 ($generated@@240 $generated@@256) ($generated@@241 $generated@@257)) (ite ($generated@@244 ($generated@@241 $generated@@257)) ($generated@@247 $generated@@163) (let (($generated@@260 ($generated@@241 ($generated@@245 ($generated@@241 $generated@@257)))))
(let (($generated@@261 ($generated@@241 ($generated@@246 ($generated@@241 $generated@@257)))))
($generated@@232 ($generated@@239 ($generated@@240 $generated@@256) $generated@@261) ($generated@@239 ($generated@@240 $generated@@256) $generated@@260))))))))
 :weight 3
 :pattern ( ($generated@@239 ($generated@@240 $generated@@256) ($generated@@241 $generated@@257)))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@81)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) $generated@@163)) (= ($generated@@78 ($generated@@262 $generated@@268 $generated@@269) ($generated@@154 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@78 ($generated@@262 $generated@@268 $generated@@269) ($generated@@154 $generated@@266 $generated@@267)))
)))
(assert ($generated@@78 $generated@@169 $generated@@80))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@149 $generated@@270)) ($generated@@86 $generated@@169 $generated@@80 $generated@@270))
 :pattern ( ($generated@@86 $generated@@169 $generated@@80 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@81) (= (type $generated@@272) $generated@@81)) (= ($generated@@160 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@160 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (= ($generated@@273 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@279) $generated@@68)) (= ($generated@@78 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@163) ($generated@@0 ($generated@@93 $generated@@278 $generated@@280))) ($generated@@263 $generated@@280 $generated@@279))
 :pattern ( ($generated@@93 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@78 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@284) $generated@@68)) (= ($generated@@78 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@163) ($generated@@0 ($generated@@93 $generated@@283 $generated@@285))) ($generated@@263 $generated@@285 $generated@@284))
 :pattern ( ($generated@@93 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@78 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@241 $generated@@286) $generated@@286)
 :pattern ( ($generated@@241 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@81) (= (type $generated@@288) $generated@@81)) (and ($generated@@244 $generated@@287) ($generated@@244 $generated@@288))) (= ($generated@@273 $generated@@287 $generated@@288) true))
 :pattern ( ($generated@@273 $generated@@287 $generated@@288) ($generated@@244 $generated@@287))
 :pattern ( ($generated@@273 $generated@@287 $generated@@288) ($generated@@244 $generated@@288))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@291 Int) ) (!  (=> (or ($generated@@290 $generated@@291) (not (= 0 $generated@@145))) true)
 :pattern ( ($generated@@289 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@68) (= (type $generated@@294) $generated@@68)) (= (type $generated@@295) $generated@@163)) (= (type $generated@@296) $generated@@163)) (= (type $generated@@297) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@149 $generated@@297)) (= ($generated@@86 ($generated@@262 $generated@@295 $generated@@296) ($generated@@154 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@86 ($generated@@262 $generated@@295 $generated@@296) ($generated@@154 $generated@@293 $generated@@294) $generated@@297))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@242) (= (type $generated@@299) $generated@@81)) (or ($generated@@243 $generated@@299) (and (not (= 0 $generated@@145)) ($generated@@78 $generated@@299 $generated@@80)))) ($generated@@78 ($generated@@239 $generated@@298 $generated@@299) ($generated@@276 $generated@@46)))
 :pattern ( ($generated@@239 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@81) (= ($generated@@153 $generated@@300) (= ($generated@@168 $generated@@300) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@81) (= ($generated@@244 $generated@@301) (= ($generated@@168 $generated@@301) $generated@@63)))
 :pattern ( ($generated@@244 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@81) (= ($generated@@302 $generated@@303) (= ($generated@@168 $generated@@303) $generated@@65)))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@81) ($generated@@153 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@163) (= (type $generated@@306) $generated@@163)) (= $generated@@304 ($generated@@262 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@153 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@81) ($generated@@302 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@81) (= (type $generated@@309) $generated@@81)) (= $generated@@307 ($generated@@79 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@302 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@81) ($generated@@244 $generated@@318)) (= $generated@@318 $generated@@169))
 :pattern ( ($generated@@244 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@163)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@68) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@292 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@86 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@292 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@88 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@91 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@88 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@93 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@88 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@93 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@93 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 20)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@88 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@93 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@93 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@91 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@88 $generated@@367 $generated@@2)) (= ($generated@@172 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@93 $generated@@366 $generated@@368))) (<= ($generated ($generated@@93 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@93 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@172 $generated@@366))
)))
(assert (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@163) ($generated@@263 $generated@@372 $generated@@80)) (and (= ($generated@@319 ($generated@@369 $generated@@81 $generated@@372)) $generated@@372) ($generated@@78 ($generated@@369 $generated@@81 $generated@@372) $generated@@80)))
 :pattern ( ($generated@@263 $generated@@372 $generated@@80))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@334 (type $generated@@373))))
(let (($generated@@375 ($generated@@333 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@332 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@331 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@93 ($generated@@330 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@330 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@334 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@88 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@334 (type $generated@@380))))
(let (($generated@@382 ($generated@@333 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@332 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@331 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@93 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@352 (type $generated@@384))))
(let (($generated@@386 ($generated@@351 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@350 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@349 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@93 ($generated@@348 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@348 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@352 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@88 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@352 (type $generated@@391))))
(let (($generated@@393 ($generated@@351 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@350 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@349 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@93 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@396) $generated@@68)) (= ($generated@@78 $generated@@395 ($generated@@171 $generated@@396)) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@395 $generated@@397)))) ($generated@@263 $generated@@397 $generated@@396))
 :pattern ( ($generated@@93 $generated@@395 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@171 $generated@@396)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@91 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400 $generated@@401)) ($generated@@88 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@91 (type $generated@@403))))
 (=> (and (and (= (type $generated@@403) ($generated@@88 $generated@@405 $generated@@4)) (= (type $generated@@404) ($generated@@88 $generated@@405 $generated@@4))) ($generated@@398 $generated@@403 $generated@@404)) (and (= ($generated@@399 ($generated@@232 $generated@@403 $generated@@404) $generated@@403) $generated@@404) (= ($generated@@399 ($generated@@232 $generated@@403 $generated@@404) $generated@@404) $generated@@403))))
 :pattern ( ($generated@@232 $generated@@403 $generated@@404))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@406) $generated@@242) (= (type $generated@@407) $generated@@81)) (or ($generated@@243 $generated@@407) (and (not (= 0 $generated@@145)) ($generated@@78 $generated@@407 $generated@@80)))) (and (=> (not ($generated@@244 $generated@@407)) (let (($generated@@408 ($generated@@245 $generated@@407)))
(let (($generated@@409 ($generated@@246 $generated@@407)))
 (and ($generated@@243 $generated@@409) ($generated@@243 $generated@@408))))) (= ($generated@@239 ($generated@@240 $generated@@406) $generated@@407) (ite ($generated@@244 $generated@@407) ($generated@@247 $generated@@163) (let (($generated@@410 ($generated@@245 $generated@@407)))
(let (($generated@@411 ($generated@@246 $generated@@407)))
($generated@@232 ($generated@@239 $generated@@406 $generated@@411) ($generated@@239 $generated@@406 $generated@@410))))))))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@406) $generated@@407))
))))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@81) ($generated@@412 $generated@@413)) (or ($generated@@244 $generated@@413) ($generated@@302 $generated@@413)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
 (=> (and (= (type $generated@@414) ($generated@@88 $generated@@417 $generated@@4)) (= (type $generated@@415) ($generated@@88 $generated@@417 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@399 $generated@@414 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@93 $generated@@414 $generated@@416)) (not ($generated@@0 ($generated@@93 $generated@@415 $generated@@416)))))))
 :pattern ( ($generated@@93 ($generated@@399 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@418 ($generated@@276 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@163) ($generated@@0 ($generated@@93 $generated@@418 $generated@@421))) ($generated@@292 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@93 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@86 $generated@@418 ($generated@@276 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@422 ($generated@@281 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@163) ($generated@@0 ($generated@@93 $generated@@422 $generated@@425))) ($generated@@292 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@93 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@86 $generated@@422 ($generated@@281 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@93 ($generated@@325 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@93 ($generated@@325 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@88 $generated@@163 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@334 (type $generated@@431))))
(let (($generated@@433 ($generated@@333 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@88 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@332 $generated@@163 $generated@@163)) (= (type $generated@@435) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@93 ($generated@@330 $generated@@434) ($generated@@161 ($generated@@369 $generated@@81 $generated@@435)))) (= ($generated@@93 ($generated@@429 $generated@@434) ($generated@@161 ($generated@@369 $generated@@81 $generated@@435))) ($generated@@162 ($generated@@369 $generated@@81 $generated@@435))))))
 :pattern ( ($generated@@93 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@88 $generated@@163 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@352 (type $generated@@439))))
(let (($generated@@441 ($generated@@351 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@88 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@350 $generated@@163 $generated@@163)) (= (type $generated@@443) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@93 ($generated@@348 $generated@@442) ($generated@@161 ($generated@@369 $generated@@81 $generated@@443)))) (= ($generated@@93 ($generated@@437 $generated@@442) ($generated@@161 ($generated@@369 $generated@@81 $generated@@443))) ($generated@@162 ($generated@@369 $generated@@81 $generated@@443))))))
 :pattern ( ($generated@@93 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@93 ($generated@@377 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@93 ($generated@@330 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@93 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@93 ($generated@@330 $generated@@444) $generated@@448))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@93 ($generated@@377 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@351 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@350 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@93 ($generated@@388 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@93 ($generated@@348 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@93 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@93 ($generated@@348 $generated@@449) $generated@@453))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@93 ($generated@@388 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@332 $generated@@163 $generated@@163)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@330 $generated@@457) $generated@@461))) (and ($generated@@292 ($generated@@93 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@292 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@93 ($generated@@330 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@86 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@350 $generated@@163 $generated@@163)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@348 $generated@@465) $generated@@469))) (and ($generated@@292 ($generated@@93 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@292 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@93 ($generated@@348 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@86 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
 (=> (and (and (= (type $generated@@470) ($generated@@88 $generated@@473 $generated@@4)) (= (type $generated@@471) ($generated@@88 $generated@@473 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@470 $generated@@472))) ($generated@@0 ($generated@@93 ($generated@@232 $generated@@470 $generated@@471) $generated@@472))))
 :pattern ( ($generated@@232 $generated@@470 $generated@@471) ($generated@@93 $generated@@470 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
 (=> (and (and (= (type $generated@@474) ($generated@@88 $generated@@477 $generated@@4)) (= (type $generated@@475) ($generated@@88 $generated@@477 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@475 $generated@@476))) ($generated@@0 ($generated@@93 ($generated@@232 $generated@@474 $generated@@475) $generated@@476))))
 :pattern ( ($generated@@232 $generated@@474 $generated@@475) ($generated@@93 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@81) ($generated@@78 $generated@@478 $generated@@80)) (or ($generated@@244 $generated@@478) ($generated@@302 $generated@@478)))
 :pattern ( ($generated@@302 $generated@@478) ($generated@@78 $generated@@478 $generated@@80))
 :pattern ( ($generated@@244 $generated@@478) ($generated@@78 $generated@@478 $generated@@80))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
 (=> (and (and (= (type $generated@@479) ($generated@@88 $generated@@482 $generated@@4)) (= (type $generated@@480) ($generated@@88 $generated@@482 $generated@@4))) ($generated@@0 ($generated@@93 $generated@@480 $generated@@481))) (not ($generated@@0 ($generated@@93 ($generated@@399 $generated@@479 $generated@@480) $generated@@481)))))
 :pattern ( ($generated@@399 $generated@@479 $generated@@480) ($generated@@93 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@88 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@352 (type $generated@@485))))
(let (($generated@@487 ($generated@@351 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@350 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@349 $generated@@487 $generated@@486)) (= ($generated@@348 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@348 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@352 (type $generated@@488))))
(let (($generated@@490 ($generated@@351 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@350 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@349 $generated@@490 $generated@@489)) (= ($generated@@388 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@388 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@352 (type $generated@@491))))
(let (($generated@@493 ($generated@@351 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@350 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@349 $generated@@493 $generated@@492)) (= ($generated@@436 $generated@@491) ($generated@@483 $generated@@163))))))
 :pattern ( ($generated@@436 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@334 (type $generated@@494))))
(let (($generated@@496 ($generated@@333 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@332 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@331 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@163) (= (type $generated@@498) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@428 $generated@@494) ($generated@@319 ($generated@@262 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@428 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@352 (type $generated@@499))))
(let (($generated@@501 ($generated@@351 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@350 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@349 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@163) (= (type $generated@@503) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@436 $generated@@499) ($generated@@319 ($generated@@262 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@436 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) ($generated@@263 $generated@@504 $generated@@46)) (and (= ($generated@@319 ($generated@@369 $generated@@2 $generated@@504)) $generated@@504) ($generated@@78 ($generated@@369 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@163) ($generated@@263 $generated@@505 $generated@@47)) (and (= ($generated@@319 ($generated@@369 $generated@@3 $generated@@505)) $generated@@505) ($generated@@78 ($generated@@369 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) ($generated@@263 $generated@@506 $generated@@44)) (and (= ($generated@@319 ($generated@@369 $generated@@4 $generated@@506)) $generated@@506) ($generated@@78 ($generated@@369 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 21))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@163) ($generated@@263 $generated@@508 $generated@@45)) (and (= ($generated@@319 ($generated@@369 $generated@@507 $generated@@508)) $generated@@508) ($generated@@78 ($generated@@369 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@509) $generated@@81) (= (type $generated@@510) $generated@@81)) (and ($generated@@302 $generated@@509) ($generated@@302 $generated@@510))) (= ($generated@@273 $generated@@509 $generated@@510)  (and ($generated@@273 ($generated@@246 $generated@@509) ($generated@@246 $generated@@510)) ($generated@@273 ($generated@@245 $generated@@509) ($generated@@245 $generated@@510)))))
 :pattern ( ($generated@@273 $generated@@509 $generated@@510) ($generated@@302 $generated@@509))
 :pattern ( ($generated@@273 $generated@@509 $generated@@510) ($generated@@302 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@263 ($generated@@319 $generated@@511) $generated@@512) ($generated@@78 $generated@@511 $generated@@512)))
 :pattern ( ($generated@@263 ($generated@@319 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@91 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@88 $generated@@514 $generated@@2)) (<= 0 ($generated@@324 $generated@@513))))
 :pattern ( ($generated@@324 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@313 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@312 $generated@@516)) (<= 0 ($generated@@311 $generated@@515))))
 :pattern ( ($generated@@311 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@454 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@454 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@454 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@454 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@525 $generated@@526)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@462 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@462 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@462 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@462 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@535 $generated@@536)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (= ($generated@@168 ($generated@@262 $generated@@537 $generated@@538)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@539 ($generated@@154 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@154 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (= ($generated@@543 ($generated@@154 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@154 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@163) (= (type $generated@@548) $generated@@163)) (= ($generated@@161 ($generated@@262 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@262 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@163) (= (type $generated@@550) $generated@@163)) (= ($generated@@162 ($generated@@262 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@262 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@81) (= (type $generated@@552) $generated@@81)) (= ($generated@@168 ($generated@@79 $generated@@551 $generated@@552)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@81) (= (type $generated@@554) $generated@@81)) (= ($generated@@246 ($generated@@79 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@79 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@81) (= (type $generated@@556) $generated@@81)) (= ($generated@@245 ($generated@@79 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@79 $generated@@555 $generated@@556))
)))
(assert  (and (forall (($generated@@559 T@U) ) (! (= (type ($generated@@557 $generated@@559)) $generated@@242)
 :pattern ( ($generated@@557 $generated@@559))
)) (= (type $generated@@558) $generated@@242)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@242) (= (type $generated@@561) $generated@@81)) (= ($generated@@239 $generated@@560 $generated@@561) ($generated@@239 $generated@@558 $generated@@561)))
 :pattern ( ($generated@@239 ($generated@@557 $generated@@560) $generated@@561))
)))
(assert  (and (forall (($generated@@564 T@U) ) (! (= (type ($generated@@562 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@564))
)) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (! (let (($generated@@567 ($generated@@313 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565 $generated@@566)) $generated@@567))
 :pattern ( ($generated@@563 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@312 $generated@@163)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@568 ($generated@@562 $generated@@569) $generated@@570) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@311 $generated@@568))) ($generated@@292 ($generated@@563 $generated@@568 $generated@@571) $generated@@569 $generated@@570))
 :pattern ( ($generated@@563 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@86 $generated@@568 ($generated@@562 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@87 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@87 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@276 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@276 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@276 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@281 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@281 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@281 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@171 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@171 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@586 ($generated@@562 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@562 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@76 ($generated@@562 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@562 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
(= ($generated@@369 $generated@@591 ($generated@@319 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@319 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@332 $generated@@163 $generated@@163)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@68)) (= ($generated@@78 $generated@@592 ($generated@@454 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@330 $generated@@592) $generated@@595))) (and ($generated@@263 ($generated@@93 ($generated@@429 $generated@@592) $generated@@595) $generated@@594) ($generated@@263 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@93 ($generated@@429 $generated@@592) $generated@@595))
 :pattern ( ($generated@@93 ($generated@@330 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@454 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@350 $generated@@163 $generated@@163)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) (= ($generated@@78 $generated@@596 ($generated@@462 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@348 $generated@@596) $generated@@599))) (and ($generated@@263 ($generated@@93 ($generated@@437 $generated@@596) $generated@@599) $generated@@598) ($generated@@263 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@596) $generated@@599))
 :pattern ( ($generated@@93 ($generated@@348 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@462 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@163) (= (type $generated@@603) $generated@@163)) (< ($generated@@600 $generated@@602) ($generated@@601 ($generated@@262 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@262 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@163) (= (type $generated@@605) $generated@@163)) (< ($generated@@600 $generated@@605) ($generated@@601 ($generated@@262 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@262 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@81) (= (type $generated@@607) $generated@@81)) (< ($generated@@601 $generated@@606) ($generated@@601 ($generated@@79 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@79 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@81) (= (type $generated@@609) $generated@@81)) (< ($generated@@601 $generated@@609) ($generated@@601 ($generated@@79 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@79 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@242) (= (type $generated@@611) $generated@@81)) (= ($generated@@239 ($generated@@240 $generated@@610) $generated@@611) ($generated@@239 $generated@@610 $generated@@611)))
 :pattern ( ($generated@@239 ($generated@@240 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@91 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@88 $generated@@614 $generated@@4)) (= (type $generated@@613) ($generated@@88 $generated@@614 $generated@@4))) (= ($generated@@232 $generated@@612 ($generated@@232 $generated@@612 $generated@@613)) ($generated@@232 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@232 $generated@@612 ($generated@@232 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@163) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@68)) ($generated@@263 $generated@@615 ($generated@@454 $generated@@616 $generated@@617))) (and (= ($generated@@319 ($generated@@369 ($generated@@332 $generated@@163 $generated@@163) $generated@@615)) $generated@@615) ($generated@@78 ($generated@@369 ($generated@@332 $generated@@163 $generated@@163) $generated@@615) ($generated@@454 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@263 $generated@@615 ($generated@@454 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@163) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) $generated@@68)) ($generated@@263 $generated@@618 ($generated@@462 $generated@@619 $generated@@620))) (and (= ($generated@@319 ($generated@@369 ($generated@@350 $generated@@163 $generated@@163) $generated@@618)) $generated@@618) ($generated@@78 ($generated@@369 ($generated@@350 $generated@@163 $generated@@163) $generated@@618) ($generated@@462 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@263 $generated@@618 ($generated@@462 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@163)) ($generated@@263 $generated@@623 ($generated@@154 $generated@@621 $generated@@622))) (and (= ($generated@@319 ($generated@@369 $generated@@81 $generated@@623)) $generated@@623) ($generated@@78 ($generated@@369 $generated@@81 $generated@@623) ($generated@@154 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@263 $generated@@623 ($generated@@154 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@624)))
 (not ($generated@@0 ($generated@@93 ($generated@@247 $generated@@625) $generated@@624))))
 :pattern ( (let (($generated@@625 (type $generated@@624)))
($generated@@93 ($generated@@247 $generated@@625) $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@93 ($generated@@483 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@93 ($generated@@483 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@73)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@68) (= (type $generated@@631) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@630 $generated@@631)) $generated@@62) (= ($generated@@628 ($generated@@154 $generated@@630 $generated@@631)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@81) (= ($generated@@600 ($generated@@319 $generated@@632)) ($generated@@601 $generated@@632)))
 :pattern ( ($generated@@600 ($generated@@319 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@163) ($generated@@263 $generated@@633 ($generated@@87 0))) (and (= ($generated@@319 ($generated@@369 $generated@@2 $generated@@633)) $generated@@633) ($generated@@78 ($generated@@369 ($generated@@88 $generated@@163 $generated@@4) $generated@@633) ($generated@@87 0))))
 :pattern ( ($generated@@263 $generated@@633 ($generated@@87 0)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@163) (= (type $generated@@635) $generated@@68)) ($generated@@263 $generated@@634 ($generated@@276 $generated@@635))) (and (= ($generated@@319 ($generated@@369 ($generated@@88 $generated@@163 $generated@@4) $generated@@634)) $generated@@634) ($generated@@78 ($generated@@369 ($generated@@88 $generated@@163 $generated@@4) $generated@@634) ($generated@@276 $generated@@635))))
 :pattern ( ($generated@@263 $generated@@634 ($generated@@276 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@163) (= (type $generated@@637) $generated@@68)) ($generated@@263 $generated@@636 ($generated@@281 $generated@@637))) (and (= ($generated@@319 ($generated@@369 ($generated@@88 $generated@@163 $generated@@4) $generated@@636)) $generated@@636) ($generated@@78 ($generated@@369 ($generated@@88 $generated@@163 $generated@@4) $generated@@636) ($generated@@281 $generated@@637))))
 :pattern ( ($generated@@263 $generated@@636 ($generated@@281 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@163) (= (type $generated@@639) $generated@@68)) ($generated@@263 $generated@@638 ($generated@@171 $generated@@639))) (and (= ($generated@@319 ($generated@@369 ($generated@@88 $generated@@163 $generated@@2) $generated@@638)) $generated@@638) ($generated@@78 ($generated@@369 ($generated@@88 $generated@@163 $generated@@2) $generated@@638) ($generated@@171 $generated@@639))))
 :pattern ( ($generated@@263 $generated@@638 ($generated@@171 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@163) (= (type $generated@@641) $generated@@68)) ($generated@@263 $generated@@640 ($generated@@562 $generated@@641))) (and (= ($generated@@319 ($generated@@369 ($generated@@312 $generated@@163) $generated@@640)) $generated@@640) ($generated@@78 ($generated@@369 ($generated@@312 $generated@@163) $generated@@640) ($generated@@562 $generated@@641))))
 :pattern ( ($generated@@263 $generated@@640 ($generated@@562 $generated@@641)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@628 $generated@@80) $generated@@67))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@643) $generated@@68)) (= (type $generated@@644) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@642 ($generated@@171 $generated@@643) $generated@@644) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@642 $generated@@645)))) ($generated@@292 $generated@@645 $generated@@643 $generated@@644))
 :pattern ( ($generated@@93 $generated@@642 $generated@@645))
))))
 :pattern ( ($generated@@86 $generated@@642 ($generated@@171 $generated@@643) $generated@@644))
)))
(assert (= $generated@@169 ($generated@@241 $generated@@169)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@91 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@88 $generated@@648 $generated@@4)) (= (type $generated@@647) ($generated@@88 $generated@@648 $generated@@4))) (= ($generated@@398 $generated@@646 $generated@@647) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@648) (or (not ($generated@@0 ($generated@@93 $generated@@646 $generated@@649))) (not ($generated@@0 ($generated@@93 $generated@@647 $generated@@649)))))
 :pattern ( ($generated@@93 $generated@@646 $generated@@649))
 :pattern ( ($generated@@93 $generated@@647 $generated@@649))
)))))
 :pattern ( ($generated@@398 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@81) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@652) (and ($generated@@153 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@68) ($generated@@86 $generated@@650 ($generated@@154 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@86 $generated@@650 ($generated@@154 $generated@@651 $generated@@653) $generated@@652))
))))) ($generated@@292 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@292 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@81) (= (type $generated@@655) $generated@@68)) (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@656) (and ($generated@@153 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@68) ($generated@@86 $generated@@654 ($generated@@154 $generated@@657 $generated@@655) $generated@@656))
 :pattern ( ($generated@@86 $generated@@654 ($generated@@154 $generated@@657 $generated@@655) $generated@@656))
))))) ($generated@@292 ($generated@@162 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@292 ($generated@@162 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@81) (= (type $generated@@659) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@659) (and ($generated@@302 $generated@@658) ($generated@@86 $generated@@658 $generated@@80 $generated@@659)))) ($generated@@86 ($generated@@246 $generated@@658) $generated@@80 $generated@@659))
 :pattern ( ($generated@@86 ($generated@@246 $generated@@658) $generated@@80 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@149 $generated@@661) (and ($generated@@302 $generated@@660) ($generated@@86 $generated@@660 $generated@@80 $generated@@661)))) ($generated@@86 ($generated@@245 $generated@@660) $generated@@80 $generated@@661))
 :pattern ( ($generated@@86 ($generated@@245 $generated@@660) $generated@@80 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@163) (= (type $generated@@663) $generated@@163)) (= ($generated@@262 ($generated@@241 $generated@@662) ($generated@@241 $generated@@663)) ($generated@@241 ($generated@@262 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@262 ($generated@@241 $generated@@662) ($generated@@241 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@81) (= (type $generated@@665) $generated@@81)) (= ($generated@@79 ($generated@@241 $generated@@664) ($generated@@241 $generated@@665)) ($generated@@241 ($generated@@79 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@79 ($generated@@241 $generated@@664) ($generated@@241 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (! (= ($generated@@319 ($generated@@241 $generated@@666)) ($generated@@241 ($generated@@319 $generated@@666)))
 :pattern ( ($generated@@319 ($generated@@241 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@313 (type $generated@@667))))
 (=> (and (= (type $generated@@667) ($generated@@312 $generated@@668)) (= ($generated@@311 $generated@@667) 0)) (= $generated@@667 ($generated@@310 $generated@@668))))
 :pattern ( ($generated@@311 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (! (let (($generated@@672 (type $generated@@670)))
 (=> (and (and (= (type $generated@@669) ($generated@@88 $generated@@672 $generated@@2)) (= (type $generated@@671) $generated@@2)) (<= 0 ($generated $generated@@671))) (= ($generated@@324 ($generated@@94 $generated@@669 $generated@@670 $generated@@671)) (+ (- ($generated@@324 $generated@@669) ($generated ($generated@@93 $generated@@669 $generated@@670))) ($generated $generated@@671)))))
 :pattern ( ($generated@@324 ($generated@@94 $generated@@669 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@675)))
 (=> (and (= (type $generated@@673) ($generated@@88 $generated@@676 $generated@@4)) (= (type $generated@@674) ($generated@@88 $generated@@676 $generated@@4))) (= ($generated@@0 ($generated@@93 ($generated@@232 $generated@@673 $generated@@674) $generated@@675))  (or ($generated@@0 ($generated@@93 $generated@@673 $generated@@675)) ($generated@@0 ($generated@@93 $generated@@674 $generated@@675))))))
 :pattern ( ($generated@@93 ($generated@@232 $generated@@673 $generated@@674) $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@678) $generated@@2)) ($generated@@86 $generated@@678 $generated@@46 $generated@@677))
 :pattern ( ($generated@@86 $generated@@678 $generated@@46 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@680) $generated@@3)) ($generated@@86 $generated@@680 $generated@@47 $generated@@679))
 :pattern ( ($generated@@86 $generated@@680 $generated@@47 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@682) $generated@@4)) ($generated@@86 $generated@@682 $generated@@44 $generated@@681))
 :pattern ( ($generated@@86 $generated@@682 $generated@@44 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@684) $generated@@507)) ($generated@@86 $generated@@684 $generated@@45 $generated@@683))
 :pattern ( ($generated@@86 $generated@@684 $generated@@45 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@686) $generated@@163)) ($generated@@86 $generated@@686 $generated@@48 $generated@@685))
 :pattern ( ($generated@@86 $generated@@686 $generated@@48 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@312 $generated@@163)) (= (type $generated@@688) $generated@@68)) (= ($generated@@78 $generated@@687 ($generated@@562 $generated@@688)) (forall (($generated@@689 Int) ) (!  (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@311 $generated@@687))) ($generated@@263 ($generated@@563 $generated@@687 $generated@@689) $generated@@688))
 :pattern ( ($generated@@563 $generated@@687 $generated@@689))
))))
 :pattern ( ($generated@@78 $generated@@687 ($generated@@562 $generated@@688)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 Int) ) (!  (=> (= (type $generated@@691) ($generated@@312 $generated@@163)) (=> (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@311 $generated@@691))) (< ($generated@@601 ($generated@@369 $generated@@81 ($generated@@563 $generated@@691 $generated@@692))) ($generated@@690 $generated@@691))))
 :pattern ( ($generated@@601 ($generated@@369 $generated@@81 ($generated@@563 $generated@@691 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@332 $generated@@163 $generated@@163)) (= (type $generated@@694) $generated@@68)) (= (type $generated@@695) $generated@@68)) ($generated@@78 $generated@@693 ($generated@@454 $generated@@694 $generated@@695))) (and (and ($generated@@78 ($generated@@330 $generated@@693) ($generated@@276 $generated@@694)) ($generated@@78 ($generated@@377 $generated@@693) ($generated@@276 $generated@@695))) ($generated@@78 ($generated@@428 $generated@@693) ($generated@@276 ($generated@@154 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@454 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) ($generated@@350 $generated@@163 $generated@@163)) (= (type $generated@@697) $generated@@68)) (= (type $generated@@698) $generated@@68)) ($generated@@78 $generated@@696 ($generated@@462 $generated@@697 $generated@@698))) (and (and ($generated@@78 ($generated@@348 $generated@@696) ($generated@@281 $generated@@697)) ($generated@@78 ($generated@@388 $generated@@696) ($generated@@281 $generated@@698))) ($generated@@78 ($generated@@436 $generated@@696) ($generated@@281 ($generated@@154 $generated@@697 $generated@@698)))))
 :pattern ( ($generated@@78 $generated@@696 ($generated@@462 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@2) ($generated@@78 $generated@@699 $generated@@46))
 :pattern ( ($generated@@78 $generated@@699 $generated@@46))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@3) ($generated@@78 $generated@@700 $generated@@47))
 :pattern ( ($generated@@78 $generated@@700 $generated@@47))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@4) ($generated@@78 $generated@@701 $generated@@44))
 :pattern ( ($generated@@78 $generated@@701 $generated@@44))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@507) ($generated@@78 $generated@@702 $generated@@45))
 :pattern ( ($generated@@78 $generated@@702 $generated@@45))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@163) ($generated@@78 $generated@@703 $generated@@48))
 :pattern ( ($generated@@78 $generated@@703 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@704) $generated@@81) (= (type $generated@@705) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@707) ($generated@@178 $generated@@89 $generated@@4))) (= (type $generated@@708) $generated@@89)) (= (type $generated@@709) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@711  (=> (and (and (=> ($generated@@302 $generated@@704) (and ($generated@@147 $generated@@704) ($generated@@290 ($generated@@146 $generated@@704)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@302 $generated@@704)) ($generated@@289 ($generated@@146 $generated@@704)))))
(let (($generated@@712  (=> (and (not ($generated@@302 $generated@@704)) (= (ControlFlow 0 4) 2)) $generated@@711)))
(let (($generated@@713  (=> ($generated@@302 $generated@@704) (=> (and ($generated@@86 $generated@@704 $generated@@80 $generated@@705) ($generated@@147 $generated@@704)) (=> (and (and (= $generated@@706 ($generated@@146 $generated@@704)) ($generated@@86 ($generated@@8 $generated@@706) $generated@@46 $generated@@705)) (and ($generated@@290 ($generated@@146 $generated@@704)) (= (ControlFlow 0 3) 2))) $generated@@711)))))
(let (($generated@@714  (=> (and (= $generated@@707 ($generated@@177 $generated@@708 $generated@@709 $generated@@60 false)) ($generated@@412 $generated@@704)) (=> (and (and ($generated@@149 $generated@@705) ($generated@@710 $generated@@705)) (and (= $generated@@709 $generated@@705) (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@81) (=> (and (and ($generated@@78 $generated@@715 $generated@@80) (forall (($generated@@716 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@93 ($generated@@239 ($generated@@240 $generated@@558) $generated@@715) ($generated@@319 ($generated@@8 $generated@@716)))) ($generated@@289 $generated@@716)))
 :pattern ( ($generated@@289 $generated@@716))
 :pattern ( ($generated@@93 ($generated@@239 ($generated@@240 $generated@@558) $generated@@715) ($generated@@319 ($generated@@8 $generated@@716))))
))) (< ($generated@@601 $generated@@715) ($generated@@601 $generated@@704))) true))
 :no-pattern (type $generated@@715)
 :no-pattern ($generated $generated@@715)
 :no-pattern ($generated@@0 $generated@@715)
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@713) (=> (= (ControlFlow 0 5) 4) $generated@@712))))))
(let (($generated@@717  (=> (and ($generated@@149 $generated@@709) ($generated@@710 $generated@@709)) (=> (and (and (and (and ($generated@@78 $generated@@704 $generated@@80) ($generated@@86 $generated@@704 $generated@@80 $generated@@709)) ($generated@@412 $generated@@704)) (= 2 $generated@@145)) (and (forall (($generated@@718 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@93 ($generated@@239 ($generated@@240 $generated@@558) $generated@@704) ($generated@@319 ($generated@@8 $generated@@718)))) ($generated@@289 $generated@@718)))
 :pattern ( ($generated@@289 $generated@@718))
 :pattern ( ($generated@@93 ($generated@@239 ($generated@@240 $generated@@558) $generated@@704) ($generated@@319 ($generated@@8 $generated@@718))))
)) (= (ControlFlow 0 6) 5))) $generated@@714))))
$generated@@717))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
