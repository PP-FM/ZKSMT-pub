(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 (Int) Int)
(declare-fun $generated@@347 (Int) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@348 Int) ) (!  (=> (or ($generated@@347 $generated@@348) (not (= 0 $generated@@345))) (= ($generated@@346 $generated@@348) (- $generated@@348 1)))
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@250 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@250 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@276 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@285 (type $generated@@365))))
(let (($generated@@367 ($generated@@284 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@303 (type $generated@@373))))
(let (($generated@@375 ($generated@@302 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@284 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@283 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@302 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@301 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@391) $generated@@395))) (and ($generated@@250 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@250 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@399) $generated@@403))) (and ($generated@@250 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@250 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@303 (type $generated@@406))))
(let (($generated@@408 ($generated@@302 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@301 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@300 $generated@@408 $generated@@407)) (= ($generated@@299 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@299 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@303 (type $generated@@409))))
(let (($generated@@411 ($generated@@302 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@301 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@300 $generated@@411 $generated@@410)) (= ($generated@@335 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@335 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@285 (type $generated@@415))))
(let (($generated@@417 ($generated@@284 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@283 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@282 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@270 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@270 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@270 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@270 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@270 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@270 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@275 $generated@@432))))
 :pattern ( ($generated@@275 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@265 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@264 $generated@@435)) (<= 0 ($generated@@263 $generated@@434))))
 :pattern ( ($generated@@263 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@265 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@264 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@263 $generated@@476))) ($generated@@250 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@270 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@270 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@270 ($generated@@360 ($generated@@283 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@283 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@270 ($generated@@360 ($generated@@301 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@301 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@270 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@525 Int) ) (!  (=> (or ($generated@@347 ($generated@@243 $generated@@525)) (not (= 0 $generated@@345))) (= ($generated@@346 ($generated@@243 $generated@@525)) ($generated@@243 (- $generated@@525 1))))
 :weight 3
 :pattern ( ($generated@@346 ($generated@@243 $generated@@525)))
))))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@135 $generated@@528 $generated@@529)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@136) (= ($generated@@508 ($generated@@270 $generated@@530)) ($generated@@509 $generated@@530)))
 :pattern ( ($generated@@508 ($generated@@270 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) ($generated@@224 $generated@@531 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@360 $generated@@2 $generated@@531)) $generated@@531) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@531) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@75 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@233 $generated@@533))) (and (= ($generated@@270 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@233 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@233 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@238 $generated@@535))) (and (= ($generated@@270 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@238 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@238 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@150 $generated@@537))) (and (= ($generated@@270 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@536) ($generated@@150 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@150 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@470 $generated@@539))) (and (= ($generated@@270 ($generated@@360 ($generated@@264 $generated@@145) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@360 ($generated@@264 $generated@@145) $generated@@538) ($generated@@470 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@470 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@540 $generated@@543)))) ($generated@@250 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@81 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)) ($generated@@245 ($generated@@223 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@555)) ($generated@@245 ($generated@@270 $generated@@555)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@555)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@556 Int) ) (!  (=> (or ($generated@@347 $generated@@556) (not (= 0 $generated@@345))) (> ($generated@@346 $generated@@556) $generated@@556))
 :pattern ( ($generated@@346 $generated@@556))
))))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@265 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@264 $generated@@558)) (= ($generated@@263 $generated@@557) 0)) (= $generated@@557 ($generated@@262 $generated@@558))))
 :pattern ( ($generated@@263 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@428)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@145)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@264 $generated@@145)) (= (type $generated@@574) $generated@@64)) (= ($generated@@132 $generated@@573 ($generated@@470 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@263 $generated@@573))) ($generated@@224 ($generated@@471 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@471 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@132 $generated@@573 ($generated@@470 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@263 $generated@@577))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@388 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@281 $generated@@579) ($generated@@233 $generated@@580)) ($generated@@132 ($generated@@324 $generated@@579) ($generated@@233 $generated@@581))) ($generated@@132 ($generated@@359 $generated@@579) ($generated@@233 ($generated@@135 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@388 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@396 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@299 $generated@@582) ($generated@@238 $generated@@583)) ($generated@@132 ($generated@@335 $generated@@582) ($generated@@238 $generated@@584))) ($generated@@132 ($generated@@370 $generated@@582) ($generated@@238 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@396 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@132 $generated@@585 $generated@@46))
 :pattern ( ($generated@@132 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@132 $generated@@586 $generated@@47))
 :pattern ( ($generated@@132 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@132 $generated@@587 $generated@@44))
 :pattern ( ($generated@@132 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@428) ($generated@@132 $generated@@588 $generated@@45))
 :pattern ( ($generated@@132 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@145) ($generated@@132 $generated@@589 $generated@@48))
 :pattern ( ($generated@@132 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@592) $generated@@77)) (= (type $generated@@594) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@596  (=> (= (ControlFlow 0 5) (- 0 4)) (> ($generated@@346 $generated@@590) $generated@@590))))
(let (($generated@@597  (=> (and (and (= $generated@@591 ($generated@@211 $generated@@592 $generated@@593 $generated@@60 false)) (= ($generated@@346 $generated@@590) (- $generated@@590 1))) (and ($generated@@132 ($generated@@8 ($generated@@346 $generated@@590)) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@596)))
(let (($generated@@598  (=> ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@593) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590))) (=> (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@590 $generated@@590) (< $generated@@590 $generated@@590))))))))
(let (($generated@@599  (=> (= $generated@@594 ($generated@@156 $generated@@592 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@598) (=> (= (ControlFlow 0 7) 6) $generated@@597)))))
(let (($generated@@600  (=> (and (and ($generated@@249 $generated@@593) ($generated@@595 $generated@@593)) (and (= 0 $generated@@345) (= (ControlFlow 0 8) 7))) $generated@@599)))
$generated@@600))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@71 (Int Int) Int)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 (Int) T@U)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@196 (T@T) T@U)
(declare-fun $generated@@197 (T@U) Int)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@220 (T@T T@T) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@T T@T) T@U)
(declare-fun $generated@@239 (T@T T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (=> true (forall (($generated@@72 Int) ) (!  (=> true (= ($generated@@69 ($generated@@70 $generated@@72)) ($generated@@70 ($generated@@71 ($generated@@70 2) ($generated@@70 $generated@@72)))))
 :weight 3
 :pattern ( ($generated@@69 ($generated@@70 $generated@@72)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@84 $generated@@85)) 9)) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@75 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@79 ($generated@@75 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@75 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@79 (type $generated@@90))))
(= (type ($generated@@80 $generated@@90 $generated@@91)) $generated@@92))
 :pattern ( ($generated@@80 $generated@@90 $generated@@91))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 (type $generated@@95)))
(let (($generated@@97 (type $generated@@94)))
(= (type ($generated@@81 $generated@@93 $generated@@94 $generated@@95)) ($generated@@75 $generated@@97 $generated@@96))))
 :pattern ( ($generated@@81 $generated@@93 $generated@@94 $generated@@95))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@79 (type $generated@@98))))
 (=> (= (type $generated@@100) $generated@@101) (= ($generated@@80 ($generated@@81 $generated@@98 $generated@@99 $generated@@100) $generated@@99) $generated@@100)))
 :weight 0
))) (and (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@104 $generated@@105) (= ($generated@@80 ($generated@@81 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@80 $generated@@103 $generated@@105)))
 :weight 0
)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or true (= ($generated@@80 ($generated@@81 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@80 $generated@@107 $generated@@109)))
 :weight 0
)))) (= ($generated@@1 $generated@@76) 10)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@64 (type $generated@@111))))
(= (type ($generated@@82 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@82 $generated@@110 $generated@@111))
))) (= ($generated@@1 $generated@@77) 11)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= (type ($generated@@83 $generated@@113 $generated@@114 $generated@@115)) $generated@@77)
 :pattern ( ($generated@@83 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@64 (type $generated@@117))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@82 ($generated@@83 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@82 ($generated@@83 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@82 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@82 ($generated@@83 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@82 $generated@@125 $generated@@127)))
 :weight 0
)))) (forall (($generated@@128 Int) ) (! (= (type ($generated@@74 $generated@@128)) $generated@@61)
 :pattern ( ($generated@@74 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@129) $generated@@2) (= (type $generated@@130) ($generated@@75 $generated@@76 $generated@@77))) ($generated@@73 $generated@@129 ($generated@@74 0) $generated@@130))
 :pattern ( ($generated@@73 $generated@@129 ($generated@@74 0) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (and (= (type $generated@@132) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@133) ($generated@@75 $generated@@76 $generated@@77))) ($generated@@131 $generated@@132 $generated@@133)) (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@76) ($generated@@0 ($generated@@82 ($generated@@80 $generated@@132 $generated@@134) $generated@@60))) ($generated@@0 ($generated@@82 ($generated@@80 $generated@@133 $generated@@134) $generated@@60)))
 :pattern ( ($generated@@82 ($generated@@80 $generated@@133 $generated@@134) $generated@@60))
)))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@141 $generated@@142)) 12)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@139 ($generated@@137 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@137 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@139 (type $generated@@147))))
(= (type ($generated@@135 $generated@@147 $generated@@148 $generated@@149)) $generated@@150))
 :pattern ( ($generated@@135 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 (type $generated@@154)))
(let (($generated@@156 (type $generated@@152)))
(= (type ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@137 $generated@@156 $generated@@155))))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@139 (type $generated@@157))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@135 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@158 $generated@@159) $generated@@160)))
 :weight 0
))) (and (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@135 ($generated@@140 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@135 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@135 ($generated@@140 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@135 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or true (= ($generated@@135 ($generated@@140 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@135 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ) (! (= (type ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@137 $generated@@76 $generated@@4))
 :pattern ( ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@64 (type $generated@@189))))
 (=> (and (and (and (and (= (type $generated@@184) $generated@@76) (= (type $generated@@185) ($generated@@75 $generated@@76 $generated@@77))) (= (type $generated@@186) ($generated@@63 $generated@@4))) (= (type $generated@@188) $generated@@76)) (= (type $generated@@189) ($generated@@63 $generated@@190))) (= ($generated@@0 ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (not (= $generated@@188 $generated@@184)) ($generated@@0 ($generated@@82 ($generated@@80 $generated@@185 $generated@@188) $generated@@186))) $generated@@187))))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@70 $generated@@191) $generated@@191)
 :pattern ( ($generated@@70 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(= (type ($generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@192 $generated@@195) $generated@@195)
 :pattern ( ($generated@@192 $generated@@195))
)))
(assert  (and (and (forall (($generated@@200 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@200)) 13)) (forall (($generated@@201 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@198 $generated@@201))
))) (forall (($generated@@202 T@T) ) (! (= (type ($generated@@196 $generated@@202)) ($generated@@198 $generated@@202))
 :pattern ( ($generated@@196 $generated@@202))
))))
(assert (forall (($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@203)) 0)
 :pattern ( ($generated@@196 $generated@@203))
)))
(assert  (and (= ($generated@@1 $generated@@206) 14) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@205 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@61) (= (type $generated@@210) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210) ($generated@@73 $generated@@208 $generated@@209 $generated@@210)))
 :pattern ( ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@211) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@212) ($generated@@75 $generated@@76 $generated@@77))) (= (type $generated@@213) $generated@@206)) (= (type $generated@@214) $generated@@61)) ($generated@@131 $generated@@211 $generated@@212)) ($generated@@204 $generated@@213 $generated@@214 $generated@@211)) ($generated@@204 $generated@@213 $generated@@214 $generated@@212))
 :pattern ( ($generated@@131 $generated@@211 $generated@@212) ($generated@@204 $generated@@213 $generated@@214 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@215) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@216) ($generated@@75 $generated@@76 $generated@@77))) (= (type $generated@@218) $generated@@61)) ($generated@@131 $generated@@215 $generated@@216)) ($generated@@73 $generated@@217 $generated@@218 $generated@@215)) ($generated@@73 $generated@@217 $generated@@218 $generated@@216))
 :pattern ( ($generated@@131 $generated@@215 $generated@@216) ($generated@@73 $generated@@217 $generated@@218 $generated@@215))
)))
(assert  (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@224 $generated@@225)) 15)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@221 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@221 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@222 (type $generated@@230))))
(= (type ($generated@@219 $generated@@230)) ($generated@@75 $generated@@231 $generated@@4)))
 :pattern ( ($generated@@219 $generated@@230))
))) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= (type ($generated@@220 $generated@@232 $generated@@233)) ($generated@@221 $generated@@232 $generated@@233))
 :pattern ( ($generated@@220 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@T) ) (! (let (($generated@@236 (type $generated@@234)))
 (not ($generated@@0 ($generated@@80 ($generated@@219 ($generated@@220 $generated@@236 $generated@@235)) $generated@@234))))
 :pattern ( (let (($generated@@236 (type $generated@@234)))
($generated@@80 ($generated@@219 ($generated@@220 $generated@@236 $generated@@235)) $generated@@234)))
)))
(assert  (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@242 $generated@@243)) 16)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@239 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@241 ($generated@@239 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@239 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@240 (type $generated@@248))))
(= (type ($generated@@237 $generated@@248)) ($generated@@75 $generated@@249 $generated@@4)))
 :pattern ( ($generated@@237 $generated@@248))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= (type ($generated@@238 $generated@@250 $generated@@251)) ($generated@@239 $generated@@250 $generated@@251))
 :pattern ( ($generated@@238 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@T) ) (! (let (($generated@@254 (type $generated@@252)))
 (not ($generated@@0 ($generated@@80 ($generated@@237 ($generated@@238 $generated@@254 $generated@@253)) $generated@@252))))
 :pattern ( (let (($generated@@254 (type $generated@@252)))
($generated@@80 ($generated@@237 ($generated@@238 $generated@@254 $generated@@253)) $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@223 (type $generated@@255))))
(let (($generated@@257 ($generated@@222 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@221 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@220 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@80 ($generated@@219 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@219 $generated@@255))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@241 (type $generated@@259))))
(let (($generated@@261 ($generated@@240 (type $generated@@259))))
 (=> (= (type $generated@@259) ($generated@@239 $generated@@261 $generated@@260)) (or (= $generated@@259 ($generated@@238 $generated@@261 $generated@@260)) (exists (($generated@@262 T@U) ) (!  (and (= (type $generated@@262) $generated@@261) ($generated@@0 ($generated@@80 ($generated@@237 $generated@@259) $generated@@262)))
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
))))))
 :pattern ( ($generated@@237 $generated@@259))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@61)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@265) ($generated@@75 $generated@@206 $generated@@4)) (= (type $generated@@266) $generated@@61)) (= (type $generated@@267) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@265 ($generated@@263 $generated@@266) $generated@@267) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@206) ($generated@@0 ($generated@@80 $generated@@265 $generated@@268))) ($generated@@204 $generated@@268 $generated@@266 $generated@@267))
 :pattern ( ($generated@@80 $generated@@265 $generated@@268))
))))
 :pattern ( ($generated@@73 $generated@@265 ($generated@@263 $generated@@266) $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@61)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) ($generated@@75 $generated@@206 $generated@@4)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@271 ($generated@@269 $generated@@272) $generated@@273) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@206) ($generated@@0 ($generated@@80 $generated@@271 $generated@@274))) ($generated@@204 $generated@@274 $generated@@272 $generated@@273))
 :pattern ( ($generated@@80 $generated@@271 $generated@@274))
))))
 :pattern ( ($generated@@73 $generated@@271 ($generated@@269 $generated@@272) $generated@@273))
)))
(assert  (and (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@61)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)) (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@223 (type $generated@@279))))
(let (($generated@@281 ($generated@@222 (type $generated@@279))))
(= (type ($generated@@276 $generated@@279)) ($generated@@75 $generated@@281 $generated@@280))))
 :pattern ( ($generated@@276 $generated@@279))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) ($generated@@221 $generated@@206 $generated@@206)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@282 ($generated@@275 $generated@@283 $generated@@284) $generated@@285) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@206) ($generated@@0 ($generated@@80 ($generated@@219 $generated@@282) $generated@@286))) (and ($generated@@204 ($generated@@80 ($generated@@276 $generated@@282) $generated@@286) $generated@@284 $generated@@285) ($generated@@204 $generated@@286 $generated@@283 $generated@@285)))
 :pattern ( ($generated@@80 ($generated@@276 $generated@@282) $generated@@286))
 :pattern ( ($generated@@80 ($generated@@219 $generated@@282) $generated@@286))
))))
 :pattern ( ($generated@@73 $generated@@282 ($generated@@275 $generated@@283 $generated@@284) $generated@@285))
)))
(assert  (and (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@287 $generated@@289 $generated@@290)) $generated@@61)
 :pattern ( ($generated@@287 $generated@@289 $generated@@290))
)) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@241 (type $generated@@291))))
(let (($generated@@293 ($generated@@240 (type $generated@@291))))
(= (type ($generated@@288 $generated@@291)) ($generated@@75 $generated@@293 $generated@@292))))
 :pattern ( ($generated@@288 $generated@@291))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@294) ($generated@@239 $generated@@206 $generated@@206)) (= (type $generated@@295) $generated@@61)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@294 ($generated@@287 $generated@@295 $generated@@296) $generated@@297) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@206) ($generated@@0 ($generated@@80 ($generated@@237 $generated@@294) $generated@@298))) (and ($generated@@204 ($generated@@80 ($generated@@288 $generated@@294) $generated@@298) $generated@@296 $generated@@297) ($generated@@204 $generated@@298 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@80 ($generated@@288 $generated@@294) $generated@@298))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@294) $generated@@298))
))))
 :pattern ( ($generated@@73 $generated@@294 ($generated@@287 $generated@@295 $generated@@296) $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@300) ($generated@@75 $generated@@76 $generated@@77))) (= (type $generated@@301) ($generated@@75 $generated@@76 $generated@@77))) (not (= $generated@@299 $generated@@301))) (and ($generated@@131 $generated@@299 $generated@@300) ($generated@@131 $generated@@300 $generated@@301))) ($generated@@131 $generated@@299 $generated@@301))
 :pattern ( ($generated@@131 $generated@@299 $generated@@300) ($generated@@131 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@75 $generated@@303 $generated@@4))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@241 (type $generated@@304))))
(let (($generated@@306 ($generated@@240 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@239 $generated@@306 $generated@@305)) (= (= $generated@@304 ($generated@@238 $generated@@306 $generated@@305)) (= ($generated@@237 $generated@@304) ($generated@@302 $generated@@306))))))
 :pattern ( ($generated@@237 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@199 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@198 $generated@@308)) (<= 0 ($generated@@197 $generated@@307))))
 :pattern ( ($generated@@197 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@275 $generated@@311 $generated@@312)) $generated@@311))
 :pattern ( ($generated@@275 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@275 $generated@@315 $generated@@316)) $generated@@316))
 :pattern ( ($generated@@275 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@67 ($generated@@275 $generated@@317 $generated@@318)) $generated@@58))
 :pattern ( ($generated@@275 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@61)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@319 ($generated@@287 $generated@@321 $generated@@322)) $generated@@321))
 :pattern ( ($generated@@287 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@287 $generated@@325 $generated@@326)) $generated@@326))
 :pattern ( ($generated@@287 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@67 ($generated@@287 $generated@@327 $generated@@328)) $generated@@59))
 :pattern ( ($generated@@287 $generated@@327 $generated@@328))
)))
(assert  (and (forall (($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@331)) $generated@@61)
 :pattern ( ($generated@@329 $generated@@331))
)) (forall (($generated@@332 T@U) ($generated@@333 Int) ) (! (let (($generated@@334 ($generated@@199 (type $generated@@332))))
(= (type ($generated@@330 $generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@330 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@198 $generated@@206)) (= (type $generated@@336) $generated@@61)) (= (type $generated@@337) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@335 ($generated@@329 $generated@@336) $generated@@337) (forall (($generated@@338 Int) ) (!  (=> (and (<= 0 $generated@@338) (< $generated@@338 ($generated@@197 $generated@@335))) ($generated@@204 ($generated@@330 $generated@@335 $generated@@338) $generated@@336 $generated@@337))
 :pattern ( ($generated@@330 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@73 $generated@@335 ($generated@@329 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@340 Int) ) (! (= ($generated@@339 ($generated@@74 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@74 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@263 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@263 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@263 $generated@@344)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@345 ($generated@@269 $generated@@347)) $generated@@347))
 :pattern ( ($generated@@269 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@67 ($generated@@269 $generated@@348)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@348))
)))
(assert  (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
)) (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@350 ($generated@@349 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@67 ($generated@@349 $generated@@354)) $generated@@56))
 :pattern ( ($generated@@349 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@355 ($generated@@329 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@329 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@329 $generated@@358)) $generated@@57))
 :pattern ( ($generated@@329 $generated@@358))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated@@359 $generated@@363 ($generated@@205 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@205 $generated@@362))
)))
(assert  (=> true (forall (($generated@@364 Int) ) (!  (=> true (= ($generated@@69 $generated@@364) ($generated@@71 ($generated@@70 2) $generated@@364)))
 :pattern ( ($generated@@69 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@80 ($generated@@302 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@80 ($generated@@302 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 Int) ($generated@@368 Int) ) (! (= ($generated@@71 $generated@@367 $generated@@368) (* $generated@@367 $generated@@368))
 :pattern ( ($generated@@71 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@75 $generated@@206 $generated@@2)) (= (type $generated@@370) $generated@@61)) (= (type $generated@@371) ($generated@@75 $generated@@76 $generated@@77))) (= ($generated@@73 $generated@@369 ($generated@@349 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@206) (< 0 ($generated ($generated@@80 $generated@@369 $generated@@372)))) ($generated@@204 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@80 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@73 $generated@@369 ($generated@@349 $generated@@370) $generated@@371))
)))
(assert  (=> true (forall (($generated@@373 Int) ) (!  (=> true true)
 :pattern ( ($generated@@69 $generated@@373))
))))
(assert (forall (($generated@@374 Int) ) (! (= ($generated@@205 ($generated@@8 ($generated@@70 $generated@@374))) ($generated@@192 ($generated@@205 ($generated@@8 $generated@@374))))
 :pattern ( ($generated@@205 ($generated@@8 ($generated@@70 $generated@@374))))
)))
(assert (forall (($generated@@375 T@U) ) (! (= ($generated@@205 ($generated@@192 $generated@@375)) ($generated@@192 ($generated@@205 $generated@@375)))
 :pattern ( ($generated@@205 ($generated@@192 $generated@@375)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@199 (type $generated@@376))))
 (=> (and (= (type $generated@@376) ($generated@@198 $generated@@377)) (= ($generated@@197 $generated@@376) 0)) (= $generated@@376 ($generated@@196 $generated@@377))))
 :pattern ( ($generated@@197 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@379) $generated@@2)) ($generated@@73 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@73 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@381) $generated@@3)) ($generated@@73 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@73 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@383) $generated@@4)) ($generated@@73 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@73 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 17))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@386) $generated@@384)) ($generated@@73 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@73 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@388) $generated@@206)) ($generated@@73 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@73 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 (Int) Bool)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () Int)
(assert  (and (and (and (= (type $generated@@390) ($generated@@75 $generated@@76 $generated@@77)) (= (type $generated@@393) ($generated@@75 $generated@@76 $generated@@77))) (= (type $generated@@397) $generated@@76)) (= (type $generated@@398) ($generated@@137 $generated@@76 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@400 true))
(let (($generated@@401  (=> ($generated@@73 ($generated@@8 $generated@@389) $generated@@46 $generated@@390) (=> (and ($generated@@391 $generated@@389) (forall (($generated@@402 Int) ) (! ($generated@@391 $generated@@402)
 :pattern ( ($generated@@69 $generated@@402))
))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@403 Int) ) (!  (=> true (= ($generated@@69 $generated@@403) ($generated@@71 ($generated@@70 2) $generated@@403)))
 :pattern ( ($generated@@69 $generated@@403))
))) (=> (forall (($generated@@404 Int) ) (!  (=> true (= ($generated@@69 $generated@@404) ($generated@@71 ($generated@@70 2) $generated@@404)))
 :pattern ( ($generated@@69 $generated@@404))
)) (=> (and ($generated@@392 $generated@@393) ($generated@@394 $generated@@393)) (=> (and (and (= $generated@@395 ($generated@@71 ($generated@@70 2) $generated@@396)) (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@76) (=> (and (not (= $generated@@405 $generated@@397)) ($generated@@0 ($generated@@82 ($generated@@80 $generated@@390 $generated@@405) $generated@@60))) (= ($generated@@80 $generated@@393 $generated@@405) ($generated@@80 $generated@@390 $generated@@405))))
 :pattern ( ($generated@@80 $generated@@393 $generated@@405))
))) (and ($generated@@131 $generated@@390 $generated@@393) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@395 ($generated@@71 ($generated@@70 2) $generated@@396))))))))))
(let (($generated@@406  (=> (= $generated@@398 ($generated@@136 $generated@@397 $generated@@390 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@401) (=> (= (ControlFlow 0 5) 4) $generated@@400)))))
(let (($generated@@407  (=> (and (and ($generated@@392 $generated@@390) ($generated@@394 $generated@@390)) (and (= 1 $generated@@399) (= (ControlFlow 0 6) 5))) $generated@@406)))
$generated@@407)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@369 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert (forall (($generated@@353 Int) ($generated@@354 Int) ) (! (= ($generated@@352 $generated@@353 $generated@@354) (mod $generated@@353 $generated@@354))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@356) $generated@@61)) (= (type $generated@@357) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@355 ($generated@@335 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@355 $generated@@358)))) ($generated@@201 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@76 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@69 $generated@@355 ($generated@@335 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@359))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@359))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@359))))
)))
(assert (forall (($generated@@360 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@360)) ($generated@@185 ($generated@@202 $generated@@360)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@360)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@196 (type $generated@@361))))
 (=> (and (= (type $generated@@361) ($generated@@195 $generated@@362)) (= ($generated@@194 $generated@@361) 0)) (= $generated@@361 ($generated@@193 $generated@@362))))
 :pattern ( ($generated@@194 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@364) $generated@@2)) ($generated@@69 $generated@@364 $generated@@46 $generated@@363))
 :pattern ( ($generated@@69 $generated@@364 $generated@@46 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@3)) ($generated@@69 $generated@@366 $generated@@47 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@47 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@4)) ($generated@@69 $generated@@368 $generated@@44 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@44 $generated@@367))
)))
(assert (= ($generated@@1 $generated@@369) 17))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@371) $generated@@369)) ($generated@@69 $generated@@371 $generated@@45 $generated@@370))
 :pattern ( ($generated@@69 $generated@@371 $generated@@45 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@203)) ($generated@@69 $generated@@373 $generated@@48 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@48 $generated@@372))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@374 () Bool)
(declare-fun $generated@@375 () Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 (T@U) Bool)
(declare-fun $generated@@384 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@380) $generated@@72)) (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@385  (=> (= (ControlFlow 0 2) (- 0 1)) (=> $generated@@374 (= $generated@@375 $generated@@376)))))
(let (($generated@@386  (=> (< $generated@@376 ($generated@@183 30)) (=> (and (= $generated@@377 (+ $generated@@376 3)) (not (= ($generated@@183 3) 0))) (=> (and (and (= ($generated@@352 $generated@@377 ($generated@@183 3)) ($generated@@183 0)) (= $generated@@374 false)) (and (= $generated@@375 $generated@@377) (= (ControlFlow 0 5) 2))) $generated@@385)))))
(let (($generated@@387  (=> (and (and (<= ($generated@@183 30) $generated@@376) (= $generated@@374 true)) (and (= $generated@@375 $generated@@376) (= (ControlFlow 0 4) 2))) $generated@@385)))
(let (($generated@@388  (=> (<= 68 $generated@@376) (and (=> (= (ControlFlow 0 6) 4) $generated@@387) (=> (= (ControlFlow 0 6) 5) $generated@@386)))))
(let (($generated@@389  (=> (< $generated@@376 68) (=> (and (and (= $generated@@378 ($generated@@183 70)) (= $generated@@374 true)) (and (= $generated@@375 $generated@@378) (= (ControlFlow 0 3) 2))) $generated@@385))))
(let (($generated@@390  (=> (= $generated@@379 ($generated@@128 $generated@@380 $generated@@381 $generated@@60 false)) (=> (and (and ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@381) ($generated@@191 $generated@@376)) (and ($generated@@191 $generated@@376) (= $generated@@382 ($generated@@190 $generated@@376)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@183 0) $generated@@382)) (=> (<= ($generated@@183 0) $generated@@382) (and (=> (= (ControlFlow 0 7) 3) $generated@@389) (=> (= (ControlFlow 0 7) 6) $generated@@388))))))))
(let (($generated@@391  (=> (and (and ($generated@@383 $generated@@381) ($generated@@384 $generated@@381)) (and (= 1 $generated@@189) (= (ControlFlow 0 9) 7))) $generated@@390)))
$generated@@391))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
