(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Bool)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@145)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@151 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@151 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@224 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@251 $generated@@526) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@526) (= ($generated@@525 $generated@@526 ($generated@@243 2)) ($generated@@243 0))))
 :pattern ( ($generated@@250 $generated@@526))
))))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@525 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@274 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@254 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@274 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@274 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@274 $generated@@558)))
 :pattern ( ($generated@@274 ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@269 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@268 $generated@@560)) (= ($generated@@267 $generated@@559) 0)) (= $generated@@559 ($generated@@266 $generated@@560))))
 :pattern ( ($generated@@267 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@279 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@565)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@565)) (= ($generated@@243 ($generated@@525 $generated@@565 ($generated@@243 2))) ($generated@@243 0))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@565)))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@428)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@224 ($generated@@471 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@471 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@285 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@328 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@359 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@303 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@339 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@370 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@428) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@598  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 2) 0)))))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@596 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@599) (=> (= (ControlFlow 0 4) 3) $generated@@598)))))
(let (($generated@@601  (=> (and (and ($generated@@253 $generated@@595) ($generated@@597 $generated@@595)) (and (= 0 $generated@@249) (= (ControlFlow 0 5) 4))) $generated@@600)))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (Real) Real)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 (Int) Bool)
(declare-fun $generated@@241 (Int) Bool)
(declare-fun $generated@@243 (Real) Bool)
(declare-fun $generated@@244 (Real) Bool)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@T) T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@465 (T@U Int) T@U)
(declare-fun $generated@@474 (T@U) Int)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (Int Int) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 Real) ) (! (= ($generated@@233 $generated@@234) $generated@@234)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@235 $generated@@238) $generated@@238)
 :pattern ( ($generated@@235 $generated@@238))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@242 Int) ) (!  (=> (or ($generated@@241 $generated@@242) (not (= 0 $generated@@239))) true)
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@245 Real) ) (!  (=> (or ($generated@@244 $generated@@245) (not (= 0 $generated@@239))) true)
 :pattern ( ($generated@@243 $generated@@245))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@211 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@134 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@145) (= (type $generated@@258) $generated@@145)) (= $generated@@256 ($generated@@211 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@145)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@64) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@74 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@76 $generated@@274 $generated@@2))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@79 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@76 $generated@@276 $generated@@2)) (and (= (= ($generated@@272 $generated@@275) 0) (= $generated@@275 ($generated@@273 $generated@@276))) (=> (not (= ($generated@@272 $generated@@275) 0)) (exists (($generated@@277 T@U) ) (!  (and (= (type $generated@@277) $generated@@276) (< 0 ($generated ($generated@@81 $generated@@275 $generated@@277))))
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
))))))
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 18)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@76 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@81 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@81 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@79 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@76 $generated@@315 $generated@@2)) (= ($generated@@151 $generated@@314) (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@315) (and (<= 0 ($generated ($generated@@81 $generated@@314 $generated@@316))) (<= ($generated ($generated@@81 $generated@@314 $generated@@316)) ($generated@@272 $generated@@314))))
 :pattern ( ($generated@@81 $generated@@314 $generated@@316))
)))))
 :pattern ( ($generated@@151 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@282 (type $generated@@317))))
(let (($generated@@319 ($generated@@281 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@280 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@279 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@278 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@278 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@282 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@282 (type $generated@@324))))
(let (($generated@@326 ($generated@@281 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@280 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@279 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@300 (type $generated@@328))))
(let (($generated@@330 ($generated@@299 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@298 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@297 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@296 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@300 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@340) $generated@@64)) (= ($generated@@132 $generated@@339 ($generated@@150 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@339 $generated@@341)))) ($generated@@212 $generated@@341 $generated@@340))
 :pattern ( ($generated@@81 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@132 $generated@@339 ($generated@@150 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@221 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@247 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@221 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@346 ($generated@@226 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) ($generated@@0 ($generated@@81 $generated@@346 $generated@@349))) ($generated@@247 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@74 $generated@@346 ($generated@@226 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@81 ($generated@@273 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@81 ($generated@@273 $generated@@351) $generated@@350)))
)))
(assert  (and (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@352 $generated@@355)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@355))
)) (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@353 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@353 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@282 (type $generated@@358))))
(let (($generated@@360 ($generated@@281 (type $generated@@358))))
(= (type ($generated@@354 $generated@@358)) ($generated@@76 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@354 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@280 $generated@@145 $generated@@145)) (= (type $generated@@362) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@81 ($generated@@278 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362)))) (= ($generated@@81 ($generated@@354 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@362))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@300 (type $generated@@366))))
(let (($generated@@368 ($generated@@299 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@364 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@281 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@280 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@278 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@299 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@298 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@64)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@280 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@278 $generated@@384) $generated@@388))) (and ($generated@@247 ($generated@@81 ($generated@@354 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@247 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@392) $generated@@396))) (and ($generated@@247 ($generated@@81 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@247 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@397 Real) ) (!  (=> (or ($generated@@244 $generated@@397) (not (= 0 $generated@@239))) (= ($generated@@243 $generated@@397) (<= ($generated@@233 0.0) $generated@@397)))
 :pattern ( ($generated@@243 $generated@@397))
))))
(assert (forall (($generated@@399 T@T) ) (! (= (type ($generated@@398 $generated@@399)) ($generated@@76 $generated@@399 $generated@@4))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@300 (type $generated@@400))))
(let (($generated@@402 ($generated@@299 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@298 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@297 $generated@@402 $generated@@401)) (= ($generated@@296 $generated@@400) ($generated@@398 $generated@@402))))))
 :pattern ( ($generated@@296 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@300 (type $generated@@403))))
(let (($generated@@405 ($generated@@299 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@298 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@297 $generated@@405 $generated@@404)) (= ($generated@@332 $generated@@403) ($generated@@398 $generated@@404))))))
 :pattern ( ($generated@@332 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@300 (type $generated@@406))))
(let (($generated@@408 ($generated@@299 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@298 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@297 $generated@@408 $generated@@407)) (= ($generated@@363 $generated@@406) ($generated@@398 $generated@@145))))))
 :pattern ( ($generated@@363 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@282 (type $generated@@409))))
(let (($generated@@411 ($generated@@281 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@280 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@279 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (and (and (= (type $generated@@412) $generated@@145) (= (type $generated@@413) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@409) ($generated@@267 ($generated@@211 $generated@@412 $generated@@413)))))
 :no-pattern (type $generated@@412)
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@352 $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@300 (type $generated@@414))))
(let (($generated@@416 ($generated@@299 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@298 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@297 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@145) (= (type $generated@@418) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@414) ($generated@@267 ($generated@@211 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@363 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@46)) (and (= ($generated@@267 ($generated@@353 $generated@@2 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@353 $generated@@2 $generated@@419) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@46))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@212 $generated@@420 $generated@@47)) (and (= ($generated@@267 ($generated@@353 $generated@@3 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@353 $generated@@3 $generated@@420) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@420 $generated@@47))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@44)) (and (= ($generated@@267 ($generated@@353 $generated@@4 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@353 $generated@@4 $generated@@421) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@422) 20))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@145) ($generated@@212 $generated@@423 $generated@@45)) (and (= ($generated@@267 ($generated@@353 $generated@@422 $generated@@423)) $generated@@423) ($generated@@132 ($generated@@353 $generated@@422 $generated@@423) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@423 $generated@@45))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@64) (= ($generated@@212 ($generated@@267 $generated@@424) $generated@@425) ($generated@@132 $generated@@424 $generated@@425)))
 :pattern ( ($generated@@212 ($generated@@267 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@79 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@76 $generated@@427 $generated@@2)) (<= 0 ($generated@@272 $generated@@426))))
 :pattern ( ($generated@@272 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@262 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@261 $generated@@429)) (<= 0 ($generated@@260 $generated@@428))))
 :pattern ( ($generated@@260 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@381 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@381 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@381 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@381 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@381 $generated@@438 $generated@@439)) $generated@@58))
 :pattern ( ($generated@@381 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@389 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@389 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@389 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@389 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@448 $generated@@449)) $generated@@59))
 :pattern ( ($generated@@389 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@253 ($generated@@211 $generated@@450 $generated@@451)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@135 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@135 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@135 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@135 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@211 $generated@@462 $generated@@463))
)))
(assert  (and (forall (($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@466))
)) (forall (($generated@@467 T@U) ($generated@@468 Int) ) (! (let (($generated@@469 ($generated@@262 (type $generated@@467))))
(= (type ($generated@@465 $generated@@467 $generated@@468)) $generated@@469))
 :pattern ( ($generated@@465 $generated@@467 $generated@@468))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@261 $generated@@145)) (= (type $generated@@471) $generated@@64)) (= (type $generated@@472) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472) (forall (($generated@@473 Int) ) (!  (=> (and (<= 0 $generated@@473) (< $generated@@473 ($generated@@260 $generated@@470))) ($generated@@247 ($generated@@465 $generated@@470 $generated@@473) $generated@@471 $generated@@472))
 :pattern ( ($generated@@465 $generated@@470 $generated@@473))
))))
 :pattern ( ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 Int) ) (! (= ($generated@@474 ($generated@@75 $generated@@475)) $generated@@475)
 :pattern ( ($generated@@75 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@221 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@221 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@479)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@226 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@226 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@483)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@150 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@150 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@487)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@464 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@464 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@464 $generated@@491)) $generated@@57))
 :pattern ( ($generated@@464 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(= ($generated@@353 $generated@@493 ($generated@@267 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@267 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@280 $generated@@145 $generated@@145)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= ($generated@@132 $generated@@494 ($generated@@381 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@278 $generated@@494) $generated@@497))) (and ($generated@@212 ($generated@@81 ($generated@@354 $generated@@494) $generated@@497) $generated@@496) ($generated@@212 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@494) $generated@@497))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@132 $generated@@494 ($generated@@381 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@132 $generated@@498 ($generated@@389 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@498) $generated@@501))) (and ($generated@@212 ($generated@@81 ($generated@@364 $generated@@498) $generated@@501) $generated@@500) ($generated@@212 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@132 $generated@@498 ($generated@@389 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@211 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@211 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@212 $generated@@508 ($generated@@381 $generated@@509 $generated@@510))) (and (= ($generated@@267 ($generated@@353 ($generated@@280 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@353 ($generated@@280 $generated@@145 $generated@@145) $generated@@508) ($generated@@381 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@212 $generated@@508 ($generated@@381 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@389 $generated@@512 $generated@@513))) (and (= ($generated@@267 ($generated@@353 ($generated@@298 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@353 ($generated@@298 $generated@@145 $generated@@145) $generated@@511) ($generated@@389 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@389 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@145)) ($generated@@212 $generated@@516 ($generated@@135 $generated@@514 $generated@@515))) (and (= ($generated@@267 ($generated@@353 $generated@@136 $generated@@516)) $generated@@516) ($generated@@132 ($generated@@353 $generated@@136 $generated@@516) ($generated@@135 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@516 ($generated@@135 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@81 ($generated@@398 $generated@@518) $generated@@517)))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@520 Int) ) (!  (=> (or ($generated@@241 $generated@@520) (not (= 0 $generated@@239))) (= ($generated@@240 $generated@@520) (= ($generated@@519 $generated@@520 ($generated@@231 2)) ($generated@@231 0))))
 :pattern ( ($generated@@240 $generated@@520))
))))
(assert (forall (($generated@@521 Int) ($generated@@522 Int) ) (! (= ($generated@@519 $generated@@521 $generated@@522) (mod $generated@@521 $generated@@522))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@135 $generated@@525 $generated@@526)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@502 ($generated@@267 $generated@@527)) ($generated@@503 $generated@@527)))
 :pattern ( ($generated@@502 ($generated@@267 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@145) ($generated@@212 $generated@@528 ($generated@@75 0))) (and (= ($generated@@267 ($generated@@353 $generated@@2 $generated@@528)) $generated@@528) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@528) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@75 0)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@221 $generated@@530))) (and (= ($generated@@267 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@221 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@221 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@226 $generated@@532))) (and (= ($generated@@267 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@531) ($generated@@226 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@226 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@150 $generated@@534))) (and (= ($generated@@267 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@533) ($generated@@150 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@150 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@212 $generated@@535 ($generated@@464 $generated@@536))) (and (= ($generated@@267 ($generated@@353 ($generated@@261 $generated@@145) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@353 ($generated@@261 $generated@@145) $generated@@535) ($generated@@464 $generated@@536))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@464 $generated@@536)))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@537 Real) ) (!  (=> (or ($generated@@244 ($generated@@233 $generated@@537)) (not (= 0 $generated@@239))) (= ($generated@@243 ($generated@@233 $generated@@537)) (<= ($generated@@233 0.0) ($generated@@233 $generated@@537))))
 :weight 3
 :pattern ( ($generated@@243 ($generated@@233 $generated@@537)))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@247 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@247 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@247 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (= ($generated@@211 ($generated@@235 $generated@@550) ($generated@@235 $generated@@551)) ($generated@@235 ($generated@@211 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@211 ($generated@@235 $generated@@550) ($generated@@235 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@231 $generated@@552))) ($generated@@235 ($generated@@267 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@231 $generated@@552))))
)))
(assert (forall (($generated@@553 Real) ) (! (= ($generated@@267 ($generated@@9 ($generated@@233 $generated@@553))) ($generated@@235 ($generated@@267 ($generated@@9 $generated@@553))))
 :pattern ( ($generated@@267 ($generated@@9 ($generated@@233 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@267 ($generated@@235 $generated@@554)) ($generated@@235 ($generated@@267 $generated@@554)))
 :pattern ( ($generated@@267 ($generated@@235 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@262 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@261 $generated@@556)) (= ($generated@@260 $generated@@555) 0)) (= $generated@@555 ($generated@@259 $generated@@556))))
 :pattern ( ($generated@@260 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@272 ($generated@@82 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@272 $generated@@557) ($generated ($generated@@81 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@272 ($generated@@82 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert  (=> (<= 0 $generated@@239) (forall (($generated@@561 Int) ) (!  (=> (or ($generated@@241 ($generated@@231 $generated@@561)) (not (= 0 $generated@@239))) (= ($generated@@240 ($generated@@231 $generated@@561)) (= ($generated@@231 ($generated@@519 $generated@@561 ($generated@@231 2))) ($generated@@231 0))))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@231 $generated@@561)))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@2)) ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@3)) ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@4)) ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@422)) ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@145)) ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@261 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= ($generated@@132 $generated@@572 ($generated@@464 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@260 $generated@@572))) ($generated@@212 ($generated@@465 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@465 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@464 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@261 $generated@@145)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@260 $generated@@576))) (< ($generated@@503 ($generated@@353 $generated@@136 ($generated@@465 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@503 ($generated@@353 $generated@@136 ($generated@@465 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@280 $generated@@145 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@132 $generated@@578 ($generated@@381 $generated@@579 $generated@@580))) (and (and ($generated@@132 ($generated@@278 $generated@@578) ($generated@@221 $generated@@579)) ($generated@@132 ($generated@@321 $generated@@578) ($generated@@221 $generated@@580))) ($generated@@132 ($generated@@352 $generated@@578) ($generated@@221 ($generated@@135 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@381 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@132 $generated@@581 ($generated@@389 $generated@@582 $generated@@583))) (and (and ($generated@@132 ($generated@@296 $generated@@581) ($generated@@226 $generated@@582)) ($generated@@132 ($generated@@332 $generated@@581) ($generated@@226 $generated@@583))) ($generated@@132 ($generated@@363 $generated@@581) ($generated@@226 ($generated@@135 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@132 $generated@@581 ($generated@@389 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@132 $generated@@584 $generated@@46))
 :pattern ( ($generated@@132 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@132 $generated@@585 $generated@@47))
 :pattern ( ($generated@@132 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@132 $generated@@586 $generated@@44))
 :pattern ( ($generated@@132 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@422) ($generated@@132 $generated@@587 $generated@@45))
 :pattern ( ($generated@@132 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@145) ($generated@@132 $generated@@588 $generated@@48))
 :pattern ( ($generated@@132 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () Real)
(declare-fun $generated@@590 () Real)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Real)
(declare-fun $generated@@593 () Real)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Real)
(declare-fun $generated@@596 () Real)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Real)
(declare-fun $generated@@600 () Real)
(declare-fun $generated@@601 () Real)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Real)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Real)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(assert  (and (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@608) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@611  (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= ($generated@@233 (- 0.0 2.0)) $generated@@589)) (=> (<= ($generated@@233 (- 0.0 2.0)) $generated@@589) (=> (= (ControlFlow 0 6) (- 0 5)) (= $generated@@589 $generated@@590))))))
(let (($generated@@612  (=> (not ($generated@@240 $generated@@591)) (=> (and (= $generated@@589 $generated@@592) (= (ControlFlow 0 9) 6)) $generated@@611))))
(let (($generated@@613  (=> (and (and ($generated@@240 $generated@@591) (= $generated@@593 ($generated@@233 18.0))) (and (= $generated@@589 $generated@@593) (= (ControlFlow 0 8) 6))) $generated@@611)))
(let (($generated@@614  (=> ($generated@@74 ($generated@@8 $generated@@591) $generated@@46 $generated@@594) (=> (and ($generated@@241 $generated@@591) ($generated@@241 $generated@@591)) (and (=> (= (ControlFlow 0 10) 8) $generated@@613) (=> (= (ControlFlow 0 10) 9) $generated@@612))))))
(let (($generated@@615  (=> ($generated@@74 ($generated@@9 $generated@@595) $generated@@47 $generated@@594) (=> (and ($generated@@244 $generated@@595) ($generated@@244 $generated@@595)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (and ($generated@@132 ($generated@@9 ($generated@@233 0.0)) $generated@@47) ($generated@@0 ($generated@@235 ($generated@@11 ($generated@@243 ($generated@@233 0.0)))))) (exists (($generated@@616 Real) ) ($generated@@243 $generated@@616)))) (=> (or (and ($generated@@132 ($generated@@9 ($generated@@233 0.0)) $generated@@47) ($generated@@0 ($generated@@235 ($generated@@11 ($generated@@243 ($generated@@233 0.0)))))) (exists (($generated@@617 Real) ) ($generated@@243 $generated@@617))) (=> (and (and ($generated@@243 $generated@@596) (= $generated@@592 $generated@@596)) (and (= $generated@@591 $generated@@597) (= (ControlFlow 0 15) 10))) $generated@@614)))))))
(let (($generated@@618  (=> (and (and ($generated@@240 $generated@@598) (= $generated@@592 $generated@@599)) (and (= $generated@@591 $generated@@598) (= (ControlFlow 0 14) 10))) $generated@@614)))
(let (($generated@@619  (=> (and (and ($generated@@243 $generated@@600) (= $generated@@592 $generated@@600)) (and (= $generated@@591 $generated@@597) (= (ControlFlow 0 13) 10))) $generated@@614)))
(let (($generated@@620  (=> (and (and (= $generated@@601 (+ $generated@@599 (- 0.0 $generated@@599))) (= $generated@@592 $generated@@601)) (and (= $generated@@591 $generated@@597) (= (ControlFlow 0 12) 10))) $generated@@614)))
(let (($generated@@621  (=> (and ($generated@@240 $generated@@602) (= $generated@@603 ($generated@@231 4))) (=> (and (and (= $generated@@604 ($generated@@233 18.0)) (= $generated@@592 $generated@@604)) (and (= $generated@@591 $generated@@603) (= (ControlFlow 0 11) 10))) $generated@@614))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (not (exists (($generated@@624 Int) ) ($generated@@240 $generated@@624))) (and (=> (= (ControlFlow 0 17) 15) $generated@@615) (=> (= (ControlFlow 0 17) 4) $generated@@622)))))
(let (($generated@@625  (=> ($generated@@74 ($generated@@8 $generated@@605) $generated@@46 $generated@@594) (=> (and ($generated@@241 $generated@@605) (forall (($generated@@626 Int) ) ($generated@@241 $generated@@626))) (and (=> (= (ControlFlow 0 18) 14) $generated@@618) (=> (= (ControlFlow 0 18) 17) $generated@@623))))))
(let (($generated@@627 true))
(let (($generated@@628  (=> (not (exists (($generated@@629 Real) ) ($generated@@243 $generated@@629))) (and (=> (= (ControlFlow 0 19) 18) $generated@@625) (=> (= (ControlFlow 0 19) 3) $generated@@627)))))
(let (($generated@@630  (=> ($generated@@74 ($generated@@9 $generated@@606) $generated@@47 $generated@@594) (=> (and ($generated@@244 $generated@@606) (forall (($generated@@631 Real) ) ($generated@@244 $generated@@631))) (and (=> (= (ControlFlow 0 20) 13) $generated@@619) (=> (= (ControlFlow 0 20) 19) $generated@@628))))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (not (exists (($generated@@634 Int) ) ($generated@@240 $generated@@634))) (and (and (=> (= (ControlFlow 0 21) 12) $generated@@620) (=> (= (ControlFlow 0 21) 20) $generated@@630)) (=> (= (ControlFlow 0 21) 2) $generated@@632)))))
(let (($generated@@635  (=> ($generated@@74 ($generated@@8 $generated@@607) $generated@@46 $generated@@594) (=> (and ($generated@@241 $generated@@607) (forall (($generated@@636 Int) ) ($generated@@241 $generated@@636))) (and (=> (= (ControlFlow 0 22) 11) $generated@@621) (=> (= (ControlFlow 0 22) 21) $generated@@633))))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (= $generated@@608 ($generated@@156 $generated@@609 $generated@@594 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 22) $generated@@635) (=> (= (ControlFlow 0 23) 1) $generated@@637)))))
(let (($generated@@639  (=> (and (and ($generated@@246 $generated@@594) ($generated@@610 $generated@@594)) (and (= 1 $generated@@239) (= (ControlFlow 0 24) 23))) $generated@@638)))
$generated@@639))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@191 $generated@@353) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@353) (= ($generated@@352 $generated@@353 ($generated@@183 2)) ($generated@@183 0))))
 :pattern ( ($generated@@190 $generated@@353))
))))
(assert (forall (($generated@@354 Int) ($generated@@355 Int) ) (! (= ($generated@@352 $generated@@354 $generated@@355) (mod $generated@@354 $generated@@355))
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@356 $generated@@359)))) ($generated@@201 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@76 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@360))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@361)) ($generated@@185 ($generated@@202 $generated@@361)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@196 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@195 $generated@@363)) (= ($generated@@194 $generated@@362) 0)) (= $generated@@362 ($generated@@193 $generated@@363))))
 :pattern ( ($generated@@194 $generated@@362))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@364)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@364)) (= ($generated@@183 ($generated@@352 $generated@@364 ($generated@@183 2))) ($generated@@183 0))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@203)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () Int)
(declare-fun $generated@@381 () Int)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 () Int)
(declare-fun $generated@@384 () Int)
(declare-fun $generated@@385 () Int)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 (T@U) Bool)
(declare-fun $generated@@390 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@387) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@388) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@391  (=> (= (ControlFlow 0 3) (- 0 2)) (=> (< $generated@@376 0) (<= $generated@@377 $generated@@378)))))
(let (($generated@@392  (=> (and (<= 0 $generated@@376) (= (ControlFlow 0 5) 3)) $generated@@391)))
(let (($generated@@393  (=> (and (< $generated@@376 0) (= (ControlFlow 0 4) 3)) $generated@@391)))
(let (($generated@@394  (=> (and ($generated@@191 $generated@@378) (=> ($generated@@190 $generated@@378) ($generated@@191 $generated@@378))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@191 $generated@@378) (or ($generated@@190 $generated@@378) (= ($generated@@352 $generated@@378 ($generated@@183 2)) ($generated@@183 0))))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not ($generated@@190 $generated@@378))) (=> (and ($generated@@190 $generated@@378) (not ($generated@@190 $generated@@378))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@0 ($generated@@185 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@185 ($generated@@11 false))) (and (=> (= (ControlFlow 0 7) 4) $generated@@393) (=> (= (ControlFlow 0 7) 5) $generated@@392))))))))))
(let (($generated@@395  (=> (and (not ($generated@@190 $generated@@378)) (= (ControlFlow 0 12) 7)) $generated@@394)))
(let (($generated@@396  (=> (and (and ($generated@@190 $generated@@378) ($generated@@69 ($generated@@8 $generated@@378) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@378) (= (ControlFlow 0 11) 7))) $generated@@394)))
(let (($generated@@397  (=> (and (and (< $generated@@376 0) (< $generated@@378 $generated@@377)) (and ($generated@@69 ($generated@@8 $generated@@378) $generated@@46 $generated@@379) ($generated@@191 $generated@@378))) (and (=> (= (ControlFlow 0 13) 11) $generated@@396) (=> (= (ControlFlow 0 13) 12) $generated@@395)))))
(let (($generated@@398  (=> (not (and (< $generated@@376 0) (< $generated@@378 $generated@@377))) (and (=> (= (ControlFlow 0 6) 4) $generated@@393) (=> (= (ControlFlow 0 6) 5) $generated@@392)))))
(let (($generated@@399  (and (=> (= (ControlFlow 0 14) 13) $generated@@397) (=> (= (ControlFlow 0 14) 6) $generated@@398))))
(let (($generated@@400  (=> (and (<= 0 $generated@@376) (= (ControlFlow 0 16) 14)) $generated@@399)))
(let (($generated@@401  (=> (and (< $generated@@376 0) (= (ControlFlow 0 15) 14)) $generated@@399)))
(let (($generated@@402  (=> (not ($generated@@190 $generated@@380)) (=> (and (= $generated@@381 ($generated@@183 (- 0 100))) (= $generated@@376 $generated@@381)) (and (=> (= (ControlFlow 0 21) 15) $generated@@401) (=> (= (ControlFlow 0 21) 16) $generated@@400))))))
(let (($generated@@403  (=> ($generated@@190 $generated@@380) (=> (and (= $generated@@382 ($generated@@183 8)) (= $generated@@376 $generated@@382)) (and (=> (= (ControlFlow 0 20) 15) $generated@@401) (=> (= (ControlFlow 0 20) 16) $generated@@400))))))
(let (($generated@@404  (=> ($generated@@69 ($generated@@8 $generated@@380) $generated@@46 $generated@@379) (=> (and ($generated@@191 $generated@@380) ($generated@@191 $generated@@380)) (and (=> (= (ControlFlow 0 22) 20) $generated@@403) (=> (= (ControlFlow 0 22) 21) $generated@@402))))))
(let (($generated@@405  (=> (and (= $generated@@383 (- $generated@@380 $generated@@378)) (= $generated@@376 $generated@@383)) (and (=> (= (ControlFlow 0 19) 15) $generated@@401) (=> (= (ControlFlow 0 19) 16) $generated@@400)))))
(let (($generated@@406  (=> (and (= $generated@@384 (- $generated@@377 $generated@@380)) (= $generated@@376 $generated@@384)) (and (=> (= (ControlFlow 0 18) 15) $generated@@401) (=> (= (ControlFlow 0 18) 16) $generated@@400)))))
(let (($generated@@407  (=> (and (and (<= $generated@@378 $generated@@380) (< $generated@@380 $generated@@377)) ($generated@@190 $generated@@380)) (and (and (=> (= (ControlFlow 0 23) 18) $generated@@406) (=> (= (ControlFlow 0 23) 19) $generated@@405)) (=> (= (ControlFlow 0 23) 22) $generated@@404)))))
(let (($generated@@408  (=> (and (not (exists (($generated@@409 Int) )  (and (and (<= $generated@@378 $generated@@409) (< $generated@@409 $generated@@377)) ($generated@@190 $generated@@409)))) (= $generated@@376 $generated@@385)) (and (=> (= (ControlFlow 0 17) 15) $generated@@401) (=> (= (ControlFlow 0 17) 16) $generated@@400)))))
(let (($generated@@410  (=> (forall (($generated@@411 Int) )  (=> (<= $generated@@378 $generated@@411) (=> (< $generated@@411 $generated@@377) ($generated@@191 $generated@@411)))) (and (=> (= (ControlFlow 0 24) 23) $generated@@407) (=> (= (ControlFlow 0 24) 17) $generated@@408)))))
(let (($generated@@412  (=> (and (not (and (<= $generated@@378 $generated@@386) (< $generated@@386 $generated@@377))) (= (ControlFlow 0 26) 24)) $generated@@410)))
(let (($generated@@413  (=> (and (and (and (<= $generated@@378 $generated@@386) (< $generated@@386 $generated@@377)) ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@386) (= (ControlFlow 0 25) 24))) $generated@@410)))
(let (($generated@@414  (=> (< $generated@@386 $generated@@378) (and (=> (= (ControlFlow 0 28) 25) $generated@@413) (=> (= (ControlFlow 0 28) 26) $generated@@412)))))
(let (($generated@@415  (=> (<= $generated@@378 $generated@@386) (and (=> (= (ControlFlow 0 27) 25) $generated@@413) (=> (= (ControlFlow 0 27) 26) $generated@@412)))))
(let (($generated@@416  (and (=> (= (ControlFlow 0 29) 27) $generated@@415) (=> (= (ControlFlow 0 29) 28) $generated@@414))))
(let (($generated@@417 true))
(let (($generated@@418  (=> (and (= $generated@@387 ($generated@@128 $generated@@388 $generated@@379 $generated@@60 false)) (= $generated@@385 ($generated@@183 (- 0 1)))) (and (=> (= (ControlFlow 0 30) 29) $generated@@416) (=> (= (ControlFlow 0 30) 1) $generated@@417)))))
(let (($generated@@419  (=> (and (and (and ($generated@@389 $generated@@379) ($generated@@390 $generated@@379)) (= 1 $generated@@189)) (and (forall (($generated@@420 Int) ) (!  (=> true (=> (and (<= $generated@@378 $generated@@420) (< $generated@@420 $generated@@377)) ($generated@@190 $generated@@420)))
 :pattern ( ($generated@@190 $generated@@420))
)) (= (ControlFlow 0 31) 30))) $generated@@418)))
$generated@@419))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Real) Int)
(declare-fun $generated@@185 (Int) Int)
(declare-fun $generated@@187 (Real) Real)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 (Int) Bool)
(declare-fun $generated@@195 (Int) Bool)
(declare-fun $generated@@197 (Real) Bool)
(declare-fun $generated@@198 (Real) Bool)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@U Int) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@360 (Int Int) Int)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Real) ) (! (= ($generated@@183 $generated@@184) (to_int $generated@@184))
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@185 $generated@@186) $generated@@186)
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 Real) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@196 Int) ) (!  (=> (or ($generated@@195 $generated@@196) (not (= 0 $generated@@193))) true)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@199 Real) ) (!  (=> (or ($generated@@198 $generated@@199) (not (= 0 $generated@@193))) true)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 13)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 14) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 15)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 16)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@295 Real) ) (!  (=> (or ($generated@@198 $generated@@295) (not (= 0 $generated@@193))) (= ($generated@@197 $generated@@295) (<= ($generated@@187 0.0) $generated@@295)))
 :pattern ( ($generated@@197 $generated@@295))
))))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@71 $generated@@297 $generated@@4))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@237 (type $generated@@298))))
(let (($generated@@300 ($generated@@236 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@235 $generated@@300 $generated@@299)) (= (= $generated@@298 ($generated@@234 $generated@@300 $generated@@299)) (= ($generated@@233 $generated@@298) ($generated@@296 $generated@@300))))))
 :pattern ( ($generated@@233 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@203 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@202 $generated@@302)) (<= 0 ($generated@@201 $generated@@301))))
 :pattern ( ($generated@@201 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@271 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@271 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@271 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@271 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@283 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@283 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@283 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@283 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@325))
)) (forall (($generated@@326 T@U) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@203 (type $generated@@326))))
(= (type ($generated@@324 $generated@@326 $generated@@327)) $generated@@328))
 :pattern ( ($generated@@324 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) ($generated@@202 $generated@@210)) (= (type $generated@@330) $generated@@61)) (= (type $generated@@331) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@329 ($generated@@323 $generated@@330) $generated@@331) (forall (($generated@@332 Int) ) (!  (=> (and (<= 0 $generated@@332) (< $generated@@332 ($generated@@201 $generated@@329))) ($generated@@208 ($generated@@324 $generated@@329 $generated@@332) $generated@@330 $generated@@331))
 :pattern ( ($generated@@324 $generated@@329 $generated@@332))
))))
 :pattern ( ($generated@@69 $generated@@329 ($generated@@323 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@334 Int) ) (! (= ($generated@@333 ($generated@@70 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@70 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (= (type ($generated@@335 $generated@@336)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@61) (= ($generated@@335 ($generated@@259 $generated@@337)) $generated@@337))
 :pattern ( ($generated@@259 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@338)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@265 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@265 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@342)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@345))
)) (forall (($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@344 ($generated@@343 $generated@@347)) $generated@@347))
 :pattern ( ($generated@@343 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@67 ($generated@@343 $generated@@348)) $generated@@56))
 :pattern ( ($generated@@343 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@349 ($generated@@323 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@323 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@323 $generated@@352)) $generated@@57))
 :pattern ( ($generated@@323 $generated@@352))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= ($generated@@353 $generated@@357 ($generated@@209 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@209 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
 (not ($generated@@0 ($generated@@76 ($generated@@296 $generated@@359) $generated@@358))))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@76 ($generated@@296 $generated@@359) $generated@@358)))
)))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@195 $generated@@361) (not (= 0 $generated@@193))) (= ($generated@@194 $generated@@361) (= ($generated@@360 $generated@@361 ($generated@@185 2)) ($generated@@185 0))))
 :pattern ( ($generated@@194 $generated@@361))
))))
(assert (forall (($generated@@362 Int) ($generated@@363 Int) ) (! (= ($generated@@360 $generated@@362 $generated@@363) (mod $generated@@362 $generated@@363))
 :pattern ( ($generated@@360 $generated@@362 $generated@@363))
)))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@364 Real) ) (!  (=> (or ($generated@@198 ($generated@@187 $generated@@364)) (not (= 0 $generated@@193))) (= ($generated@@197 ($generated@@187 $generated@@364)) (<= ($generated@@187 0.0) ($generated@@187 $generated@@364))))
 :weight 3
 :pattern ( ($generated@@197 ($generated@@187 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@366) $generated@@61)) (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@365 ($generated@@343 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@365 $generated@@368)))) ($generated@@208 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@76 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@69 $generated@@365 ($generated@@343 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@185 $generated@@369))) ($generated@@189 ($generated@@209 ($generated@@8 $generated@@369))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@185 $generated@@369))))
)))
(assert (forall (($generated@@370 Real) ) (! (= ($generated@@209 ($generated@@9 ($generated@@187 $generated@@370))) ($generated@@189 ($generated@@209 ($generated@@9 $generated@@370))))
 :pattern ( ($generated@@209 ($generated@@9 ($generated@@187 $generated@@370))))
)))
(assert (forall (($generated@@371 T@U) ) (! (= ($generated@@209 ($generated@@189 $generated@@371)) ($generated@@189 ($generated@@209 $generated@@371)))
 :pattern ( ($generated@@209 ($generated@@189 $generated@@371)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@203 (type $generated@@372))))
 (=> (and (= (type $generated@@372) ($generated@@202 $generated@@373)) (= ($generated@@201 $generated@@372) 0)) (= $generated@@372 ($generated@@200 $generated@@373))))
 :pattern ( ($generated@@201 $generated@@372))
)))
(assert  (=> (<= 0 $generated@@193) (forall (($generated@@374 Int) ) (!  (=> (or ($generated@@195 ($generated@@185 $generated@@374)) (not (= 0 $generated@@193))) (= ($generated@@194 ($generated@@185 $generated@@374)) (= ($generated@@185 ($generated@@360 $generated@@374 ($generated@@185 2))) ($generated@@185 0))))
 :weight 3
 :pattern ( ($generated@@194 ($generated@@185 $generated@@374)))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 17))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@210)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () Int)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () Real)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Real)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Real)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () Real)
(declare-fun $generated@@398 () Int)
(declare-fun $generated@@399 () Real)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () Real)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 () Real)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 () Int)
(declare-fun $generated@@406 () Real)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () Int)
(declare-fun $generated@@413 () Int)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 (T@U) Bool)
(assert  (and (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@414) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@415) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@418  (=> ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@387) (=> (and ($generated@@195 $generated@@386) ($generated@@195 $generated@@386)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@195 $generated@@386) (or ($generated@@194 $generated@@386) (= ($generated@@360 $generated@@386 ($generated@@185 2)) ($generated@@185 0))))) (=> ($generated@@194 $generated@@386) (=> (and ($generated@@69 ($generated@@8 $generated@@388) $generated@@46 $generated@@387) ($generated@@195 $generated@@388)) (=> (and (and ($generated@@195 $generated@@388) (= (ControlFlow 0 10) (- 0 9))) ($generated@@195 $generated@@388)) (or ($generated@@194 $generated@@388) (= ($generated@@360 $generated@@388 ($generated@@185 2)) ($generated@@185 0)))))))))))
(let (($generated@@419  (=> (forall (($generated@@420 Int) ($generated@@421 Real) )  (and ($generated@@195 $generated@@420) (=> ($generated@@194 $generated@@420) ($generated@@198 $generated@@421)))) (=> (and (and (and ($generated@@194 $generated@@389) ($generated@@197 $generated@@390)) (= $generated@@386 $generated@@389)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 27) 10))) $generated@@418))))
(let (($generated@@422  (=> (and (not ($generated@@194 $generated@@392)) (= (ControlFlow 0 29) 27)) $generated@@419)))
(let (($generated@@423  (=> (and (and ($generated@@194 $generated@@392) ($generated@@69 ($generated@@9 $generated@@393) $generated@@47 $generated@@387)) (and ($generated@@198 $generated@@393) (= (ControlFlow 0 28) 27))) $generated@@419)))
(let (($generated@@424  (=> (and ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@387) ($generated@@195 $generated@@392)) (and (=> (= (ControlFlow 0 30) 28) $generated@@423) (=> (= (ControlFlow 0 30) 29) $generated@@422)))))
(let (($generated@@425  (=> (forall (($generated@@426 Int) ($generated@@427 Real) )  (and ($generated@@195 $generated@@426) (=> ($generated@@194 $generated@@426) ($generated@@198 $generated@@427)))) (=> (and (and (and ($generated@@194 $generated@@394) ($generated@@197 $generated@@395)) (= $generated@@386 $generated@@394)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 23) 10))) $generated@@418))))
(let (($generated@@428  (=> (and (not ($generated@@194 $generated@@396)) (= (ControlFlow 0 25) 23)) $generated@@425)))
(let (($generated@@429  (=> (and (and ($generated@@194 $generated@@396) ($generated@@69 ($generated@@9 $generated@@397) $generated@@47 $generated@@387)) (and ($generated@@198 $generated@@397) (= (ControlFlow 0 24) 23))) $generated@@425)))
(let (($generated@@430  (=> (and ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@387) ($generated@@195 $generated@@396)) (and (=> (= (ControlFlow 0 26) 24) $generated@@429) (=> (= (ControlFlow 0 26) 25) $generated@@428)))))
(let (($generated@@431  (=> (forall (($generated@@432 Int) ($generated@@433 Real) )  (and ($generated@@195 $generated@@432) (=> ($generated@@194 $generated@@432) ($generated@@198 $generated@@433)))) (=> (and (and (and ($generated@@194 $generated@@398) ($generated@@197 $generated@@399)) (= $generated@@386 $generated@@398)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 19) 10))) $generated@@418))))
(let (($generated@@434  (=> (and (not ($generated@@194 $generated@@400)) (= (ControlFlow 0 21) 19)) $generated@@431)))
(let (($generated@@435  (=> (and (and ($generated@@194 $generated@@400) ($generated@@69 ($generated@@9 $generated@@401) $generated@@47 $generated@@387)) (and ($generated@@198 $generated@@401) (= (ControlFlow 0 20) 19))) $generated@@431)))
(let (($generated@@436  (=> (and ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@387) ($generated@@195 $generated@@400)) (and (=> (= (ControlFlow 0 22) 20) $generated@@435) (=> (= (ControlFlow 0 22) 21) $generated@@434)))))
(let (($generated@@437  (=> (forall (($generated@@438 Int) ($generated@@439 Real) )  (and ($generated@@195 $generated@@438) (=> ($generated@@194 $generated@@438) ($generated@@198 $generated@@439)))) (=> (and ($generated@@194 $generated@@402) ($generated@@197 $generated@@403)) (=> (and (and (= $generated@@404 ($generated@@183 $generated@@403)) (= $generated@@386 $generated@@402)) (and (= $generated@@388 $generated@@404) (= (ControlFlow 0 15) 10))) $generated@@418)))))
(let (($generated@@440  (=> (and (not ($generated@@194 $generated@@405)) (= (ControlFlow 0 17) 15)) $generated@@437)))
(let (($generated@@441  (=> (and (and ($generated@@194 $generated@@405) ($generated@@69 ($generated@@9 $generated@@406) $generated@@47 $generated@@387)) (and ($generated@@198 $generated@@406) (= (ControlFlow 0 16) 15))) $generated@@437)))
(let (($generated@@442  (=> (and ($generated@@69 ($generated@@8 $generated@@405) $generated@@46 $generated@@387) ($generated@@195 $generated@@405)) (and (=> (= (ControlFlow 0 18) 16) $generated@@441) (=> (= (ControlFlow 0 18) 17) $generated@@440)))))
(let (($generated@@443  (=> ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@387) (=> (and ($generated@@195 $generated@@407) (forall (($generated@@444 Int) ) ($generated@@195 $generated@@444))) (=> (and (and ($generated@@194 $generated@@408) (= $generated@@386 $generated@@408)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 14) 10))) $generated@@418)))))
(let (($generated@@445  (=> ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@387) (=> (and ($generated@@195 $generated@@409) (forall (($generated@@446 Int) ) ($generated@@195 $generated@@446))) (=> (and (and ($generated@@194 $generated@@410) (= $generated@@386 $generated@@410)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 13) 10))) $generated@@418)))))
(let (($generated@@447  (=> (and (and (< $generated@@411 $generated@@412) (= $generated@@386 $generated@@413)) (and (= $generated@@388 $generated@@391) (= (ControlFlow 0 12) 10))) $generated@@418)))
(let (($generated@@448 true))
(let (($generated@@449 true))
(let (($generated@@450 true))
(let (($generated@@451 true))
(let (($generated@@452 true))
(let (($generated@@453 true))
(let (($generated@@454  (=> (and (forall (($generated@@455 Int) ) ($generated@@195 $generated@@455)) (forall (($generated@@456 Int) ) ($generated@@195 $generated@@456))) (=> (and (and (forall (($generated@@457 Int) ($generated@@458 Real) )  (and ($generated@@195 $generated@@457) (=> ($generated@@194 $generated@@457) ($generated@@198 $generated@@458)))) (forall (($generated@@459 Int) ($generated@@460 Real) )  (and ($generated@@195 $generated@@459) (=> ($generated@@194 $generated@@459) ($generated@@198 $generated@@460))))) (and (forall (($generated@@461 Int) ($generated@@462 Real) )  (and ($generated@@195 $generated@@461) (=> ($generated@@194 $generated@@461) ($generated@@198 $generated@@462)))) (forall (($generated@@463 Int) ($generated@@464 Real) )  (and ($generated@@195 $generated@@463) (=> ($generated@@194 $generated@@463) ($generated@@198 $generated@@464)))))) (=> (and (and (and (and (and (and (and (not (exists (($generated@@465 Int) ) ($generated@@194 $generated@@465))) (not (exists (($generated@@466 Int) ) ($generated@@194 $generated@@466)))) (not (exists (($generated@@467 Int) ($generated@@468 Real) )  (and ($generated@@194 $generated@@467) ($generated@@197 $generated@@468))))) (not (exists (($generated@@469 Int) ($generated@@470 Real) )  (and ($generated@@194 $generated@@469) ($generated@@197 $generated@@470))))) (<= $generated@@412 $generated@@411)) (not (exists (($generated@@471 Int) ($generated@@472 Real) )  (and ($generated@@194 $generated@@471) ($generated@@197 $generated@@472))))) (not (exists (($generated@@473 Int) ($generated@@474 Real) )  (and ($generated@@194 $generated@@473) ($generated@@197 $generated@@474))))) (= (ControlFlow 0 2) (- 0 1))) false)))))
(let (($generated@@475  (=> (= $generated@@414 ($generated@@128 $generated@@415 $generated@@387 $generated@@60 false)) (=> (and (= $generated@@413 ($generated@@185 4)) (= $generated@@391 ($generated@@185 8))) (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 31) 12) $generated@@447) (=> (= (ControlFlow 0 31) 2) $generated@@454)) (=> (= (ControlFlow 0 31) 30) $generated@@424)) (=> (= (ControlFlow 0 31) 3) $generated@@453)) (=> (= (ControlFlow 0 31) 26) $generated@@430)) (=> (= (ControlFlow 0 31) 4) $generated@@452)) (=> (= (ControlFlow 0 31) 22) $generated@@436)) (=> (= (ControlFlow 0 31) 5) $generated@@451)) (=> (= (ControlFlow 0 31) 18) $generated@@442)) (=> (= (ControlFlow 0 31) 6) $generated@@450)) (=> (= (ControlFlow 0 31) 13) $generated@@445)) (=> (= (ControlFlow 0 31) 7) $generated@@449)) (=> (= (ControlFlow 0 31) 14) $generated@@443)) (=> (= (ControlFlow 0 31) 8) $generated@@448))))))
(let (($generated@@476  (=> (and (and (and ($generated@@416 $generated@@387) ($generated@@417 $generated@@387)) (= 1 $generated@@193)) (and (< $generated@@411 $generated@@412) (= (ControlFlow 0 32) 31))) $generated@@475)))
$generated@@476))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 9))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@191 $generated@@353) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@353) (= ($generated@@352 $generated@@353 ($generated@@183 2)) ($generated@@183 0))))
 :pattern ( ($generated@@190 $generated@@353))
))))
(assert (forall (($generated@@354 Int) ($generated@@355 Int) ) (! (= ($generated@@352 $generated@@354 $generated@@355) (mod $generated@@354 $generated@@355))
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@356 $generated@@359)))) ($generated@@201 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@76 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@360))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@361)) ($generated@@185 ($generated@@202 $generated@@361)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@196 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@195 $generated@@363)) (= ($generated@@194 $generated@@362) 0)) (= $generated@@362 ($generated@@193 $generated@@363))))
 :pattern ( ($generated@@194 $generated@@362))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@364)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@364)) (= ($generated@@183 ($generated@@352 $generated@@364 ($generated@@183 2))) ($generated@@183 0))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@203)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@383 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@381) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@384 true))
(let (($generated@@385  (=> (and (not (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378))) (= (ControlFlow 0 6) 4)) $generated@@384)))
(let (($generated@@386  (=> (and (and (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378)) ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@377) (= (ControlFlow 0 5) 4))) $generated@@384)))
(let (($generated@@387  (=> (< $generated@@377 $generated@@376) (and (=> (= (ControlFlow 0 8) 5) $generated@@386) (=> (= (ControlFlow 0 8) 6) $generated@@385)))))
(let (($generated@@388  (=> (<= $generated@@376 $generated@@377) (and (=> (= (ControlFlow 0 7) 5) $generated@@386) (=> (= (ControlFlow 0 7) 6) $generated@@385)))))
(let (($generated@@389  (and (=> (= (ControlFlow 0 9) 7) $generated@@388) (=> (= (ControlFlow 0 9) 8) $generated@@387))))
(let (($generated@@390 true))
(let (($generated@@391  (=> (forall (($generated@@392 Int) )  (=> (<= $generated@@376 $generated@@392) (=> (< $generated@@392 $generated@@378) ($generated@@191 $generated@@392)))) (=> (and (not (exists (($generated@@393 Int) )  (and (and (<= $generated@@376 $generated@@393) (< $generated@@393 $generated@@378)) ($generated@@190 $generated@@393)))) (= (ControlFlow 0 2) (- 0 1))) false))))
(let (($generated@@394  (=> (= $generated@@380 ($generated@@128 $generated@@381 $generated@@379 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@391) (=> (= (ControlFlow 0 10) 9) $generated@@389)) (=> (= (ControlFlow 0 10) 3) $generated@@390)))))
(let (($generated@@395  (=> (and (and ($generated@@382 $generated@@379) ($generated@@383 $generated@@379)) (and (= 1 $generated@@189) (= (ControlFlow 0 11) 10))) $generated@@394)))
$generated@@395)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@191 $generated@@353) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@353) (= ($generated@@352 $generated@@353 ($generated@@183 2)) ($generated@@183 0))))
 :pattern ( ($generated@@190 $generated@@353))
))))
(assert (forall (($generated@@354 Int) ($generated@@355 Int) ) (! (= ($generated@@352 $generated@@354 $generated@@355) (mod $generated@@354 $generated@@355))
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@356 $generated@@359)))) ($generated@@201 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@76 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@360))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@361)) ($generated@@185 ($generated@@202 $generated@@361)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@196 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@195 $generated@@363)) (= ($generated@@194 $generated@@362) 0)) (= $generated@@362 ($generated@@193 $generated@@363))))
 :pattern ( ($generated@@194 $generated@@362))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@364)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@364)) (= ($generated@@183 ($generated@@352 $generated@@364 ($generated@@183 2))) ($generated@@183 0))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@203)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@383 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@381) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@384 true))
(let (($generated@@385  (=> (and (not (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378))) (= (ControlFlow 0 6) 4)) $generated@@384)))
(let (($generated@@386  (=> (and (and (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378)) ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@377) (= (ControlFlow 0 5) 4))) $generated@@384)))
(let (($generated@@387  (=> (< $generated@@377 $generated@@376) (and (=> (= (ControlFlow 0 8) 5) $generated@@386) (=> (= (ControlFlow 0 8) 6) $generated@@385)))))
(let (($generated@@388  (=> (<= $generated@@376 $generated@@377) (and (=> (= (ControlFlow 0 7) 5) $generated@@386) (=> (= (ControlFlow 0 7) 6) $generated@@385)))))
(let (($generated@@389  (and (=> (= (ControlFlow 0 9) 7) $generated@@388) (=> (= (ControlFlow 0 9) 8) $generated@@387))))
(let (($generated@@390 true))
(let (($generated@@391  (=> (forall (($generated@@392 Int) )  (=> (<= $generated@@376 $generated@@392) (=> (< $generated@@392 $generated@@378) ($generated@@191 $generated@@392)))) (=> (and (not (exists (($generated@@393 Int) )  (and (and (<= $generated@@376 $generated@@393) (< $generated@@393 $generated@@378)) ($generated@@190 $generated@@393)))) (= (ControlFlow 0 2) (- 0 1))) false))))
(let (($generated@@394  (=> (= $generated@@380 ($generated@@128 $generated@@381 $generated@@379 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@391) (=> (= (ControlFlow 0 10) 9) $generated@@389)) (=> (= (ControlFlow 0 10) 3) $generated@@390)))))
(let (($generated@@395  (=> (and (and (and ($generated@@382 $generated@@379) ($generated@@383 $generated@@379)) (= 1 $generated@@189)) (and (forall (($generated@@396 Int) ) (!  (=> true (=> (and (<= $generated@@376 $generated@@396) (< $generated@@396 $generated@@378)) ($generated@@190 $generated@@396)))
 :pattern ( ($generated@@190 $generated@@396))
)) (= (ControlFlow 0 11) 10))) $generated@@394)))
$generated@@395)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@191 $generated@@353) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@353) (= ($generated@@352 $generated@@353 ($generated@@183 2)) ($generated@@183 0))))
 :pattern ( ($generated@@190 $generated@@353))
))))
(assert (forall (($generated@@354 Int) ($generated@@355 Int) ) (! (= ($generated@@352 $generated@@354 $generated@@355) (mod $generated@@354 $generated@@355))
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@356 $generated@@359)))) ($generated@@201 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@76 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@360))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@361)) ($generated@@185 ($generated@@202 $generated@@361)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@196 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@195 $generated@@363)) (= ($generated@@194 $generated@@362) 0)) (= $generated@@362 ($generated@@193 $generated@@363))))
 :pattern ( ($generated@@194 $generated@@362))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@364)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@364)) (= ($generated@@183 ($generated@@352 $generated@@364 ($generated@@183 2))) ($generated@@183 0))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@203)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@383 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@381) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@384 true))
(let (($generated@@385  (=> (and (not (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378))) (= (ControlFlow 0 6) 4)) $generated@@384)))
(let (($generated@@386  (=> (and (and (and (<= $generated@@376 $generated@@377) (< $generated@@377 $generated@@378)) ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@377) (= (ControlFlow 0 5) 4))) $generated@@384)))
(let (($generated@@387  (=> (< $generated@@377 $generated@@376) (and (=> (= (ControlFlow 0 8) 5) $generated@@386) (=> (= (ControlFlow 0 8) 6) $generated@@385)))))
(let (($generated@@388  (=> (<= $generated@@376 $generated@@377) (and (=> (= (ControlFlow 0 7) 5) $generated@@386) (=> (= (ControlFlow 0 7) 6) $generated@@385)))))
(let (($generated@@389  (and (=> (= (ControlFlow 0 9) 7) $generated@@388) (=> (= (ControlFlow 0 9) 8) $generated@@387))))
(let (($generated@@390 true))
(let (($generated@@391  (=> (forall (($generated@@392 Int) )  (=> (<= $generated@@376 $generated@@392) (=> (< $generated@@392 $generated@@378) ($generated@@191 $generated@@392)))) (=> (and (not (exists (($generated@@393 Int) )  (and (and (<= $generated@@376 $generated@@393) (< $generated@@393 $generated@@378)) ($generated@@190 $generated@@393)))) (= (ControlFlow 0 2) (- 0 1))) false))))
(let (($generated@@394  (=> (and (and (= $generated@@380 ($generated@@128 $generated@@381 $generated@@379 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@376) $generated@@46 $generated@@379)) (and ($generated@@191 $generated@@376) ($generated@@191 $generated@@376))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@191 $generated@@376) (or ($generated@@190 $generated@@376) (= ($generated@@352 $generated@@376 ($generated@@183 2)) ($generated@@183 0))))) (=> ($generated@@190 $generated@@376) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@391) (=> (= (ControlFlow 0 10) 9) $generated@@389)) (=> (= (ControlFlow 0 10) 3) $generated@@390)))))))
(let (($generated@@395  (=> (and ($generated@@382 $generated@@379) ($generated@@383 $generated@@379)) (=> (and (and (= 1 $generated@@189) (< $generated@@376 $generated@@378)) (and (forall (($generated@@396 Int) ) (!  (=> true (=> (and (<= $generated@@376 $generated@@396) (< $generated@@396 $generated@@378)) ($generated@@190 $generated@@396)))
 :pattern ( ($generated@@190 $generated@@396))
)) (= (ControlFlow 0 12) 10))) $generated@@394))))
$generated@@395)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (Int) Bool)
(declare-fun $generated@@79 (Int) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (Int) Int)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@81 T@U) ) (! (let (($generated@@82 (type $generated@@81)))
(= (type ($generated@@80 $generated@@81)) $generated@@82))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@83 Int) ) (!  (=> (or ($generated@@79 $generated@@83) (not (= 0 $generated@@77))) (= ($generated@@78 $generated@@83) ($generated@@0 ($generated@@80 ($generated@@11 true)))))
 :pattern ( ($generated@@78 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@70)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@72 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@69)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@87 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@69)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@69)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@73)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@148)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (= (type $generated@@165) $generated@@148))
(assert (= ($generated@@162 $generated@@165) $generated@@65))
(assert (= (type $generated@@166) $generated@@148))
(assert (= ($generated@@162 $generated@@166) $generated@@66))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@171) $generated@@69)) ($generated@@144 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@144 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@173 Int) ) (!  (=> (or ($generated@@79 ($generated@@172 $generated@@173)) (not (= 0 $generated@@77))) (= ($generated@@78 ($generated@@172 $generated@@173)) ($generated@@0 ($generated@@80 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@172 $generated@@173)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@89 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@89) (= (type $generated@@224) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@89)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@148)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@69) (= (type $generated@@235) $generated@@69)) (= (type $generated@@236) $generated@@157)) (= (type $generated@@237) $generated@@157)) (= ($generated@@144 ($generated@@230 $generated@@236 $generated@@237) ($generated@@147 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@144 ($generated@@230 $generated@@236 $generated@@237) ($generated@@147 $generated@@234 $generated@@235)))
)))
(assert (= (type $generated@@238) $generated@@69))
(assert ($generated@@144 $generated@@163 $generated@@238))
(assert ($generated@@144 $generated@@165 $generated@@238))
(assert ($generated@@144 $generated@@166 $generated@@238))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@240)) ($generated@@86 $generated@@163 $generated@@238 $generated@@240))
 :pattern ( ($generated@@86 $generated@@163 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@241)) ($generated@@86 $generated@@165 $generated@@238 $generated@@241))
 :pattern ( ($generated@@86 $generated@@165 $generated@@238 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@242)) ($generated@@86 $generated@@166 $generated@@238 $generated@@242))
 :pattern ( ($generated@@86 $generated@@166 $generated@@238 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@148) (= (type $generated@@247) $generated@@148)) (= ($generated@@245 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@144 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@157) ($generated@@0 ($generated@@93 $generated@@250 $generated@@252))) ($generated@@231 $generated@@252 $generated@@251))
 :pattern ( ($generated@@93 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@144 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@144 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@157) ($generated@@0 ($generated@@93 $generated@@255 $generated@@257))) ($generated@@231 $generated@@257 $generated@@256))
 :pattern ( ($generated@@93 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@144 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@172 $generated@@258) $generated@@258)
 :pattern ( ($generated@@172 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@80 $generated@@259) $generated@@259)
 :pattern ( ($generated@@80 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@148) (= (type $generated@@262) $generated@@148)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@245 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@245 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@245 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@148) (= (type $generated@@265) $generated@@148)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@245 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@245 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@245 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@148) (= (type $generated@@268) $generated@@148)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@245 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@245 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@245 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@269 Int) ) (!  (=> (or ($generated@@79 $generated@@269) (not (= 0 $generated@@77))) true)
 :pattern ( ($generated@@78 $generated@@269))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@69) (= (type $generated@@272) $generated@@69)) (= (type $generated@@273) $generated@@157)) (= (type $generated@@274) $generated@@157)) (= (type $generated@@275) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@239 $generated@@275)) (= ($generated@@86 ($generated@@230 $generated@@273 $generated@@274) ($generated@@147 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@86 ($generated@@230 $generated@@273 $generated@@274) ($generated@@147 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@148) (= ($generated@@146 $generated@@276) (= ($generated@@162 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@148) (= ($generated@@260 $generated@@277) (= ($generated@@162 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@148) (= ($generated@@263 $generated@@278) (= ($generated@@162 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@148) (= ($generated@@266 $generated@@279) (= ($generated@@162 $generated@@279) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@148) ($generated@@146 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@157) (= (type $generated@@282) $generated@@157)) (= $generated@@280 ($generated@@230 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@146 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@148) ($generated@@260 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@260 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@148) ($generated@@263 $generated@@292)) (= $generated@@292 $generated@@165))
 :pattern ( ($generated@@263 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@148) ($generated@@266 $generated@@293)) (= $generated@@293 $generated@@166))
 :pattern ( ($generated@@266 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@157)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@69) (= (type $generated@@298) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@86 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@88 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@91 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@88 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@93 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@88 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@93 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@93 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@88 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@93 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@93 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@91 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@88 $generated@@342 $generated@@2)) (= ($generated@@168 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@93 $generated@@341 $generated@@343))) (<= ($generated ($generated@@93 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@93 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@168 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@157) ($generated@@231 $generated@@347 $generated@@238)) (and (= ($generated@@294 ($generated@@344 $generated@@148 $generated@@347)) $generated@@347) ($generated@@144 ($generated@@344 $generated@@148 $generated@@347) $generated@@238)))
 :pattern ( ($generated@@231 $generated@@347 $generated@@238))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@88 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@93 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@88 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@93 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@371) $generated@@69)) (= ($generated@@144 $generated@@370 ($generated@@167 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@157) (< 0 ($generated ($generated@@93 $generated@@370 $generated@@372)))) ($generated@@231 $generated@@372 $generated@@371))
 :pattern ( ($generated@@93 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@144 $generated@@370 ($generated@@167 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@374) $generated@@69)) (= (type $generated@@375) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@157) ($generated@@0 ($generated@@93 $generated@@373 $generated@@376))) ($generated@@270 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@93 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@86 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@378) $generated@@69)) (= (type $generated@@379) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@157) ($generated@@0 ($generated@@93 $generated@@377 $generated@@380))) ($generated@@270 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@93 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@86 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@93 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@93 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@88 $generated@@157 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@88 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@390) $generated@@157)) (= ($generated@@0 ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@93 ($generated@@305 $generated@@389) ($generated@@155 ($generated@@344 $generated@@148 $generated@@390)))) (= ($generated@@93 ($generated@@384 $generated@@389) ($generated@@155 ($generated@@344 $generated@@148 $generated@@390))) ($generated@@156 ($generated@@344 $generated@@148 $generated@@390))))))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@88 $generated@@157 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@88 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@157)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@93 ($generated@@323 $generated@@397) ($generated@@155 ($generated@@344 $generated@@148 $generated@@398)))) (= ($generated@@93 ($generated@@392 $generated@@397) ($generated@@155 ($generated@@344 $generated@@148 $generated@@398))) ($generated@@156 ($generated@@344 $generated@@148 $generated@@398))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@93 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@93 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@93 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@93 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@93 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@93 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@69)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@270 ($generated@@93 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@270 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@69)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@270 ($generated@@93 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@270 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@88 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@157))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@157) (= (type $generated@@440) $generated@@157)) ($generated@@0 ($generated@@93 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@230 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@157) (= (type $generated@@445) $generated@@157)) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@230 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@157) ($generated@@231 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@144 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@157) ($generated@@231 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@144 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@157) ($generated@@231 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@144 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@157) ($generated@@231 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@144 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@69) (= ($generated@@231 ($generated@@294 $generated@@451) $generated@@452) ($generated@@144 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@231 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@91 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@88 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@286 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@285 $generated@@456)) (<= 0 ($generated@@284 $generated@@455))))
 :pattern ( ($generated@@284 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@69)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@84 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@84 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@157) (= (type $generated@@478) $generated@@157)) (= ($generated@@162 ($generated@@230 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@147 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@147 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@147 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@147 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@157) (= (type $generated@@488) $generated@@157)) (= ($generated@@155 ($generated@@230 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@157) (= (type $generated@@490) $generated@@157)) (= ($generated@@156 ($generated@@230 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@286 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@285 $generated@@157)) (= (type $generated@@498) $generated@@69)) (= (type $generated@@499) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@284 $generated@@497))) ($generated@@270 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@87 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@87 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@248 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@248 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@84 ($generated@@248 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@253 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@253 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@84 ($generated@@253 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@167 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@84 ($generated@@167 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@84 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@522) $generated@@69)) (= (type $generated@@523) $generated@@69)) (= ($generated@@144 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@231 ($generated@@93 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@231 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@144 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@144 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@93 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@144 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@148) ($generated@@529 $generated@@530)) (or (or ($generated@@260 $generated@@530) ($generated@@263 $generated@@530)) ($generated@@266 $generated@@530)))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@157) (= (type $generated@@534) $generated@@157)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@230 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@157)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@230 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@230 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@157) (= (type $generated@@538) $generated@@69)) (= (type $generated@@539) $generated@@69)) ($generated@@231 $generated@@537 ($generated@@409 $generated@@538 $generated@@539))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@157 $generated@@157) $generated@@537)) $generated@@537) ($generated@@144 ($generated@@344 ($generated@@307 $generated@@157 $generated@@157) $generated@@537) ($generated@@409 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@231 $generated@@537 ($generated@@409 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@157) (= (type $generated@@541) $generated@@69)) (= (type $generated@@542) $generated@@69)) ($generated@@231 $generated@@540 ($generated@@417 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@157 $generated@@157) $generated@@540)) $generated@@540) ($generated@@144 ($generated@@344 ($generated@@325 $generated@@157 $generated@@157) $generated@@540) ($generated@@417 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@540 ($generated@@417 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@69) (= (type $generated@@544) $generated@@69)) (= (type $generated@@545) $generated@@157)) ($generated@@231 $generated@@545 ($generated@@147 $generated@@543 $generated@@544))) (and (= ($generated@@294 ($generated@@344 $generated@@148 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@344 $generated@@148 $generated@@545) ($generated@@147 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@231 $generated@@545 ($generated@@147 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@93 ($generated@@425 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@93 ($generated@@425 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@74)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@69) (= (type $generated@@551) $generated@@69)) (and (= ($generated@@84 ($generated@@147 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@147 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@148) ($generated@@144 $generated@@552 $generated@@238)) (or (or ($generated@@260 $generated@@552) ($generated@@263 $generated@@552)) ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
 :pattern ( ($generated@@263 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
 :pattern ( ($generated@@260 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@148) (= ($generated@@531 ($generated@@294 $generated@@553)) ($generated@@532 $generated@@553)))
 :pattern ( ($generated@@531 ($generated@@294 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@157) ($generated@@231 $generated@@554 ($generated@@87 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@554)) $generated@@554) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@554) ($generated@@87 0))))
 :pattern ( ($generated@@231 $generated@@554 ($generated@@87 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@157) (= (type $generated@@556) $generated@@69)) ($generated@@231 $generated@@555 ($generated@@248 $generated@@556))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@555)) $generated@@555) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@555) ($generated@@248 $generated@@556))))
 :pattern ( ($generated@@231 $generated@@555 ($generated@@248 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@157) (= (type $generated@@558) $generated@@69)) ($generated@@231 $generated@@557 ($generated@@253 $generated@@558))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@557)) $generated@@557) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@557) ($generated@@253 $generated@@558))))
 :pattern ( ($generated@@231 $generated@@557 ($generated@@253 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@157) (= (type $generated@@560) $generated@@69)) ($generated@@231 $generated@@559 ($generated@@167 $generated@@560))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@2) $generated@@559)) $generated@@559) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@2) $generated@@559) ($generated@@167 $generated@@560))))
 :pattern ( ($generated@@231 $generated@@559 ($generated@@167 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@157) (= (type $generated@@562) $generated@@69)) ($generated@@231 $generated@@561 ($generated@@491 $generated@@562))) (and (= ($generated@@294 ($generated@@344 ($generated@@285 $generated@@157) $generated@@561)) $generated@@561) ($generated@@144 ($generated@@344 ($generated@@285 $generated@@157) $generated@@561) ($generated@@491 $generated@@562))))
 :pattern ( ($generated@@231 $generated@@561 ($generated@@491 $generated@@562)))
)))
(assert (= ($generated@@84 $generated@@238) $generated@@64))
(assert (= ($generated@@548 $generated@@238) $generated@@68))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@563 ($generated@@167 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (< 0 ($generated ($generated@@93 $generated@@563 $generated@@566)))) ($generated@@270 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@93 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@86 $generated@@563 ($generated@@167 $generated@@564) $generated@@565))
)))
(assert (= $generated@@163 ($generated@@80 $generated@@163)))
(assert (= $generated@@165 ($generated@@80 $generated@@165)))
(assert (= $generated@@166 ($generated@@80 $generated@@166)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@148) (= (type $generated@@568) $generated@@69)) (= (type $generated@@569) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@239 $generated@@569) (and ($generated@@146 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@69) ($generated@@86 $generated@@567 ($generated@@147 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@86 $generated@@567 ($generated@@147 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@270 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@270 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@148) (= (type $generated@@572) $generated@@69)) (= (type $generated@@573) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@239 $generated@@573) (and ($generated@@146 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@69) ($generated@@86 $generated@@571 ($generated@@147 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@86 $generated@@571 ($generated@@147 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@270 ($generated@@156 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@156 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) (= (type $generated@@576) $generated@@157)) (= ($generated@@230 ($generated@@80 $generated@@575) ($generated@@80 $generated@@576)) ($generated@@80 ($generated@@230 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@230 ($generated@@80 $generated@@575) ($generated@@80 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@172 $generated@@577))) ($generated@@80 ($generated@@294 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@172 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@294 ($generated@@80 $generated@@578)) ($generated@@80 ($generated@@294 $generated@@578)))
 :pattern ( ($generated@@294 ($generated@@80 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@286 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@285 $generated@@580)) (= ($generated@@284 $generated@@579) 0)) (= $generated@@579 ($generated@@283 $generated@@580))))
 :pattern ( ($generated@@284 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@88 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@299 ($generated@@94 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@299 $generated@@581) ($generated ($generated@@93 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@299 ($generated@@94 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@586) $generated@@2)) ($generated@@86 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@86 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@588) $generated@@3)) ($generated@@86 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@86 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@590) $generated@@4)) ($generated@@86 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@86 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@592) $generated@@449)) ($generated@@86 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@86 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@594) $generated@@157)) ($generated@@86 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@86 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@285 $generated@@157)) (= (type $generated@@596) $generated@@69)) (= ($generated@@144 $generated@@595 ($generated@@491 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@284 $generated@@595))) ($generated@@231 ($generated@@492 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@492 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@491 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@285 $generated@@157)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@284 $generated@@599))) (< ($generated@@532 ($generated@@344 $generated@@148 ($generated@@492 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@532 ($generated@@344 $generated@@148 ($generated@@492 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) $generated@@69)) ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603))) (and (and ($generated@@144 ($generated@@305 $generated@@601) ($generated@@248 $generated@@602)) ($generated@@144 ($generated@@352 $generated@@601) ($generated@@248 $generated@@603))) ($generated@@144 ($generated@@383 $generated@@601) ($generated@@248 ($generated@@147 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@144 $generated@@604 ($generated@@417 $generated@@605 $generated@@606))) (and (and ($generated@@144 ($generated@@323 $generated@@604) ($generated@@253 $generated@@605)) ($generated@@144 ($generated@@363 $generated@@604) ($generated@@253 $generated@@606))) ($generated@@144 ($generated@@391 $generated@@604) ($generated@@253 ($generated@@147 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@144 $generated@@604 ($generated@@417 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@144 $generated@@607 $generated@@46))
 :pattern ( ($generated@@144 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@144 $generated@@608 $generated@@47))
 :pattern ( ($generated@@144 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@144 $generated@@609 $generated@@44))
 :pattern ( ($generated@@144 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@449) ($generated@@144 $generated@@610 $generated@@45))
 :pattern ( ($generated@@144 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@157) ($generated@@144 $generated@@611 $generated@@48))
 :pattern ( ($generated@@144 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () T@U)
(assert  (and (and (and (= (type $generated@@613) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@616) ($generated@@176 $generated@@89 $generated@@4))) (= (type $generated@@617) $generated@@89)) (= (type $generated@@619) $generated@@148)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@620 true))
(let (($generated@@621  (=> (and (not (and (<= ($generated@@172 0) $generated@@612) (< $generated@@612 100))) (= (ControlFlow 0 8) 6)) $generated@@620)))
(let (($generated@@622  (=> (and (and (and (<= ($generated@@172 0) $generated@@612) (< $generated@@612 100)) ($generated@@86 ($generated@@8 $generated@@612) $generated@@46 $generated@@613)) (and ($generated@@79 $generated@@612) (= (ControlFlow 0 7) 6))) $generated@@620)))
(let (($generated@@623  (=> (< $generated@@612 ($generated@@172 0)) (and (=> (= (ControlFlow 0 10) 7) $generated@@622) (=> (= (ControlFlow 0 10) 8) $generated@@621)))))
(let (($generated@@624  (=> (<= ($generated@@172 0) $generated@@612) (and (=> (= (ControlFlow 0 9) 7) $generated@@622) (=> (= (ControlFlow 0 9) 8) $generated@@621)))))
(let (($generated@@625  (and (=> (= (ControlFlow 0 11) 9) $generated@@624) (=> (= (ControlFlow 0 11) 10) $generated@@623))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (forall (($generated@@628 Int) )  (=> (<= ($generated@@172 0) $generated@@628) (=> (< $generated@@628 100) ($generated@@79 $generated@@628)))) (=> (and (and (and (< $generated@@614 $generated@@615) (not (exists (($generated@@629 Int) )  (and (and (<= ($generated@@172 0) $generated@@629) (< $generated@@629 100)) ($generated@@78 $generated@@629))))) (< $generated@@615 $generated@@614)) (= (ControlFlow 0 4) (- 0 3))) false))))
(let (($generated@@630 true))
(let (($generated@@631 true))
(let (($generated@@632  (=> (= $generated@@616 ($generated@@175 $generated@@617 $generated@@613 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 12) 1) $generated@@631) (=> (= (ControlFlow 0 12) 2) $generated@@630)) (=> (= (ControlFlow 0 12) 4) $generated@@627)) (=> (= (ControlFlow 0 12) 11) $generated@@625)) (=> (= (ControlFlow 0 12) 5) $generated@@626)))))
(let (($generated@@633  (=> (and ($generated@@239 $generated@@613) ($generated@@618 $generated@@613)) (=> (and (and (and ($generated@@144 $generated@@619 $generated@@238) ($generated@@86 $generated@@619 $generated@@238 $generated@@613)) ($generated@@529 $generated@@619)) (and (= 1 $generated@@77) (= (ControlFlow 0 13) 12))) $generated@@632))))
$generated@@633)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (Int) Bool)
(declare-fun $generated@@79 (Int) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (Int) Int)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@81 T@U) ) (! (let (($generated@@82 (type $generated@@81)))
(= (type ($generated@@80 $generated@@81)) $generated@@82))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@83 Int) ) (!  (=> (or ($generated@@79 $generated@@83) (not (= 0 $generated@@77))) (= ($generated@@78 $generated@@83) ($generated@@0 ($generated@@80 ($generated@@11 true)))))
 :pattern ( ($generated@@78 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@70)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@72 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@69)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@87 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@69)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@69)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@73)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@148)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (= (type $generated@@165) $generated@@148))
(assert (= ($generated@@162 $generated@@165) $generated@@65))
(assert (= (type $generated@@166) $generated@@148))
(assert (= ($generated@@162 $generated@@166) $generated@@66))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@171) $generated@@69)) ($generated@@144 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@144 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@173 Int) ) (!  (=> (or ($generated@@79 ($generated@@172 $generated@@173)) (not (= 0 $generated@@77))) (= ($generated@@78 ($generated@@172 $generated@@173)) ($generated@@0 ($generated@@80 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@172 $generated@@173)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@89 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@89) (= (type $generated@@224) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@89)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@148)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@69) (= (type $generated@@235) $generated@@69)) (= (type $generated@@236) $generated@@157)) (= (type $generated@@237) $generated@@157)) (= ($generated@@144 ($generated@@230 $generated@@236 $generated@@237) ($generated@@147 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@144 ($generated@@230 $generated@@236 $generated@@237) ($generated@@147 $generated@@234 $generated@@235)))
)))
(assert (= (type $generated@@238) $generated@@69))
(assert ($generated@@144 $generated@@163 $generated@@238))
(assert ($generated@@144 $generated@@165 $generated@@238))
(assert ($generated@@144 $generated@@166 $generated@@238))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@240)) ($generated@@86 $generated@@163 $generated@@238 $generated@@240))
 :pattern ( ($generated@@86 $generated@@163 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@241)) ($generated@@86 $generated@@165 $generated@@238 $generated@@241))
 :pattern ( ($generated@@86 $generated@@165 $generated@@238 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@239 $generated@@242)) ($generated@@86 $generated@@166 $generated@@238 $generated@@242))
 :pattern ( ($generated@@86 $generated@@166 $generated@@238 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@148) (= (type $generated@@247) $generated@@148)) (= ($generated@@245 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@144 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@157) ($generated@@0 ($generated@@93 $generated@@250 $generated@@252))) ($generated@@231 $generated@@252 $generated@@251))
 :pattern ( ($generated@@93 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@144 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@144 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@157) ($generated@@0 ($generated@@93 $generated@@255 $generated@@257))) ($generated@@231 $generated@@257 $generated@@256))
 :pattern ( ($generated@@93 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@144 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@172 $generated@@258) $generated@@258)
 :pattern ( ($generated@@172 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@80 $generated@@259) $generated@@259)
 :pattern ( ($generated@@80 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@148) (= (type $generated@@262) $generated@@148)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@245 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@245 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@245 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@148) (= (type $generated@@265) $generated@@148)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@245 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@245 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@245 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@148) (= (type $generated@@268) $generated@@148)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@245 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@245 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@245 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@269 Int) ) (!  (=> (or ($generated@@79 $generated@@269) (not (= 0 $generated@@77))) true)
 :pattern ( ($generated@@78 $generated@@269))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@69) (= (type $generated@@272) $generated@@69)) (= (type $generated@@273) $generated@@157)) (= (type $generated@@274) $generated@@157)) (= (type $generated@@275) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@239 $generated@@275)) (= ($generated@@86 ($generated@@230 $generated@@273 $generated@@274) ($generated@@147 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@86 ($generated@@230 $generated@@273 $generated@@274) ($generated@@147 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@148) (= ($generated@@146 $generated@@276) (= ($generated@@162 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@148) (= ($generated@@260 $generated@@277) (= ($generated@@162 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@148) (= ($generated@@263 $generated@@278) (= ($generated@@162 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@148) (= ($generated@@266 $generated@@279) (= ($generated@@162 $generated@@279) $generated@@66)))
 :pattern ( ($generated@@266 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@148) ($generated@@146 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@157) (= (type $generated@@282) $generated@@157)) (= $generated@@280 ($generated@@230 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@146 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@148) ($generated@@260 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@260 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@148) ($generated@@263 $generated@@292)) (= $generated@@292 $generated@@165))
 :pattern ( ($generated@@263 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@148) ($generated@@266 $generated@@293)) (= $generated@@293 $generated@@166))
 :pattern ( ($generated@@266 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@157)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@69) (= (type $generated@@298) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@86 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@88 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@91 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@88 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@93 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@88 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@93 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@93 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@88 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@93 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@93 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@91 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@88 $generated@@342 $generated@@2)) (= ($generated@@168 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@93 $generated@@341 $generated@@343))) (<= ($generated ($generated@@93 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@93 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@168 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@157) ($generated@@231 $generated@@347 $generated@@238)) (and (= ($generated@@294 ($generated@@344 $generated@@148 $generated@@347)) $generated@@347) ($generated@@144 ($generated@@344 $generated@@148 $generated@@347) $generated@@238)))
 :pattern ( ($generated@@231 $generated@@347 $generated@@238))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@88 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@93 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@88 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@93 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@371) $generated@@69)) (= ($generated@@144 $generated@@370 ($generated@@167 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@157) (< 0 ($generated ($generated@@93 $generated@@370 $generated@@372)))) ($generated@@231 $generated@@372 $generated@@371))
 :pattern ( ($generated@@93 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@144 $generated@@370 ($generated@@167 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@374) $generated@@69)) (= (type $generated@@375) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@373 ($generated@@248 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@157) ($generated@@0 ($generated@@93 $generated@@373 $generated@@376))) ($generated@@270 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@93 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@86 $generated@@373 ($generated@@248 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@157 $generated@@4)) (= (type $generated@@378) $generated@@69)) (= (type $generated@@379) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@377 ($generated@@253 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@157) ($generated@@0 ($generated@@93 $generated@@377 $generated@@380))) ($generated@@270 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@93 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@86 $generated@@377 ($generated@@253 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@93 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@93 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@88 $generated@@157 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@88 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@390) $generated@@157)) (= ($generated@@0 ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@93 ($generated@@305 $generated@@389) ($generated@@155 ($generated@@344 $generated@@148 $generated@@390)))) (= ($generated@@93 ($generated@@384 $generated@@389) ($generated@@155 ($generated@@344 $generated@@148 $generated@@390))) ($generated@@156 ($generated@@344 $generated@@148 $generated@@390))))))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@88 $generated@@157 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@88 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@157)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@93 ($generated@@323 $generated@@397) ($generated@@155 ($generated@@344 $generated@@148 $generated@@398)))) (= ($generated@@93 ($generated@@392 $generated@@397) ($generated@@155 ($generated@@344 $generated@@148 $generated@@398))) ($generated@@156 ($generated@@344 $generated@@148 $generated@@398))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@93 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@93 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@93 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@93 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@93 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@93 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@69)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@270 ($generated@@93 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@270 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@69)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@270 ($generated@@93 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@270 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@88 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@157))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@157) (= (type $generated@@440) $generated@@157)) ($generated@@0 ($generated@@93 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@230 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@157) (= (type $generated@@445) $generated@@157)) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@230 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@157) ($generated@@231 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@144 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@157) ($generated@@231 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@144 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@157) ($generated@@231 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@144 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@157) ($generated@@231 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@144 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@69) (= ($generated@@231 ($generated@@294 $generated@@451) $generated@@452) ($generated@@144 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@231 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@91 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@88 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@286 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@285 $generated@@456)) (<= 0 ($generated@@284 $generated@@455))))
 :pattern ( ($generated@@284 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@69)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@84 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@84 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@157) (= (type $generated@@478) $generated@@157)) (= ($generated@@162 ($generated@@230 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@147 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@147 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@147 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@147 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@157) (= (type $generated@@488) $generated@@157)) (= ($generated@@155 ($generated@@230 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@157) (= (type $generated@@490) $generated@@157)) (= ($generated@@156 ($generated@@230 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@286 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@285 $generated@@157)) (= (type $generated@@498) $generated@@69)) (= (type $generated@@499) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@284 $generated@@497))) ($generated@@270 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@87 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@87 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@248 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@248 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@84 ($generated@@248 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@253 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@253 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@84 ($generated@@253 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@167 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@84 ($generated@@167 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@84 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@522) $generated@@69)) (= (type $generated@@523) $generated@@69)) (= ($generated@@144 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@231 ($generated@@93 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@231 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@93 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@144 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@144 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@157) ($generated@@0 ($generated@@93 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@231 ($generated@@93 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@231 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@93 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@144 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@148) ($generated@@529 $generated@@530)) (or (or ($generated@@260 $generated@@530) ($generated@@263 $generated@@530)) ($generated@@266 $generated@@530)))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@157) (= (type $generated@@534) $generated@@157)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@230 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@157)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@230 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@230 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@157) (= (type $generated@@538) $generated@@69)) (= (type $generated@@539) $generated@@69)) ($generated@@231 $generated@@537 ($generated@@409 $generated@@538 $generated@@539))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@157 $generated@@157) $generated@@537)) $generated@@537) ($generated@@144 ($generated@@344 ($generated@@307 $generated@@157 $generated@@157) $generated@@537) ($generated@@409 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@231 $generated@@537 ($generated@@409 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@157) (= (type $generated@@541) $generated@@69)) (= (type $generated@@542) $generated@@69)) ($generated@@231 $generated@@540 ($generated@@417 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@157 $generated@@157) $generated@@540)) $generated@@540) ($generated@@144 ($generated@@344 ($generated@@325 $generated@@157 $generated@@157) $generated@@540) ($generated@@417 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@540 ($generated@@417 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@69) (= (type $generated@@544) $generated@@69)) (= (type $generated@@545) $generated@@157)) ($generated@@231 $generated@@545 ($generated@@147 $generated@@543 $generated@@544))) (and (= ($generated@@294 ($generated@@344 $generated@@148 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@344 $generated@@148 $generated@@545) ($generated@@147 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@231 $generated@@545 ($generated@@147 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@93 ($generated@@425 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@93 ($generated@@425 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@74)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@69) (= (type $generated@@551) $generated@@69)) (and (= ($generated@@84 ($generated@@147 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@147 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@148) ($generated@@144 $generated@@552 $generated@@238)) (or (or ($generated@@260 $generated@@552) ($generated@@263 $generated@@552)) ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
 :pattern ( ($generated@@263 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
 :pattern ( ($generated@@260 $generated@@552) ($generated@@144 $generated@@552 $generated@@238))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@148) (= ($generated@@531 ($generated@@294 $generated@@553)) ($generated@@532 $generated@@553)))
 :pattern ( ($generated@@531 ($generated@@294 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@157) ($generated@@231 $generated@@554 ($generated@@87 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@554)) $generated@@554) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@554) ($generated@@87 0))))
 :pattern ( ($generated@@231 $generated@@554 ($generated@@87 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@157) (= (type $generated@@556) $generated@@69)) ($generated@@231 $generated@@555 ($generated@@248 $generated@@556))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@555)) $generated@@555) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@555) ($generated@@248 $generated@@556))))
 :pattern ( ($generated@@231 $generated@@555 ($generated@@248 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@157) (= (type $generated@@558) $generated@@69)) ($generated@@231 $generated@@557 ($generated@@253 $generated@@558))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@557)) $generated@@557) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@4) $generated@@557) ($generated@@253 $generated@@558))))
 :pattern ( ($generated@@231 $generated@@557 ($generated@@253 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@157) (= (type $generated@@560) $generated@@69)) ($generated@@231 $generated@@559 ($generated@@167 $generated@@560))) (and (= ($generated@@294 ($generated@@344 ($generated@@88 $generated@@157 $generated@@2) $generated@@559)) $generated@@559) ($generated@@144 ($generated@@344 ($generated@@88 $generated@@157 $generated@@2) $generated@@559) ($generated@@167 $generated@@560))))
 :pattern ( ($generated@@231 $generated@@559 ($generated@@167 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@157) (= (type $generated@@562) $generated@@69)) ($generated@@231 $generated@@561 ($generated@@491 $generated@@562))) (and (= ($generated@@294 ($generated@@344 ($generated@@285 $generated@@157) $generated@@561)) $generated@@561) ($generated@@144 ($generated@@344 ($generated@@285 $generated@@157) $generated@@561) ($generated@@491 $generated@@562))))
 :pattern ( ($generated@@231 $generated@@561 ($generated@@491 $generated@@562)))
)))
(assert (= ($generated@@84 $generated@@238) $generated@@64))
(assert (= ($generated@@548 $generated@@238) $generated@@68))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@88 $generated@@157 $generated@@2)) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@563 ($generated@@167 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (< 0 ($generated ($generated@@93 $generated@@563 $generated@@566)))) ($generated@@270 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@93 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@86 $generated@@563 ($generated@@167 $generated@@564) $generated@@565))
)))
(assert (= $generated@@163 ($generated@@80 $generated@@163)))
(assert (= $generated@@165 ($generated@@80 $generated@@165)))
(assert (= $generated@@166 ($generated@@80 $generated@@166)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@148) (= (type $generated@@568) $generated@@69)) (= (type $generated@@569) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@239 $generated@@569) (and ($generated@@146 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@69) ($generated@@86 $generated@@567 ($generated@@147 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@86 $generated@@567 ($generated@@147 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@270 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@270 ($generated@@155 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@148) (= (type $generated@@572) $generated@@69)) (= (type $generated@@573) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@239 $generated@@573) (and ($generated@@146 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@69) ($generated@@86 $generated@@571 ($generated@@147 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@86 $generated@@571 ($generated@@147 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@270 ($generated@@156 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@156 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) (= (type $generated@@576) $generated@@157)) (= ($generated@@230 ($generated@@80 $generated@@575) ($generated@@80 $generated@@576)) ($generated@@80 ($generated@@230 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@230 ($generated@@80 $generated@@575) ($generated@@80 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@172 $generated@@577))) ($generated@@80 ($generated@@294 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@172 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@294 ($generated@@80 $generated@@578)) ($generated@@80 ($generated@@294 $generated@@578)))
 :pattern ( ($generated@@294 ($generated@@80 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@286 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@285 $generated@@580)) (= ($generated@@284 $generated@@579) 0)) (= $generated@@579 ($generated@@283 $generated@@580))))
 :pattern ( ($generated@@284 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@88 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@299 ($generated@@94 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@299 $generated@@581) ($generated ($generated@@93 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@299 ($generated@@94 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@586) $generated@@2)) ($generated@@86 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@86 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@588) $generated@@3)) ($generated@@86 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@86 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@590) $generated@@4)) ($generated@@86 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@86 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@592) $generated@@449)) ($generated@@86 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@86 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@594) $generated@@157)) ($generated@@86 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@86 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@285 $generated@@157)) (= (type $generated@@596) $generated@@69)) (= ($generated@@144 $generated@@595 ($generated@@491 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@284 $generated@@595))) ($generated@@231 ($generated@@492 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@492 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@491 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@285 $generated@@157)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@284 $generated@@599))) (< ($generated@@532 ($generated@@344 $generated@@148 ($generated@@492 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@532 ($generated@@344 $generated@@148 ($generated@@492 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@307 $generated@@157 $generated@@157)) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) $generated@@69)) ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603))) (and (and ($generated@@144 ($generated@@305 $generated@@601) ($generated@@248 $generated@@602)) ($generated@@144 ($generated@@352 $generated@@601) ($generated@@248 $generated@@603))) ($generated@@144 ($generated@@383 $generated@@601) ($generated@@248 ($generated@@147 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@325 $generated@@157 $generated@@157)) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@144 $generated@@604 ($generated@@417 $generated@@605 $generated@@606))) (and (and ($generated@@144 ($generated@@323 $generated@@604) ($generated@@253 $generated@@605)) ($generated@@144 ($generated@@363 $generated@@604) ($generated@@253 $generated@@606))) ($generated@@144 ($generated@@391 $generated@@604) ($generated@@253 ($generated@@147 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@144 $generated@@604 ($generated@@417 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@144 $generated@@607 $generated@@46))
 :pattern ( ($generated@@144 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@144 $generated@@608 $generated@@47))
 :pattern ( ($generated@@144 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@144 $generated@@609 $generated@@44))
 :pattern ( ($generated@@144 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@449) ($generated@@144 $generated@@610 $generated@@45))
 :pattern ( ($generated@@144 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@157) ($generated@@144 $generated@@611 $generated@@48))
 :pattern ( ($generated@@144 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () T@U)
(assert  (and (and (and (= (type $generated@@613) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@616) ($generated@@176 $generated@@89 $generated@@4))) (= (type $generated@@617) $generated@@89)) (= (type $generated@@619) $generated@@148)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@620 true))
(let (($generated@@621  (=> (and (not (and (<= ($generated@@172 0) $generated@@612) (< $generated@@612 100))) (= (ControlFlow 0 10) 8)) $generated@@620)))
(let (($generated@@622  (=> (and (and (and (<= ($generated@@172 0) $generated@@612) (< $generated@@612 100)) ($generated@@86 ($generated@@8 $generated@@612) $generated@@46 $generated@@613)) (and ($generated@@79 $generated@@612) (= (ControlFlow 0 9) 8))) $generated@@620)))
(let (($generated@@623  (=> (< $generated@@612 ($generated@@172 0)) (and (=> (= (ControlFlow 0 12) 9) $generated@@622) (=> (= (ControlFlow 0 12) 10) $generated@@621)))))
(let (($generated@@624  (=> (<= ($generated@@172 0) $generated@@612) (and (=> (= (ControlFlow 0 11) 9) $generated@@622) (=> (= (ControlFlow 0 11) 10) $generated@@621)))))
(let (($generated@@625  (and (=> (= (ControlFlow 0 13) 11) $generated@@624) (=> (= (ControlFlow 0 13) 12) $generated@@623))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (forall (($generated@@628 Int) )  (=> (<= ($generated@@172 0) $generated@@628) (=> (< $generated@@628 100) ($generated@@79 $generated@@628)))) (=> (and (and (and (and (and (< $generated@@614 $generated@@615) (not (exists (($generated@@629 Int) )  (and (and (<= ($generated@@172 0) $generated@@629) (< $generated@@629 100)) ($generated@@78 $generated@@629))))) (< $generated@@615 $generated@@614)) (not ($generated@@0 ($generated@@80 ($generated@@11 false))))) (not ($generated@@0 ($generated@@80 ($generated@@11 false))))) (= (ControlFlow 0 6) (- 0 5))) false))))
(let (($generated@@630 true))
(let (($generated@@631 true))
(let (($generated@@632 true))
(let (($generated@@633 true))
(let (($generated@@634  (=> (= $generated@@616 ($generated@@175 $generated@@617 $generated@@613 $generated@@60 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 14) 1) $generated@@633) (=> (= (ControlFlow 0 14) 2) $generated@@632)) (=> (= (ControlFlow 0 14) 3) $generated@@631)) (=> (= (ControlFlow 0 14) 4) $generated@@630)) (=> (= (ControlFlow 0 14) 6) $generated@@627)) (=> (= (ControlFlow 0 14) 13) $generated@@625)) (=> (= (ControlFlow 0 14) 7) $generated@@626)))))
(let (($generated@@635  (=> (and ($generated@@239 $generated@@613) ($generated@@618 $generated@@613)) (=> (and (and (and ($generated@@144 $generated@@619 $generated@@238) ($generated@@86 $generated@@619 $generated@@238 $generated@@613)) ($generated@@529 $generated@@619)) (and (= 1 $generated@@77) (= (ControlFlow 0 15) 14))) $generated@@634))))
$generated@@635)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@240 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@240 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@154)) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@273)) (= ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@143 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@259 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@145) (= ($generated@@262 $generated@@276) (= ($generated@@159 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@145) (= ($generated@@265 $generated@@277) (= ($generated@@159 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@145) ($generated@@143 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@154) (= (type $generated@@280) $generated@@154)) (= $generated@@278 ($generated@@225 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@143 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@259 $generated@@289)) (= $generated@@289 $generated@@160))
 :pattern ( ($generated@@259 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@145) ($generated@@262 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@262 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@145) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@69)) ($generated@@137 $generated@@297 $generated@@298)) ($generated@@268 $generated@@299 $generated@@300 $generated@@297)) ($generated@@268 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@137 $generated@@297 $generated@@298) ($generated@@268 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@137 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@137 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@226 $generated@@353 $generated@@233)) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@145 $generated@@353) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@311 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@315 (type $generated@@361))))
(let (($generated@@363 ($generated@@314 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@313 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@312 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@333 (type $generated@@365))))
(let (($generated@@367 ($generated@@332 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@331 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@330 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@329 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@81 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@333 (type $generated@@372))))
(let (($generated@@374 ($generated@@332 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@331 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@330 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@376 $generated@@378)))) ($generated@@226 $generated@@378 $generated@@377))
 :pattern ( ($generated@@86 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@268 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@268 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@268 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@268 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@268 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@268 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@431 $generated@@433))) (and ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))) ($generated@@137 $generated@@431 $generated@@433))
 :pattern ( ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@369 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@369 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@154))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@154) (= (type $generated@@449) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@225 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@350 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@154) ($generated@@226 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@456)) $generated@@456) ($generated@@141 ($generated@@350 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@350 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@226 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@458 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@226 ($generated@@292 $generated@@460) $generated@@461) ($generated@@141 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@226 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@284 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@283 $generated@@465)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@144 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@284 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@154)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@282 $generated@@506))) ($generated@@268 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@164 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@350 $generated@@529 ($generated@@292 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@292 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))) (and ($generated@@226 ($generated@@86 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@226 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))) (and ($generated@@226 ($generated@@86 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@226 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@538 $generated@@539)) (or (or ($generated@@259 $generated@@539) ($generated@@262 $generated@@539)) ($generated@@265 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@154)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@154)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546) ($generated@@415 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@154)) ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 $generated@@145 $generated@@554) ($generated@@144 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@86 ($generated@@434 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@144 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@141 $generated@@561 $generated@@233)) (or (or ($generated@@259 $generated@@561) ($generated@@262 $generated@@561)) ($generated@@265 $generated@@561)))
 :pattern ( ($generated@@265 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@262 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@259 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@145) (= ($generated@@540 ($generated@@292 $generated@@562)) ($generated@@541 $generated@@562)))
 :pattern ( ($generated@@540 ($generated@@292 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) ($generated@@226 $generated@@563 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@563)) $generated@@563) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@563) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@80 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@243 $generated@@565))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564) ($generated@@243 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@248 $generated@@567))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@248 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@226 $generated@@568 ($generated@@164 $generated@@569))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568) ($generated@@164 $generated@@569))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@164 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@226 $generated@@570 ($generated@@500 $generated@@571))) (and (= ($generated@@292 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570) ($generated@@500 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@500 $generated@@571)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@557 $generated@@233) $generated@@68))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@572 $generated@@575)))) ($generated@@268 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@86 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574))
)))
(assert (= $generated@@160 ($generated@@255 $generated@@160)))
(assert (= $generated@@162 ($generated@@255 $generated@@162)))
(assert (= $generated@@163 ($generated@@255 $generated@@163)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@582) (and ($generated@@143 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)) ($generated@@255 ($generated@@225 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))) ($generated@@255 ($generated@@292 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@292 ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@292 $generated@@587)))
 :pattern ( ($generated@@292 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@284 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@283 $generated@@589)) (= ($generated@@282 $generated@@588) 0)) (= $generated@@588 ($generated@@281 $generated@@589))))
 :pattern ( ($generated@@282 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@305 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@458)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@154)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@283 $generated@@154)) (= (type $generated@@605) $generated@@69)) (= ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@282 $generated@@604))) ($generated@@226 ($generated@@501 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@501 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@283 $generated@@154)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@282 $generated@@608))) (< ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@311 $generated@@610) ($generated@@243 $generated@@611)) ($generated@@141 ($generated@@358 $generated@@610) ($generated@@243 $generated@@612))) ($generated@@141 ($generated@@389 $generated@@610) ($generated@@243 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615))) (and (and ($generated@@141 ($generated@@329 $generated@@613) ($generated@@248 $generated@@614)) ($generated@@141 ($generated@@369 $generated@@613) ($generated@@248 $generated@@615))) ($generated@@141 ($generated@@397 $generated@@613) ($generated@@248 ($generated@@144 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@141 $generated@@616 $generated@@46))
 :pattern ( ($generated@@141 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@141 $generated@@617 $generated@@47))
 :pattern ( ($generated@@141 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@141 $generated@@618 $generated@@44))
 :pattern ( ($generated@@141 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@458) ($generated@@141 $generated@@619 $generated@@45))
 :pattern ( ($generated@@141 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@154) ($generated@@141 $generated@@620 $generated@@48))
 :pattern ( ($generated@@141 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@240 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@240 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@154)) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@273)) (= ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@143 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@259 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@145) (= ($generated@@262 $generated@@276) (= ($generated@@159 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@145) (= ($generated@@265 $generated@@277) (= ($generated@@159 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@145) ($generated@@143 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@154) (= (type $generated@@280) $generated@@154)) (= $generated@@278 ($generated@@225 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@143 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@259 $generated@@289)) (= $generated@@289 $generated@@160))
 :pattern ( ($generated@@259 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@145) ($generated@@262 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@262 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@145) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@69)) ($generated@@137 $generated@@297 $generated@@298)) ($generated@@268 $generated@@299 $generated@@300 $generated@@297)) ($generated@@268 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@137 $generated@@297 $generated@@298) ($generated@@268 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@137 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@137 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@226 $generated@@353 $generated@@233)) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@145 $generated@@353) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@311 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@315 (type $generated@@361))))
(let (($generated@@363 ($generated@@314 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@313 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@312 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@333 (type $generated@@365))))
(let (($generated@@367 ($generated@@332 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@331 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@330 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@329 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@81 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@333 (type $generated@@372))))
(let (($generated@@374 ($generated@@332 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@331 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@330 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@376 $generated@@378)))) ($generated@@226 $generated@@378 $generated@@377))
 :pattern ( ($generated@@86 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@268 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@268 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@268 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@268 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@268 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@268 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@431 $generated@@433))) (and ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))) ($generated@@137 $generated@@431 $generated@@433))
 :pattern ( ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@369 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@369 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@154))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@154) (= (type $generated@@449) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@225 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@350 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@154) ($generated@@226 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@456)) $generated@@456) ($generated@@141 ($generated@@350 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@350 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@226 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@458 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@226 ($generated@@292 $generated@@460) $generated@@461) ($generated@@141 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@226 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@284 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@283 $generated@@465)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@144 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@284 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@154)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@282 $generated@@506))) ($generated@@268 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@164 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@350 $generated@@529 ($generated@@292 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@292 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))) (and ($generated@@226 ($generated@@86 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@226 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))) (and ($generated@@226 ($generated@@86 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@226 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@538 $generated@@539)) (or (or ($generated@@259 $generated@@539) ($generated@@262 $generated@@539)) ($generated@@265 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@154)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@154)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546) ($generated@@415 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@154)) ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 $generated@@145 $generated@@554) ($generated@@144 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@86 ($generated@@434 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@144 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@141 $generated@@561 $generated@@233)) (or (or ($generated@@259 $generated@@561) ($generated@@262 $generated@@561)) ($generated@@265 $generated@@561)))
 :pattern ( ($generated@@265 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@262 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@259 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@145) (= ($generated@@540 ($generated@@292 $generated@@562)) ($generated@@541 $generated@@562)))
 :pattern ( ($generated@@540 ($generated@@292 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) ($generated@@226 $generated@@563 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@563)) $generated@@563) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@563) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@80 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@243 $generated@@565))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564) ($generated@@243 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@248 $generated@@567))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@248 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@226 $generated@@568 ($generated@@164 $generated@@569))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568) ($generated@@164 $generated@@569))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@164 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@226 $generated@@570 ($generated@@500 $generated@@571))) (and (= ($generated@@292 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570) ($generated@@500 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@500 $generated@@571)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@557 $generated@@233) $generated@@68))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@572 $generated@@575)))) ($generated@@268 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@86 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574))
)))
(assert (= $generated@@160 ($generated@@255 $generated@@160)))
(assert (= $generated@@162 ($generated@@255 $generated@@162)))
(assert (= $generated@@163 ($generated@@255 $generated@@163)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@582) (and ($generated@@143 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)) ($generated@@255 ($generated@@225 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))) ($generated@@255 ($generated@@292 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@292 ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@292 $generated@@587)))
 :pattern ( ($generated@@292 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@284 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@283 $generated@@589)) (= ($generated@@282 $generated@@588) 0)) (= $generated@@588 ($generated@@281 $generated@@589))))
 :pattern ( ($generated@@282 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@305 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@458)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@154)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@283 $generated@@154)) (= (type $generated@@605) $generated@@69)) (= ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@282 $generated@@604))) ($generated@@226 ($generated@@501 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@501 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@283 $generated@@154)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@282 $generated@@608))) (< ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@311 $generated@@610) ($generated@@243 $generated@@611)) ($generated@@141 ($generated@@358 $generated@@610) ($generated@@243 $generated@@612))) ($generated@@141 ($generated@@389 $generated@@610) ($generated@@243 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615))) (and (and ($generated@@141 ($generated@@329 $generated@@613) ($generated@@248 $generated@@614)) ($generated@@141 ($generated@@369 $generated@@613) ($generated@@248 $generated@@615))) ($generated@@141 ($generated@@397 $generated@@613) ($generated@@248 ($generated@@144 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@141 $generated@@616 $generated@@46))
 :pattern ( ($generated@@141 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@141 $generated@@617 $generated@@47))
 :pattern ( ($generated@@141 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@141 $generated@@618 $generated@@44))
 :pattern ( ($generated@@141 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@458) ($generated@@141 $generated@@619 $generated@@45))
 :pattern ( ($generated@@141 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@154) ($generated@@141 $generated@@620 $generated@@48))
 :pattern ( ($generated@@141 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Bool)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (= (type $generated@@631) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@632) $generated@@82)) (= (type $generated@@633) ($generated@@171 $generated@@82 $generated@@4))) (= (type $generated@@638) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@640  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@621) (= (- $generated@@622 $generated@@623) $generated@@621))) (=> (or (<= 0 $generated@@621) (= (- $generated@@622 $generated@@623) $generated@@621)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- $generated@@622 $generated@@623) $generated@@621))))))
(let (($generated@@641  (=> (and (> $generated@@624 $generated@@625) (= $generated@@626 ($generated@@253 15))) (=> (and (and (= $generated@@627 (- $generated@@624 1)) (= $generated@@623 $generated@@625)) (and (= $generated@@622 $generated@@627) (= (ControlFlow 0 9) 6))) $generated@@640))))
(let (($generated@@642  (=> (and (< $generated@@625 $generated@@624) (= $generated@@628 ($generated@@253 10))) (=> (and (and (= $generated@@629 (+ $generated@@625 1)) (= $generated@@623 $generated@@629)) (and (= $generated@@622 $generated@@624) (= (ControlFlow 0 8) 6))) $generated@@640))))
(let (($generated@@643 true))
(let (($generated@@644  (=> (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (= $generated@@621 (- $generated@@624 $generated@@625))) (and (and (=> (= (ControlFlow 0 10) 8) $generated@@642) (=> (= (ControlFlow 0 10) 9) $generated@@641)) (=> (= (ControlFlow 0 10) 4) $generated@@643)))))
(let (($generated@@645 true))
(let (($generated@@646  (=> $generated@@630 (and (=> (= (ControlFlow 0 11) 3) $generated@@645) (=> (= (ControlFlow 0 11) 10) $generated@@644)))))
(let (($generated@@647 true))
(let (($generated@@648  (and (=> (= (ControlFlow 0 12) 2) $generated@@647) (=> (= (ControlFlow 0 12) 11) $generated@@646))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (and (not false) (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@82) (=> (and (not (= $generated@@651 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@651) $generated@@60))) (= ($generated@@86 $generated@@631 $generated@@651) ($generated@@86 $generated@@631 $generated@@651))))
 :pattern ( ($generated@@86 $generated@@631 $generated@@651))
))) (=> (and (and ($generated@@137 $generated@@631 $generated@@631) (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@72 (type $generated@@653))))
 (=> (and (and (= (type $generated@@652) $generated@@82) (= (type $generated@@653) ($generated@@71 $generated@@654))) (and (not (= $generated@@652 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@652) $generated@@60)))) (or (= ($generated@@88 ($generated@@86 $generated@@631 $generated@@652) $generated@@653) ($generated@@88 ($generated@@86 $generated@@631 $generated@@652) $generated@@653)) ($generated@@0 ($generated@@169 $generated@@633 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@631 $generated@@652) $generated@@653))
))) (and (<= (- $generated@@624 $generated@@625) $generated@@634) (=> (= (- $generated@@624 $generated@@625) $generated@@634) true))) (and (=> (= (ControlFlow 0 13) 1) $generated@@649) (=> (= (ControlFlow 0 13) 12) $generated@@648))))))
(let (($generated@@655  (=> (= $generated@@633 ($generated@@170 $generated@@632 $generated@@631 $generated@@60 false)) (=> (and (= $generated@@634 (- $generated@@635 $generated@@636)) (= (ControlFlow 0 14) 13)) $generated@@650))))
(let (($generated@@656  (=> (and ($generated@@234 $generated@@631) ($generated@@637 $generated@@631)) (=> (and (and (and ($generated@@141 $generated@@638 $generated@@233) ($generated@@79 $generated@@638 $generated@@233 $generated@@631)) ($generated@@538 $generated@@638)) (and (= 1 $generated@@639) (= (ControlFlow 0 15) 14))) $generated@@655))))
$generated@@656))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@240 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@240 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@154)) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@273)) (= ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@143 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@259 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@145) (= ($generated@@262 $generated@@276) (= ($generated@@159 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@145) (= ($generated@@265 $generated@@277) (= ($generated@@159 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@145) ($generated@@143 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@154) (= (type $generated@@280) $generated@@154)) (= $generated@@278 ($generated@@225 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@143 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@259 $generated@@289)) (= $generated@@289 $generated@@160))
 :pattern ( ($generated@@259 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@145) ($generated@@262 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@262 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@145) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@69)) ($generated@@137 $generated@@297 $generated@@298)) ($generated@@268 $generated@@299 $generated@@300 $generated@@297)) ($generated@@268 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@137 $generated@@297 $generated@@298) ($generated@@268 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@137 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@137 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@226 $generated@@353 $generated@@233)) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@145 $generated@@353) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@311 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@315 (type $generated@@361))))
(let (($generated@@363 ($generated@@314 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@313 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@312 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@333 (type $generated@@365))))
(let (($generated@@367 ($generated@@332 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@331 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@330 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@329 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@81 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@333 (type $generated@@372))))
(let (($generated@@374 ($generated@@332 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@331 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@330 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@376 $generated@@378)))) ($generated@@226 $generated@@378 $generated@@377))
 :pattern ( ($generated@@86 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@268 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@268 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@268 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@268 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@268 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@268 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@431 $generated@@433))) (and ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))) ($generated@@137 $generated@@431 $generated@@433))
 :pattern ( ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@369 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@369 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@154))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@154) (= (type $generated@@449) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@225 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@350 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@154) ($generated@@226 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@456)) $generated@@456) ($generated@@141 ($generated@@350 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@350 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@226 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@458 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@226 ($generated@@292 $generated@@460) $generated@@461) ($generated@@141 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@226 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@284 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@283 $generated@@465)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@144 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@284 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@154)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@282 $generated@@506))) ($generated@@268 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@164 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@350 $generated@@529 ($generated@@292 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@292 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))) (and ($generated@@226 ($generated@@86 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@226 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))) (and ($generated@@226 ($generated@@86 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@226 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@538 $generated@@539)) (or (or ($generated@@259 $generated@@539) ($generated@@262 $generated@@539)) ($generated@@265 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@154)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@154)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546) ($generated@@415 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@154)) ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 $generated@@145 $generated@@554) ($generated@@144 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@86 ($generated@@434 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@144 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@141 $generated@@561 $generated@@233)) (or (or ($generated@@259 $generated@@561) ($generated@@262 $generated@@561)) ($generated@@265 $generated@@561)))
 :pattern ( ($generated@@265 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@262 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@259 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@145) (= ($generated@@540 ($generated@@292 $generated@@562)) ($generated@@541 $generated@@562)))
 :pattern ( ($generated@@540 ($generated@@292 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) ($generated@@226 $generated@@563 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@563)) $generated@@563) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@563) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@80 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@243 $generated@@565))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564) ($generated@@243 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@248 $generated@@567))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@248 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@226 $generated@@568 ($generated@@164 $generated@@569))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568) ($generated@@164 $generated@@569))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@164 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@226 $generated@@570 ($generated@@500 $generated@@571))) (and (= ($generated@@292 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570) ($generated@@500 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@500 $generated@@571)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@557 $generated@@233) $generated@@68))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@572 $generated@@575)))) ($generated@@268 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@86 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574))
)))
(assert (= $generated@@160 ($generated@@255 $generated@@160)))
(assert (= $generated@@162 ($generated@@255 $generated@@162)))
(assert (= $generated@@163 ($generated@@255 $generated@@163)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@582) (and ($generated@@143 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)) ($generated@@255 ($generated@@225 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))) ($generated@@255 ($generated@@292 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@292 ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@292 $generated@@587)))
 :pattern ( ($generated@@292 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@284 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@283 $generated@@589)) (= ($generated@@282 $generated@@588) 0)) (= $generated@@588 ($generated@@281 $generated@@589))))
 :pattern ( ($generated@@282 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@305 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@458)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@154)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@283 $generated@@154)) (= (type $generated@@605) $generated@@69)) (= ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@282 $generated@@604))) ($generated@@226 ($generated@@501 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@501 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@283 $generated@@154)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@282 $generated@@608))) (< ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@311 $generated@@610) ($generated@@243 $generated@@611)) ($generated@@141 ($generated@@358 $generated@@610) ($generated@@243 $generated@@612))) ($generated@@141 ($generated@@389 $generated@@610) ($generated@@243 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615))) (and (and ($generated@@141 ($generated@@329 $generated@@613) ($generated@@248 $generated@@614)) ($generated@@141 ($generated@@369 $generated@@613) ($generated@@248 $generated@@615))) ($generated@@141 ($generated@@397 $generated@@613) ($generated@@248 ($generated@@144 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@141 $generated@@616 $generated@@46))
 :pattern ( ($generated@@141 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@141 $generated@@617 $generated@@47))
 :pattern ( ($generated@@141 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@141 $generated@@618 $generated@@44))
 :pattern ( ($generated@@141 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@458) ($generated@@141 $generated@@619 $generated@@45))
 :pattern ( ($generated@@141 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@154) ($generated@@141 $generated@@620 $generated@@48))
 :pattern ( ($generated@@141 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Bool)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 (T@U) Bool)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(assert  (and (and (and (= (type $generated@@627) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@628) $generated@@82)) (= (type $generated@@629) ($generated@@171 $generated@@82 $generated@@4))) (= (type $generated@@633) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@635 true))
(let (($generated@@636  (=> (< $generated@@621 $generated@@622) (=> (and (= $generated@@623 ($generated@@253 10)) (= $generated@@624 (+ $generated@@621 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@625) (= (- $generated@@622 $generated@@624) $generated@@625))) (=> (or (<= 0 $generated@@625) (= (- $generated@@622 $generated@@624) $generated@@625)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@622 $generated@@624) $generated@@625)) (=> (< (- $generated@@622 $generated@@624) $generated@@625) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@626 ($generated@@0 ($generated@@255 ($generated@@11 true)))))))))))))
(let (($generated@@637  (=> (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (= $generated@@625 (- $generated@@622 $generated@@621))) (and (=> (= (ControlFlow 0 9) 5) $generated@@636) (=> (= (ControlFlow 0 9) 8) $generated@@635)))))
(let (($generated@@638 true))
(let (($generated@@639  (=> $generated@@626 (and (=> (= (ControlFlow 0 10) 3) $generated@@638) (=> (= (ControlFlow 0 10) 9) $generated@@637)))))
(let (($generated@@640 true))
(let (($generated@@641  (and (=> (= (ControlFlow 0 11) 2) $generated@@640) (=> (= (ControlFlow 0 11) 10) $generated@@639))))
(let (($generated@@642 true))
(let (($generated@@643  (=> (and (and (and (not false) (=> $generated@@626 true)) (and (=> $generated@@626 ($generated@@0 ($generated@@255 ($generated@@11 true)))) (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@82) (=> (and (not (= $generated@@644 $generated@@628)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@627 $generated@@644) $generated@@60))) (= ($generated@@86 $generated@@627 $generated@@644) ($generated@@86 $generated@@627 $generated@@644))))
 :pattern ( ($generated@@86 $generated@@627 $generated@@644))
)))) (and (and ($generated@@137 $generated@@627 $generated@@627) (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@72 (type $generated@@646))))
 (=> (and (and (= (type $generated@@645) $generated@@82) (= (type $generated@@646) ($generated@@71 $generated@@647))) (and (not (= $generated@@645 $generated@@628)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@627 $generated@@645) $generated@@60)))) (or (= ($generated@@88 ($generated@@86 $generated@@627 $generated@@645) $generated@@646) ($generated@@88 ($generated@@86 $generated@@627 $generated@@645) $generated@@646)) ($generated@@0 ($generated@@169 $generated@@629 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@627 $generated@@645) $generated@@646))
))) (and (<= (- $generated@@622 $generated@@621) $generated@@630) (=> (= (- $generated@@622 $generated@@621) $generated@@630) true)))) (and (=> (= (ControlFlow 0 12) 1) $generated@@642) (=> (= (ControlFlow 0 12) 11) $generated@@641)))))
(let (($generated@@648  (=> (and (= $generated@@629 ($generated@@170 $generated@@628 $generated@@627 $generated@@60 false)) (= $generated@@630 (- $generated@@622 $generated@@631))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (=> $generated@@626 ($generated@@0 ($generated@@255 ($generated@@11 true))))) (=> (=> $generated@@626 ($generated@@0 ($generated@@255 ($generated@@11 true)))) (=> (= (ControlFlow 0 13) 12) $generated@@643))))))
(let (($generated@@649  (=> (and ($generated@@234 $generated@@627) ($generated@@632 $generated@@627)) (=> (and (and (and ($generated@@141 $generated@@633 $generated@@233) ($generated@@79 $generated@@633 $generated@@233 $generated@@627)) ($generated@@538 $generated@@633)) (and (= 1 $generated@@634) (= (ControlFlow 0 15) 13))) $generated@@648))))
$generated@@649))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@240 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@240 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@154)) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@273)) (= ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@143 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@259 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@145) (= ($generated@@262 $generated@@276) (= ($generated@@159 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@145) (= ($generated@@265 $generated@@277) (= ($generated@@159 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@145) ($generated@@143 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@154) (= (type $generated@@280) $generated@@154)) (= $generated@@278 ($generated@@225 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@143 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@259 $generated@@289)) (= $generated@@289 $generated@@160))
 :pattern ( ($generated@@259 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@145) ($generated@@262 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@262 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@145) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@69)) ($generated@@137 $generated@@297 $generated@@298)) ($generated@@268 $generated@@299 $generated@@300 $generated@@297)) ($generated@@268 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@137 $generated@@297 $generated@@298) ($generated@@268 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@137 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@137 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@226 $generated@@353 $generated@@233)) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@145 $generated@@353) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@311 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@315 (type $generated@@361))))
(let (($generated@@363 ($generated@@314 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@313 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@312 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@333 (type $generated@@365))))
(let (($generated@@367 ($generated@@332 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@331 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@330 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@329 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@81 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@333 (type $generated@@372))))
(let (($generated@@374 ($generated@@332 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@331 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@330 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@376 $generated@@378)))) ($generated@@226 $generated@@378 $generated@@377))
 :pattern ( ($generated@@86 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@268 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@268 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@268 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@268 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@268 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@268 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@431 $generated@@433))) (and ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))) ($generated@@137 $generated@@431 $generated@@433))
 :pattern ( ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@369 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@369 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@154))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@154) (= (type $generated@@449) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@225 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@350 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@154) ($generated@@226 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@456)) $generated@@456) ($generated@@141 ($generated@@350 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@350 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@226 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@458 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@226 ($generated@@292 $generated@@460) $generated@@461) ($generated@@141 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@226 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@284 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@283 $generated@@465)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@144 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@284 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@154)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@282 $generated@@506))) ($generated@@268 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@164 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@350 $generated@@529 ($generated@@292 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@292 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))) (and ($generated@@226 ($generated@@86 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@226 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))) (and ($generated@@226 ($generated@@86 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@226 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@538 $generated@@539)) (or (or ($generated@@259 $generated@@539) ($generated@@262 $generated@@539)) ($generated@@265 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@154)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@154)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546) ($generated@@415 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@154)) ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 $generated@@145 $generated@@554) ($generated@@144 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@86 ($generated@@434 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@144 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@141 $generated@@561 $generated@@233)) (or (or ($generated@@259 $generated@@561) ($generated@@262 $generated@@561)) ($generated@@265 $generated@@561)))
 :pattern ( ($generated@@265 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@262 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@259 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@145) (= ($generated@@540 ($generated@@292 $generated@@562)) ($generated@@541 $generated@@562)))
 :pattern ( ($generated@@540 ($generated@@292 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) ($generated@@226 $generated@@563 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@563)) $generated@@563) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@563) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@80 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@243 $generated@@565))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564) ($generated@@243 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@248 $generated@@567))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@248 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@226 $generated@@568 ($generated@@164 $generated@@569))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568) ($generated@@164 $generated@@569))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@164 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@226 $generated@@570 ($generated@@500 $generated@@571))) (and (= ($generated@@292 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570) ($generated@@500 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@500 $generated@@571)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@557 $generated@@233) $generated@@68))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@572 $generated@@575)))) ($generated@@268 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@86 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574))
)))
(assert (= $generated@@160 ($generated@@255 $generated@@160)))
(assert (= $generated@@162 ($generated@@255 $generated@@162)))
(assert (= $generated@@163 ($generated@@255 $generated@@163)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@582) (and ($generated@@143 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)) ($generated@@255 ($generated@@225 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))) ($generated@@255 ($generated@@292 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@292 ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@292 $generated@@587)))
 :pattern ( ($generated@@292 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@284 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@283 $generated@@589)) (= ($generated@@282 $generated@@588) 0)) (= $generated@@588 ($generated@@281 $generated@@589))))
 :pattern ( ($generated@@282 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@305 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@458)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@154)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@283 $generated@@154)) (= (type $generated@@605) $generated@@69)) (= ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@282 $generated@@604))) ($generated@@226 ($generated@@501 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@501 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@283 $generated@@154)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@282 $generated@@608))) (< ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@311 $generated@@610) ($generated@@243 $generated@@611)) ($generated@@141 ($generated@@358 $generated@@610) ($generated@@243 $generated@@612))) ($generated@@141 ($generated@@389 $generated@@610) ($generated@@243 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615))) (and (and ($generated@@141 ($generated@@329 $generated@@613) ($generated@@248 $generated@@614)) ($generated@@141 ($generated@@369 $generated@@613) ($generated@@248 $generated@@615))) ($generated@@141 ($generated@@397 $generated@@613) ($generated@@248 ($generated@@144 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@141 $generated@@616 $generated@@46))
 :pattern ( ($generated@@141 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@141 $generated@@617 $generated@@47))
 :pattern ( ($generated@@141 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@141 $generated@@618 $generated@@44))
 :pattern ( ($generated@@141 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@458) ($generated@@141 $generated@@619 $generated@@45))
 :pattern ( ($generated@@141 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@154) ($generated@@141 $generated@@620 $generated@@48))
 :pattern ( ($generated@@141 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@625) ($generated@@171 $generated@@82 $generated@@4)) (= (type $generated@@626) $generated@@82)) (= (type $generated@@627) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@629) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@631 true))
(let (($generated@@632  (=> (and (and ($generated@@0 ($generated@@255 ($generated@@11 false))) (= $generated@@621 ($generated@@253 10))) (and (= $generated@@622 (+ $generated@@623 1)) (= (ControlFlow 0 5) (- 0 4)))) false)))
(let (($generated@@633  (=> ($generated@@0 ($generated@@255 ($generated@@11 true))) (and (=> (= (ControlFlow 0 7) 5) $generated@@632) (=> (= (ControlFlow 0 7) 6) $generated@@631)))))
(let (($generated@@634 true))
(let (($generated@@635  (=> $generated@@624 (and (=> (= (ControlFlow 0 8) 3) $generated@@634) (=> (= (ControlFlow 0 8) 7) $generated@@633)))))
(let (($generated@@636 true))
(let (($generated@@637  (and (=> (= (ControlFlow 0 9) 2) $generated@@636) (=> (= (ControlFlow 0 9) 8) $generated@@635))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (and (= $generated@@625 ($generated@@170 $generated@@626 $generated@@627 $generated@@60 false)) (=> $generated@@624 true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@624 ($generated@@0 ($generated@@255 ($generated@@11 true))))) (=> (=> $generated@@624 ($generated@@0 ($generated@@255 ($generated@@11 true)))) (=> (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@82) (=> (and (not (= $generated@@640 $generated@@626)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@627 $generated@@640) $generated@@60))) (= ($generated@@86 $generated@@627 $generated@@640) ($generated@@86 $generated@@627 $generated@@640))))
 :pattern ( ($generated@@86 $generated@@627 $generated@@640))
)) (=> (and ($generated@@137 $generated@@627 $generated@@627) (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@72 (type $generated@@642))))
 (=> (and (and (= (type $generated@@641) $generated@@82) (= (type $generated@@642) ($generated@@71 $generated@@643))) (and (not (= $generated@@641 $generated@@626)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@627 $generated@@641) $generated@@60)))) (or (= ($generated@@88 ($generated@@86 $generated@@627 $generated@@641) $generated@@642) ($generated@@88 ($generated@@86 $generated@@627 $generated@@641) $generated@@642)) ($generated@@0 ($generated@@169 $generated@@625 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@627 $generated@@641) $generated@@642))
))) (and (=> (= (ControlFlow 0 10) 1) $generated@@638) (=> (= (ControlFlow 0 10) 9) $generated@@637)))))))))
(let (($generated@@644  (=> (and ($generated@@234 $generated@@627) ($generated@@628 $generated@@627)) (=> (and (and (and ($generated@@141 $generated@@629 $generated@@233) ($generated@@79 $generated@@629 $generated@@233 $generated@@627)) ($generated@@538 $generated@@629)) (and (= 1 $generated@@630) (= (ControlFlow 0 12) 10))) $generated@@639))))
$generated@@644)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@240 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@240 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@145)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@240 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@240 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@154)) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@273)) (= ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@271 $generated@@272) ($generated@@144 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@143 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@259 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@145) (= ($generated@@262 $generated@@276) (= ($generated@@159 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@145) (= ($generated@@265 $generated@@277) (= ($generated@@159 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@265 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@145) ($generated@@143 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@154) (= (type $generated@@280) $generated@@154)) (= $generated@@278 ($generated@@225 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@143 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@259 $generated@@289)) (= $generated@@289 $generated@@160))
 :pattern ( ($generated@@259 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@145) ($generated@@262 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@262 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@145) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@79 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@268 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@69)) ($generated@@137 $generated@@297 $generated@@298)) ($generated@@268 $generated@@299 $generated@@300 $generated@@297)) ($generated@@268 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@137 $generated@@297 $generated@@298) ($generated@@268 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@304) $generated@@69)) ($generated@@137 $generated@@301 $generated@@302)) ($generated@@79 $generated@@303 $generated@@304 $generated@@301)) ($generated@@79 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@137 $generated@@301 $generated@@302) ($generated@@79 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@81 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@84 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@81 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@86 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@226 $generated@@353 $generated@@233)) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@145 $generated@@353) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@353 $generated@@233))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@311 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@315 (type $generated@@361))))
(let (($generated@@363 ($generated@@314 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@313 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@312 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@333 (type $generated@@365))))
(let (($generated@@367 ($generated@@332 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@331 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@330 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@329 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@81 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@333 (type $generated@@372))))
(let (($generated@@374 ($generated@@332 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@331 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@330 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@376 $generated@@378)))) ($generated@@226 $generated@@378 $generated@@377))
 :pattern ( ($generated@@86 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@141 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@268 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@268 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@152 ($generated@@350 $generated@@145 $generated@@396))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@152 ($generated@@350 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@268 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@268 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@268 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@268 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@431 $generated@@433))) (and ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))) ($generated@@137 $generated@@431 $generated@@433))
 :pattern ( ($generated@@137 $generated@@431 $generated@@432) ($generated@@137 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@369 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@369 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@154))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@154) (= (type $generated@@449) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@225 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@226 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@455)) $generated@@455) ($generated@@141 ($generated@@350 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@154) ($generated@@226 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@456)) $generated@@456) ($generated@@141 ($generated@@350 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@226 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@350 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@226 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@458 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@226 ($generated@@292 $generated@@460) $generated@@461) ($generated@@141 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@226 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@284 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@283 $generated@@465)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@144 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@144 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@154) (= (type $generated@@497) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@225 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@284 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@154)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@282 $generated@@506))) ($generated@@268 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@164 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@164 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@350 $generated@@529 ($generated@@292 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@292 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))) (and ($generated@@226 ($generated@@86 ($generated@@390 $generated@@530) $generated@@533) $generated@@532) ($generated@@226 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@530) $generated@@533))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@141 $generated@@530 ($generated@@415 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))) (and ($generated@@226 ($generated@@86 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@226 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@423 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@538 $generated@@539)) (or (or ($generated@@259 $generated@@539) ($generated@@262 $generated@@539)) ($generated@@265 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@154)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@154)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@546) ($generated@@415 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@549) ($generated@@423 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@154)) ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@350 $generated@@145 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 $generated@@145 $generated@@554) ($generated@@144 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@144 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@86 ($generated@@434 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@144 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@141 $generated@@561 $generated@@233)) (or (or ($generated@@259 $generated@@561) ($generated@@262 $generated@@561)) ($generated@@265 $generated@@561)))
 :pattern ( ($generated@@265 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@262 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
 :pattern ( ($generated@@259 $generated@@561) ($generated@@141 $generated@@561 $generated@@233))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@145) (= ($generated@@540 ($generated@@292 $generated@@562)) ($generated@@541 $generated@@562)))
 :pattern ( ($generated@@540 ($generated@@292 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) ($generated@@226 $generated@@563 ($generated@@80 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@563)) $generated@@563) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@563) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@80 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@69)) ($generated@@226 $generated@@564 ($generated@@243 $generated@@565))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564)) $generated@@564) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@564) ($generated@@243 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@564 ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@226 $generated@@566 ($generated@@248 $generated@@567))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@248 $generated@@567))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@226 $generated@@568 ($generated@@164 $generated@@569))) (and (= ($generated@@292 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@568) ($generated@@164 $generated@@569))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@164 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@226 $generated@@570 ($generated@@500 $generated@@571))) (and (= ($generated@@292 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@283 $generated@@154) $generated@@570) ($generated@@500 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@500 $generated@@571)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@557 $generated@@233) $generated@@68))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@572 $generated@@575)))) ($generated@@268 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@86 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@164 $generated@@573) $generated@@574))
)))
(assert (= $generated@@160 ($generated@@255 $generated@@160)))
(assert (= $generated@@162 ($generated@@255 $generated@@162)))
(assert (= $generated@@163 ($generated@@255 $generated@@163)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@578) (and ($generated@@143 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@69) ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@144 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@268 ($generated@@152 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@582) (and ($generated@@143 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@144 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)) ($generated@@255 ($generated@@225 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@225 ($generated@@255 $generated@@584) ($generated@@255 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))) ($generated@@255 ($generated@@292 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@253 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@292 ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@292 $generated@@587)))
 :pattern ( ($generated@@292 ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@284 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@283 $generated@@589)) (= ($generated@@282 $generated@@588) 0)) (= $generated@@588 ($generated@@281 $generated@@589))))
 :pattern ( ($generated@@282 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@81 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@305 $generated@@590) ($generated ($generated@@86 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@305 ($generated@@87 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@2)) ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@3)) ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@4)) ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@458)) ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@154)) ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@283 $generated@@154)) (= (type $generated@@605) $generated@@69)) (= ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@282 $generated@@604))) ($generated@@226 ($generated@@501 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@501 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@141 $generated@@604 ($generated@@500 $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) ($generated@@283 $generated@@154)) (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@282 $generated@@608))) (< ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))) ($generated@@607 $generated@@608))))
 :pattern ( ($generated@@541 ($generated@@350 $generated@@145 ($generated@@501 $generated@@608 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@69)) ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@311 $generated@@610) ($generated@@243 $generated@@611)) ($generated@@141 ($generated@@358 $generated@@610) ($generated@@243 $generated@@612))) ($generated@@141 ($generated@@389 $generated@@610) ($generated@@243 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@415 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) $generated@@69)) ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615))) (and (and ($generated@@141 ($generated@@329 $generated@@613) ($generated@@248 $generated@@614)) ($generated@@141 ($generated@@369 $generated@@613) ($generated@@248 $generated@@615))) ($generated@@141 ($generated@@397 $generated@@613) ($generated@@248 ($generated@@144 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@423 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@2) ($generated@@141 $generated@@616 $generated@@46))
 :pattern ( ($generated@@141 $generated@@616 $generated@@46))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@3) ($generated@@141 $generated@@617 $generated@@47))
 :pattern ( ($generated@@141 $generated@@617 $generated@@47))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@4) ($generated@@141 $generated@@618 $generated@@44))
 :pattern ( ($generated@@141 $generated@@618 $generated@@44))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@458) ($generated@@141 $generated@@619 $generated@@45))
 :pattern ( ($generated@@141 $generated@@619 $generated@@45))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@154) ($generated@@141 $generated@@620 $generated@@48))
 :pattern ( ($generated@@141 $generated@@620 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Bool)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (= (type $generated@@631) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@632) $generated@@82)) (= (type $generated@@633) ($generated@@171 $generated@@82 $generated@@4))) (= (type $generated@@638) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@640  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@621) (= (- $generated@@622 $generated@@623) $generated@@621))) (=> (or (<= 0 $generated@@621) (= (- $generated@@622 $generated@@623) $generated@@621)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- $generated@@622 $generated@@623) $generated@@621))))))
(let (($generated@@641  (=> (and (and ($generated@@0 ($generated@@255 ($generated@@11 false))) (= $generated@@622 $generated@@624)) (and (= $generated@@623 $generated@@625) (= (ControlFlow 0 11) 6))) $generated@@640)))
(let (($generated@@642  (=> (and (and ($generated@@0 ($generated@@255 ($generated@@11 false))) (= $generated@@622 $generated@@624)) (and (= $generated@@623 $generated@@625) (= (ControlFlow 0 10) 6))) $generated@@640)))
(let (($generated@@643  (=> (and (> $generated@@624 $generated@@625) (= $generated@@626 ($generated@@253 15))) (=> (and (and (= $generated@@627 (- $generated@@624 1)) (= $generated@@622 $generated@@627)) (and (= $generated@@623 $generated@@625) (= (ControlFlow 0 9) 6))) $generated@@640))))
(let (($generated@@644  (=> (and (< $generated@@625 $generated@@624) (= $generated@@628 ($generated@@253 10))) (=> (and (and (= $generated@@629 (+ $generated@@625 1)) (= $generated@@622 $generated@@624)) (and (= $generated@@623 $generated@@629) (= (ControlFlow 0 8) 6))) $generated@@640))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (= $generated@@621 (- $generated@@624 $generated@@625))) (and (and (and (and (=> (= (ControlFlow 0 12) 8) $generated@@644) (=> (= (ControlFlow 0 12) 9) $generated@@643)) (=> (= (ControlFlow 0 12) 10) $generated@@642)) (=> (= (ControlFlow 0 12) 11) $generated@@641)) (=> (= (ControlFlow 0 12) 4) $generated@@645)))))
(let (($generated@@647 true))
(let (($generated@@648  (=> $generated@@630 (and (=> (= (ControlFlow 0 13) 3) $generated@@647) (=> (= (ControlFlow 0 13) 12) $generated@@646)))))
(let (($generated@@649 true))
(let (($generated@@650  (and (=> (= (ControlFlow 0 14) 2) $generated@@649) (=> (= (ControlFlow 0 14) 13) $generated@@648))))
(let (($generated@@651 true))
(let (($generated@@652  (=> (and (not false) (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@82) (=> (and (not (= $generated@@653 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@653) $generated@@60))) (= ($generated@@86 $generated@@631 $generated@@653) ($generated@@86 $generated@@631 $generated@@653))))
 :pattern ( ($generated@@86 $generated@@631 $generated@@653))
))) (=> (and (and ($generated@@137 $generated@@631 $generated@@631) (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@72 (type $generated@@655))))
 (=> (and (and (= (type $generated@@654) $generated@@82) (= (type $generated@@655) ($generated@@71 $generated@@656))) (and (not (= $generated@@654 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@654) $generated@@60)))) (or (= ($generated@@88 ($generated@@86 $generated@@631 $generated@@654) $generated@@655) ($generated@@88 ($generated@@86 $generated@@631 $generated@@654) $generated@@655)) ($generated@@0 ($generated@@169 $generated@@633 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@631 $generated@@654) $generated@@655))
))) (and (<= (- $generated@@624 $generated@@625) $generated@@634) (=> (= (- $generated@@624 $generated@@625) $generated@@634) true))) (and (=> (= (ControlFlow 0 15) 1) $generated@@651) (=> (= (ControlFlow 0 15) 14) $generated@@650))))))
(let (($generated@@657  (=> (= $generated@@633 ($generated@@170 $generated@@632 $generated@@631 $generated@@60 false)) (=> (and (= $generated@@634 (- $generated@@635 $generated@@636)) (= (ControlFlow 0 16) 15)) $generated@@652))))
(let (($generated@@658  (=> (and ($generated@@234 $generated@@631) ($generated@@637 $generated@@631)) (=> (and (and (and ($generated@@141 $generated@@638 $generated@@233) ($generated@@79 $generated@@638 $generated@@233 $generated@@631)) ($generated@@538 $generated@@638)) (and (= 1 $generated@@639) (= (ControlFlow 0 17) 16))) $generated@@657))))
$generated@@658))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (= (type $generated@@162) $generated@@145))
(assert (= ($generated@@159 $generated@@162) $generated@@65))
(assert (= (type $generated@@163) $generated@@145))
(assert (= ($generated@@159 $generated@@163) $generated@@66))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@141 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@141 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@82 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@82) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@82)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@69) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@154)) (= (type $generated@@232) $generated@@154)) (= ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@141 ($generated@@225 $generated@@231 $generated@@232) ($generated@@144 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert ($generated@@141 $generated@@160 $generated@@233))
(assert ($generated@@141 $generated@@162 $generated@@233))
(assert ($generated@@141 $generated@@163 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@235)) ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
 :pattern ( ($generated@@79 $generated@@160 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@236)) ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
 :pattern ( ($generated@@79 $generated@@162 $generated@@233 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@234 $generated@@237)) ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
 :pattern ( ($generated@@79 $generated@@163 $generated@@233 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@145) (= (type $generated@@239) $generated@@145)) (= ($generated@@151 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@151 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) (= (type $generated@@242) $generated@@145)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@226 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@69)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@251) $generated@@69)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@154) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@226 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@145) (= (type $generated@@259) $generated@@145)) (and ($generated@@257 $generated@@258) ($generated@@257 $generated@@259))) (= ($generated@@240 $generated@@258 $generated@@259) true))
 :pattern ( ($generated@@240 $generated@@258 $generated@@259) ($generated@@257 $generated@@258))
 :pattern ( ($generated@@240 $generated@@258 $generated@@259) ($generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@145) (= (type $generated@@262) $generated@@145)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@240 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@240 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@240 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@240 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@240 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@240 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@69) (= (type $generated@@268) $generated@@69)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) $generated@@154)) (= (type $generated@@271) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@234 $generated@@271)) (= ($generated@@79 ($generated@@225 $generated@@269 $generated@@270) ($generated@@144 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@79 ($generated@@225 $generated@@269 $generated@@270) ($generated@@144 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@145) (= ($generated@@143 $generated@@272) (= ($generated@@159 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@257 $generated@@273) (= ($generated@@159 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@257 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@145) (= ($generated@@260 $generated@@274) (= ($generated@@159 $generated@@274) $generated@@65)))
 :pattern ( ($generated@@260 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@145) (= ($generated@@263 $generated@@275) (= ($generated@@159 $generated@@275) $generated@@66)))
 :pattern ( ($generated@@263 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@145) ($generated@@143 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@154) (= (type $generated@@278) $generated@@154)) (= $generated@@276 ($generated@@225 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@143 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@145) ($generated@@257 $generated@@287)) (= $generated@@287 $generated@@160))
 :pattern ( ($generated@@257 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@145) ($generated@@260 $generated@@288)) (= $generated@@288 $generated@@162))
 :pattern ( ($generated@@260 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@145) ($generated@@263 $generated@@289)) (= $generated@@289 $generated@@163))
 :pattern ( ($generated@@263 $generated@@289))
)))
(assert ($generated@@290 $generated@@60))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@154)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@69) (= (type $generated@@295) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@79 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@298) $generated@@154)) (= (type $generated@@299) $generated@@69)) ($generated@@137 $generated@@296 $generated@@297)) ($generated@@266 $generated@@298 $generated@@299 $generated@@296)) ($generated@@266 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@137 $generated@@296 $generated@@297) ($generated@@266 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@303) $generated@@69)) ($generated@@137 $generated@@300 $generated@@301)) ($generated@@79 $generated@@302 $generated@@303 $generated@@300)) ($generated@@79 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@137 $generated@@300 $generated@@301) ($generated@@79 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@81 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@84 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@81 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@86 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@81 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@86 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@86 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@81 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@86 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@86 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@348) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@346 $generated@@347 $generated@@348)) (and ($generated@@137 $generated@@347 $generated@@348) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@72 (type $generated@@350))))
 (=> (and (and (= (type $generated@@349) $generated@@82) (= (type $generated@@350) ($generated@@71 $generated@@351))) (not ($generated@@290 $generated@@350))) (= ($generated@@88 ($generated@@86 $generated@@347 $generated@@349) $generated@@350) ($generated@@88 ($generated@@86 $generated@@348 $generated@@349) $generated@@350))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@348 $generated@@349) $generated@@350))
))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@84 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@81 $generated@@353 $generated@@2)) (= ($generated@@165 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@86 $generated@@352 $generated@@354))) (<= ($generated ($generated@@86 $generated@@352 $generated@@354)) ($generated@@304 $generated@@352))))
 :pattern ( ($generated@@86 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@165 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@226 $generated@@358 $generated@@233)) (and (= ($generated@@291 ($generated@@355 $generated@@145 $generated@@358)) $generated@@358) ($generated@@141 ($generated@@355 $generated@@145 $generated@@358) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@358 $generated@@233))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@314 (type $generated@@359))))
(let (($generated@@361 ($generated@@313 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@312 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@311 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@310 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@314 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@81 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@314 (type $generated@@366))))
(let (($generated@@368 ($generated@@313 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@312 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@311 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@332 (type $generated@@370))))
(let (($generated@@372 ($generated@@331 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@330 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@329 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@328 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@332 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@81 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@332 (type $generated@@377))))
(let (($generated@@379 ($generated@@331 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@330 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@329 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@86 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@382) $generated@@69)) (= ($generated@@141 $generated@@381 ($generated@@164 $generated@@382)) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@381 $generated@@383)))) ($generated@@226 $generated@@383 $generated@@382))
 :pattern ( ($generated@@86 $generated@@381 $generated@@383))
))))
 :pattern ( ($generated@@141 $generated@@381 ($generated@@164 $generated@@382)))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@385) $generated@@69)) (= (type $generated@@386) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@384 ($generated@@243 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@154) ($generated@@0 ($generated@@86 $generated@@384 $generated@@387))) ($generated@@266 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@86 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@79 $generated@@384 ($generated@@243 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@389) $generated@@69)) (= (type $generated@@390) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@388 ($generated@@248 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@154) ($generated@@0 ($generated@@86 $generated@@388 $generated@@391))) ($generated@@266 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@86 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@79 $generated@@388 ($generated@@248 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@86 ($generated@@305 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@86 ($generated@@305 $generated@@393) $generated@@392)))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@314 (type $generated@@397))))
(let (($generated@@399 ($generated@@313 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@81 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@401) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@86 ($generated@@310 $generated@@400) ($generated@@152 ($generated@@355 $generated@@145 $generated@@401)))) (= ($generated@@86 ($generated@@395 $generated@@400) ($generated@@152 ($generated@@355 $generated@@145 $generated@@401))) ($generated@@153 ($generated@@355 $generated@@145 $generated@@401))))))
 :pattern ( ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@332 (type $generated@@405))))
(let (($generated@@407 ($generated@@331 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@81 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@409) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@86 ($generated@@328 $generated@@408) ($generated@@152 ($generated@@355 $generated@@145 $generated@@409)))) (= ($generated@@86 ($generated@@403 $generated@@408) ($generated@@152 ($generated@@355 $generated@@145 $generated@@409))) ($generated@@153 ($generated@@355 $generated@@145 $generated@@409))))))
 :pattern ( ($generated@@86 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@313 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@312 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@310 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@395 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@331 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@330 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@86 ($generated@@374 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@86 ($generated@@328 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@86 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@415) $generated@@419))
 :pattern ( ($generated@@86 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@86 ($generated@@374 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@69)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@424) $generated@@69)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@423) $generated@@427))) (and ($generated@@266 ($generated@@86 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@266 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@69)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@432) $generated@@69)) (= (type $generated@@433) $generated@@69)) (= (type $generated@@434) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@431) $generated@@435))) (and ($generated@@266 ($generated@@86 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@266 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@86 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@79 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@436) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@437) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@438) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@436 $generated@@438))) (and ($generated@@137 $generated@@436 $generated@@437) ($generated@@137 $generated@@437 $generated@@438))) ($generated@@137 $generated@@436 $generated@@438))
 :pattern ( ($generated@@137 $generated@@436 $generated@@437) ($generated@@137 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@81 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@332 (type $generated@@441))))
(let (($generated@@443 ($generated@@331 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@330 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@329 $generated@@443 $generated@@442)) (= ($generated@@328 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@328 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@332 (type $generated@@444))))
(let (($generated@@446 ($generated@@331 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@330 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@329 $generated@@446 $generated@@445)) (= ($generated@@374 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@374 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@332 (type $generated@@447))))
(let (($generated@@449 ($generated@@331 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@330 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@329 $generated@@449 $generated@@448)) (= ($generated@@402 $generated@@447) ($generated@@439 $generated@@154))))))
 :pattern ( ($generated@@402 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@314 (type $generated@@450))))
(let (($generated@@452 ($generated@@313 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@312 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@311 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@154) (= (type $generated@@454) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@394 $generated@@450) ($generated@@291 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@394 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@332 (type $generated@@455))))
(let (($generated@@457 ($generated@@331 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@330 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@329 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@154) (= (type $generated@@459) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@402 $generated@@455) ($generated@@291 ($generated@@225 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@402 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@226 $generated@@460 $generated@@46)) (and (= ($generated@@291 ($generated@@355 $generated@@2 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@355 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) ($generated@@226 $generated@@461 $generated@@47)) (and (= ($generated@@291 ($generated@@355 $generated@@3 $generated@@461)) $generated@@461) ($generated@@141 ($generated@@355 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@226 $generated@@462 $generated@@44)) (and (= ($generated@@291 ($generated@@355 $generated@@4 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@355 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@154) ($generated@@226 $generated@@464 $generated@@45)) (and (= ($generated@@291 ($generated@@355 $generated@@463 $generated@@464)) $generated@@464) ($generated@@141 ($generated@@355 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@69) (= ($generated@@226 ($generated@@291 $generated@@465) $generated@@466) ($generated@@141 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@226 ($generated@@291 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@84 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@81 $generated@@468 $generated@@2)) (<= 0 ($generated@@304 $generated@@467))))
 :pattern ( ($generated@@304 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@282 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@281 $generated@@470)) (<= 0 ($generated@@280 $generated@@469))))
 :pattern ( ($generated@@280 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@420 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@420 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@420 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@420 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@77 ($generated@@420 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@481 ($generated@@428 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@428 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@485 ($generated@@428 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@77 ($generated@@428 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@428 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@154) (= (type $generated@@492) $generated@@154)) (= ($generated@@159 ($generated@@225 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@69) (= (type $generated@@496) $generated@@69)) (= ($generated@@493 ($generated@@144 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@144 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@69)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@497 ($generated@@144 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@144 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@152 ($generated@@225 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@225 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@154)) (= ($generated@@153 ($generated@@225 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@225 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@282 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@281 $generated@@154)) (= (type $generated@@512) $generated@@69)) (= (type $generated@@513) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@280 $generated@@511))) ($generated@@266 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@79 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@80 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@80 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@517 ($generated@@243 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@243 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@521 ($generated@@248 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@248 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@77 ($generated@@248 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@164 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@164 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@77 ($generated@@164 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@77 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@355 $generated@@534 ($generated@@291 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@291 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@141 $generated@@535 ($generated@@420 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@535) $generated@@538))) (and ($generated@@226 ($generated@@86 ($generated@@395 $generated@@535) $generated@@538) $generated@@537) ($generated@@226 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@535) $generated@@538))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@141 $generated@@535 ($generated@@420 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) (= ($generated@@141 $generated@@539 ($generated@@428 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@539) $generated@@542))) (and ($generated@@226 ($generated@@86 ($generated@@403 $generated@@539) $generated@@542) $generated@@541) ($generated@@226 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@86 ($generated@@403 $generated@@539) $generated@@542))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@141 $generated@@539 ($generated@@428 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) ($generated@@543 $generated@@544)) (or (or ($generated@@257 $generated@@544) ($generated@@260 $generated@@544)) ($generated@@263 $generated@@544)))
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (= (type $generated@@548) $generated@@154)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@225 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@154)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@226 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@355 ($generated@@312 $generated@@154 $generated@@154) $generated@@551)) $generated@@551) ($generated@@141 ($generated@@355 ($generated@@312 $generated@@154 $generated@@154) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@226 $generated@@554 ($generated@@428 $generated@@555 $generated@@556))) (and (= ($generated@@291 ($generated@@355 ($generated@@330 $generated@@154 $generated@@154) $generated@@554)) $generated@@554) ($generated@@141 ($generated@@355 ($generated@@330 $generated@@154 $generated@@154) $generated@@554) ($generated@@428 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@428 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@69) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@154)) ($generated@@226 $generated@@559 ($generated@@144 $generated@@557 $generated@@558))) (and (= ($generated@@291 ($generated@@355 $generated@@145 $generated@@559)) $generated@@559) ($generated@@141 ($generated@@355 $generated@@145 $generated@@559) ($generated@@144 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@144 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@86 ($generated@@439 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@86 ($generated@@439 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@74)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@69) (= (type $generated@@565) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@144 $generated@@564 $generated@@565)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) ($generated@@141 $generated@@566 $generated@@233)) (or (or ($generated@@257 $generated@@566) ($generated@@260 $generated@@566)) ($generated@@263 $generated@@566)))
 :pattern ( ($generated@@263 $generated@@566) ($generated@@141 $generated@@566 $generated@@233))
 :pattern ( ($generated@@260 $generated@@566) ($generated@@141 $generated@@566 $generated@@233))
 :pattern ( ($generated@@257 $generated@@566) ($generated@@141 $generated@@566 $generated@@233))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@145) (= ($generated@@545 ($generated@@291 $generated@@567)) ($generated@@546 $generated@@567)))
 :pattern ( ($generated@@545 ($generated@@291 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@154) ($generated@@226 $generated@@568 ($generated@@80 0))) (and (= ($generated@@291 ($generated@@355 $generated@@2 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@355 ($generated@@81 $generated@@154 $generated@@4) $generated@@568) ($generated@@80 0))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@80 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@154) (= (type $generated@@570) $generated@@69)) ($generated@@226 $generated@@569 ($generated@@243 $generated@@570))) (and (= ($generated@@291 ($generated@@355 ($generated@@81 $generated@@154 $generated@@4) $generated@@569)) $generated@@569) ($generated@@141 ($generated@@355 ($generated@@81 $generated@@154 $generated@@4) $generated@@569) ($generated@@243 $generated@@570))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@243 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@154) (= (type $generated@@572) $generated@@69)) ($generated@@226 $generated@@571 ($generated@@248 $generated@@572))) (and (= ($generated@@291 ($generated@@355 ($generated@@81 $generated@@154 $generated@@4) $generated@@571)) $generated@@571) ($generated@@141 ($generated@@355 ($generated@@81 $generated@@154 $generated@@4) $generated@@571) ($generated@@248 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@248 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@69)) ($generated@@226 $generated@@573 ($generated@@164 $generated@@574))) (and (= ($generated@@291 ($generated@@355 ($generated@@81 $generated@@154 $generated@@2) $generated@@573)) $generated@@573) ($generated@@141 ($generated@@355 ($generated@@81 $generated@@154 $generated@@2) $generated@@573) ($generated@@164 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@164 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@69)) ($generated@@226 $generated@@575 ($generated@@505 $generated@@576))) (and (= ($generated@@291 ($generated@@355 ($generated@@281 $generated@@154) $generated@@575)) $generated@@575) ($generated@@141 ($generated@@355 ($generated@@281 $generated@@154) $generated@@575) ($generated@@505 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@505 $generated@@576)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@562 $generated@@233) $generated@@68))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@578) $generated@@69)) (= (type $generated@@579) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@577 ($generated@@164 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@577 $generated@@580)))) ($generated@@266 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@86 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@79 $generated@@577 ($generated@@164 $generated@@578) $generated@@579))
)))
(assert (= $generated@@160 ($generated@@253 $generated@@160)))
(assert (= $generated@@162 ($generated@@253 $generated@@162)))
(assert (= $generated@@163 ($generated@@253 $generated@@163)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@145) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@583) (and ($generated@@143 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@69) ($generated@@79 $generated@@581 ($generated@@144 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@144 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@266 ($generated@@152 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@266 ($generated@@152 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@145) (= (type $generated@@586) $generated@@69)) (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@234 $generated@@587) (and ($generated@@143 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@69) ($generated@@79 $generated@@585 ($generated@@144 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@79 $generated@@585 ($generated@@144 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@266 ($generated@@153 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@266 ($generated@@153 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@154)) (= ($generated@@225 ($generated@@253 $generated@@589) ($generated@@253 $generated@@590)) ($generated@@253 ($generated@@225 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@225 ($generated@@253 $generated@@589) ($generated@@253 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@291 ($generated@@253 $generated@@591)) ($generated@@253 ($generated@@291 $generated@@591)))
 :pattern ( ($generated@@291 ($generated@@253 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@282 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@281 $generated@@593)) (= ($generated@@280 $generated@@592) 0)) (= $generated@@592 ($generated@@279 $generated@@593))))
 :pattern ( ($generated@@280 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@81 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@304 ($generated@@87 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@304 $generated@@594) ($generated ($generated@@86 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@304 ($generated@@87 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@2)) ($generated@@79 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@3)) ($generated@@79 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@4)) ($generated@@79 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@605) $generated@@463)) ($generated@@79 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@607) $generated@@154)) ($generated@@79 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@281 $generated@@154)) (= (type $generated@@609) $generated@@69)) (= ($generated@@141 $generated@@608 ($generated@@505 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@280 $generated@@608))) ($generated@@226 ($generated@@506 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@506 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@141 $generated@@608 ($generated@@505 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@281 $generated@@154)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@280 $generated@@612))) (< ($generated@@546 ($generated@@355 $generated@@145 ($generated@@506 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@546 ($generated@@355 $generated@@145 ($generated@@506 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@615) $generated@@69)) (= (type $generated@@616) $generated@@69)) ($generated@@141 $generated@@614 ($generated@@420 $generated@@615 $generated@@616))) (and (and ($generated@@141 ($generated@@310 $generated@@614) ($generated@@243 $generated@@615)) ($generated@@141 ($generated@@363 $generated@@614) ($generated@@243 $generated@@616))) ($generated@@141 ($generated@@394 $generated@@614) ($generated@@243 ($generated@@144 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@141 $generated@@614 ($generated@@420 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@618) $generated@@69)) (= (type $generated@@619) $generated@@69)) ($generated@@141 $generated@@617 ($generated@@428 $generated@@618 $generated@@619))) (and (and ($generated@@141 ($generated@@328 $generated@@617) ($generated@@248 $generated@@618)) ($generated@@141 ($generated@@374 $generated@@617) ($generated@@248 $generated@@619))) ($generated@@141 ($generated@@402 $generated@@617) ($generated@@248 ($generated@@144 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@141 $generated@@617 ($generated@@428 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@141 $generated@@620 $generated@@46))
 :pattern ( ($generated@@141 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@141 $generated@@621 $generated@@47))
 :pattern ( ($generated@@141 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@141 $generated@@622 $generated@@44))
 :pattern ( ($generated@@141 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@463) ($generated@@141 $generated@@623 $generated@@45))
 :pattern ( ($generated@@141 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@154) ($generated@@141 $generated@@624 $generated@@48))
 :pattern ( ($generated@@141 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Bool)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@625) $generated@@145) (= (type $generated@@631) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@632) $generated@@82)) (= (type $generated@@633) ($generated@@171 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@636 true))
(let (($generated@@637  (=> (and (= $generated@@625 $generated@@162) (= (ControlFlow 0 11) (- 0 10))) false)))
(let (($generated@@638  (=> (not (= $generated@@625 $generated@@163)) (and (=> (= (ControlFlow 0 13) 11) $generated@@637) (=> (= (ControlFlow 0 13) 12) $generated@@636)))))
(let (($generated@@639  (=> (and (= $generated@@625 $generated@@163) (= (ControlFlow 0 9) (- 0 8))) false)))
(let (($generated@@640  (=> (not (= $generated@@625 $generated@@160)) (and (=> (= (ControlFlow 0 14) 9) $generated@@639) (=> (= (ControlFlow 0 14) 13) $generated@@638)))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= $generated@@626 (+ $generated@@627 $generated@@628)) (and (=> (= (ControlFlow 0 15) 7) $generated@@641) (=> (= (ControlFlow 0 15) 14) $generated@@640)))))
(let (($generated@@643  (=> (and (not ($generated@@0 ($generated@@253 ($generated@@11 false)))) (= (ControlFlow 0 17) 15)) $generated@@642)))
(let (($generated@@644  (=> (and (not ($generated@@0 ($generated@@253 ($generated@@11 true)))) (= (ControlFlow 0 16) 15)) $generated@@642)))
(let (($generated@@645  (=> (and ($generated@@0 ($generated@@253 ($generated@@11 false))) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@646  (=> ($generated@@0 ($generated@@253 ($generated@@11 true))) (and (=> (= (ControlFlow 0 18) 6) $generated@@645) (=> (= (ControlFlow 0 18) 17) $generated@@643)))))
(let (($generated@@647  (=> $generated@@629 (and (=> (= (ControlFlow 0 19) 16) $generated@@644) (=> (= (ControlFlow 0 19) 18) $generated@@646)))))
(let (($generated@@648 true))
(let (($generated@@649  (and (=> (= (ControlFlow 0 20) 4) $generated@@648) (=> (= (ControlFlow 0 20) 19) $generated@@647))))
(let (($generated@@650 true))
(let (($generated@@651  (=> ($generated@@0 ($generated@@253 ($generated@@11 true))) (=> (and (and (= $generated@@630 (+ $generated@@627 $generated@@628)) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@82) (=> (and (not (= $generated@@652 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@652) $generated@@60))) (= ($generated@@86 $generated@@631 $generated@@652) ($generated@@86 $generated@@631 $generated@@652))))
 :pattern ( ($generated@@86 $generated@@631 $generated@@652))
))) (and ($generated@@346 $generated@@631 $generated@@631) (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@72 (type $generated@@654))))
 (=> (and (and (= (type $generated@@653) $generated@@82) (= (type $generated@@654) ($generated@@71 $generated@@655))) (and (not (= $generated@@653 $generated@@632)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@631 $generated@@653) $generated@@60)))) (or (= ($generated@@88 ($generated@@86 $generated@@631 $generated@@653) $generated@@654) ($generated@@88 ($generated@@86 $generated@@631 $generated@@653) $generated@@654)) ($generated@@0 ($generated@@169 $generated@@633 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@631 $generated@@653) $generated@@654))
)))) (and (=> (= (ControlFlow 0 21) 3) $generated@@650) (=> (= (ControlFlow 0 21) 20) $generated@@649))))))
(let (($generated@@656  (=> (and (not ($generated@@0 ($generated@@253 ($generated@@11 true)))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@657  (=> (= $generated@@633 ($generated@@170 $generated@@632 $generated@@631 $generated@@60 false)) (and (=> (= (ControlFlow 0 22) 21) $generated@@651) (=> (= (ControlFlow 0 22) 2) $generated@@656)))))
(let (($generated@@658  (=> (and ($generated@@234 $generated@@631) ($generated@@634 $generated@@631)) (=> (and (and (and ($generated@@141 $generated@@625 $generated@@233) ($generated@@79 $generated@@625 $generated@@233 $generated@@631)) ($generated@@543 $generated@@625)) (and (= 1 $generated@@635) (= (ControlFlow 0 23) 22))) $generated@@657))))
$generated@@658))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 10))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
